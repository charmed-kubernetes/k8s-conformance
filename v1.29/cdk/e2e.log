  I0629 12:21:44.194941      18 e2e.go:117] Starting e2e run "464b4305-f763-4b0b-9fc5-b79df71c36aa" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1719663703 - will randomize all specs

Will run 388 of 7408 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:77
  Jun 29 12:21:44.500: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  Jun 29 12:21:44.502: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  Jun 29 12:21:44.550: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  Jun 29 12:21:44.554: INFO: 5 / 5 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  Jun 29 12:21:44.554: INFO: e2e test version: v1.29.6
  Jun 29 12:21:44.555: INFO: kube-apiserver version: v1.29.6
  Jun 29 12:21:44.555: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  Jun 29 12:21:44.561: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 06/29/24 12:21:44.799
  Jun 29 12:21:44.799: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename gc @ 06/29/24 12:21:44.8
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:21:44.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:21:44.82
  STEP: create the rc1 @ 06/29/24 12:21:44.824
  STEP: create the rc2 @ 06/29/24 12:21:44.828
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 06/29/24 12:21:50.838
  STEP: delete the rc simpletest-rc-to-be-deleted @ 06/29/24 12:21:51.198
  STEP: wait for the rc to be deleted @ 06/29/24 12:21:51.205
  Jun 29 12:21:56.235: INFO: 67 pods remaining
  Jun 29 12:21:56.235: INFO: 67 pods has nil DeletionTimestamp
  Jun 29 12:21:56.235: INFO: 
  STEP: Gathering metrics @ 06/29/24 12:22:01.219
  W0629 12:22:01.223007      18 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jun 29 12:22:01.223: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jun 29 12:22:01.223: INFO: Deleting pod "simpletest-rc-to-be-deleted-272pb" in namespace "gc-8668"
  Jun 29 12:22:01.238: INFO: Deleting pod "simpletest-rc-to-be-deleted-2b7gg" in namespace "gc-8668"
  Jun 29 12:22:01.251: INFO: Deleting pod "simpletest-rc-to-be-deleted-2f78h" in namespace "gc-8668"
  Jun 29 12:22:01.263: INFO: Deleting pod "simpletest-rc-to-be-deleted-2gsck" in namespace "gc-8668"
  Jun 29 12:22:01.277: INFO: Deleting pod "simpletest-rc-to-be-deleted-2w98v" in namespace "gc-8668"
  Jun 29 12:22:01.289: INFO: Deleting pod "simpletest-rc-to-be-deleted-452qb" in namespace "gc-8668"
  Jun 29 12:22:01.302: INFO: Deleting pod "simpletest-rc-to-be-deleted-4b5z5" in namespace "gc-8668"
  Jun 29 12:22:01.317: INFO: Deleting pod "simpletest-rc-to-be-deleted-4bgks" in namespace "gc-8668"
  Jun 29 12:22:01.332: INFO: Deleting pod "simpletest-rc-to-be-deleted-4z7sg" in namespace "gc-8668"
  Jun 29 12:22:01.347: INFO: Deleting pod "simpletest-rc-to-be-deleted-544zj" in namespace "gc-8668"
  Jun 29 12:22:01.360: INFO: Deleting pod "simpletest-rc-to-be-deleted-59ntk" in namespace "gc-8668"
  Jun 29 12:22:01.374: INFO: Deleting pod "simpletest-rc-to-be-deleted-5bsgf" in namespace "gc-8668"
  Jun 29 12:22:01.392: INFO: Deleting pod "simpletest-rc-to-be-deleted-65gvr" in namespace "gc-8668"
  Jun 29 12:22:01.404: INFO: Deleting pod "simpletest-rc-to-be-deleted-6dlbf" in namespace "gc-8668"
  Jun 29 12:22:01.419: INFO: Deleting pod "simpletest-rc-to-be-deleted-6xlmx" in namespace "gc-8668"
  Jun 29 12:22:01.434: INFO: Deleting pod "simpletest-rc-to-be-deleted-76nxs" in namespace "gc-8668"
  Jun 29 12:22:01.450: INFO: Deleting pod "simpletest-rc-to-be-deleted-7d5mv" in namespace "gc-8668"
  Jun 29 12:22:01.466: INFO: Deleting pod "simpletest-rc-to-be-deleted-7j86p" in namespace "gc-8668"
  Jun 29 12:22:01.477: INFO: Deleting pod "simpletest-rc-to-be-deleted-7scpt" in namespace "gc-8668"
  Jun 29 12:22:01.491: INFO: Deleting pod "simpletest-rc-to-be-deleted-828rc" in namespace "gc-8668"
  Jun 29 12:22:01.506: INFO: Deleting pod "simpletest-rc-to-be-deleted-84qxm" in namespace "gc-8668"
  Jun 29 12:22:01.523: INFO: Deleting pod "simpletest-rc-to-be-deleted-84tn6" in namespace "gc-8668"
  Jun 29 12:22:01.536: INFO: Deleting pod "simpletest-rc-to-be-deleted-9spc2" in namespace "gc-8668"
  Jun 29 12:22:01.551: INFO: Deleting pod "simpletest-rc-to-be-deleted-bdht4" in namespace "gc-8668"
  Jun 29 12:22:01.568: INFO: Deleting pod "simpletest-rc-to-be-deleted-bmvxn" in namespace "gc-8668"
  Jun 29 12:22:01.582: INFO: Deleting pod "simpletest-rc-to-be-deleted-bqjcx" in namespace "gc-8668"
  Jun 29 12:22:01.596: INFO: Deleting pod "simpletest-rc-to-be-deleted-bs2mt" in namespace "gc-8668"
  Jun 29 12:22:01.610: INFO: Deleting pod "simpletest-rc-to-be-deleted-c7g7f" in namespace "gc-8668"
  Jun 29 12:22:01.628: INFO: Deleting pod "simpletest-rc-to-be-deleted-cf2cc" in namespace "gc-8668"
  Jun 29 12:22:01.640: INFO: Deleting pod "simpletest-rc-to-be-deleted-cffns" in namespace "gc-8668"
  Jun 29 12:22:01.658: INFO: Deleting pod "simpletest-rc-to-be-deleted-ch2kd" in namespace "gc-8668"
  Jun 29 12:22:01.672: INFO: Deleting pod "simpletest-rc-to-be-deleted-crklr" in namespace "gc-8668"
  Jun 29 12:22:01.685: INFO: Deleting pod "simpletest-rc-to-be-deleted-ctprf" in namespace "gc-8668"
  Jun 29 12:22:01.707: INFO: Deleting pod "simpletest-rc-to-be-deleted-ddtzw" in namespace "gc-8668"
  Jun 29 12:22:01.727: INFO: Deleting pod "simpletest-rc-to-be-deleted-dxf9r" in namespace "gc-8668"
  Jun 29 12:22:01.745: INFO: Deleting pod "simpletest-rc-to-be-deleted-dzcjt" in namespace "gc-8668"
  Jun 29 12:22:01.758: INFO: Deleting pod "simpletest-rc-to-be-deleted-gnpnv" in namespace "gc-8668"
  Jun 29 12:22:01.793: INFO: Deleting pod "simpletest-rc-to-be-deleted-gr7qp" in namespace "gc-8668"
  Jun 29 12:22:01.804: INFO: Deleting pod "simpletest-rc-to-be-deleted-h52jt" in namespace "gc-8668"
  Jun 29 12:22:01.828: INFO: Deleting pod "simpletest-rc-to-be-deleted-hlcb9" in namespace "gc-8668"
  Jun 29 12:22:01.843: INFO: Deleting pod "simpletest-rc-to-be-deleted-hp52b" in namespace "gc-8668"
  Jun 29 12:22:01.865: INFO: Deleting pod "simpletest-rc-to-be-deleted-ht5mx" in namespace "gc-8668"
  Jun 29 12:22:01.878: INFO: Deleting pod "simpletest-rc-to-be-deleted-htldm" in namespace "gc-8668"
  Jun 29 12:22:01.891: INFO: Deleting pod "simpletest-rc-to-be-deleted-j7757" in namespace "gc-8668"
  Jun 29 12:22:01.913: INFO: Deleting pod "simpletest-rc-to-be-deleted-jbcrk" in namespace "gc-8668"
  Jun 29 12:22:01.929: INFO: Deleting pod "simpletest-rc-to-be-deleted-jlzzz" in namespace "gc-8668"
  Jun 29 12:22:01.946: INFO: Deleting pod "simpletest-rc-to-be-deleted-jmdqz" in namespace "gc-8668"
  Jun 29 12:22:01.962: INFO: Deleting pod "simpletest-rc-to-be-deleted-jqq6v" in namespace "gc-8668"
  Jun 29 12:22:01.980: INFO: Deleting pod "simpletest-rc-to-be-deleted-jv58s" in namespace "gc-8668"
  Jun 29 12:22:01.995: INFO: Deleting pod "simpletest-rc-to-be-deleted-kbkf6" in namespace "gc-8668"
  Jun 29 12:22:02.011: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8668" for this suite. @ 06/29/24 12:22:02.015
â€¢ [17.228 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 06/29/24 12:22:02.027
  Jun 29 12:22:02.027: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename daemonsets @ 06/29/24 12:22:02.028
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:22:02.046
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:22:02.048
  Jun 29 12:22:02.072: INFO: Create a RollingUpdate DaemonSet
  Jun 29 12:22:02.079: INFO: Check that daemon pods launch on every node of the cluster
  Jun 29 12:22:02.083: INFO: DaemonSet pods can't tolerate node ip-172-31-15-151 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 12:22:02.083: INFO: DaemonSet pods can't tolerate node ip-172-31-22-17 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 12:22:02.086: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 29 12:22:02.087: INFO: Node ip-172-31-10-28 is running 0 daemon pod, expected 1
  Jun 29 12:22:03.090: INFO: DaemonSet pods can't tolerate node ip-172-31-15-151 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 12:22:03.090: INFO: DaemonSet pods can't tolerate node ip-172-31-22-17 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 12:22:03.094: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 29 12:22:03.094: INFO: Node ip-172-31-10-28 is running 0 daemon pod, expected 1
  Jun 29 12:22:04.082: INFO: DaemonSet pods can't tolerate node ip-172-31-15-151 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 12:22:04.083: INFO: DaemonSet pods can't tolerate node ip-172-31-22-17 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 12:22:04.085: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 29 12:22:04.085: INFO: Node ip-172-31-10-28 is running 0 daemon pod, expected 1
  Jun 29 12:22:05.084: INFO: DaemonSet pods can't tolerate node ip-172-31-15-151 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 12:22:05.084: INFO: DaemonSet pods can't tolerate node ip-172-31-22-17 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 12:22:05.087: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 29 12:22:05.087: INFO: Node ip-172-31-10-28 is running 0 daemon pod, expected 1
  Jun 29 12:22:06.083: INFO: DaemonSet pods can't tolerate node ip-172-31-15-151 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 12:22:06.083: INFO: DaemonSet pods can't tolerate node ip-172-31-22-17 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 12:22:06.086: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 29 12:22:06.086: INFO: Node ip-172-31-10-28 is running 0 daemon pod, expected 1
  Jun 29 12:22:07.083: INFO: DaemonSet pods can't tolerate node ip-172-31-15-151 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 12:22:07.083: INFO: DaemonSet pods can't tolerate node ip-172-31-22-17 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 12:22:07.086: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun 29 12:22:07.086: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  Jun 29 12:22:07.086: INFO: Update the DaemonSet to trigger a rollout
  Jun 29 12:22:07.096: INFO: Updating DaemonSet daemon-set
  Jun 29 12:22:10.109: INFO: Roll back the DaemonSet before rollout is complete
  Jun 29 12:22:10.118: INFO: Updating DaemonSet daemon-set
  Jun 29 12:22:10.118: INFO: Make sure DaemonSet rollback is complete
  Jun 29 12:22:10.121: INFO: Wrong image for pod: daemon-set-68kxn. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  Jun 29 12:22:10.121: INFO: Pod daemon-set-68kxn is not available
  Jun 29 12:22:10.124: INFO: DaemonSet pods can't tolerate node ip-172-31-15-151 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 12:22:10.124: INFO: DaemonSet pods can't tolerate node ip-172-31-22-17 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 12:22:11.128: INFO: DaemonSet pods can't tolerate node ip-172-31-15-151 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 12:22:11.128: INFO: DaemonSet pods can't tolerate node ip-172-31-22-17 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 12:22:12.123: INFO: Pod daemon-set-jmpj4 is not available
  Jun 29 12:22:12.126: INFO: DaemonSet pods can't tolerate node ip-172-31-15-151 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 12:22:12.126: INFO: DaemonSet pods can't tolerate node ip-172-31-22-17 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 06/29/24 12:22:12.132
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2473, will wait for the garbage collector to delete the pods @ 06/29/24 12:22:12.132
  Jun 29 12:22:12.193: INFO: Deleting DaemonSet.extensions daemon-set took: 7.750124ms
  Jun 29 12:22:12.294: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.515206ms
  Jun 29 12:22:14.198: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 29 12:22:14.199: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jun 29 12:22:14.203: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"6854"},"items":null}

  Jun 29 12:22:14.205: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"6854"},"items":null}

  Jun 29 12:22:14.216: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2473" for this suite. @ 06/29/24 12:22:14.22
â€¢ [12.200 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 06/29/24 12:22:14.228
  Jun 29 12:22:14.228: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename webhook @ 06/29/24 12:22:14.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:22:14.243
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:22:14.244
  STEP: Setting up server cert @ 06/29/24 12:22:14.267
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/29/24 12:22:14.976
  STEP: Deploying the webhook pod @ 06/29/24 12:22:14.985
  STEP: Wait for the deployment to be ready @ 06/29/24 12:22:14.998
  Jun 29 12:22:15.004: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  Jun 29 12:22:17.017: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 29, 12, 22, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 29, 12, 22, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 29, 12, 22, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 29, 12, 22, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 06/29/24 12:22:19.021
  STEP: Verifying the service has paired with the endpoint @ 06/29/24 12:22:19.031
  Jun 29 12:22:20.031: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 06/29/24 12:22:20.038
  STEP: create a pod that should be updated by the webhook @ 06/29/24 12:22:20.051
  Jun 29 12:22:20.115: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5602" for this suite. @ 06/29/24 12:22:20.12
  STEP: Destroying namespace "webhook-markers-7275" for this suite. @ 06/29/24 12:22:20.126
â€¢ [5.905 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 06/29/24 12:22:20.133
  Jun 29 12:22:20.133: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename svc-latency @ 06/29/24 12:22:20.133
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:22:20.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:22:20.15
  Jun 29 12:22:20.152: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-220 @ 06/29/24 12:22:20.152
  I0629 12:22:20.156745      18 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-220, replica count: 1
  I0629 12:22:21.207737      18 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun 29 12:22:21.319: INFO: Created: latency-svc-h5v9n
  Jun 29 12:22:21.327: INFO: Got endpoints: latency-svc-h5v9n [18.961044ms]
  Jun 29 12:22:21.339: INFO: Created: latency-svc-q9zdf
  Jun 29 12:22:21.345: INFO: Got endpoints: latency-svc-q9zdf [18.208507ms]
  Jun 29 12:22:21.410: INFO: Created: latency-svc-tvthc
  Jun 29 12:22:21.410: INFO: Created: latency-svc-kdd88
  Jun 29 12:22:21.411: INFO: Created: latency-svc-hq9cx
  Jun 29 12:22:21.414: INFO: Created: latency-svc-2vh8z
  Jun 29 12:22:21.415: INFO: Created: latency-svc-v7kg9
  Jun 29 12:22:21.415: INFO: Created: latency-svc-h2826
  Jun 29 12:22:21.415: INFO: Created: latency-svc-qqdss
  Jun 29 12:22:21.416: INFO: Created: latency-svc-hrwsv
  Jun 29 12:22:21.417: INFO: Created: latency-svc-g796d
  Jun 29 12:22:21.417: INFO: Created: latency-svc-6ng6w
  Jun 29 12:22:21.417: INFO: Created: latency-svc-tf82q
  Jun 29 12:22:21.417: INFO: Created: latency-svc-pgvkp
  Jun 29 12:22:21.418: INFO: Created: latency-svc-fz8gs
  Jun 29 12:22:21.418: INFO: Created: latency-svc-fk2bn
  Jun 29 12:22:21.418: INFO: Created: latency-svc-hmkfs
  Jun 29 12:22:21.422: INFO: Got endpoints: latency-svc-hrwsv [94.652677ms]
  Jun 29 12:22:21.428: INFO: Got endpoints: latency-svc-hq9cx [100.652626ms]
  Jun 29 12:22:21.433: INFO: Got endpoints: latency-svc-2vh8z [105.370702ms]
  Jun 29 12:22:21.433: INFO: Got endpoints: latency-svc-tvthc [105.952909ms]
  Jun 29 12:22:21.435: INFO: Got endpoints: latency-svc-tf82q [107.128484ms]
  Jun 29 12:22:21.438: INFO: Got endpoints: latency-svc-qqdss [110.732019ms]
  Jun 29 12:22:21.439: INFO: Got endpoints: latency-svc-v7kg9 [111.536702ms]
  Jun 29 12:22:21.446: INFO: Got endpoints: latency-svc-hmkfs [118.967308ms]
  Jun 29 12:22:21.447: INFO: Created: latency-svc-7pj8v
  Jun 29 12:22:21.447: INFO: Got endpoints: latency-svc-h2826 [120.265209ms]
  Jun 29 12:22:21.452: INFO: Got endpoints: latency-svc-g796d [106.178333ms]
  Jun 29 12:22:21.452: INFO: Got endpoints: latency-svc-fk2bn [124.616601ms]
  Jun 29 12:22:21.452: INFO: Got endpoints: latency-svc-fz8gs [124.029518ms]
  Jun 29 12:22:21.456: INFO: Created: latency-svc-tz5bv
  Jun 29 12:22:21.458: INFO: Got endpoints: latency-svc-6ng6w [129.903794ms]
  Jun 29 12:22:21.459: INFO: Got endpoints: latency-svc-pgvkp [131.535389ms]
  Jun 29 12:22:21.467: INFO: Got endpoints: latency-svc-kdd88 [139.376271ms]
  Jun 29 12:22:21.467: INFO: Got endpoints: latency-svc-7pj8v [44.496687ms]
  Jun 29 12:22:21.467: INFO: Got endpoints: latency-svc-tz5bv [38.657236ms]
  Jun 29 12:22:21.471: INFO: Created: latency-svc-x7swq
  Jun 29 12:22:21.477: INFO: Got endpoints: latency-svc-x7swq [44.270898ms]
  Jun 29 12:22:21.482: INFO: Created: latency-svc-t9xn6
  Jun 29 12:22:21.487: INFO: Created: latency-svc-c6fp4
  Jun 29 12:22:21.487: INFO: Got endpoints: latency-svc-t9xn6 [53.382187ms]
  Jun 29 12:22:21.493: INFO: Created: latency-svc-fldbz
  Jun 29 12:22:21.494: INFO: Got endpoints: latency-svc-c6fp4 [58.714512ms]
  Jun 29 12:22:21.501: INFO: Got endpoints: latency-svc-fldbz [62.635587ms]
  Jun 29 12:22:21.504: INFO: Created: latency-svc-r8wmk
  Jun 29 12:22:21.508: INFO: Got endpoints: latency-svc-r8wmk [69.418961ms]
  Jun 29 12:22:21.511: INFO: Created: latency-svc-pdfx2
  Jun 29 12:22:21.517: INFO: Created: latency-svc-v48j6
  Jun 29 12:22:21.520: INFO: Got endpoints: latency-svc-pdfx2 [73.70151ms]
  Jun 29 12:22:21.523: INFO: Got endpoints: latency-svc-v48j6 [75.811675ms]
  Jun 29 12:22:21.530: INFO: Created: latency-svc-x6hls
  Jun 29 12:22:21.533: INFO: Created: latency-svc-cmqxf
  Jun 29 12:22:21.535: INFO: Got endpoints: latency-svc-x6hls [83.504591ms]
  Jun 29 12:22:21.541: INFO: Got endpoints: latency-svc-cmqxf [88.221909ms]
  Jun 29 12:22:21.544: INFO: Created: latency-svc-hnhjw
  Jun 29 12:22:21.550: INFO: Got endpoints: latency-svc-hnhjw [98.03862ms]
  Jun 29 12:22:21.553: INFO: Created: latency-svc-28j7q
  Jun 29 12:22:21.558: INFO: Created: latency-svc-tzr2z
  Jun 29 12:22:21.560: INFO: Got endpoints: latency-svc-28j7q [102.083124ms]
  Jun 29 12:22:21.566: INFO: Created: latency-svc-d5jg6
  Jun 29 12:22:21.567: INFO: Got endpoints: latency-svc-tzr2z [108.171644ms]
  Jun 29 12:22:21.575: INFO: Got endpoints: latency-svc-d5jg6 [108.685181ms]
  Jun 29 12:22:21.579: INFO: Created: latency-svc-z65xh
  Jun 29 12:22:21.582: INFO: Created: latency-svc-rdk2t
  Jun 29 12:22:21.585: INFO: Got endpoints: latency-svc-z65xh [118.07766ms]
  Jun 29 12:22:21.590: INFO: Got endpoints: latency-svc-rdk2t [122.919775ms]
  Jun 29 12:22:21.594: INFO: Created: latency-svc-txgt5
  Jun 29 12:22:21.600: INFO: Got endpoints: latency-svc-txgt5 [122.62357ms]
  Jun 29 12:22:21.605: INFO: Created: latency-svc-zz9zd
  Jun 29 12:22:21.606: INFO: Created: latency-svc-fctxp
  Jun 29 12:22:21.612: INFO: Created: latency-svc-xxd8n
  Jun 29 12:22:21.620: INFO: Created: latency-svc-qgtz5
  Jun 29 12:22:21.623: INFO: Created: latency-svc-w2t44
  Jun 29 12:22:21.627: INFO: Got endpoints: latency-svc-zz9zd [139.495661ms]
  Jun 29 12:22:21.632: INFO: Created: latency-svc-tl8mw
  Jun 29 12:22:21.638: INFO: Created: latency-svc-lr7vk
  Jun 29 12:22:21.642: INFO: Created: latency-svc-gcs9j
  Jun 29 12:22:21.648: INFO: Created: latency-svc-5txwx
  Jun 29 12:22:21.657: INFO: Created: latency-svc-dhw74
  Jun 29 12:22:21.659: INFO: Created: latency-svc-bmz84
  Jun 29 12:22:21.665: INFO: Created: latency-svc-snt8t
  Jun 29 12:22:21.672: INFO: Created: latency-svc-hnhvm
  Jun 29 12:22:21.676: INFO: Created: latency-svc-6h7nt
  Jun 29 12:22:21.680: INFO: Got endpoints: latency-svc-fctxp [185.986516ms]
  Jun 29 12:22:21.686: INFO: Created: latency-svc-5wh98
  Jun 29 12:22:21.692: INFO: Created: latency-svc-6k44j
  Jun 29 12:22:21.697: INFO: Created: latency-svc-7zvzp
  Jun 29 12:22:21.727: INFO: Got endpoints: latency-svc-xxd8n [226.456128ms]
  Jun 29 12:22:21.739: INFO: Created: latency-svc-t9d57
  Jun 29 12:22:21.778: INFO: Got endpoints: latency-svc-qgtz5 [269.606576ms]
  Jun 29 12:22:21.789: INFO: Created: latency-svc-fxxcf
  Jun 29 12:22:21.828: INFO: Got endpoints: latency-svc-w2t44 [307.570163ms]
  Jun 29 12:22:21.836: INFO: Created: latency-svc-fp2st
  Jun 29 12:22:21.878: INFO: Got endpoints: latency-svc-tl8mw [354.691339ms]
  Jun 29 12:22:21.888: INFO: Created: latency-svc-9wtbv
  Jun 29 12:22:21.928: INFO: Got endpoints: latency-svc-lr7vk [392.819814ms]
  Jun 29 12:22:21.939: INFO: Created: latency-svc-wgm97
  Jun 29 12:22:21.978: INFO: Got endpoints: latency-svc-gcs9j [437.528376ms]
  Jun 29 12:22:21.987: INFO: Created: latency-svc-5zxbk
  Jun 29 12:22:22.027: INFO: Got endpoints: latency-svc-5txwx [476.702675ms]
  Jun 29 12:22:22.038: INFO: Created: latency-svc-9hg72
  Jun 29 12:22:22.077: INFO: Got endpoints: latency-svc-dhw74 [516.901798ms]
  Jun 29 12:22:22.087: INFO: Created: latency-svc-4glgj
  Jun 29 12:22:22.128: INFO: Got endpoints: latency-svc-bmz84 [560.773309ms]
  Jun 29 12:22:22.139: INFO: Created: latency-svc-srhgv
  Jun 29 12:22:22.177: INFO: Got endpoints: latency-svc-snt8t [601.565469ms]
  Jun 29 12:22:22.188: INFO: Created: latency-svc-z55jw
  Jun 29 12:22:22.226: INFO: Got endpoints: latency-svc-hnhvm [640.333035ms]
  Jun 29 12:22:22.238: INFO: Created: latency-svc-rrrgm
  Jun 29 12:22:22.278: INFO: Got endpoints: latency-svc-6h7nt [687.597071ms]
  Jun 29 12:22:22.286: INFO: Created: latency-svc-6cqpb
  Jun 29 12:22:22.327: INFO: Got endpoints: latency-svc-5wh98 [727.293693ms]
  Jun 29 12:22:22.338: INFO: Created: latency-svc-jn5m6
  Jun 29 12:22:22.377: INFO: Got endpoints: latency-svc-6k44j [750.388228ms]
  Jun 29 12:22:22.389: INFO: Created: latency-svc-zfc2h
  Jun 29 12:22:22.428: INFO: Got endpoints: latency-svc-7zvzp [747.983291ms]
  Jun 29 12:22:22.438: INFO: Created: latency-svc-qdnk4
  Jun 29 12:22:22.476: INFO: Got endpoints: latency-svc-t9d57 [749.206494ms]
  Jun 29 12:22:22.489: INFO: Created: latency-svc-4q49b
  Jun 29 12:22:22.527: INFO: Got endpoints: latency-svc-fxxcf [748.916272ms]
  Jun 29 12:22:22.539: INFO: Created: latency-svc-w9v4k
  Jun 29 12:22:22.577: INFO: Got endpoints: latency-svc-fp2st [749.733893ms]
  Jun 29 12:22:22.585: INFO: Created: latency-svc-qx5vr
  Jun 29 12:22:22.628: INFO: Got endpoints: latency-svc-9wtbv [750.270584ms]
  Jun 29 12:22:22.643: INFO: Created: latency-svc-dz74t
  Jun 29 12:22:22.677: INFO: Got endpoints: latency-svc-wgm97 [748.951816ms]
  Jun 29 12:22:22.689: INFO: Created: latency-svc-dm4k8
  Jun 29 12:22:22.728: INFO: Got endpoints: latency-svc-5zxbk [749.945589ms]
  Jun 29 12:22:22.739: INFO: Created: latency-svc-pspv9
  Jun 29 12:22:22.776: INFO: Got endpoints: latency-svc-9hg72 [749.47279ms]
  Jun 29 12:22:22.787: INFO: Created: latency-svc-kv4s8
  Jun 29 12:22:22.826: INFO: Got endpoints: latency-svc-4glgj [749.7075ms]
  Jun 29 12:22:22.838: INFO: Created: latency-svc-lrhsx
  Jun 29 12:22:22.878: INFO: Got endpoints: latency-svc-srhgv [750.622044ms]
  Jun 29 12:22:22.887: INFO: Created: latency-svc-hl5bs
  Jun 29 12:22:22.927: INFO: Got endpoints: latency-svc-z55jw [750.265007ms]
  Jun 29 12:22:22.939: INFO: Created: latency-svc-p2qwz
  Jun 29 12:22:22.977: INFO: Got endpoints: latency-svc-rrrgm [751.195917ms]
  Jun 29 12:22:22.989: INFO: Created: latency-svc-bvk9j
  Jun 29 12:22:23.027: INFO: Got endpoints: latency-svc-6cqpb [748.945404ms]
  Jun 29 12:22:23.035: INFO: Created: latency-svc-rlzz4
  Jun 29 12:22:23.079: INFO: Got endpoints: latency-svc-jn5m6 [751.164604ms]
  Jun 29 12:22:23.089: INFO: Created: latency-svc-vjx6f
  Jun 29 12:22:23.129: INFO: Got endpoints: latency-svc-zfc2h [751.554622ms]
  Jun 29 12:22:23.141: INFO: Created: latency-svc-9c5jb
  Jun 29 12:22:23.178: INFO: Got endpoints: latency-svc-qdnk4 [750.821504ms]
  Jun 29 12:22:23.187: INFO: Created: latency-svc-vwfxb
  Jun 29 12:22:23.228: INFO: Got endpoints: latency-svc-4q49b [751.582316ms]
  Jun 29 12:22:23.240: INFO: Created: latency-svc-c6qpm
  Jun 29 12:22:23.277: INFO: Got endpoints: latency-svc-w9v4k [749.606014ms]
  Jun 29 12:22:23.289: INFO: Created: latency-svc-brl6s
  Jun 29 12:22:23.327: INFO: Got endpoints: latency-svc-qx5vr [749.671127ms]
  Jun 29 12:22:23.336: INFO: Created: latency-svc-xcvn5
  Jun 29 12:22:23.384: INFO: Got endpoints: latency-svc-dz74t [755.011621ms]
  Jun 29 12:22:23.426: INFO: Got endpoints: latency-svc-dm4k8 [748.646011ms]
  Jun 29 12:22:23.513: INFO: Got endpoints: latency-svc-pspv9 [784.577842ms]
  Jun 29 12:22:23.513: INFO: Created: latency-svc-m94kj
  Jun 29 12:22:23.522: INFO: Created: latency-svc-2nhth
  Jun 29 12:22:23.526: INFO: Created: latency-svc-rqn76
  Jun 29 12:22:23.529: INFO: Got endpoints: latency-svc-kv4s8 [752.447959ms]
  Jun 29 12:22:23.538: INFO: Created: latency-svc-24pj8
  Jun 29 12:22:23.577: INFO: Got endpoints: latency-svc-lrhsx [749.945273ms]
  Jun 29 12:22:23.587: INFO: Created: latency-svc-dqcg7
  Jun 29 12:22:23.629: INFO: Got endpoints: latency-svc-hl5bs [750.364462ms]
  Jun 29 12:22:23.637: INFO: Created: latency-svc-8lwzl
  Jun 29 12:22:23.676: INFO: Got endpoints: latency-svc-p2qwz [748.562475ms]
  Jun 29 12:22:23.687: INFO: Created: latency-svc-pzbt4
  Jun 29 12:22:23.726: INFO: Got endpoints: latency-svc-bvk9j [749.009293ms]
  Jun 29 12:22:23.737: INFO: Created: latency-svc-b56mj
  Jun 29 12:22:23.777: INFO: Got endpoints: latency-svc-rlzz4 [750.583707ms]
  Jun 29 12:22:23.785: INFO: Created: latency-svc-65jp5
  Jun 29 12:22:23.828: INFO: Got endpoints: latency-svc-vjx6f [748.692082ms]
  Jun 29 12:22:23.838: INFO: Created: latency-svc-qbvjh
  Jun 29 12:22:23.877: INFO: Got endpoints: latency-svc-9c5jb [748.280783ms]
  Jun 29 12:22:23.887: INFO: Created: latency-svc-nj9sj
  Jun 29 12:22:23.927: INFO: Got endpoints: latency-svc-vwfxb [748.100405ms]
  Jun 29 12:22:23.935: INFO: Created: latency-svc-p8277
  Jun 29 12:22:23.976: INFO: Got endpoints: latency-svc-c6qpm [748.131068ms]
  Jun 29 12:22:23.986: INFO: Created: latency-svc-kr4g5
  Jun 29 12:22:24.027: INFO: Got endpoints: latency-svc-brl6s [750.586172ms]
  Jun 29 12:22:24.041: INFO: Created: latency-svc-6226f
  Jun 29 12:22:24.078: INFO: Got endpoints: latency-svc-xcvn5 [750.608001ms]
  Jun 29 12:22:24.087: INFO: Created: latency-svc-8pb9h
  Jun 29 12:22:24.126: INFO: Got endpoints: latency-svc-m94kj [741.552338ms]
  Jun 29 12:22:24.138: INFO: Created: latency-svc-ml8mf
  Jun 29 12:22:24.176: INFO: Got endpoints: latency-svc-2nhth [750.154575ms]
  Jun 29 12:22:24.187: INFO: Created: latency-svc-9q686
  Jun 29 12:22:24.227: INFO: Got endpoints: latency-svc-rqn76 [714.186422ms]
  Jun 29 12:22:24.235: INFO: Created: latency-svc-5br74
  Jun 29 12:22:24.286: INFO: Got endpoints: latency-svc-24pj8 [756.811037ms]
  Jun 29 12:22:24.296: INFO: Created: latency-svc-xzkfb
  Jun 29 12:22:24.328: INFO: Got endpoints: latency-svc-dqcg7 [751.385266ms]
  Jun 29 12:22:24.342: INFO: Created: latency-svc-6hnhl
  Jun 29 12:22:24.376: INFO: Got endpoints: latency-svc-8lwzl [747.594612ms]
  Jun 29 12:22:24.388: INFO: Created: latency-svc-xgv99
  Jun 29 12:22:24.427: INFO: Got endpoints: latency-svc-pzbt4 [751.02912ms]
  Jun 29 12:22:24.438: INFO: Created: latency-svc-rpvw2
  Jun 29 12:22:24.478: INFO: Got endpoints: latency-svc-b56mj [751.234553ms]
  Jun 29 12:22:24.491: INFO: Created: latency-svc-hx7zl
  Jun 29 12:22:24.529: INFO: Got endpoints: latency-svc-65jp5 [751.896144ms]
  Jun 29 12:22:24.539: INFO: Created: latency-svc-592p9
  Jun 29 12:22:24.578: INFO: Got endpoints: latency-svc-qbvjh [750.385236ms]
  Jun 29 12:22:24.590: INFO: Created: latency-svc-wtl2x
  Jun 29 12:22:24.627: INFO: Got endpoints: latency-svc-nj9sj [749.330795ms]
  Jun 29 12:22:24.639: INFO: Created: latency-svc-k6x56
  Jun 29 12:22:24.676: INFO: Got endpoints: latency-svc-p8277 [749.514077ms]
  Jun 29 12:22:24.684: INFO: Created: latency-svc-vz7n5
  Jun 29 12:22:24.729: INFO: Got endpoints: latency-svc-kr4g5 [752.418925ms]
  Jun 29 12:22:24.738: INFO: Created: latency-svc-mdcv4
  Jun 29 12:22:24.778: INFO: Got endpoints: latency-svc-6226f [750.361021ms]
  Jun 29 12:22:24.790: INFO: Created: latency-svc-5dl9f
  Jun 29 12:22:24.828: INFO: Got endpoints: latency-svc-8pb9h [750.037704ms]
  Jun 29 12:22:24.837: INFO: Created: latency-svc-v2nqj
  Jun 29 12:22:24.876: INFO: Got endpoints: latency-svc-ml8mf [749.695416ms]
  Jun 29 12:22:24.888: INFO: Created: latency-svc-zn6h9
  Jun 29 12:22:24.927: INFO: Got endpoints: latency-svc-9q686 [750.04611ms]
  Jun 29 12:22:24.937: INFO: Created: latency-svc-f9qjp
  Jun 29 12:22:24.977: INFO: Got endpoints: latency-svc-5br74 [749.897822ms]
  Jun 29 12:22:24.985: INFO: Created: latency-svc-f78pf
  Jun 29 12:22:25.030: INFO: Got endpoints: latency-svc-xzkfb [743.829661ms]
  Jun 29 12:22:25.039: INFO: Created: latency-svc-hlk2b
  Jun 29 12:22:25.078: INFO: Got endpoints: latency-svc-6hnhl [749.719621ms]
  Jun 29 12:22:25.090: INFO: Created: latency-svc-54r4q
  Jun 29 12:22:25.127: INFO: Got endpoints: latency-svc-xgv99 [749.962674ms]
  Jun 29 12:22:25.136: INFO: Created: latency-svc-cktsk
  Jun 29 12:22:25.176: INFO: Got endpoints: latency-svc-rpvw2 [748.439101ms]
  Jun 29 12:22:25.188: INFO: Created: latency-svc-228p5
  Jun 29 12:22:25.228: INFO: Got endpoints: latency-svc-hx7zl [750.08331ms]
  Jun 29 12:22:25.241: INFO: Created: latency-svc-2c6tj
  Jun 29 12:22:25.275: INFO: Got endpoints: latency-svc-592p9 [746.110536ms]
  Jun 29 12:22:25.286: INFO: Created: latency-svc-fbr92
  Jun 29 12:22:25.325: INFO: Got endpoints: latency-svc-wtl2x [747.059921ms]
  Jun 29 12:22:25.338: INFO: Created: latency-svc-4kpf6
  Jun 29 12:22:25.378: INFO: Got endpoints: latency-svc-k6x56 [751.687497ms]
  Jun 29 12:22:25.391: INFO: Created: latency-svc-rlncr
  Jun 29 12:22:25.428: INFO: Got endpoints: latency-svc-vz7n5 [751.379976ms]
  Jun 29 12:22:25.438: INFO: Created: latency-svc-dtj5q
  Jun 29 12:22:25.478: INFO: Got endpoints: latency-svc-mdcv4 [749.198505ms]
  Jun 29 12:22:25.487: INFO: Created: latency-svc-l8jbt
  Jun 29 12:22:25.528: INFO: Got endpoints: latency-svc-5dl9f [750.663723ms]
  Jun 29 12:22:25.540: INFO: Created: latency-svc-z24dj
  Jun 29 12:22:25.578: INFO: Got endpoints: latency-svc-v2nqj [750.057527ms]
  Jun 29 12:22:25.587: INFO: Created: latency-svc-94h9c
  Jun 29 12:22:25.627: INFO: Got endpoints: latency-svc-zn6h9 [751.277067ms]
  Jun 29 12:22:25.638: INFO: Created: latency-svc-lqz9z
  Jun 29 12:22:25.678: INFO: Got endpoints: latency-svc-f9qjp [750.985728ms]
  Jun 29 12:22:25.689: INFO: Created: latency-svc-25dwv
  Jun 29 12:22:25.728: INFO: Got endpoints: latency-svc-f78pf [750.74108ms]
  Jun 29 12:22:25.735: INFO: Created: latency-svc-96hsv
  Jun 29 12:22:25.779: INFO: Got endpoints: latency-svc-hlk2b [749.740678ms]
  Jun 29 12:22:25.788: INFO: Created: latency-svc-fcnh9
  Jun 29 12:22:25.829: INFO: Got endpoints: latency-svc-54r4q [750.295722ms]
  Jun 29 12:22:25.841: INFO: Created: latency-svc-7w9p4
  Jun 29 12:22:25.876: INFO: Got endpoints: latency-svc-cktsk [749.466983ms]
  Jun 29 12:22:25.886: INFO: Created: latency-svc-g7t7x
  Jun 29 12:22:25.928: INFO: Got endpoints: latency-svc-228p5 [751.838415ms]
  Jun 29 12:22:25.938: INFO: Created: latency-svc-sdp2h
  Jun 29 12:22:25.980: INFO: Got endpoints: latency-svc-2c6tj [751.480417ms]
  Jun 29 12:22:25.989: INFO: Created: latency-svc-s8n6k
  Jun 29 12:22:26.028: INFO: Got endpoints: latency-svc-fbr92 [752.52072ms]
  Jun 29 12:22:26.037: INFO: Created: latency-svc-7z6wh
  Jun 29 12:22:26.077: INFO: Got endpoints: latency-svc-4kpf6 [752.016572ms]
  Jun 29 12:22:26.087: INFO: Created: latency-svc-p7w4z
  Jun 29 12:22:26.128: INFO: Got endpoints: latency-svc-rlncr [749.323424ms]
  Jun 29 12:22:26.139: INFO: Created: latency-svc-8fzcf
  Jun 29 12:22:26.177: INFO: Got endpoints: latency-svc-dtj5q [749.175917ms]
  Jun 29 12:22:26.185: INFO: Created: latency-svc-f9hpj
  Jun 29 12:22:26.228: INFO: Got endpoints: latency-svc-l8jbt [749.938015ms]
  Jun 29 12:22:26.237: INFO: Created: latency-svc-v4hbk
  Jun 29 12:22:26.278: INFO: Got endpoints: latency-svc-z24dj [748.999498ms]
  Jun 29 12:22:26.289: INFO: Created: latency-svc-j9ssj
  Jun 29 12:22:26.326: INFO: Got endpoints: latency-svc-94h9c [748.012473ms]
  Jun 29 12:22:26.339: INFO: Created: latency-svc-7g49q
  Jun 29 12:22:26.377: INFO: Got endpoints: latency-svc-lqz9z [749.272535ms]
  Jun 29 12:22:26.388: INFO: Created: latency-svc-cxr9l
  Jun 29 12:22:26.427: INFO: Got endpoints: latency-svc-25dwv [749.583502ms]
  Jun 29 12:22:26.438: INFO: Created: latency-svc-wn8p6
  Jun 29 12:22:26.479: INFO: Got endpoints: latency-svc-96hsv [751.671025ms]
  Jun 29 12:22:26.487: INFO: Created: latency-svc-9r26s
  Jun 29 12:22:26.527: INFO: Got endpoints: latency-svc-fcnh9 [747.130522ms]
  Jun 29 12:22:26.537: INFO: Created: latency-svc-w42xz
  Jun 29 12:22:26.577: INFO: Got endpoints: latency-svc-7w9p4 [748.133746ms]
  Jun 29 12:22:26.589: INFO: Created: latency-svc-fm6cp
  Jun 29 12:22:26.628: INFO: Got endpoints: latency-svc-g7t7x [751.537741ms]
  Jun 29 12:22:26.637: INFO: Created: latency-svc-7vcc8
  Jun 29 12:22:26.678: INFO: Got endpoints: latency-svc-sdp2h [750.258172ms]
  Jun 29 12:22:26.690: INFO: Created: latency-svc-qhcs6
  Jun 29 12:22:26.727: INFO: Got endpoints: latency-svc-s8n6k [747.774117ms]
  Jun 29 12:22:26.741: INFO: Created: latency-svc-kn686
  Jun 29 12:22:26.779: INFO: Got endpoints: latency-svc-7z6wh [750.804756ms]
  Jun 29 12:22:26.789: INFO: Created: latency-svc-fldgq
  Jun 29 12:22:26.828: INFO: Got endpoints: latency-svc-p7w4z [750.538443ms]
  Jun 29 12:22:26.841: INFO: Created: latency-svc-845vs
  Jun 29 12:22:26.877: INFO: Got endpoints: latency-svc-8fzcf [749.576534ms]
  Jun 29 12:22:26.889: INFO: Created: latency-svc-svvlg
  Jun 29 12:22:26.927: INFO: Got endpoints: latency-svc-f9hpj [750.140858ms]
  Jun 29 12:22:26.936: INFO: Created: latency-svc-djkc7
  Jun 29 12:22:26.977: INFO: Got endpoints: latency-svc-v4hbk [749.288984ms]
  Jun 29 12:22:26.987: INFO: Created: latency-svc-nkrqr
  Jun 29 12:22:27.029: INFO: Got endpoints: latency-svc-j9ssj [750.91468ms]
  Jun 29 12:22:27.042: INFO: Created: latency-svc-68rww
  Jun 29 12:22:27.077: INFO: Got endpoints: latency-svc-7g49q [751.163135ms]
  Jun 29 12:22:27.087: INFO: Created: latency-svc-jh8d6
  Jun 29 12:22:27.127: INFO: Got endpoints: latency-svc-cxr9l [750.082585ms]
  Jun 29 12:22:27.139: INFO: Created: latency-svc-m6c86
  Jun 29 12:22:27.178: INFO: Got endpoints: latency-svc-wn8p6 [750.621037ms]
  Jun 29 12:22:27.190: INFO: Created: latency-svc-76fs6
  Jun 29 12:22:27.228: INFO: Got endpoints: latency-svc-9r26s [748.769305ms]
  Jun 29 12:22:27.237: INFO: Created: latency-svc-gffl9
  Jun 29 12:22:27.277: INFO: Got endpoints: latency-svc-w42xz [749.695861ms]
  Jun 29 12:22:27.289: INFO: Created: latency-svc-qwl8j
  Jun 29 12:22:27.326: INFO: Got endpoints: latency-svc-fm6cp [749.506527ms]
  Jun 29 12:22:27.338: INFO: Created: latency-svc-x5twx
  Jun 29 12:22:27.377: INFO: Got endpoints: latency-svc-7vcc8 [748.977143ms]
  Jun 29 12:22:27.387: INFO: Created: latency-svc-n4h2g
  Jun 29 12:22:27.426: INFO: Got endpoints: latency-svc-qhcs6 [748.101617ms]
  Jun 29 12:22:27.438: INFO: Created: latency-svc-q79f9
  Jun 29 12:22:27.478: INFO: Got endpoints: latency-svc-kn686 [750.141317ms]
  Jun 29 12:22:27.490: INFO: Created: latency-svc-kszhc
  Jun 29 12:22:27.527: INFO: Got endpoints: latency-svc-fldgq [747.981906ms]
  Jun 29 12:22:27.535: INFO: Created: latency-svc-rswns
  Jun 29 12:22:27.586: INFO: Got endpoints: latency-svc-845vs [757.735862ms]
  Jun 29 12:22:27.596: INFO: Created: latency-svc-bl9b9
  Jun 29 12:22:27.627: INFO: Got endpoints: latency-svc-svvlg [749.868647ms]
  Jun 29 12:22:27.638: INFO: Created: latency-svc-b56wq
  Jun 29 12:22:27.677: INFO: Got endpoints: latency-svc-djkc7 [750.120921ms]
  Jun 29 12:22:27.686: INFO: Created: latency-svc-n6xlt
  Jun 29 12:22:27.728: INFO: Got endpoints: latency-svc-nkrqr [750.520613ms]
  Jun 29 12:22:27.738: INFO: Created: latency-svc-4dnts
  Jun 29 12:22:27.777: INFO: Got endpoints: latency-svc-68rww [748.094433ms]
  Jun 29 12:22:27.788: INFO: Created: latency-svc-v7fxv
  Jun 29 12:22:27.827: INFO: Got endpoints: latency-svc-jh8d6 [750.012422ms]
  Jun 29 12:22:27.838: INFO: Created: latency-svc-hqhdl
  Jun 29 12:22:27.878: INFO: Got endpoints: latency-svc-m6c86 [751.482291ms]
  Jun 29 12:22:27.888: INFO: Created: latency-svc-5mvfz
  Jun 29 12:22:27.928: INFO: Got endpoints: latency-svc-76fs6 [749.873096ms]
  Jun 29 12:22:27.941: INFO: Created: latency-svc-w7585
  Jun 29 12:22:27.977: INFO: Got endpoints: latency-svc-gffl9 [748.535586ms]
  Jun 29 12:22:27.985: INFO: Created: latency-svc-kcp8p
  Jun 29 12:22:28.028: INFO: Got endpoints: latency-svc-qwl8j [750.874421ms]
  Jun 29 12:22:28.044: INFO: Created: latency-svc-7nxmt
  Jun 29 12:22:28.077: INFO: Got endpoints: latency-svc-x5twx [750.616235ms]
  Jun 29 12:22:28.088: INFO: Created: latency-svc-hprln
  Jun 29 12:22:28.128: INFO: Got endpoints: latency-svc-n4h2g [750.795684ms]
  Jun 29 12:22:28.137: INFO: Created: latency-svc-btl5k
  Jun 29 12:22:28.176: INFO: Got endpoints: latency-svc-q79f9 [749.242075ms]
  Jun 29 12:22:28.186: INFO: Created: latency-svc-w6prs
  Jun 29 12:22:28.227: INFO: Got endpoints: latency-svc-kszhc [749.116682ms]
  Jun 29 12:22:28.238: INFO: Created: latency-svc-kcst4
  Jun 29 12:22:28.278: INFO: Got endpoints: latency-svc-rswns [750.628165ms]
  Jun 29 12:22:28.289: INFO: Created: latency-svc-75nnp
  Jun 29 12:22:28.328: INFO: Got endpoints: latency-svc-bl9b9 [742.332772ms]
  Jun 29 12:22:28.339: INFO: Created: latency-svc-l9mrw
  Jun 29 12:22:28.377: INFO: Got endpoints: latency-svc-b56wq [749.188273ms]
  Jun 29 12:22:28.390: INFO: Created: latency-svc-pfn2z
  Jun 29 12:22:28.427: INFO: Got endpoints: latency-svc-n6xlt [750.189474ms]
  Jun 29 12:22:28.437: INFO: Created: latency-svc-njknl
  Jun 29 12:22:28.477: INFO: Got endpoints: latency-svc-4dnts [748.98608ms]
  Jun 29 12:22:28.486: INFO: Created: latency-svc-d6bgt
  Jun 29 12:22:28.528: INFO: Got endpoints: latency-svc-v7fxv [751.155432ms]
  Jun 29 12:22:28.540: INFO: Created: latency-svc-bfpjz
  Jun 29 12:22:28.577: INFO: Got endpoints: latency-svc-hqhdl [749.56423ms]
  Jun 29 12:22:28.585: INFO: Created: latency-svc-ddgjr
  Jun 29 12:22:28.626: INFO: Got endpoints: latency-svc-5mvfz [747.354534ms]
  Jun 29 12:22:28.637: INFO: Created: latency-svc-zx44x
  Jun 29 12:22:28.677: INFO: Got endpoints: latency-svc-w7585 [748.514593ms]
  Jun 29 12:22:28.688: INFO: Created: latency-svc-999pk
  Jun 29 12:22:28.728: INFO: Got endpoints: latency-svc-kcp8p [750.917744ms]
  Jun 29 12:22:28.736: INFO: Created: latency-svc-rkt52
  Jun 29 12:22:28.777: INFO: Got endpoints: latency-svc-7nxmt [749.768709ms]
  Jun 29 12:22:28.789: INFO: Created: latency-svc-xm72n
  Jun 29 12:22:28.833: INFO: Got endpoints: latency-svc-hprln [756.219809ms]
  Jun 29 12:22:28.847: INFO: Created: latency-svc-dfzbd
  Jun 29 12:22:28.877: INFO: Got endpoints: latency-svc-btl5k [749.042591ms]
  Jun 29 12:22:28.888: INFO: Created: latency-svc-rtwbj
  Jun 29 12:22:28.926: INFO: Got endpoints: latency-svc-w6prs [750.427719ms]
  Jun 29 12:22:28.936: INFO: Created: latency-svc-nklbb
  Jun 29 12:22:28.978: INFO: Got endpoints: latency-svc-kcst4 [751.040222ms]
  Jun 29 12:22:28.989: INFO: Created: latency-svc-xnt9m
  Jun 29 12:22:29.028: INFO: Got endpoints: latency-svc-75nnp [750.418334ms]
  Jun 29 12:22:29.039: INFO: Created: latency-svc-8lrvr
  Jun 29 12:22:29.079: INFO: Got endpoints: latency-svc-l9mrw [751.093185ms]
  Jun 29 12:22:29.091: INFO: Created: latency-svc-c6p2v
  Jun 29 12:22:29.126: INFO: Got endpoints: latency-svc-pfn2z [749.633694ms]
  Jun 29 12:22:29.140: INFO: Created: latency-svc-hsxc9
  Jun 29 12:22:29.176: INFO: Got endpoints: latency-svc-njknl [748.542013ms]
  Jun 29 12:22:29.227: INFO: Got endpoints: latency-svc-d6bgt [750.502764ms]
  Jun 29 12:22:29.277: INFO: Got endpoints: latency-svc-bfpjz [748.166088ms]
  Jun 29 12:22:29.328: INFO: Got endpoints: latency-svc-ddgjr [750.810514ms]
  Jun 29 12:22:29.376: INFO: Got endpoints: latency-svc-zx44x [749.730623ms]
  Jun 29 12:22:29.428: INFO: Got endpoints: latency-svc-999pk [751.253085ms]
  Jun 29 12:22:29.477: INFO: Got endpoints: latency-svc-rkt52 [749.123641ms]
  Jun 29 12:22:29.527: INFO: Got endpoints: latency-svc-xm72n [749.947268ms]
  Jun 29 12:22:29.576: INFO: Got endpoints: latency-svc-dfzbd [742.155661ms]
  Jun 29 12:22:29.627: INFO: Got endpoints: latency-svc-rtwbj [750.480448ms]
  Jun 29 12:22:29.676: INFO: Got endpoints: latency-svc-nklbb [750.213782ms]
  Jun 29 12:22:29.728: INFO: Got endpoints: latency-svc-xnt9m [749.759682ms]
  Jun 29 12:22:29.777: INFO: Got endpoints: latency-svc-8lrvr [748.642457ms]
  Jun 29 12:22:29.828: INFO: Got endpoints: latency-svc-c6p2v [748.565366ms]
  Jun 29 12:22:29.876: INFO: Got endpoints: latency-svc-hsxc9 [750.043471ms]
  Jun 29 12:22:29.877: INFO: Latencies: [18.208507ms 38.657236ms 44.270898ms 44.496687ms 53.382187ms 58.714512ms 62.635587ms 69.418961ms 73.70151ms 75.811675ms 83.504591ms 88.221909ms 94.652677ms 98.03862ms 100.652626ms 102.083124ms 105.370702ms 105.952909ms 106.178333ms 107.128484ms 108.171644ms 108.685181ms 110.732019ms 111.536702ms 118.07766ms 118.967308ms 120.265209ms 122.62357ms 122.919775ms 124.029518ms 124.616601ms 129.903794ms 131.535389ms 139.376271ms 139.495661ms 185.986516ms 226.456128ms 269.606576ms 307.570163ms 354.691339ms 392.819814ms 437.528376ms 476.702675ms 516.901798ms 560.773309ms 601.565469ms 640.333035ms 687.597071ms 714.186422ms 727.293693ms 741.552338ms 742.155661ms 742.332772ms 743.829661ms 746.110536ms 747.059921ms 747.130522ms 747.354534ms 747.594612ms 747.774117ms 747.981906ms 747.983291ms 748.012473ms 748.094433ms 748.100405ms 748.101617ms 748.131068ms 748.133746ms 748.166088ms 748.280783ms 748.439101ms 748.514593ms 748.535586ms 748.542013ms 748.562475ms 748.565366ms 748.642457ms 748.646011ms 748.692082ms 748.769305ms 748.916272ms 748.945404ms 748.951816ms 748.977143ms 748.98608ms 748.999498ms 749.009293ms 749.042591ms 749.116682ms 749.123641ms 749.175917ms 749.188273ms 749.198505ms 749.206494ms 749.242075ms 749.272535ms 749.288984ms 749.323424ms 749.330795ms 749.466983ms 749.47279ms 749.506527ms 749.514077ms 749.56423ms 749.576534ms 749.583502ms 749.606014ms 749.633694ms 749.671127ms 749.695416ms 749.695861ms 749.7075ms 749.719621ms 749.730623ms 749.733893ms 749.740678ms 749.759682ms 749.768709ms 749.868647ms 749.873096ms 749.897822ms 749.938015ms 749.945273ms 749.945589ms 749.947268ms 749.962674ms 750.012422ms 750.037704ms 750.043471ms 750.04611ms 750.057527ms 750.082585ms 750.08331ms 750.120921ms 750.140858ms 750.141317ms 750.154575ms 750.189474ms 750.213782ms 750.258172ms 750.265007ms 750.270584ms 750.295722ms 750.361021ms 750.364462ms 750.385236ms 750.388228ms 750.418334ms 750.427719ms 750.480448ms 750.502764ms 750.520613ms 750.538443ms 750.583707ms 750.586172ms 750.608001ms 750.616235ms 750.621037ms 750.622044ms 750.628165ms 750.663723ms 750.74108ms 750.795684ms 750.804756ms 750.810514ms 750.821504ms 750.874421ms 750.91468ms 750.917744ms 750.985728ms 751.02912ms 751.040222ms 751.093185ms 751.155432ms 751.163135ms 751.164604ms 751.195917ms 751.234553ms 751.253085ms 751.277067ms 751.379976ms 751.385266ms 751.480417ms 751.482291ms 751.537741ms 751.554622ms 751.582316ms 751.671025ms 751.687497ms 751.838415ms 751.896144ms 752.016572ms 752.418925ms 752.447959ms 752.52072ms 755.011621ms 756.219809ms 756.811037ms 757.735862ms 784.577842ms]
  Jun 29 12:22:29.877: INFO: 50 %ile: 749.47279ms
  Jun 29 12:22:29.877: INFO: 90 %ile: 751.379976ms
  Jun 29 12:22:29.877: INFO: 99 %ile: 757.735862ms
  Jun 29 12:22:29.877: INFO: Total sample count: 200
  Jun 29 12:22:29.877: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-220" for this suite. @ 06/29/24 12:22:29.881
â€¢ [9.755 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 06/29/24 12:22:29.888
  Jun 29 12:22:29.888: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename replication-controller @ 06/29/24 12:22:29.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:22:29.909
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:22:29.91
  STEP: Creating ReplicationController "e2e-rc-8w8hg" @ 06/29/24 12:22:29.912
  Jun 29 12:22:29.918: INFO: Get Replication Controller "e2e-rc-8w8hg" to confirm replicas
  Jun 29 12:22:30.918: INFO: Get Replication Controller "e2e-rc-8w8hg" to confirm replicas
  Jun 29 12:22:30.922: INFO: Found 1 replicas for "e2e-rc-8w8hg" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-8w8hg" @ 06/29/24 12:22:30.922
  STEP: Updating a scale subresource @ 06/29/24 12:22:30.925
  STEP: Verifying replicas where modified for replication controller "e2e-rc-8w8hg" @ 06/29/24 12:22:30.931
  Jun 29 12:22:30.931: INFO: Get Replication Controller "e2e-rc-8w8hg" to confirm replicas
  Jun 29 12:22:31.931: INFO: Get Replication Controller "e2e-rc-8w8hg" to confirm replicas
  Jun 29 12:22:31.935: INFO: Found 2 replicas for "e2e-rc-8w8hg" replication controller
  Jun 29 12:22:31.935: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7558" for this suite. @ 06/29/24 12:22:31.939
â€¢ [2.059 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 06/29/24 12:22:31.946
  Jun 29 12:22:31.947: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename projected @ 06/29/24 12:22:31.947
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:22:31.967
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:22:31.969
  STEP: Creating a pod to test downward API volume plugin @ 06/29/24 12:22:31.971
  STEP: Saw pod success @ 06/29/24 12:22:35.991
  Jun 29 12:22:35.994: INFO: Trying to get logs from node ip-172-31-94-98 pod downwardapi-volume-4e8bb430-50b8-4309-8308-6268e4f2923a container client-container: <nil>
  STEP: delete the pod @ 06/29/24 12:22:36.011
  Jun 29 12:22:36.027: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7466" for this suite. @ 06/29/24 12:22:36.031
â€¢ [4.093 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1632
  STEP: Creating a kubernetes client @ 06/29/24 12:22:36.039
  Jun 29 12:22:36.039: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename kubectl @ 06/29/24 12:22:36.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:22:36.058
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:22:36.06
  STEP: creating the pod @ 06/29/24 12:22:36.062
  Jun 29 12:22:36.062: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-6963 create -f -'
  Jun 29 12:22:36.164: INFO: stderr: ""
  Jun 29 12:22:36.164: INFO: stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 06/29/24 12:22:38.173
  Jun 29 12:22:38.173: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-6963 label pods pause testing-label=testing-label-value'
  Jun 29 12:22:38.237: INFO: stderr: ""
  Jun 29 12:22:38.237: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 06/29/24 12:22:38.237
  Jun 29 12:22:38.238: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-6963 get pod pause -L testing-label'
  Jun 29 12:22:38.291: INFO: stderr: ""
  Jun 29 12:22:38.291: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 06/29/24 12:22:38.291
  Jun 29 12:22:38.291: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-6963 label pods pause testing-label-'
  Jun 29 12:22:38.345: INFO: stderr: ""
  Jun 29 12:22:38.345: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 06/29/24 12:22:38.345
  Jun 29 12:22:38.345: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-6963 get pod pause -L testing-label'
  Jun 29 12:22:38.403: INFO: stderr: ""
  Jun 29 12:22:38.403: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 06/29/24 12:22:38.403
  Jun 29 12:22:38.403: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-6963 delete --grace-period=0 --force -f -'
  Jun 29 12:22:38.457: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun 29 12:22:38.457: INFO: stdout: "pod \"pause\" force deleted\n"
  Jun 29 12:22:38.457: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-6963 get rc,svc -l name=pause --no-headers'
  Jun 29 12:22:38.507: INFO: stderr: "No resources found in kubectl-6963 namespace.\n"
  Jun 29 12:22:38.507: INFO: stdout: ""
  Jun 29 12:22:38.507: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-6963 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Jun 29 12:22:38.551: INFO: stderr: ""
  Jun 29 12:22:38.551: INFO: stdout: ""
  Jun 29 12:22:38.551: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6963" for this suite. @ 06/29/24 12:22:38.556
â€¢ [2.525 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 06/29/24 12:22:38.564
  Jun 29 12:22:38.564: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename prestop @ 06/29/24 12:22:38.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:22:38.583
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:22:38.585
  STEP: Creating server pod server in namespace prestop-6500 @ 06/29/24 12:22:38.586
  STEP: Waiting for pods to come up. @ 06/29/24 12:22:38.593
  STEP: Creating tester pod tester in namespace prestop-6500 @ 06/29/24 12:22:40.608
  STEP: Deleting pre-stop pod @ 06/29/24 12:22:42.625
  Jun 29 12:22:47.643: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 06/29/24 12:22:47.643
  Jun 29 12:22:47.658: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-6500" for this suite. @ 06/29/24 12:22:47.661
â€¢ [9.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 06/29/24 12:22:47.668
  Jun 29 12:22:47.668: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename events @ 06/29/24 12:22:47.669
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:22:47.687
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:22:47.689
  STEP: creating a test event @ 06/29/24 12:22:47.691
  STEP: listing events in all namespaces @ 06/29/24 12:22:47.698
  STEP: listing events in test namespace @ 06/29/24 12:22:47.711
  STEP: listing events with field selection filtering on source @ 06/29/24 12:22:47.713
  STEP: listing events with field selection filtering on reportingController @ 06/29/24 12:22:47.716
  STEP: getting the test event @ 06/29/24 12:22:47.719
  STEP: patching the test event @ 06/29/24 12:22:47.722
  STEP: getting the test event @ 06/29/24 12:22:47.729
  STEP: updating the test event @ 06/29/24 12:22:47.731
  STEP: getting the test event @ 06/29/24 12:22:47.738
  STEP: deleting the test event @ 06/29/24 12:22:47.741
  STEP: listing events in all namespaces @ 06/29/24 12:22:47.748
  STEP: listing events in test namespace @ 06/29/24 12:22:47.757
  Jun 29 12:22:47.760: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-4756" for this suite. @ 06/29/24 12:22:47.763
â€¢ [0.103 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 06/29/24 12:22:47.771
  Jun 29 12:22:47.771: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename gc @ 06/29/24 12:22:47.772
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:22:47.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:22:47.791
  STEP: create the rc @ 06/29/24 12:22:47.796
  W0629 12:22:47.801850      18 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 06/29/24 12:22:51.922
  STEP: wait for the rc to be deleted @ 06/29/24 12:22:51.933
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 06/29/24 12:22:56.938
  STEP: Gathering metrics @ 06/29/24 12:23:26.947
  W0629 12:23:26.952519      18 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jun 29 12:23:26.952: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jun 29 12:23:26.952: INFO: Deleting pod "simpletest.rc-2fdbx" in namespace "gc-1628"
  Jun 29 12:23:26.966: INFO: Deleting pod "simpletest.rc-4djzc" in namespace "gc-1628"
  Jun 29 12:23:26.978: INFO: Deleting pod "simpletest.rc-4drvq" in namespace "gc-1628"
  Jun 29 12:23:26.989: INFO: Deleting pod "simpletest.rc-4jbk7" in namespace "gc-1628"
  Jun 29 12:23:27.003: INFO: Deleting pod "simpletest.rc-4jtk5" in namespace "gc-1628"
  Jun 29 12:23:27.019: INFO: Deleting pod "simpletest.rc-4r4qw" in namespace "gc-1628"
  Jun 29 12:23:27.031: INFO: Deleting pod "simpletest.rc-55r49" in namespace "gc-1628"
  Jun 29 12:23:27.043: INFO: Deleting pod "simpletest.rc-5gjd2" in namespace "gc-1628"
  Jun 29 12:23:27.060: INFO: Deleting pod "simpletest.rc-5nvc4" in namespace "gc-1628"
  Jun 29 12:23:27.078: INFO: Deleting pod "simpletest.rc-6bzn8" in namespace "gc-1628"
  Jun 29 12:23:27.090: INFO: Deleting pod "simpletest.rc-6gzwd" in namespace "gc-1628"
  Jun 29 12:23:27.106: INFO: Deleting pod "simpletest.rc-6nl6f" in namespace "gc-1628"
  Jun 29 12:23:27.131: INFO: Deleting pod "simpletest.rc-6q475" in namespace "gc-1628"
  Jun 29 12:23:27.144: INFO: Deleting pod "simpletest.rc-78hk6" in namespace "gc-1628"
  Jun 29 12:23:27.158: INFO: Deleting pod "simpletest.rc-78qnm" in namespace "gc-1628"
  Jun 29 12:23:27.177: INFO: Deleting pod "simpletest.rc-85227" in namespace "gc-1628"
  Jun 29 12:23:27.191: INFO: Deleting pod "simpletest.rc-8crsn" in namespace "gc-1628"
  Jun 29 12:23:27.205: INFO: Deleting pod "simpletest.rc-8g6bl" in namespace "gc-1628"
  Jun 29 12:23:27.219: INFO: Deleting pod "simpletest.rc-8rsj4" in namespace "gc-1628"
  Jun 29 12:23:27.266: INFO: Deleting pod "simpletest.rc-8wx7s" in namespace "gc-1628"
  Jun 29 12:23:27.285: INFO: Deleting pod "simpletest.rc-9j2g2" in namespace "gc-1628"
  Jun 29 12:23:27.301: INFO: Deleting pod "simpletest.rc-9qdk2" in namespace "gc-1628"
  Jun 29 12:23:27.313: INFO: Deleting pod "simpletest.rc-9vqh7" in namespace "gc-1628"
  Jun 29 12:23:27.330: INFO: Deleting pod "simpletest.rc-b475w" in namespace "gc-1628"
  Jun 29 12:23:27.344: INFO: Deleting pod "simpletest.rc-b8hbq" in namespace "gc-1628"
  Jun 29 12:23:27.355: INFO: Deleting pod "simpletest.rc-bgtr8" in namespace "gc-1628"
  Jun 29 12:23:27.368: INFO: Deleting pod "simpletest.rc-bnrdq" in namespace "gc-1628"
  Jun 29 12:23:27.382: INFO: Deleting pod "simpletest.rc-bz7vc" in namespace "gc-1628"
  Jun 29 12:23:27.400: INFO: Deleting pod "simpletest.rc-chkd5" in namespace "gc-1628"
  Jun 29 12:23:27.414: INFO: Deleting pod "simpletest.rc-d6z8s" in namespace "gc-1628"
  Jun 29 12:23:27.435: INFO: Deleting pod "simpletest.rc-dhpm4" in namespace "gc-1628"
  Jun 29 12:23:27.451: INFO: Deleting pod "simpletest.rc-dkmp2" in namespace "gc-1628"
  Jun 29 12:23:27.471: INFO: Deleting pod "simpletest.rc-dtwfx" in namespace "gc-1628"
  Jun 29 12:23:27.489: INFO: Deleting pod "simpletest.rc-f4brt" in namespace "gc-1628"
  Jun 29 12:23:27.512: INFO: Deleting pod "simpletest.rc-f4hds" in namespace "gc-1628"
  Jun 29 12:23:27.624: INFO: Deleting pod "simpletest.rc-f7n86" in namespace "gc-1628"
  Jun 29 12:23:27.639: INFO: Deleting pod "simpletest.rc-fdv6l" in namespace "gc-1628"
  Jun 29 12:23:27.661: INFO: Deleting pod "simpletest.rc-flmsm" in namespace "gc-1628"
  Jun 29 12:23:27.682: INFO: Deleting pod "simpletest.rc-fqvwv" in namespace "gc-1628"
  Jun 29 12:23:27.701: INFO: Deleting pod "simpletest.rc-g9dl9" in namespace "gc-1628"
  Jun 29 12:23:27.713: INFO: Deleting pod "simpletest.rc-gf68b" in namespace "gc-1628"
  Jun 29 12:23:27.725: INFO: Deleting pod "simpletest.rc-ghbs8" in namespace "gc-1628"
  Jun 29 12:23:27.736: INFO: Deleting pod "simpletest.rc-gkrg5" in namespace "gc-1628"
  Jun 29 12:23:27.752: INFO: Deleting pod "simpletest.rc-h4jld" in namespace "gc-1628"
  Jun 29 12:23:27.765: INFO: Deleting pod "simpletest.rc-h4p76" in namespace "gc-1628"
  Jun 29 12:23:27.785: INFO: Deleting pod "simpletest.rc-h646f" in namespace "gc-1628"
  Jun 29 12:23:27.802: INFO: Deleting pod "simpletest.rc-h7hg5" in namespace "gc-1628"
  Jun 29 12:23:27.818: INFO: Deleting pod "simpletest.rc-hpccv" in namespace "gc-1628"
  Jun 29 12:23:27.831: INFO: Deleting pod "simpletest.rc-hqm6z" in namespace "gc-1628"
  Jun 29 12:23:27.851: INFO: Deleting pod "simpletest.rc-j2k5m" in namespace "gc-1628"
  Jun 29 12:23:27.863: INFO: Deleting pod "simpletest.rc-jkmxp" in namespace "gc-1628"
  Jun 29 12:23:27.875: INFO: Deleting pod "simpletest.rc-jv4h6" in namespace "gc-1628"
  Jun 29 12:23:27.889: INFO: Deleting pod "simpletest.rc-jzkmn" in namespace "gc-1628"
  Jun 29 12:23:27.902: INFO: Deleting pod "simpletest.rc-knzfm" in namespace "gc-1628"
  Jun 29 12:23:27.915: INFO: Deleting pod "simpletest.rc-kwzjt" in namespace "gc-1628"
  Jun 29 12:23:27.927: INFO: Deleting pod "simpletest.rc-lbjs6" in namespace "gc-1628"
  Jun 29 12:23:27.938: INFO: Deleting pod "simpletest.rc-lbvjp" in namespace "gc-1628"
  Jun 29 12:23:27.952: INFO: Deleting pod "simpletest.rc-lhhs5" in namespace "gc-1628"
  Jun 29 12:23:27.963: INFO: Deleting pod "simpletest.rc-lpj7s" in namespace "gc-1628"
  Jun 29 12:23:27.976: INFO: Deleting pod "simpletest.rc-mw6zv" in namespace "gc-1628"
  Jun 29 12:23:27.988: INFO: Deleting pod "simpletest.rc-mwxhx" in namespace "gc-1628"
  Jun 29 12:23:28.007: INFO: Deleting pod "simpletest.rc-mxdvr" in namespace "gc-1628"
  Jun 29 12:23:28.021: INFO: Deleting pod "simpletest.rc-mxvqw" in namespace "gc-1628"
  Jun 29 12:23:28.039: INFO: Deleting pod "simpletest.rc-mzfqf" in namespace "gc-1628"
  Jun 29 12:23:28.051: INFO: Deleting pod "simpletest.rc-mzmz7" in namespace "gc-1628"
  Jun 29 12:23:28.066: INFO: Deleting pod "simpletest.rc-p9jd2" in namespace "gc-1628"
  Jun 29 12:23:28.085: INFO: Deleting pod "simpletest.rc-p9mzk" in namespace "gc-1628"
  Jun 29 12:23:28.102: INFO: Deleting pod "simpletest.rc-pd5g2" in namespace "gc-1628"
  Jun 29 12:23:28.113: INFO: Deleting pod "simpletest.rc-qgdbw" in namespace "gc-1628"
  Jun 29 12:23:28.127: INFO: Deleting pod "simpletest.rc-qlvjm" in namespace "gc-1628"
  Jun 29 12:23:28.140: INFO: Deleting pod "simpletest.rc-qsjls" in namespace "gc-1628"
  Jun 29 12:23:28.153: INFO: Deleting pod "simpletest.rc-qxjqc" in namespace "gc-1628"
  Jun 29 12:23:28.186: INFO: Deleting pod "simpletest.rc-qz6kg" in namespace "gc-1628"
  Jun 29 12:23:28.207: INFO: Deleting pod "simpletest.rc-r7f8k" in namespace "gc-1628"
  Jun 29 12:23:28.273: INFO: Deleting pod "simpletest.rc-r7ssn" in namespace "gc-1628"
  Jun 29 12:23:28.301: INFO: Deleting pod "simpletest.rc-rljw2" in namespace "gc-1628"
  Jun 29 12:23:28.360: INFO: Deleting pod "simpletest.rc-rnd2q" in namespace "gc-1628"
  Jun 29 12:23:28.418: INFO: Deleting pod "simpletest.rc-shgx9" in namespace "gc-1628"
  Jun 29 12:23:28.460: INFO: Deleting pod "simpletest.rc-svkht" in namespace "gc-1628"
  Jun 29 12:23:28.509: INFO: Deleting pod "simpletest.rc-szss9" in namespace "gc-1628"
  Jun 29 12:23:28.555: INFO: Deleting pod "simpletest.rc-t4ppx" in namespace "gc-1628"
  Jun 29 12:23:28.603: INFO: Deleting pod "simpletest.rc-thq84" in namespace "gc-1628"
  Jun 29 12:23:28.653: INFO: Deleting pod "simpletest.rc-tjrfk" in namespace "gc-1628"
  Jun 29 12:23:28.710: INFO: Deleting pod "simpletest.rc-tvp2t" in namespace "gc-1628"
  Jun 29 12:23:28.756: INFO: Deleting pod "simpletest.rc-tzgfw" in namespace "gc-1628"
  Jun 29 12:23:28.812: INFO: Deleting pod "simpletest.rc-vbdvn" in namespace "gc-1628"
  Jun 29 12:23:28.862: INFO: Deleting pod "simpletest.rc-vf4jc" in namespace "gc-1628"
  Jun 29 12:23:28.910: INFO: Deleting pod "simpletest.rc-vsrwj" in namespace "gc-1628"
  Jun 29 12:23:28.958: INFO: Deleting pod "simpletest.rc-vt98w" in namespace "gc-1628"
  Jun 29 12:23:29.008: INFO: Deleting pod "simpletest.rc-wn28d" in namespace "gc-1628"
  Jun 29 12:23:29.052: INFO: Deleting pod "simpletest.rc-wvv5f" in namespace "gc-1628"
  Jun 29 12:23:29.107: INFO: Deleting pod "simpletest.rc-wvxvl" in namespace "gc-1628"
  Jun 29 12:23:29.158: INFO: Deleting pod "simpletest.rc-x2z6n" in namespace "gc-1628"
  Jun 29 12:23:29.215: INFO: Deleting pod "simpletest.rc-xgnrb" in namespace "gc-1628"
  Jun 29 12:23:29.252: INFO: Deleting pod "simpletest.rc-xlqk5" in namespace "gc-1628"
  Jun 29 12:23:29.312: INFO: Deleting pod "simpletest.rc-z6tgt" in namespace "gc-1628"
  Jun 29 12:23:29.406: INFO: Deleting pod "simpletest.rc-z79gf" in namespace "gc-1628"
  Jun 29 12:23:29.423: INFO: Deleting pod "simpletest.rc-zfvv4" in namespace "gc-1628"
  Jun 29 12:23:29.459: INFO: Deleting pod "simpletest.rc-zk4h7" in namespace "gc-1628"
  Jun 29 12:23:29.504: INFO: Deleting pod "simpletest.rc-ztj9g" in namespace "gc-1628"
  Jun 29 12:23:29.556: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1628" for this suite. @ 06/29/24 12:23:29.593
â€¢ [41.874 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 06/29/24 12:23:29.645
  Jun 29 12:23:29.645: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename downward-api @ 06/29/24 12:23:29.646
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:23:29.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:23:29.675
  STEP: Creating a pod to test downward api env vars @ 06/29/24 12:23:29.683
  STEP: Saw pod success @ 06/29/24 12:23:35.715
  Jun 29 12:23:35.718: INFO: Trying to get logs from node ip-172-31-94-98 pod downward-api-af80e6db-9710-442f-abc1-27de5f86b5a4 container dapi-container: <nil>
  STEP: delete the pod @ 06/29/24 12:23:35.726
  Jun 29 12:23:35.741: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3690" for this suite. @ 06/29/24 12:23:35.744
â€¢ [6.105 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 06/29/24 12:23:35.75
  Jun 29 12:23:35.750: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename webhook @ 06/29/24 12:23:35.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:23:35.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:23:35.77
  STEP: Setting up server cert @ 06/29/24 12:23:35.791
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/29/24 12:23:36.056
  STEP: Deploying the webhook pod @ 06/29/24 12:23:36.064
  STEP: Wait for the deployment to be ready @ 06/29/24 12:23:36.078
  Jun 29 12:23:36.087: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/29/24 12:23:38.098
  STEP: Verifying the service has paired with the endpoint @ 06/29/24 12:23:38.108
  Jun 29 12:23:39.109: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 06/29/24 12:23:39.117
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 06/29/24 12:23:39.13
  STEP: Creating a dummy validating-webhook-configuration object @ 06/29/24 12:23:39.141
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 06/29/24 12:23:39.148
  STEP: Creating a dummy mutating-webhook-configuration object @ 06/29/24 12:23:39.155
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 06/29/24 12:23:39.165
  Jun 29 12:23:39.222: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3862" for this suite. @ 06/29/24 12:23:39.225
  STEP: Destroying namespace "webhook-markers-9531" for this suite. @ 06/29/24 12:23:39.231
â€¢ [3.487 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 06/29/24 12:23:39.237
  Jun 29 12:23:39.237: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename containers @ 06/29/24 12:23:39.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:23:39.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:23:39.259
  STEP: Creating a pod to test override arguments @ 06/29/24 12:23:39.26
  STEP: Saw pod success @ 06/29/24 12:23:43.338
  Jun 29 12:23:43.342: INFO: Trying to get logs from node ip-172-31-94-98 pod client-containers-a8cc0694-4e2f-433c-9a36-a4a5e89f7836 container agnhost-container: <nil>
  STEP: delete the pod @ 06/29/24 12:23:43.349
  Jun 29 12:23:43.364: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-4202" for this suite. @ 06/29/24 12:23:43.367
â€¢ [4.135 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:397
  STEP: Creating a kubernetes client @ 06/29/24 12:23:43.373
  Jun 29 12:23:43.373: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename resourcequota @ 06/29/24 12:23:43.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:23:43.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:23:43.391
  STEP: Counting existing ResourceQuota @ 06/29/24 12:23:43.392
  STEP: Creating a ResourceQuota @ 06/29/24 12:23:48.397
  STEP: Ensuring resource quota status is calculated @ 06/29/24 12:23:48.403
  STEP: Creating a ReplicationController @ 06/29/24 12:23:50.408
  STEP: Ensuring resource quota status captures replication controller creation @ 06/29/24 12:23:50.419
  STEP: Deleting a ReplicationController @ 06/29/24 12:23:52.424
  STEP: Ensuring resource quota status released usage @ 06/29/24 12:23:52.431
  Jun 29 12:23:54.435: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5488" for this suite. @ 06/29/24 12:23:54.439
â€¢ [11.071 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3129
  STEP: Creating a kubernetes client @ 06/29/24 12:23:54.445
  Jun 29 12:23:54.445: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename services @ 06/29/24 12:23:54.445
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:23:54.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:23:54.467
  STEP: fetching services @ 06/29/24 12:23:54.469
  Jun 29 12:23:54.472: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2321" for this suite. @ 06/29/24 12:23:54.475
â€¢ [0.037 seconds]
------------------------------
S
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:170
  STEP: Creating a kubernetes client @ 06/29/24 12:23:54.481
  Jun 29 12:23:54.481: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename configmap @ 06/29/24 12:23:54.482
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:23:54.498
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:23:54.499
  STEP: creating a ConfigMap @ 06/29/24 12:23:54.501
  STEP: fetching the ConfigMap @ 06/29/24 12:23:54.506
  STEP: patching the ConfigMap @ 06/29/24 12:23:54.509
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 06/29/24 12:23:54.522
  STEP: deleting the ConfigMap by collection with a label selector @ 06/29/24 12:23:54.527
  STEP: listing all ConfigMaps in test namespace @ 06/29/24 12:23:54.535
  Jun 29 12:23:54.538: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-442" for this suite. @ 06/29/24 12:23:54.542
â€¢ [0.068 seconds]
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 06/29/24 12:23:54.549
  Jun 29 12:23:54.549: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename container-probe @ 06/29/24 12:23:54.55
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:23:54.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:23:54.571
  STEP: Creating pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169 @ 06/29/24 12:23:54.573
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/29/24 12:23:56.593
  Jun 29 12:23:56.595: INFO: Initial restart count of pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 is 0
  Jun 29 12:23:56.598: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:23:58.605: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:24:00.609: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:24:02.621: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:24:04.626: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:24:06.631: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:24:08.635: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:24:10.641: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:24:12.649: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:24:14.655: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:24:16.659: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:24:18.664: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:24:20.670: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:24:22.675: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:24:24.680: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:24:26.685: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:24:28.689: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:24:30.694: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:24:32.698: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:24:34.703: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:24:36.708: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:24:38.713: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:24:40.717: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:24:42.723: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:24:44.727: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:24:46.732: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:24:48.737: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:24:50.741: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:24:52.747: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:24:54.751: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:24:56.757: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:24:58.763: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:25:00.767: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:25:02.772: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:25:04.777: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:25:06.781: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:25:08.787: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:25:10.792: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:25:12.797: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:25:14.802: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:25:16.807: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:25:18.812: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:25:20.818: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:25:22.822: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:25:24.826: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:25:26.832: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:25:28.837: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:25:30.842: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:25:32.846: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:25:34.851: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:25:36.857: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:25:38.861: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:25:40.866: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:25:42.870: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:25:44.875: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:25:46.880: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:25:48.884: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:25:50.889: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:25:52.893: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:25:54.898: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:25:56.904: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:25:58.909: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:26:00.913: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:26:02.918: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:26:04.922: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:26:06.928: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:26:08.933: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:26:10.937: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:26:12.942: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:26:14.946: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:26:16.952: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:26:18.956: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:26:20.960: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:26:22.965: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:26:24.969: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:26:26.975: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:26:28.981: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:26:30.984: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:26:32.990: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:26:34.994: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:26:36.998: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:26:39.005: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:26:41.008: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:26:43.014: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:26:45.017: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:26:47.023: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:26:49.028: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:26:51.033: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:26:53.036: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:26:55.041: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:26:57.046: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:26:59.051: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:27:01.056: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:27:03.060: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:27:05.065: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:27:07.070: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:27:09.075: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:27:11.079: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:27:13.083: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:27:15.087: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:27:17.093: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:27:19.097: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:27:21.102: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:27:23.108: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:27:25.112: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:27:27.117: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:27:29.124: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:27:31.128: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:27:33.134: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:27:35.137: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:27:37.142: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:27:39.148: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:27:41.152: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:27:43.155: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:27:45.160: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:27:47.165: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:27:49.170: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:27:51.175: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:27:53.178: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  Jun 29 12:27:55.183: INFO: Get pod liveness-c3ec89f6-7b10-46a6-a894-64c9b841d319 in namespace container-probe-8169
  STEP: deleting the pod @ 06/29/24 12:27:57.183
  Jun 29 12:27:57.201: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8169" for this suite. @ 06/29/24 12:27:57.205
â€¢ [242.663 seconds]
------------------------------
S
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 06/29/24 12:27:57.213
  Jun 29 12:27:57.213: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename services @ 06/29/24 12:27:57.213
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:27:57.232
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:27:57.234
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-1438 @ 06/29/24 12:27:57.236
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 06/29/24 12:27:57.253
  STEP: creating service externalsvc in namespace services-1438 @ 06/29/24 12:27:57.253
  STEP: creating replication controller externalsvc in namespace services-1438 @ 06/29/24 12:27:57.265
  I0629 12:27:57.274083      18 runners.go:197] Created replication controller with name: externalsvc, namespace: services-1438, replica count: 2
  I0629 12:28:00.325719      18 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 06/29/24 12:28:00.33
  Jun 29 12:28:00.346: INFO: Creating new exec pod
  Jun 29 12:28:02.363: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-1438 exec execpodbxf57 -- /bin/sh -x -c nslookup nodeport-service.services-1438.svc.cluster.local'
  Jun 29 12:28:02.481: INFO: stderr: "+ nslookup nodeport-service.services-1438.svc.cluster.local\n"
  Jun 29 12:28:02.481: INFO: stdout: "Server:\t\t10.152.183.165\nAddress:\t10.152.183.165#53\n\nnodeport-service.services-1438.svc.cluster.local\tcanonical name = externalsvc.services-1438.svc.cluster.local.\nName:\texternalsvc.services-1438.svc.cluster.local\nAddress: 10.152.183.190\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-1438, will wait for the garbage collector to delete the pods @ 06/29/24 12:28:02.482
  Jun 29 12:28:02.543: INFO: Deleting ReplicationController externalsvc took: 7.724546ms
  Jun 29 12:28:02.643: INFO: Terminating ReplicationController externalsvc pods took: 100.395004ms
  Jun 29 12:28:05.863: INFO: Cleaning up the NodePort to ExternalName test service
  Jun 29 12:28:05.875: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1438" for this suite. @ 06/29/24 12:28:05.878
â€¢ [8.671 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 06/29/24 12:28:05.884
  Jun 29 12:28:05.884: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename projected @ 06/29/24 12:28:05.885
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:28:05.898
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:28:05.9
  STEP: Creating a pod to test downward API volume plugin @ 06/29/24 12:28:05.901
  STEP: Saw pod success @ 06/29/24 12:28:09.923
  Jun 29 12:28:09.926: INFO: Trying to get logs from node ip-172-31-94-98 pod downwardapi-volume-4c38c43c-b0a0-4146-a4b0-c6f043b3c922 container client-container: <nil>
  STEP: delete the pod @ 06/29/24 12:28:09.943
  Jun 29 12:28:09.957: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6021" for this suite. @ 06/29/24 12:28:09.96
â€¢ [4.082 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 06/29/24 12:28:09.966
  Jun 29 12:28:09.966: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename discovery @ 06/29/24 12:28:09.967
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:28:09.983
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:28:09.985
  STEP: Setting up server cert @ 06/29/24 12:28:09.987
  STEP: Requesting APIResourceList from "/api/v1" @ 06/29/24 12:28:10.303
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 06/29/24 12:28:10.304
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 06/29/24 12:28:10.305
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 06/29/24 12:28:10.306
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 06/29/24 12:28:10.306
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 06/29/24 12:28:10.307
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 06/29/24 12:28:10.308
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 06/29/24 12:28:10.308
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 06/29/24 12:28:10.309
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 06/29/24 12:28:10.309
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 06/29/24 12:28:10.31
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 06/29/24 12:28:10.311
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 06/29/24 12:28:10.311
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 06/29/24 12:28:10.312
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 06/29/24 12:28:10.312
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 06/29/24 12:28:10.313
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 06/29/24 12:28:10.314
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 06/29/24 12:28:10.314
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 06/29/24 12:28:10.315
  Jun 29 12:28:10.315: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-3387" for this suite. @ 06/29/24 12:28:10.319
â€¢ [0.358 seconds]
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 06/29/24 12:28:10.325
  Jun 29 12:28:10.325: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename daemonsets @ 06/29/24 12:28:10.325
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:28:10.35
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:28:10.352
  STEP: Creating simple DaemonSet "daemon-set" @ 06/29/24 12:28:10.37
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/29/24 12:28:10.374
  Jun 29 12:28:10.377: INFO: DaemonSet pods can't tolerate node ip-172-31-15-151 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 12:28:10.377: INFO: DaemonSet pods can't tolerate node ip-172-31-22-17 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 12:28:10.381: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 29 12:28:10.381: INFO: Node ip-172-31-10-28 is running 0 daemon pod, expected 1
  Jun 29 12:28:11.378: INFO: DaemonSet pods can't tolerate node ip-172-31-15-151 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 12:28:11.378: INFO: DaemonSet pods can't tolerate node ip-172-31-22-17 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 12:28:11.382: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun 29 12:28:11.382: INFO: Node ip-172-31-10-28 is running 0 daemon pod, expected 1
  Jun 29 12:28:12.380: INFO: DaemonSet pods can't tolerate node ip-172-31-15-151 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 12:28:12.380: INFO: DaemonSet pods can't tolerate node ip-172-31-22-17 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 12:28:12.383: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun 29 12:28:12.383: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 06/29/24 12:28:12.385
  STEP: DeleteCollection of the DaemonSets @ 06/29/24 12:28:12.389
  STEP: Verify that ReplicaSets have been deleted @ 06/29/24 12:28:12.397
  Jun 29 12:28:12.406: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"12338"},"items":null}

  Jun 29 12:28:12.412: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"12339"},"items":[{"metadata":{"name":"daemon-set-8kmn4","generateName":"daemon-set-","namespace":"daemonsets-1338","uid":"175a5e3c-a3e3-4615-8026-428559c2ae49","resourceVersion":"12339","creationTimestamp":"2024-06-29T12:28:10Z","deletionTimestamp":"2024-06-29T12:28:42Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"4452bf2d-6db3-43e4-a111-c08e59baab59","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-06-29T12:28:10Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"4452bf2d-6db3-43e4-a111-c08e59baab59\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-06-29T12:28:11Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.183.87\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-hprxd","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-hprxd","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-94-98","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-94-98"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-29T12:28:11Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-29T12:28:10Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-29T12:28:11Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-29T12:28:11Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-29T12:28:10Z"}],"hostIP":"172.31.94.98","hostIPs":[{"ip":"172.31.94.98"}],"podIP":"192.168.183.87","podIPs":[{"ip":"192.168.183.87"}],"startTime":"2024-06-29T12:28:10Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-06-29T12:28:10Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://fd40d7be8b4aab6e762fb77e2968b2a749405702a4a276bf22c553979d0ff194","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-m624m","generateName":"daemon-set-","namespace":"daemonsets-1338","uid":"7ca7635b-6a02-4ddf-95cd-6257fc6d28c1","resourceVersion":"12334","creationTimestamp":"2024-06-29T12:28:10Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"4452bf2d-6db3-43e4-a111-c08e59baab59","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-06-29T12:28:10Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"4452bf2d-6db3-43e4-a111-c08e59baab59\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-06-29T12:28:11Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.41.78\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-blhsg","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-blhsg","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-10-28","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-10-28"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-29T12:28:11Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-29T12:28:10Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-29T12:28:11Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-29T12:28:11Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-29T12:28:10Z"}],"hostIP":"172.31.10.28","hostIPs":[{"ip":"172.31.10.28"}],"podIP":"192.168.41.78","podIPs":[{"ip":"192.168.41.78"}],"startTime":"2024-06-29T12:28:10Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-06-29T12:28:10Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://d90eed80cf6d6c823974c1139f47f39d01bdfb87e6b948da82f9a6e17ac66680","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-tlbzc","generateName":"daemon-set-","namespace":"daemonsets-1338","uid":"7e49d253-4728-4840-ba15-5e2255b76b22","resourceVersion":"12330","creationTimestamp":"2024-06-29T12:28:10Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"4452bf2d-6db3-43e4-a111-c08e59baab59","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-06-29T12:28:10Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"4452bf2d-6db3-43e4-a111-c08e59baab59\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-06-29T12:28:11Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.109.30\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-5x6wz","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-5x6wz","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-37-211","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-37-211"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-29T12:28:11Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-29T12:28:10Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-29T12:28:11Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-29T12:28:11Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-29T12:28:10Z"}],"hostIP":"172.31.37.211","hostIPs":[{"ip":"172.31.37.211"}],"podIP":"192.168.109.30","podIPs":[{"ip":"192.168.109.30"}],"startTime":"2024-06-29T12:28:10Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-06-29T12:28:10Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://011abc10936fd17e9fc5e8563c8eb0b6f04eff4c18d8391953bb340d072facce","started":true}],"qosClass":"BestEffort"}}]}

  Jun 29 12:28:12.426: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1338" for this suite. @ 06/29/24 12:28:12.428
â€¢ [2.108 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1084
  STEP: Creating a kubernetes client @ 06/29/24 12:28:12.433
  Jun 29 12:28:12.433: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename kubectl @ 06/29/24 12:28:12.434
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:28:12.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:28:12.461
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 06/29/24 12:28:12.462
  Jun 29 12:28:12.463: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-7669 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Jun 29 12:28:12.512: INFO: stderr: ""
  Jun 29 12:28:12.513: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 06/29/24 12:28:12.513
  Jun 29 12:28:12.513: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-7669 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  Jun 29 12:28:12.561: INFO: stderr: ""
  Jun 29 12:28:12.561: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 06/29/24 12:28:12.561
  Jun 29 12:28:12.564: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-7669 delete pods e2e-test-httpd-pod'
  Jun 29 12:28:14.099: INFO: stderr: ""
  Jun 29 12:28:14.099: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Jun 29 12:28:14.099: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7669" for this suite. @ 06/29/24 12:28:14.103
â€¢ [1.677 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2177
  STEP: Creating a kubernetes client @ 06/29/24 12:28:14.111
  Jun 29 12:28:14.111: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename services @ 06/29/24 12:28:14.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:28:14.128
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:28:14.13
  STEP: creating service in namespace services-7976 @ 06/29/24 12:28:14.131
  STEP: creating service affinity-clusterip in namespace services-7976 @ 06/29/24 12:28:14.131
  STEP: creating replication controller affinity-clusterip in namespace services-7976 @ 06/29/24 12:28:14.139
  I0629 12:28:14.147445      18 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-7976, replica count: 3
  I0629 12:28:17.198720      18 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0629 12:28:20.199668      18 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun 29 12:28:20.209: INFO: Creating new exec pod
  Jun 29 12:28:23.226: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-7976 exec execpod-affinityglmf8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  Jun 29 12:28:23.315: INFO: stderr: "+ nc -v -t -w 2 affinity-clusterip 80\n+ echo hostName\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  Jun 29 12:28:23.315: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 29 12:28:23.315: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-7976 exec execpod-affinityglmf8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.104 80'
  Jun 29 12:28:23.405: INFO: stderr: "+ nc -v -t -w 2 10.152.183.104 80\n+ echo hostName\nConnection to 10.152.183.104 80 port [tcp/http] succeeded!\n"
  Jun 29 12:28:23.405: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 29 12:28:23.405: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-7976 exec execpod-affinityglmf8 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.104:80/ ; done'
  Jun 29 12:28:23.559: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.104:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.104:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.104:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.104:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.104:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.104:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.104:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.104:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.104:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.104:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.104:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.104:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.104:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.104:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.104:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.104:80/\n"
  Jun 29 12:28:23.559: INFO: stdout: "\naffinity-clusterip-kqc8r\naffinity-clusterip-kqc8r\naffinity-clusterip-kqc8r\naffinity-clusterip-kqc8r\naffinity-clusterip-kqc8r\naffinity-clusterip-kqc8r\naffinity-clusterip-kqc8r\naffinity-clusterip-kqc8r\naffinity-clusterip-kqc8r\naffinity-clusterip-kqc8r\naffinity-clusterip-kqc8r\naffinity-clusterip-kqc8r\naffinity-clusterip-kqc8r\naffinity-clusterip-kqc8r\naffinity-clusterip-kqc8r\naffinity-clusterip-kqc8r"
  Jun 29 12:28:23.559: INFO: Received response from host: affinity-clusterip-kqc8r
  Jun 29 12:28:23.559: INFO: Received response from host: affinity-clusterip-kqc8r
  Jun 29 12:28:23.559: INFO: Received response from host: affinity-clusterip-kqc8r
  Jun 29 12:28:23.559: INFO: Received response from host: affinity-clusterip-kqc8r
  Jun 29 12:28:23.559: INFO: Received response from host: affinity-clusterip-kqc8r
  Jun 29 12:28:23.559: INFO: Received response from host: affinity-clusterip-kqc8r
  Jun 29 12:28:23.559: INFO: Received response from host: affinity-clusterip-kqc8r
  Jun 29 12:28:23.559: INFO: Received response from host: affinity-clusterip-kqc8r
  Jun 29 12:28:23.559: INFO: Received response from host: affinity-clusterip-kqc8r
  Jun 29 12:28:23.559: INFO: Received response from host: affinity-clusterip-kqc8r
  Jun 29 12:28:23.559: INFO: Received response from host: affinity-clusterip-kqc8r
  Jun 29 12:28:23.559: INFO: Received response from host: affinity-clusterip-kqc8r
  Jun 29 12:28:23.559: INFO: Received response from host: affinity-clusterip-kqc8r
  Jun 29 12:28:23.559: INFO: Received response from host: affinity-clusterip-kqc8r
  Jun 29 12:28:23.559: INFO: Received response from host: affinity-clusterip-kqc8r
  Jun 29 12:28:23.559: INFO: Received response from host: affinity-clusterip-kqc8r
  Jun 29 12:28:23.559: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-7976, will wait for the garbage collector to delete the pods @ 06/29/24 12:28:23.574
  Jun 29 12:28:23.635: INFO: Deleting ReplicationController affinity-clusterip took: 7.116345ms
  Jun 29 12:28:23.735: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.106388ms
  Jun 29 12:28:27.451: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7976" for this suite. @ 06/29/24 12:28:27.455
â€¢ [13.350 seconds]
------------------------------
S
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3649
  STEP: Creating a kubernetes client @ 06/29/24 12:28:27.461
  Jun 29 12:28:27.461: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename services @ 06/29/24 12:28:27.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:28:27.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:28:27.483
  STEP: creating service multiprotocol-test in namespace services-1720 @ 06/29/24 12:28:27.485
  STEP: creating pod pod1 in namespace services-1720 @ 06/29/24 12:28:27.495
  STEP: Creating pod pod1 in namespace services-1720 @ 06/29/24 12:28:27.495
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-1720 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 06/29/24 12:28:29.515
  Jun 29 12:28:29.524: INFO: successfully validated that service multiprotocol-test in namespace services-1720 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 06/29/24 12:28:29.524
  Jun 29 12:28:29.524: INFO: Creating new exec pod
  Jun 29 12:28:31.538: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-1720 exec execpodf77rc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.93 80'
  Jun 29 12:28:31.639: INFO: stderr: "+ nc -v -t -w 2 10.152.183.93 80\n+ echo hostName\nConnection to 10.152.183.93 80 port [tcp/http] succeeded!\n"
  Jun 29 12:28:31.640: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 29 12:28:31.640: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-1720 exec execpodf77rc -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.93 80'
  Jun 29 12:28:35.731: INFO: stderr: "+ nc -v -u -w 2 10.152.183.93 80\n+ echo hostName\nConnection to 10.152.183.93 80 port [udp/*] succeeded!\n"
  Jun 29 12:28:35.731: INFO: stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 06/29/24 12:28:35.731
  Jun 29 12:28:35.742: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-1720 exec execpodf77rc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.93 80'
  Jun 29 12:28:35.839: INFO: stderr: "+ nc -v -t -w 2 10.152.183.93 80\n+ echo hostName\nConnection to 10.152.183.93 80 port [tcp/http] succeeded!\n"
  Jun 29 12:28:35.839: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 29 12:28:35.839: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-1720 exec execpodf77rc -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.93 80'
  Jun 29 12:28:39.931: INFO: stderr: "+ nc -v -u -w 2 10.152.183.93 80\n+ echo hostName\nConnection to 10.152.183.93 80 port [udp/*] succeeded!\n"
  Jun 29 12:28:39.931: INFO: stdout: ""
  Jun 29 12:28:39.931: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-1720 exec execpodf77rc -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.93 80'
  Jun 29 12:28:44.033: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.93 80\nConnection to 10.152.183.93 80 port [udp/*] succeeded!\n"
  Jun 29 12:28:44.033: INFO: stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 06/29/24 12:28:44.033
  Jun 29 12:28:44.042: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-1720 exec execpodf77rc -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.93 80'
  Jun 29 12:28:48.143: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.93 80\nConnection to 10.152.183.93 80 port [udp/*] succeeded!\n"
  Jun 29 12:28:48.143: INFO: stdout: "pod1"
  Jun 29 12:28:48.143: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-1720 exec execpodf77rc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.93 80'
  Jun 29 12:28:50.235: INFO: rc: 1
  Jun 29 12:28:50.235: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-1720 exec execpodf77rc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.93 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.152.183.93 80
  + echo hostName
  nc: connect to 10.152.183.93 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Jun 29 12:28:50.235: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-1720 exec execpodf77rc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.93 80'
  Jun 29 12:28:52.331: INFO: rc: 1
  Jun 29 12:28:52.331: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-1720 exec execpodf77rc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.93 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.93 80
  nc: connect to 10.152.183.93 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Jun 29 12:28:52.331: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-1720 exec execpodf77rc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.93 80'
  Jun 29 12:28:54.423: INFO: rc: 1
  Jun 29 12:28:54.423: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-1720 exec execpodf77rc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.93 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.152.183.93 80
  + echo hostName
  nc: connect to 10.152.183.93 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Jun 29 12:28:54.423: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1720" for this suite. @ 06/29/24 12:28:54.427
â€¢ [26.972 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 06/29/24 12:28:54.433
  Jun 29 12:28:54.433: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename container-runtime @ 06/29/24 12:28:54.434
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:28:54.451
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:28:54.453
  STEP: create the container @ 06/29/24 12:28:54.455
  W0629 12:28:54.464917      18 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 06/29/24 12:28:54.465
  STEP: get the container status @ 06/29/24 12:28:56.476
  STEP: the container should be terminated @ 06/29/24 12:28:56.479
  STEP: the termination message should be set @ 06/29/24 12:28:56.479
  Jun 29 12:28:56.479: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 06/29/24 12:28:56.479
  Jun 29 12:28:56.496: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7502" for this suite. @ 06/29/24 12:28:56.499
â€¢ [2.071 seconds]
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:349
  STEP: Creating a kubernetes client @ 06/29/24 12:28:56.504
  Jun 29 12:28:56.504: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename security-context-test @ 06/29/24 12:28:56.505
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:28:56.523
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:28:56.525
  Jun 29 12:29:00.551: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-4861" for this suite. @ 06/29/24 12:29:00.555
â€¢ [4.058 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 06/29/24 12:29:00.562
  Jun 29 12:29:00.562: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename endpointslice @ 06/29/24 12:29:00.563
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:29:00.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:29:00.582
  Jun 29 12:29:04.647: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-1354" for this suite. @ 06/29/24 12:29:04.649
â€¢ [4.094 seconds]
------------------------------
SS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 06/29/24 12:29:04.656
  Jun 29 12:29:04.656: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename container-runtime @ 06/29/24 12:29:04.657
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:29:04.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:29:04.683
  STEP: create the container @ 06/29/24 12:29:04.685
  W0629 12:29:04.695356      18 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 06/29/24 12:29:04.695
  STEP: get the container status @ 06/29/24 12:29:07.711
  STEP: the container should be terminated @ 06/29/24 12:29:07.715
  STEP: the termination message should be set @ 06/29/24 12:29:07.715
  Jun 29 12:29:07.715: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 06/29/24 12:29:07.715
  Jun 29 12:29:07.741: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2669" for this suite. @ 06/29/24 12:29:07.745
â€¢ [3.096 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:408
  STEP: Creating a kubernetes client @ 06/29/24 12:29:07.753
  Jun 29 12:29:07.753: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename job @ 06/29/24 12:29:07.753
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:29:07.77
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:29:07.772
  STEP: Creating Indexed job @ 06/29/24 12:29:07.774
  STEP: Ensuring job reaches completions @ 06/29/24 12:29:07.778
  STEP: Ensuring pods with index for job exist @ 06/29/24 12:29:15.784
  Jun 29 12:29:15.789: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5371" for this suite. @ 06/29/24 12:29:15.792
â€¢ [8.046 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 06/29/24 12:29:15.799
  Jun 29 12:29:15.799: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename configmap @ 06/29/24 12:29:15.8
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:29:15.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:29:15.821
  STEP: Creating configMap with name configmap-test-volume-map-80f930c2-af30-410a-b685-217eff75996f @ 06/29/24 12:29:15.823
  STEP: Creating a pod to test consume configMaps @ 06/29/24 12:29:15.829
  STEP: Saw pod success @ 06/29/24 12:29:19.85
  Jun 29 12:29:19.852: INFO: Trying to get logs from node ip-172-31-94-98 pod pod-configmaps-75797a57-d443-4396-8d3f-4fad6482c3b1 container agnhost-container: <nil>
  STEP: delete the pod @ 06/29/24 12:29:19.858
  Jun 29 12:29:19.873: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4366" for this suite. @ 06/29/24 12:29:19.876
â€¢ [4.082 seconds]
------------------------------
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:962
  STEP: Creating a kubernetes client @ 06/29/24 12:29:19.882
  Jun 29 12:29:19.882: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename statefulset @ 06/29/24 12:29:19.882
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:29:19.899
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:29:19.901
  STEP: Creating service test in namespace statefulset-2719 @ 06/29/24 12:29:19.903
  Jun 29 12:29:19.917: INFO: Found 0 stateful pods, waiting for 1
  Jun 29 12:29:29.926: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 06/29/24 12:29:29.934
  W0629 12:29:29.942385      18 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  Jun 29 12:29:29.948: INFO: Found 1 stateful pods, waiting for 2
  Jun 29 12:29:39.949: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun 29 12:29:39.949: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 06/29/24 12:29:39.956
  STEP: Delete all of the StatefulSets @ 06/29/24 12:29:39.959
  STEP: Verify that StatefulSets have been deleted @ 06/29/24 12:29:39.966
  Jun 29 12:29:39.968: INFO: Deleting all statefulset in ns statefulset-2719
  Jun 29 12:29:39.980: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2719" for this suite. @ 06/29/24 12:29:39.984
â€¢ [20.108 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 06/29/24 12:29:39.99
  Jun 29 12:29:39.990: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/29/24 12:29:39.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:29:40.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:29:40.012
  Jun 29 12:29:40.014: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 06/29/24 12:29:41.454
  Jun 29 12:29:41.454: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=crd-publish-openapi-893 --namespace=crd-publish-openapi-893 create -f -'
  Jun 29 12:29:43.524: INFO: stderr: ""
  Jun 29 12:29:43.524: INFO: stdout: "e2e-test-crd-publish-openapi-1804-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Jun 29 12:29:43.524: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=crd-publish-openapi-893 --namespace=crd-publish-openapi-893 delete e2e-test-crd-publish-openapi-1804-crds test-cr'
  Jun 29 12:29:43.586: INFO: stderr: ""
  Jun 29 12:29:43.586: INFO: stdout: "e2e-test-crd-publish-openapi-1804-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  Jun 29 12:29:43.586: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=crd-publish-openapi-893 --namespace=crd-publish-openapi-893 apply -f -'
  Jun 29 12:29:43.637: INFO: stderr: ""
  Jun 29 12:29:43.637: INFO: stdout: "e2e-test-crd-publish-openapi-1804-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Jun 29 12:29:43.637: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=crd-publish-openapi-893 --namespace=crd-publish-openapi-893 delete e2e-test-crd-publish-openapi-1804-crds test-cr'
  Jun 29 12:29:43.686: INFO: stderr: ""
  Jun 29 12:29:43.686: INFO: stdout: "e2e-test-crd-publish-openapi-1804-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 06/29/24 12:29:43.686
  Jun 29 12:29:43.687: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=crd-publish-openapi-893 explain e2e-test-crd-publish-openapi-1804-crds'
  Jun 29 12:29:43.727: INFO: stderr: ""
  Jun 29 12:29:43.727: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-1804-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  Jun 29 12:29:44.986: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-893" for this suite. @ 06/29/24 12:29:44.996
â€¢ [5.015 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 06/29/24 12:29:45.005
  Jun 29 12:29:45.005: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/29/24 12:29:45.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:29:45.024
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:29:45.029
  STEP: set up a multi version CRD @ 06/29/24 12:29:45.033
  Jun 29 12:29:45.033: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: mark a version not serverd @ 06/29/24 12:29:48.148
  STEP: check the unserved version gets removed @ 06/29/24 12:29:48.164
  STEP: check the other version is not changed @ 06/29/24 12:29:48.943
  Jun 29 12:29:51.386: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7148" for this suite. @ 06/29/24 12:29:51.393
â€¢ [6.395 seconds]
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 06/29/24 12:29:51.399
  Jun 29 12:29:51.400: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename field-validation @ 06/29/24 12:29:51.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:29:51.418
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:29:51.42
  Jun 29 12:29:51.422: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  W0629 12:29:51.422534      18 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc0000fd9a0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  W0629 12:29:53.958871      18 warnings.go:70] unknown field "alpha"
  W0629 12:29:53.958891      18 warnings.go:70] unknown field "beta"
  W0629 12:29:53.958894      18 warnings.go:70] unknown field "delta"
  W0629 12:29:53.958897      18 warnings.go:70] unknown field "epsilon"
  W0629 12:29:53.958900      18 warnings.go:70] unknown field "gamma"
  Jun 29 12:29:54.498: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2755" for this suite. @ 06/29/24 12:29:54.502
â€¢ [3.109 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 06/29/24 12:29:54.509
  Jun 29 12:29:54.509: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename projected @ 06/29/24 12:29:54.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:29:54.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:29:54.528
  STEP: Creating secret with name s-test-opt-del-71ba7413-b144-40ab-9b46-30977fb652be @ 06/29/24 12:29:54.532
  STEP: Creating secret with name s-test-opt-upd-f4737fb6-4f2b-4390-bde1-6e41b9979b9d @ 06/29/24 12:29:54.538
  STEP: Creating the pod @ 06/29/24 12:29:54.541
  STEP: Deleting secret s-test-opt-del-71ba7413-b144-40ab-9b46-30977fb652be @ 06/29/24 12:29:56.578
  STEP: Updating secret s-test-opt-upd-f4737fb6-4f2b-4390-bde1-6e41b9979b9d @ 06/29/24 12:29:56.587
  STEP: Creating secret with name s-test-opt-create-0599f073-554e-4b30-94b1-6771bc04b5d4 @ 06/29/24 12:29:56.595
  STEP: waiting to observe update in volume @ 06/29/24 12:29:56.599
  Jun 29 12:31:16.951: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4956" for this suite. @ 06/29/24 12:31:16.955
â€¢ [82.454 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 06/29/24 12:31:16.963
  Jun 29 12:31:16.963: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename namespaces @ 06/29/24 12:31:16.964
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:31:16.983
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:31:16.984
  STEP: creating a Namespace @ 06/29/24 12:31:16.986
  STEP: patching the Namespace @ 06/29/24 12:31:17.002
  STEP: get the Namespace and ensuring it has the label @ 06/29/24 12:31:17.01
  Jun 29 12:31:17.012: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-244" for this suite. @ 06/29/24 12:31:17.016
  STEP: Destroying namespace "nspatchtest-2f5da325-ca91-44a0-bf15-e6528c222351-5263" for this suite. @ 06/29/24 12:31:17.023
â€¢ [0.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 06/29/24 12:31:17.029
  Jun 29 12:31:17.029: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename services @ 06/29/24 12:31:17.029
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:31:17.046
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:31:17.048
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-9164 @ 06/29/24 12:31:17.049
  STEP: changing the ExternalName service to type=ClusterIP @ 06/29/24 12:31:17.054
  STEP: creating replication controller externalname-service in namespace services-9164 @ 06/29/24 12:31:17.067
  I0629 12:31:17.075761      18 runners.go:197] Created replication controller with name: externalname-service, namespace: services-9164, replica count: 2
  I0629 12:31:20.126638      18 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun 29 12:31:20.126: INFO: Creating new exec pod
  Jun 29 12:31:23.142: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-9164 exec execpodmrblj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Jun 29 12:31:23.231: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jun 29 12:31:23.231: INFO: stdout: ""
  Jun 29 12:31:24.143: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-9164 exec execpodmrblj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Jun 29 12:31:24.232: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jun 29 12:31:24.232: INFO: stdout: "externalname-service-z6w2x"
  Jun 29 12:31:24.232: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-9164 exec execpodmrblj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.44 80'
  Jun 29 12:31:24.322: INFO: stderr: "+ nc -v -t -w 2 10.152.183.44 80\n+ echo hostName\nConnection to 10.152.183.44 80 port [tcp/http] succeeded!\n"
  Jun 29 12:31:24.322: INFO: stdout: ""
  Jun 29 12:31:25.232: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-9164 exec execpodmrblj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.44 80'
  Jun 29 12:31:25.326: INFO: stderr: "+ + ncecho -v hostName -t\n -w 2 10.152.183.44 80\nConnection to 10.152.183.44 80 port [tcp/http] succeeded!\n"
  Jun 29 12:31:25.326: INFO: stdout: ""
  Jun 29 12:31:26.232: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-9164 exec execpodmrblj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.44 80'
  Jun 29 12:31:26.319: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.44 80\nConnection to 10.152.183.44 80 port [tcp/http] succeeded!\n"
  Jun 29 12:31:26.319: INFO: stdout: "externalname-service-z6w2x"
  Jun 29 12:31:26.319: INFO: Cleaning up the ExternalName to ClusterIP test service
  Jun 29 12:31:26.336: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9164" for this suite. @ 06/29/24 12:31:26.339
â€¢ [9.319 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 06/29/24 12:31:26.351
  Jun 29 12:31:26.351: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename emptydir @ 06/29/24 12:31:26.352
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:31:26.37
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:31:26.373
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 06/29/24 12:31:26.375
  STEP: Saw pod success @ 06/29/24 12:31:30.396
  Jun 29 12:31:30.399: INFO: Trying to get logs from node ip-172-31-94-98 pod pod-7b510cb2-03f6-465d-9ac8-4d15462dd88e container test-container: <nil>
  STEP: delete the pod @ 06/29/24 12:31:30.406
  Jun 29 12:31:30.422: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-533" for this suite. @ 06/29/24 12:31:30.426
â€¢ [4.082 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 06/29/24 12:31:30.432
  Jun 29 12:31:30.432: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/29/24 12:31:30.433
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:31:30.45
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:31:30.452
  Jun 29 12:31:30.454: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 06/29/24 12:31:31.811
  Jun 29 12:31:31.811: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=crd-publish-openapi-5684 --namespace=crd-publish-openapi-5684 create -f -'
  Jun 29 12:31:33.872: INFO: stderr: ""
  Jun 29 12:31:33.872: INFO: stdout: "e2e-test-crd-publish-openapi-8855-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Jun 29 12:31:33.872: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=crd-publish-openapi-5684 --namespace=crd-publish-openapi-5684 delete e2e-test-crd-publish-openapi-8855-crds test-foo'
  Jun 29 12:31:33.931: INFO: stderr: ""
  Jun 29 12:31:33.931: INFO: stdout: "e2e-test-crd-publish-openapi-8855-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  Jun 29 12:31:33.931: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=crd-publish-openapi-5684 --namespace=crd-publish-openapi-5684 apply -f -'
  Jun 29 12:31:33.987: INFO: stderr: ""
  Jun 29 12:31:33.987: INFO: stdout: "e2e-test-crd-publish-openapi-8855-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Jun 29 12:31:33.988: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=crd-publish-openapi-5684 --namespace=crd-publish-openapi-5684 delete e2e-test-crd-publish-openapi-8855-crds test-foo'
  Jun 29 12:31:34.038: INFO: stderr: ""
  Jun 29 12:31:34.038: INFO: stdout: "e2e-test-crd-publish-openapi-8855-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 06/29/24 12:31:34.038
  Jun 29 12:31:34.038: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=crd-publish-openapi-5684 --namespace=crd-publish-openapi-5684 create -f -'
  Jun 29 12:31:34.086: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 06/29/24 12:31:34.086
  Jun 29 12:31:34.086: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=crd-publish-openapi-5684 --namespace=crd-publish-openapi-5684 create -f -'
  Jun 29 12:31:34.134: INFO: rc: 1
  Jun 29 12:31:34.134: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=crd-publish-openapi-5684 --namespace=crd-publish-openapi-5684 apply -f -'
  Jun 29 12:31:34.182: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 06/29/24 12:31:34.183
  Jun 29 12:31:34.183: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=crd-publish-openapi-5684 --namespace=crd-publish-openapi-5684 create -f -'
  Jun 29 12:31:34.232: INFO: rc: 1
  Jun 29 12:31:34.232: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=crd-publish-openapi-5684 --namespace=crd-publish-openapi-5684 apply -f -'
  Jun 29 12:31:34.283: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 06/29/24 12:31:34.283
  Jun 29 12:31:34.283: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=crd-publish-openapi-5684 explain e2e-test-crd-publish-openapi-8855-crds'
  Jun 29 12:31:34.326: INFO: stderr: ""
  Jun 29 12:31:34.326: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-8855-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 06/29/24 12:31:34.326
  Jun 29 12:31:34.326: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=crd-publish-openapi-5684 explain e2e-test-crd-publish-openapi-8855-crds.metadata'
  Jun 29 12:31:34.369: INFO: stderr: ""
  Jun 29 12:31:34.369: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-8855-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  Jun 29 12:31:34.369: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=crd-publish-openapi-5684 explain e2e-test-crd-publish-openapi-8855-crds.spec'
  Jun 29 12:31:34.411: INFO: stderr: ""
  Jun 29 12:31:34.411: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-8855-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  Jun 29 12:31:34.411: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=crd-publish-openapi-5684 explain e2e-test-crd-publish-openapi-8855-crds.spec.bars'
  Jun 29 12:31:34.455: INFO: stderr: ""
  Jun 29 12:31:34.455: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-8855-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 06/29/24 12:31:34.455
  Jun 29 12:31:34.455: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=crd-publish-openapi-5684 explain e2e-test-crd-publish-openapi-8855-crds.spec.bars2'
  Jun 29 12:31:34.497: INFO: rc: 1
  Jun 29 12:31:35.720: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5684" for this suite. @ 06/29/24 12:31:35.726
â€¢ [5.300 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 06/29/24 12:31:35.733
  Jun 29 12:31:35.733: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename emptydir-wrapper @ 06/29/24 12:31:35.733
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:31:35.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:31:35.755
  STEP: Creating 50 configmaps @ 06/29/24 12:31:35.771
  STEP: Creating RC which spawns configmap-volume pods @ 06/29/24 12:31:35.989
  Jun 29 12:31:36.112: INFO: Pod name wrapped-volume-race-f783b51c-dc92-4f79-ab18-a2da36714f77: Found 3 pods out of 5
  Jun 29 12:31:41.118: INFO: Pod name wrapped-volume-race-f783b51c-dc92-4f79-ab18-a2da36714f77: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 06/29/24 12:31:41.118
  STEP: Creating RC which spawns configmap-volume pods @ 06/29/24 12:31:41.138
  Jun 29 12:31:41.154: INFO: Pod name wrapped-volume-race-b84b2ec8-e52d-4d0f-a782-1c648fd5f2d3: Found 0 pods out of 5
  Jun 29 12:31:46.162: INFO: Pod name wrapped-volume-race-b84b2ec8-e52d-4d0f-a782-1c648fd5f2d3: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 06/29/24 12:31:46.162
  STEP: Creating RC which spawns configmap-volume pods @ 06/29/24 12:31:46.18
  Jun 29 12:31:46.192: INFO: Pod name wrapped-volume-race-30c1fdbc-779d-4d7e-a232-de8650685a43: Found 0 pods out of 5
  Jun 29 12:31:51.202: INFO: Pod name wrapped-volume-race-30c1fdbc-779d-4d7e-a232-de8650685a43: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 06/29/24 12:31:51.202
  STEP: deleting ReplicationController wrapped-volume-race-30c1fdbc-779d-4d7e-a232-de8650685a43 in namespace emptydir-wrapper-8617, will wait for the garbage collector to delete the pods @ 06/29/24 12:31:51.228
  Jun 29 12:31:51.291: INFO: Deleting ReplicationController wrapped-volume-race-30c1fdbc-779d-4d7e-a232-de8650685a43 took: 8.908206ms
  Jun 29 12:31:51.392: INFO: Terminating ReplicationController wrapped-volume-race-30c1fdbc-779d-4d7e-a232-de8650685a43 pods took: 100.961477ms
  STEP: deleting ReplicationController wrapped-volume-race-b84b2ec8-e52d-4d0f-a782-1c648fd5f2d3 in namespace emptydir-wrapper-8617, will wait for the garbage collector to delete the pods @ 06/29/24 12:31:52.993
  Jun 29 12:31:53.055: INFO: Deleting ReplicationController wrapped-volume-race-b84b2ec8-e52d-4d0f-a782-1c648fd5f2d3 took: 7.610789ms
  Jun 29 12:31:53.156: INFO: Terminating ReplicationController wrapped-volume-race-b84b2ec8-e52d-4d0f-a782-1c648fd5f2d3 pods took: 100.609438ms
  STEP: deleting ReplicationController wrapped-volume-race-f783b51c-dc92-4f79-ab18-a2da36714f77 in namespace emptydir-wrapper-8617, will wait for the garbage collector to delete the pods @ 06/29/24 12:31:54.856
  Jun 29 12:31:54.920: INFO: Deleting ReplicationController wrapped-volume-race-f783b51c-dc92-4f79-ab18-a2da36714f77 took: 7.58472ms
  Jun 29 12:31:55.021: INFO: Terminating ReplicationController wrapped-volume-race-f783b51c-dc92-4f79-ab18-a2da36714f77 pods took: 101.143673ms
  STEP: Cleaning up the configMaps @ 06/29/24 12:31:56.721
  Jun 29 12:31:57.001: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-8617" for this suite. @ 06/29/24 12:31:57.004
â€¢ [21.277 seconds]
------------------------------
S
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 06/29/24 12:31:57.01
  Jun 29 12:31:57.010: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename svcaccounts @ 06/29/24 12:31:57.011
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:31:57.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:31:57.03
  STEP: reading a file in the container @ 06/29/24 12:31:59.052
  Jun 29 12:31:59.052: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7023 pod-service-account-06fbd922-de62-472b-890a-913e3f3434c9 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 06/29/24 12:31:59.14
  Jun 29 12:31:59.140: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7023 pod-service-account-06fbd922-de62-472b-890a-913e3f3434c9 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 06/29/24 12:31:59.227
  Jun 29 12:31:59.227: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7023 pod-service-account-06fbd922-de62-472b-890a-913e3f3434c9 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  Jun 29 12:31:59.319: INFO: Got root ca configmap in namespace "svcaccounts-7023"
  Jun 29 12:31:59.320: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7023" for this suite. @ 06/29/24 12:31:59.325
â€¢ [2.322 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 06/29/24 12:31:59.332
  Jun 29 12:31:59.332: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename secrets @ 06/29/24 12:31:59.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:31:59.348
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:31:59.35
  STEP: Creating secret with name secret-test-7c9c1ebe-f5ff-4178-baab-db4879b639b5 @ 06/29/24 12:31:59.351
  STEP: Creating a pod to test consume secrets @ 06/29/24 12:31:59.355
  STEP: Saw pod success @ 06/29/24 12:32:03.377
  Jun 29 12:32:03.380: INFO: Trying to get logs from node ip-172-31-94-98 pod pod-secrets-89bba47f-a208-4a1c-93e1-fbca078c8803 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/29/24 12:32:03.385
  Jun 29 12:32:03.414: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7288" for this suite. @ 06/29/24 12:32:03.417
â€¢ [4.091 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 06/29/24 12:32:03.423
  Jun 29 12:32:03.423: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename emptydir @ 06/29/24 12:32:03.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:32:03.441
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:32:03.443
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 06/29/24 12:32:03.445
  STEP: Saw pod success @ 06/29/24 12:32:05.462
  Jun 29 12:32:05.465: INFO: Trying to get logs from node ip-172-31-10-28 pod pod-54cf7c18-0d2f-44e0-bdb5-b854001db7c5 container test-container: <nil>
  STEP: delete the pod @ 06/29/24 12:32:05.479
  Jun 29 12:32:05.496: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-181" for this suite. @ 06/29/24 12:32:05.498
â€¢ [2.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 06/29/24 12:32:05.504
  Jun 29 12:32:05.504: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/29/24 12:32:05.505
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:32:05.521
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:32:05.523
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 06/29/24 12:32:05.525
  Jun 29 12:32:05.525: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 06/29/24 12:32:10.482
  Jun 29 12:32:10.482: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  Jun 29 12:32:11.691: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  Jun 29 12:32:16.577: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8154" for this suite. @ 06/29/24 12:32:16.583
â€¢ [11.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 06/29/24 12:32:16.593
  Jun 29 12:32:16.593: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename field-validation @ 06/29/24 12:32:16.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:32:16.609
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:32:16.612
  Jun 29 12:32:16.614: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  Jun 29 12:32:19.692: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2835" for this suite. @ 06/29/24 12:32:19.695
â€¢ [3.109 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:357
  STEP: Creating a kubernetes client @ 06/29/24 12:32:19.702
  Jun 29 12:32:19.702: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename kubectl @ 06/29/24 12:32:19.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:32:19.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:32:19.719
  STEP: creating a replication controller @ 06/29/24 12:32:19.722
  Jun 29 12:32:19.722: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-8361 create -f -'
  Jun 29 12:32:19.810: INFO: stderr: ""
  Jun 29 12:32:19.810: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 06/29/24 12:32:19.81
  Jun 29 12:32:19.810: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-8361 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun 29 12:32:19.856: INFO: stderr: ""
  Jun 29 12:32:19.856: INFO: stdout: "update-demo-nautilus-2mwxp update-demo-nautilus-rzgwf "
  Jun 29 12:32:19.857: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-8361 get pods update-demo-nautilus-2mwxp -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 29 12:32:19.901: INFO: stderr: ""
  Jun 29 12:32:19.901: INFO: stdout: ""
  Jun 29 12:32:19.901: INFO: update-demo-nautilus-2mwxp is created but not running
  Jun 29 12:32:24.902: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-8361 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun 29 12:32:24.949: INFO: stderr: ""
  Jun 29 12:32:24.949: INFO: stdout: "update-demo-nautilus-2mwxp update-demo-nautilus-rzgwf "
  Jun 29 12:32:24.949: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-8361 get pods update-demo-nautilus-2mwxp -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 29 12:32:24.991: INFO: stderr: ""
  Jun 29 12:32:24.991: INFO: stdout: "true"
  Jun 29 12:32:24.991: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-8361 get pods update-demo-nautilus-2mwxp -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun 29 12:32:25.033: INFO: stderr: ""
  Jun 29 12:32:25.033: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun 29 12:32:25.033: INFO: validating pod update-demo-nautilus-2mwxp
  Jun 29 12:32:25.038: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun 29 12:32:25.039: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun 29 12:32:25.039: INFO: update-demo-nautilus-2mwxp is verified up and running
  Jun 29 12:32:25.039: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-8361 get pods update-demo-nautilus-rzgwf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 29 12:32:25.083: INFO: stderr: ""
  Jun 29 12:32:25.083: INFO: stdout: "true"
  Jun 29 12:32:25.083: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-8361 get pods update-demo-nautilus-rzgwf -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun 29 12:32:25.126: INFO: stderr: ""
  Jun 29 12:32:25.126: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun 29 12:32:25.126: INFO: validating pod update-demo-nautilus-rzgwf
  Jun 29 12:32:25.131: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun 29 12:32:25.131: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun 29 12:32:25.131: INFO: update-demo-nautilus-rzgwf is verified up and running
  STEP: scaling down the replication controller @ 06/29/24 12:32:25.131
  Jun 29 12:32:25.132: INFO: scanned /root for discovery docs: <nil>
  Jun 29 12:32:25.132: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-8361 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  Jun 29 12:32:26.193: INFO: stderr: ""
  Jun 29 12:32:26.193: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 06/29/24 12:32:26.193
  Jun 29 12:32:26.193: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-8361 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun 29 12:32:26.239: INFO: stderr: ""
  Jun 29 12:32:26.239: INFO: stdout: "update-demo-nautilus-2mwxp update-demo-nautilus-rzgwf "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 06/29/24 12:32:26.239
  Jun 29 12:32:31.240: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-8361 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun 29 12:32:31.284: INFO: stderr: ""
  Jun 29 12:32:31.284: INFO: stdout: "update-demo-nautilus-rzgwf "
  Jun 29 12:32:31.284: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-8361 get pods update-demo-nautilus-rzgwf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 29 12:32:31.337: INFO: stderr: ""
  Jun 29 12:32:31.337: INFO: stdout: "true"
  Jun 29 12:32:31.338: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-8361 get pods update-demo-nautilus-rzgwf -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun 29 12:32:31.381: INFO: stderr: ""
  Jun 29 12:32:31.381: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun 29 12:32:31.381: INFO: validating pod update-demo-nautilus-rzgwf
  Jun 29 12:32:31.385: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun 29 12:32:31.385: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun 29 12:32:31.385: INFO: update-demo-nautilus-rzgwf is verified up and running
  STEP: scaling up the replication controller @ 06/29/24 12:32:31.385
  Jun 29 12:32:31.386: INFO: scanned /root for discovery docs: <nil>
  Jun 29 12:32:31.386: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-8361 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  Jun 29 12:32:32.449: INFO: stderr: ""
  Jun 29 12:32:32.449: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 06/29/24 12:32:32.449
  Jun 29 12:32:32.449: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-8361 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun 29 12:32:32.493: INFO: stderr: ""
  Jun 29 12:32:32.493: INFO: stdout: "update-demo-nautilus-bsjdh update-demo-nautilus-rzgwf "
  Jun 29 12:32:32.493: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-8361 get pods update-demo-nautilus-bsjdh -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 29 12:32:32.537: INFO: stderr: ""
  Jun 29 12:32:32.537: INFO: stdout: ""
  Jun 29 12:32:32.537: INFO: update-demo-nautilus-bsjdh is created but not running
  Jun 29 12:32:37.538: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-8361 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun 29 12:32:37.584: INFO: stderr: ""
  Jun 29 12:32:37.584: INFO: stdout: "update-demo-nautilus-bsjdh update-demo-nautilus-rzgwf "
  Jun 29 12:32:37.584: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-8361 get pods update-demo-nautilus-bsjdh -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 29 12:32:37.627: INFO: stderr: ""
  Jun 29 12:32:37.627: INFO: stdout: "true"
  Jun 29 12:32:37.628: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-8361 get pods update-demo-nautilus-bsjdh -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun 29 12:32:37.670: INFO: stderr: ""
  Jun 29 12:32:37.670: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun 29 12:32:37.670: INFO: validating pod update-demo-nautilus-bsjdh
  Jun 29 12:32:37.676: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun 29 12:32:37.676: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun 29 12:32:37.676: INFO: update-demo-nautilus-bsjdh is verified up and running
  Jun 29 12:32:37.676: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-8361 get pods update-demo-nautilus-rzgwf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 29 12:32:37.719: INFO: stderr: ""
  Jun 29 12:32:37.719: INFO: stdout: "true"
  Jun 29 12:32:37.719: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-8361 get pods update-demo-nautilus-rzgwf -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun 29 12:32:37.763: INFO: stderr: ""
  Jun 29 12:32:37.763: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun 29 12:32:37.763: INFO: validating pod update-demo-nautilus-rzgwf
  Jun 29 12:32:37.767: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun 29 12:32:37.767: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun 29 12:32:37.767: INFO: update-demo-nautilus-rzgwf is verified up and running
  STEP: using delete to clean up resources @ 06/29/24 12:32:37.767
  Jun 29 12:32:37.767: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-8361 delete --grace-period=0 --force -f -'
  Jun 29 12:32:37.820: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun 29 12:32:37.820: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Jun 29 12:32:37.820: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-8361 get rc,svc -l name=update-demo --no-headers'
  Jun 29 12:32:37.884: INFO: stderr: "No resources found in kubectl-8361 namespace.\n"
  Jun 29 12:32:37.884: INFO: stdout: ""
  Jun 29 12:32:37.884: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-8361 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Jun 29 12:32:37.932: INFO: stderr: ""
  Jun 29 12:32:37.932: INFO: stdout: ""
  Jun 29 12:32:37.932: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8361" for this suite. @ 06/29/24 12:32:37.937
â€¢ [18.243 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:948
  STEP: Creating a kubernetes client @ 06/29/24 12:32:37.946
  Jun 29 12:32:37.946: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename resourcequota @ 06/29/24 12:32:37.946
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:32:37.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:32:37.962
  STEP: Creating a ResourceQuota @ 06/29/24 12:32:37.965
  STEP: Getting a ResourceQuota @ 06/29/24 12:32:37.97
  STEP: Listing all ResourceQuotas with LabelSelector @ 06/29/24 12:32:37.973
  STEP: Patching the ResourceQuota @ 06/29/24 12:32:37.976
  STEP: Deleting a Collection of ResourceQuotas @ 06/29/24 12:32:37.983
  STEP: Verifying the deleted ResourceQuota @ 06/29/24 12:32:37.99
  Jun 29 12:32:37.992: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4556" for this suite. @ 06/29/24 12:32:37.995
â€¢ [0.055 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 06/29/24 12:32:38.001
  Jun 29 12:32:38.001: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename kubectl-logs @ 06/29/24 12:32:38.002
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:32:38.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:32:38.017
  STEP: creating an pod @ 06/29/24 12:32:38.02
  Jun 29 12:32:38.021: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-logs-4640 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.47 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  Jun 29 12:32:38.073: INFO: stderr: ""
  Jun 29 12:32:38.073: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 06/29/24 12:32:38.073
  Jun 29 12:32:38.073: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  Jun 29 12:32:40.083: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 06/29/24 12:32:40.083
  Jun 29 12:32:40.083: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-logs-4640 logs logs-generator logs-generator'
  Jun 29 12:32:40.138: INFO: stderr: ""
  Jun 29 12:32:40.138: INFO: stdout: "I0629 12:32:38.650474       1 logs_generator.go:76] 0 POST /api/v1/namespaces/ns/pods/2b9n 366\nI0629 12:32:38.850487       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/ns/pods/c49s 515\nI0629 12:32:39.051071       1 logs_generator.go:76] 2 POST /api/v1/namespaces/default/pods/88gq 255\nI0629 12:32:39.251359       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/kube-system/pods/dn6 599\nI0629 12:32:39.451508       1 logs_generator.go:76] 4 GET /api/v1/namespaces/kube-system/pods/nql 441\nI0629 12:32:39.650809       1 logs_generator.go:76] 5 POST /api/v1/namespaces/kube-system/pods/2dwt 506\nI0629 12:32:39.851096       1 logs_generator.go:76] 6 POST /api/v1/namespaces/default/pods/rmx 469\nI0629 12:32:40.051387       1 logs_generator.go:76] 7 POST /api/v1/namespaces/ns/pods/lvqb 310\n"
  STEP: limiting log lines @ 06/29/24 12:32:40.138
  Jun 29 12:32:40.138: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-logs-4640 logs logs-generator logs-generator --tail=1'
  Jun 29 12:32:40.188: INFO: stderr: ""
  Jun 29 12:32:40.188: INFO: stdout: "I0629 12:32:40.051387       1 logs_generator.go:76] 7 POST /api/v1/namespaces/ns/pods/lvqb 310\n"
  Jun 29 12:32:40.188: INFO: got output "I0629 12:32:40.051387       1 logs_generator.go:76] 7 POST /api/v1/namespaces/ns/pods/lvqb 310\n"
  STEP: limiting log bytes @ 06/29/24 12:32:40.188
  Jun 29 12:32:40.188: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-logs-4640 logs logs-generator logs-generator --limit-bytes=1'
  Jun 29 12:32:40.237: INFO: stderr: ""
  Jun 29 12:32:40.237: INFO: stdout: "I"
  Jun 29 12:32:40.237: INFO: got output "I"
  STEP: exposing timestamps @ 06/29/24 12:32:40.237
  Jun 29 12:32:40.237: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-logs-4640 logs logs-generator logs-generator --tail=1 --timestamps'
  Jun 29 12:32:40.286: INFO: stderr: ""
  Jun 29 12:32:40.286: INFO: stdout: "2024-06-29T12:32:40.250532890Z I0629 12:32:40.250472       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/xp9w 346\n"
  Jun 29 12:32:40.286: INFO: got output "2024-06-29T12:32:40.250532890Z I0629 12:32:40.250472       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/xp9w 346\n"
  STEP: restricting to a time range @ 06/29/24 12:32:40.286
  Jun 29 12:32:42.787: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-logs-4640 logs logs-generator logs-generator --since=1s'
  Jun 29 12:32:42.837: INFO: stderr: ""
  Jun 29 12:32:42.837: INFO: stdout: "I0629 12:32:41.851419       1 logs_generator.go:76] 16 GET /api/v1/namespaces/ns/pods/rgt 495\nI0629 12:32:42.050626       1 logs_generator.go:76] 17 POST /api/v1/namespaces/default/pods/44f 396\nI0629 12:32:42.250921       1 logs_generator.go:76] 18 GET /api/v1/namespaces/kube-system/pods/pplw 574\nI0629 12:32:42.451214       1 logs_generator.go:76] 19 POST /api/v1/namespaces/default/pods/rrmq 290\nI0629 12:32:42.651523       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/default/pods/m7s 269\n"
  Jun 29 12:32:42.837: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-logs-4640 logs logs-generator logs-generator --since=24h'
  Jun 29 12:32:42.888: INFO: stderr: ""
  Jun 29 12:32:42.888: INFO: stdout: "I0629 12:32:38.650474       1 logs_generator.go:76] 0 POST /api/v1/namespaces/ns/pods/2b9n 366\nI0629 12:32:38.850487       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/ns/pods/c49s 515\nI0629 12:32:39.051071       1 logs_generator.go:76] 2 POST /api/v1/namespaces/default/pods/88gq 255\nI0629 12:32:39.251359       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/kube-system/pods/dn6 599\nI0629 12:32:39.451508       1 logs_generator.go:76] 4 GET /api/v1/namespaces/kube-system/pods/nql 441\nI0629 12:32:39.650809       1 logs_generator.go:76] 5 POST /api/v1/namespaces/kube-system/pods/2dwt 506\nI0629 12:32:39.851096       1 logs_generator.go:76] 6 POST /api/v1/namespaces/default/pods/rmx 469\nI0629 12:32:40.051387       1 logs_generator.go:76] 7 POST /api/v1/namespaces/ns/pods/lvqb 310\nI0629 12:32:40.250472       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/xp9w 346\nI0629 12:32:40.450778       1 logs_generator.go:76] 9 POST /api/v1/namespaces/ns/pods/5zr 581\nI0629 12:32:40.651048       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/ns/pods/7v7 246\nI0629 12:32:40.851199       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/default/pods/9xgk 256\nI0629 12:32:41.051454       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/kube-system/pods/ch4 356\nI0629 12:32:41.250674       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/kube-system/pods/bcg 474\nI0629 12:32:41.450940       1 logs_generator.go:76] 14 GET /api/v1/namespaces/ns/pods/wqr 588\nI0629 12:32:41.651277       1 logs_generator.go:76] 15 GET /api/v1/namespaces/kube-system/pods/kdk 455\nI0629 12:32:41.851419       1 logs_generator.go:76] 16 GET /api/v1/namespaces/ns/pods/rgt 495\nI0629 12:32:42.050626       1 logs_generator.go:76] 17 POST /api/v1/namespaces/default/pods/44f 396\nI0629 12:32:42.250921       1 logs_generator.go:76] 18 GET /api/v1/namespaces/kube-system/pods/pplw 574\nI0629 12:32:42.451214       1 logs_generator.go:76] 19 POST /api/v1/namespaces/default/pods/rrmq 290\nI0629 12:32:42.651523       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/default/pods/m7s 269\nI0629 12:32:42.850811       1 logs_generator.go:76] 21 POST /api/v1/namespaces/kube-system/pods/7l5 222\n"
  Jun 29 12:32:42.889: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-logs-4640 delete pod logs-generator'
  Jun 29 12:32:43.607: INFO: stderr: ""
  Jun 29 12:32:43.607: INFO: stdout: "pod \"logs-generator\" deleted\n"
  Jun 29 12:32:43.607: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-4640" for this suite. @ 06/29/24 12:32:43.612
â€¢ [5.618 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 06/29/24 12:32:43.619
  Jun 29 12:32:43.619: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename daemonsets @ 06/29/24 12:32:43.62
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:32:43.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:32:43.635
  STEP: Creating a simple DaemonSet "daemon-set" @ 06/29/24 12:32:43.658
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/29/24 12:32:43.665
  Jun 29 12:32:43.668: INFO: DaemonSet pods can't tolerate node ip-172-31-15-151 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 12:32:43.668: INFO: DaemonSet pods can't tolerate node ip-172-31-22-17 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 12:32:43.670: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 29 12:32:43.670: INFO: Node ip-172-31-10-28 is running 0 daemon pod, expected 1
  Jun 29 12:32:44.668: INFO: DaemonSet pods can't tolerate node ip-172-31-15-151 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 12:32:44.668: INFO: DaemonSet pods can't tolerate node ip-172-31-22-17 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 12:32:44.672: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun 29 12:32:44.672: INFO: Node ip-172-31-10-28 is running 0 daemon pod, expected 1
  Jun 29 12:32:45.669: INFO: DaemonSet pods can't tolerate node ip-172-31-15-151 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 12:32:45.669: INFO: DaemonSet pods can't tolerate node ip-172-31-22-17 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 12:32:45.672: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun 29 12:32:45.672: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 06/29/24 12:32:45.675
  Jun 29 12:32:45.692: INFO: DaemonSet pods can't tolerate node ip-172-31-15-151 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 12:32:45.692: INFO: DaemonSet pods can't tolerate node ip-172-31-22-17 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 12:32:45.697: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun 29 12:32:45.697: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 06/29/24 12:32:45.697
  STEP: Deleting DaemonSet "daemon-set" @ 06/29/24 12:32:45.709
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2183, will wait for the garbage collector to delete the pods @ 06/29/24 12:32:45.709
  Jun 29 12:32:45.772: INFO: Deleting DaemonSet.extensions daemon-set took: 7.784322ms
  Jun 29 12:32:45.873: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.891078ms
  Jun 29 12:32:47.278: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 29 12:32:47.278: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jun 29 12:32:47.282: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"14843"},"items":null}

  Jun 29 12:32:47.286: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"14843"},"items":null}

  Jun 29 12:32:47.299: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2183" for this suite. @ 06/29/24 12:32:47.302
â€¢ [3.690 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 06/29/24 12:32:47.309
  Jun 29 12:32:47.309: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename projected @ 06/29/24 12:32:47.31
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:32:47.326
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:32:47.329
  STEP: Creating projection with secret that has name projected-secret-test-map-c4090bb9-534a-407a-b73b-02fead13ae05 @ 06/29/24 12:32:47.332
  STEP: Creating a pod to test consume secrets @ 06/29/24 12:32:47.335
  STEP: Saw pod success @ 06/29/24 12:32:51.36
  Jun 29 12:32:51.365: INFO: Trying to get logs from node ip-172-31-94-98 pod pod-projected-secrets-3826bfa2-6651-40f8-9810-1d833c24060c container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/29/24 12:32:51.37
  Jun 29 12:32:51.385: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7439" for this suite. @ 06/29/24 12:32:51.388
â€¢ [4.084 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1698
  STEP: Creating a kubernetes client @ 06/29/24 12:32:51.393
  Jun 29 12:32:51.393: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename kubectl @ 06/29/24 12:32:51.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:32:51.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:32:51.413
  STEP: creating Agnhost RC @ 06/29/24 12:32:51.416
  Jun 29 12:32:51.416: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-710 create -f -'
  Jun 29 12:32:51.502: INFO: stderr: ""
  Jun 29 12:32:51.502: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 06/29/24 12:32:51.502
  Jun 29 12:32:52.519: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 29 12:32:52.519: INFO: Found 0 / 1
  Jun 29 12:32:53.507: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 29 12:32:53.507: INFO: Found 1 / 1
  Jun 29 12:32:53.507: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 06/29/24 12:32:53.507
  Jun 29 12:32:53.511: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 29 12:32:53.511: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jun 29 12:32:53.511: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-710 patch pod agnhost-primary-v8xvb -p {"metadata":{"annotations":{"x":"y"}}}'
  Jun 29 12:32:53.566: INFO: stderr: ""
  Jun 29 12:32:53.566: INFO: stdout: "pod/agnhost-primary-v8xvb patched\n"
  STEP: checking annotations @ 06/29/24 12:32:53.566
  Jun 29 12:32:53.570: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 29 12:32:53.570: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jun 29 12:32:53.570: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-710" for this suite. @ 06/29/24 12:32:53.574
â€¢ [2.186 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 06/29/24 12:32:53.58
  Jun 29 12:32:53.580: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename endpointslice @ 06/29/24 12:32:53.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:32:53.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:32:53.656
  STEP: getting /apis @ 06/29/24 12:32:53.66
  STEP: getting /apis/discovery.k8s.io @ 06/29/24 12:32:53.664
  STEP: getting /apis/discovery.k8s.iov1 @ 06/29/24 12:32:53.665
  STEP: creating @ 06/29/24 12:32:53.667
  STEP: getting @ 06/29/24 12:32:53.686
  STEP: listing @ 06/29/24 12:32:53.689
  STEP: watching @ 06/29/24 12:32:53.694
  Jun 29 12:32:53.694: INFO: starting watch
  STEP: cluster-wide listing @ 06/29/24 12:32:53.695
  STEP: cluster-wide watching @ 06/29/24 12:32:53.699
  Jun 29 12:32:53.699: INFO: starting watch
  STEP: patching @ 06/29/24 12:32:53.7
  STEP: updating @ 06/29/24 12:32:53.705
  Jun 29 12:32:53.716: INFO: waiting for watch events with expected annotations
  Jun 29 12:32:53.716: INFO: saw patched and updated annotations
  STEP: deleting @ 06/29/24 12:32:53.716
  STEP: deleting a collection @ 06/29/24 12:32:53.731
  Jun 29 12:32:53.748: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8835" for this suite. @ 06/29/24 12:32:53.753
â€¢ [0.181 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 06/29/24 12:32:53.761
  Jun 29 12:32:53.761: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename cronjob @ 06/29/24 12:32:53.762
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:32:53.828
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:32:53.831
  STEP: Creating a cronjob @ 06/29/24 12:32:53.834
  STEP: creating @ 06/29/24 12:32:53.834
  STEP: getting @ 06/29/24 12:32:53.841
  STEP: listing @ 06/29/24 12:32:53.844
  STEP: watching @ 06/29/24 12:32:53.847
  Jun 29 12:32:53.847: INFO: starting watch
  STEP: cluster-wide listing @ 06/29/24 12:32:53.849
  STEP: cluster-wide watching @ 06/29/24 12:32:53.852
  Jun 29 12:32:53.852: INFO: starting watch
  STEP: patching @ 06/29/24 12:32:53.853
  STEP: updating @ 06/29/24 12:32:53.86
  Jun 29 12:32:53.869: INFO: waiting for watch events with expected annotations
  Jun 29 12:32:53.869: INFO: saw patched and updated annotations
  STEP: patching /status @ 06/29/24 12:32:53.869
  STEP: updating /status @ 06/29/24 12:32:53.875
  STEP: get /status @ 06/29/24 12:32:53.883
  STEP: deleting @ 06/29/24 12:32:53.886
  STEP: deleting a collection @ 06/29/24 12:32:53.899
  Jun 29 12:32:53.912: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5714" for this suite. @ 06/29/24 12:32:53.916
â€¢ [0.163 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 06/29/24 12:32:53.926
  Jun 29 12:32:53.926: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename var-expansion @ 06/29/24 12:32:53.927
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:32:53.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:32:53.948
  STEP: Creating a pod to test substitution in volume subpath @ 06/29/24 12:32:53.951
  STEP: Saw pod success @ 06/29/24 12:32:55.971
  Jun 29 12:32:55.974: INFO: Trying to get logs from node ip-172-31-94-98 pod var-expansion-d58d2584-d7e5-4247-9f0d-f4c4559d3758 container dapi-container: <nil>
  STEP: delete the pod @ 06/29/24 12:32:55.983
  Jun 29 12:32:55.997: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1553" for this suite. @ 06/29/24 12:32:56
â€¢ [2.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 06/29/24 12:32:56.014
  Jun 29 12:32:56.014: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename container-probe @ 06/29/24 12:32:56.015
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:32:56.029
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:32:56.035
  STEP: Creating pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724 @ 06/29/24 12:32:56.038
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/29/24 12:32:58.056
  Jun 29 12:32:58.059: INFO: Initial restart count of pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f is 0
  Jun 29 12:32:58.062: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:33:00.067: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:33:02.074: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:33:04.078: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:33:06.083: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:33:08.087: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:33:10.093: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:33:12.098: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:33:14.103: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:33:16.107: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:33:18.113: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:33:20.119: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:33:22.125: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:33:24.129: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:33:26.134: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:33:28.140: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:33:30.144: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:33:32.150: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:33:34.154: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:33:36.158: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:33:38.162: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:33:40.169: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:33:42.174: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:33:44.178: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:33:46.183: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:33:48.187: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:33:50.192: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:33:52.196: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:33:54.200: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:33:56.205: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:33:58.210: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:34:00.216: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:34:02.221: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:34:04.227: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:34:06.231: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:34:08.235: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:34:10.239: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:34:12.244: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:34:14.249: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:34:16.253: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:34:18.257: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:34:20.261: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:34:22.265: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:34:24.270: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:34:26.276: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:34:28.281: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:34:30.286: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:34:32.291: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:34:34.295: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:34:36.300: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:34:38.306: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:34:40.310: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:34:42.316: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:34:44.319: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:34:46.325: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:34:48.330: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:34:50.334: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:34:52.337: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:34:54.340: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:34:56.347: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:34:58.355: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:35:00.359: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:35:02.366: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:35:04.370: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:35:06.377: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:35:08.381: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:35:10.387: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:35:12.393: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:35:14.400: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:35:16.406: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:35:18.410: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:35:20.414: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:35:22.419: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:35:24.426: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:35:26.430: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:35:28.436: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:35:30.440: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:35:32.448: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:35:34.453: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:35:36.457: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:35:38.461: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:35:40.465: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:35:42.470: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:35:44.475: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:35:46.479: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:35:48.484: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:35:50.489: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:35:52.493: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:35:54.500: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:35:56.504: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:35:58.508: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:36:00.512: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:36:02.517: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:36:04.523: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:36:06.527: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:36:08.533: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:36:10.537: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:36:12.543: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:36:14.548: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:36:16.552: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:36:18.558: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:36:20.563: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:36:22.568: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:36:24.573: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:36:26.580: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:36:28.585: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:36:30.590: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:36:32.598: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:36:34.603: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:36:36.608: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:36:38.611: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:36:40.617: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:36:42.624: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:36:44.628: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:36:46.633: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:36:48.638: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:36:50.644: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:36:52.651: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:36:54.657: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  Jun 29 12:36:56.663: INFO: Get pod test-grpc-363f523c-42a5-4b1a-82ee-4855cb00168f in namespace container-probe-9724
  STEP: deleting the pod @ 06/29/24 12:36:58.663
  Jun 29 12:36:58.675: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9724" for this suite. @ 06/29/24 12:36:58.68
â€¢ [242.674 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 06/29/24 12:36:58.688
  Jun 29 12:36:58.688: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename webhook @ 06/29/24 12:36:58.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:36:58.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:36:58.708
  STEP: Setting up server cert @ 06/29/24 12:36:58.728
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/29/24 12:36:59.063
  STEP: Deploying the webhook pod @ 06/29/24 12:36:59.07
  STEP: Wait for the deployment to be ready @ 06/29/24 12:36:59.084
  Jun 29 12:36:59.093: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/29/24 12:37:01.106
  STEP: Verifying the service has paired with the endpoint @ 06/29/24 12:37:01.117
  Jun 29 12:37:02.118: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 06/29/24 12:37:02.124
  STEP: create a namespace for the webhook @ 06/29/24 12:37:02.148
  STEP: create a configmap should be unconditionally rejected by the webhook @ 06/29/24 12:37:02.163
  Jun 29 12:37:02.265: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2611" for this suite. @ 06/29/24 12:37:02.268
  STEP: Destroying namespace "webhook-markers-2751" for this suite. @ 06/29/24 12:37:02.275
  STEP: Destroying namespace "fail-closed-namespace-6484" for this suite. @ 06/29/24 12:37:02.28
â€¢ [3.597 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:46
  STEP: Creating a kubernetes client @ 06/29/24 12:37:02.286
  Jun 29 12:37:02.286: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename configmap @ 06/29/24 12:37:02.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:37:02.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:37:02.304
  STEP: Creating configMap configmap-3100/configmap-test-7530eecd-ecf2-4959-b809-df5e4364c20d @ 06/29/24 12:37:02.307
  STEP: Creating a pod to test consume configMaps @ 06/29/24 12:37:02.312
  STEP: Saw pod success @ 06/29/24 12:37:06.335
  Jun 29 12:37:06.339: INFO: Trying to get logs from node ip-172-31-94-98 pod pod-configmaps-1d2902c1-4dc4-4603-b7dd-5f75c1e9d1d6 container env-test: <nil>
  STEP: delete the pod @ 06/29/24 12:37:06.355
  Jun 29 12:37:06.369: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3100" for this suite. @ 06/29/24 12:37:06.372
â€¢ [4.093 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 06/29/24 12:37:06.379
  Jun 29 12:37:06.379: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename projected @ 06/29/24 12:37:06.38
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:37:06.394
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:37:06.396
  STEP: Creating a pod to test downward API volume plugin @ 06/29/24 12:37:06.399
  STEP: Saw pod success @ 06/29/24 12:37:10.42
  Jun 29 12:37:10.423: INFO: Trying to get logs from node ip-172-31-94-98 pod downwardapi-volume-2dc74bd2-057b-4115-a951-c1b99116ff3f container client-container: <nil>
  STEP: delete the pod @ 06/29/24 12:37:10.429
  Jun 29 12:37:10.445: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1427" for this suite. @ 06/29/24 12:37:10.448
â€¢ [4.075 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 06/29/24 12:37:10.455
  Jun 29 12:37:10.455: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename container-probe @ 06/29/24 12:37:10.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:37:10.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:37:10.476
  STEP: Creating pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799 @ 06/29/24 12:37:10.478
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/29/24 12:37:12.496
  Jun 29 12:37:12.500: INFO: Initial restart count of pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f is 0
  Jun 29 12:37:12.503: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:37:14.508: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:37:16.514: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:37:18.518: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:37:20.522: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:37:22.527: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:37:24.534: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:37:26.537: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:37:28.543: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:37:30.548: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:37:32.553: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:37:32.553: INFO: Restart count of pod container-probe-799/liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f is now 1 (20.052842585s elapsed)
  Jun 29 12:37:34.559: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:37:36.563: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:37:38.569: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:37:40.574: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:37:42.579: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:37:44.584: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:37:46.590: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:37:48.597: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:37:50.603: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:37:52.611: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:37:52.611: INFO: Restart count of pod container-probe-799/liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f is now 2 (40.11120445s elapsed)
  Jun 29 12:37:54.616: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:37:56.620: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:37:58.625: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:38:00.629: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:38:02.635: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:38:04.643: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:38:06.647: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:38:08.653: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:38:10.659: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:38:12.664: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:38:12.664: INFO: Restart count of pod container-probe-799/liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f is now 3 (1m0.164524453s elapsed)
  Jun 29 12:38:14.671: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:38:16.675: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:38:18.680: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:38:20.684: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:38:22.690: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:38:24.695: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:38:26.701: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:38:28.706: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:38:30.710: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:38:32.715: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:38:32.715: INFO: Restart count of pod container-probe-799/liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f is now 4 (1m20.215337637s elapsed)
  Jun 29 12:38:34.720: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:38:36.726: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:38:38.730: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:38:40.735: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:38:42.740: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:38:44.745: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:38:46.750: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:38:48.756: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:38:50.760: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:38:52.765: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:38:54.773: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:38:56.777: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:38:58.782: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:39:00.787: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:39:02.793: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:39:04.800: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:39:06.804: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:39:08.810: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:39:10.814: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:39:12.821: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:39:14.826: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:39:16.831: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:39:18.836: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:39:20.841: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:39:22.848: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:39:24.854: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:39:26.859: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:39:28.865: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:39:30.869: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:39:32.873: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:39:34.878: INFO: Get pod liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f in namespace container-probe-799
  Jun 29 12:39:34.878: INFO: Restart count of pod container-probe-799/liveness-bdb229c1-b298-4dbd-b91b-fa8926d20e5f is now 5 (2m22.378276657s elapsed)
  STEP: deleting the pod @ 06/29/24 12:39:34.878
  Jun 29 12:39:34.892: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-799" for this suite. @ 06/29/24 12:39:34.895
â€¢ [144.448 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3338
  STEP: Creating a kubernetes client @ 06/29/24 12:39:34.904
  Jun 29 12:39:34.904: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename services @ 06/29/24 12:39:34.905
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:39:34.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:39:34.925
  STEP: creating a Service @ 06/29/24 12:39:34.931
  STEP: watching for the Service to be added @ 06/29/24 12:39:34.946
  Jun 29 12:39:34.948: INFO: Found Service test-service-rj4jv in namespace services-6339 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 30120}]
  Jun 29 12:39:34.948: INFO: Service test-service-rj4jv created
  STEP: Getting /status @ 06/29/24 12:39:34.948
  Jun 29 12:39:34.952: INFO: Service test-service-rj4jv has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 06/29/24 12:39:34.952
  STEP: watching for the Service to be patched @ 06/29/24 12:39:34.959
  Jun 29 12:39:34.960: INFO: observed Service test-service-rj4jv in namespace services-6339 with annotations: map[] & LoadBalancer: {[]}
  Jun 29 12:39:34.960: INFO: Found Service test-service-rj4jv in namespace services-6339 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  <nil> []}]}
  Jun 29 12:39:34.960: INFO: Service test-service-rj4jv has service status patched
  STEP: updating the ServiceStatus @ 06/29/24 12:39:34.96
  Jun 29 12:39:34.971: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 06/29/24 12:39:34.971
  Jun 29 12:39:34.972: INFO: Observed Service test-service-rj4jv in namespace services-6339 with annotations: map[] & Conditions: {[]}
  Jun 29 12:39:34.972: INFO: Observed event: &Service{ObjectMeta:{test-service-rj4jv  services-6339  a00de985-8137-4785-84f2-4990790e4f36 16056 0 2024-06-29 12:39:34 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2024-06-29 12:39:34 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:allocateLoadBalancerNodePorts":{},"f:externalTrafficPolicy":{},"f:internalTrafficPolicy":{},"f:loadBalancerClass":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2024-06-29 12:39:34 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:30120,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.152.183.29,Type:LoadBalancer,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:Cluster,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.152.183.29],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:*true,LoadBalancerClass:*example.com/internal-vip,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,IPMode:nil,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  Jun 29 12:39:34.972: INFO: Found Service test-service-rj4jv in namespace services-6339 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jun 29 12:39:34.972: INFO: Service test-service-rj4jv has service status updated
  STEP: patching the service @ 06/29/24 12:39:34.972
  STEP: watching for the Service to be patched @ 06/29/24 12:39:34.981
  Jun 29 12:39:34.983: INFO: observed Service test-service-rj4jv in namespace services-6339 with labels: map[test-service-static:true]
  Jun 29 12:39:34.983: INFO: observed Service test-service-rj4jv in namespace services-6339 with labels: map[test-service-static:true]
  Jun 29 12:39:34.984: INFO: observed Service test-service-rj4jv in namespace services-6339 with labels: map[test-service-static:true]
  Jun 29 12:39:34.984: INFO: Found Service test-service-rj4jv in namespace services-6339 with labels: map[test-service:patched test-service-static:true]
  Jun 29 12:39:34.984: INFO: Service test-service-rj4jv patched
  STEP: deleting the service @ 06/29/24 12:39:34.984
  STEP: watching for the Service to be deleted @ 06/29/24 12:39:35.002
  Jun 29 12:39:35.004: INFO: Observed event: ADDED
  Jun 29 12:39:35.004: INFO: Observed event: MODIFIED
  Jun 29 12:39:35.004: INFO: Observed event: MODIFIED
  Jun 29 12:39:35.004: INFO: Observed event: MODIFIED
  Jun 29 12:39:35.004: INFO: Found Service test-service-rj4jv in namespace services-6339 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  Jun 29 12:39:35.004: INFO: Service test-service-rj4jv deleted
  Jun 29 12:39:35.004: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6339" for this suite. @ 06/29/24 12:39:35.007
â€¢ [0.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 06/29/24 12:39:35.016
  Jun 29 12:39:35.016: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename downward-api @ 06/29/24 12:39:35.016
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:39:35.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:39:35.034
  STEP: Creating a pod to test downward API volume plugin @ 06/29/24 12:39:35.036
  STEP: Saw pod success @ 06/29/24 12:39:39.061
  Jun 29 12:39:39.064: INFO: Trying to get logs from node ip-172-31-94-98 pod downwardapi-volume-c3d72414-b7e5-4feb-b11c-a7eb845d0ee3 container client-container: <nil>
  STEP: delete the pod @ 06/29/24 12:39:39.075
  Jun 29 12:39:39.093: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1500" for this suite. @ 06/29/24 12:39:39.096
â€¢ [4.088 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 06/29/24 12:39:39.104
  Jun 29 12:39:39.104: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename emptydir @ 06/29/24 12:39:39.105
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:39:39.119
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:39:39.121
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 06/29/24 12:39:39.124
  STEP: Saw pod success @ 06/29/24 12:39:43.149
  Jun 29 12:39:43.152: INFO: Trying to get logs from node ip-172-31-94-98 pod pod-a8a93704-66ce-44f7-b82c-8720ae7fa7ce container test-container: <nil>
  STEP: delete the pod @ 06/29/24 12:39:43.159
  Jun 29 12:39:43.177: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4959" for this suite. @ 06/29/24 12:39:43.18
â€¢ [4.083 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1053
  STEP: Creating a kubernetes client @ 06/29/24 12:39:43.188
  Jun 29 12:39:43.188: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename kubectl @ 06/29/24 12:39:43.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:39:43.2
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:39:43.203
  STEP: create deployment with httpd image @ 06/29/24 12:39:43.206
  Jun 29 12:39:43.206: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-8419 create -f -'
  Jun 29 12:39:43.276: INFO: stderr: ""
  Jun 29 12:39:43.276: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 06/29/24 12:39:43.276
  Jun 29 12:39:43.276: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-8419 diff -f -'
  Jun 29 12:39:43.358: INFO: rc: 1
  Jun 29 12:39:43.359: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-8419 delete -f -'
  Jun 29 12:39:43.405: INFO: stderr: ""
  Jun 29 12:39:43.406: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  Jun 29 12:39:43.406: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8419" for this suite. @ 06/29/24 12:39:43.41
â€¢ [0.230 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 06/29/24 12:39:43.418
  Jun 29 12:39:43.418: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/29/24 12:39:43.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:39:43.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:39:43.439
  Jun 29 12:39:43.442: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  Jun 29 12:39:43.982: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6336" for this suite. @ 06/29/24 12:39:43.988
â€¢ [0.577 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 06/29/24 12:39:43.995
  Jun 29 12:39:43.995: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename watch @ 06/29/24 12:39:43.996
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:39:44.009
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:39:44.014
  STEP: creating a watch on configmaps with label A @ 06/29/24 12:39:44.018
  STEP: creating a watch on configmaps with label B @ 06/29/24 12:39:44.019
  STEP: creating a watch on configmaps with label A or B @ 06/29/24 12:39:44.02
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 06/29/24 12:39:44.021
  Jun 29 12:39:44.027: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6771  9459b284-218f-4d73-bb37-74e39883e691 16193 0 2024-06-29 12:39:44 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-29 12:39:44 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 29 12:39:44.027: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6771  9459b284-218f-4d73-bb37-74e39883e691 16193 0 2024-06-29 12:39:44 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-29 12:39:44 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 06/29/24 12:39:44.027
  Jun 29 12:39:44.036: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6771  9459b284-218f-4d73-bb37-74e39883e691 16194 0 2024-06-29 12:39:44 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-29 12:39:44 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 29 12:39:44.036: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6771  9459b284-218f-4d73-bb37-74e39883e691 16194 0 2024-06-29 12:39:44 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-29 12:39:44 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 06/29/24 12:39:44.036
  Jun 29 12:39:44.043: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6771  9459b284-218f-4d73-bb37-74e39883e691 16195 0 2024-06-29 12:39:44 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-29 12:39:44 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 29 12:39:44.043: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6771  9459b284-218f-4d73-bb37-74e39883e691 16195 0 2024-06-29 12:39:44 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-29 12:39:44 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 06/29/24 12:39:44.043
  Jun 29 12:39:44.050: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6771  9459b284-218f-4d73-bb37-74e39883e691 16196 0 2024-06-29 12:39:44 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-29 12:39:44 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 29 12:39:44.050: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6771  9459b284-218f-4d73-bb37-74e39883e691 16196 0 2024-06-29 12:39:44 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-29 12:39:44 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 06/29/24 12:39:44.05
  Jun 29 12:39:44.054: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6771  8acb6cdf-caca-4ab1-b338-0def988d90b2 16197 0 2024-06-29 12:39:44 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-06-29 12:39:44 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 29 12:39:44.054: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6771  8acb6cdf-caca-4ab1-b338-0def988d90b2 16197 0 2024-06-29 12:39:44 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-06-29 12:39:44 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 06/29/24 12:39:54.055
  Jun 29 12:39:54.061: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6771  8acb6cdf-caca-4ab1-b338-0def988d90b2 16255 0 2024-06-29 12:39:44 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-06-29 12:39:44 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 29 12:39:54.061: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6771  8acb6cdf-caca-4ab1-b338-0def988d90b2 16255 0 2024-06-29 12:39:44 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-06-29 12:39:44 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 29 12:40:04.062: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6771" for this suite. @ 06/29/24 12:40:04.067
â€¢ [20.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 06/29/24 12:40:04.075
  Jun 29 12:40:04.075: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename pod-network-test @ 06/29/24 12:40:04.075
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:40:04.09
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:40:04.093
  STEP: Performing setup for networking test in namespace pod-network-test-7342 @ 06/29/24 12:40:04.096
  STEP: creating a selector @ 06/29/24 12:40:04.096
  STEP: Creating the service pods in kubernetes @ 06/29/24 12:40:04.096
  Jun 29 12:40:04.096: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 06/29/24 12:40:16.178
  Jun 29 12:40:18.210: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Jun 29 12:40:18.210: INFO: Going to poll 192.168.41.84 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Jun 29 12:40:18.213: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.41.84:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-7342 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 29 12:40:18.213: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  Jun 29 12:40:18.213: INFO: ExecWithOptions: Clientset creation
  Jun 29 12:40:18.214: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7342/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.41.84%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jun 29 12:40:18.271: INFO: Found all 1 expected endpoints: [netserver-0]
  Jun 29 12:40:18.272: INFO: Going to poll 192.168.109.37 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Jun 29 12:40:18.275: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.109.37:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-7342 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 29 12:40:18.275: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  Jun 29 12:40:18.275: INFO: ExecWithOptions: Clientset creation
  Jun 29 12:40:18.275: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7342/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.109.37%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jun 29 12:40:18.320: INFO: Found all 1 expected endpoints: [netserver-1]
  Jun 29 12:40:18.320: INFO: Going to poll 192.168.183.119 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Jun 29 12:40:18.325: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.183.119:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-7342 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 29 12:40:18.325: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  Jun 29 12:40:18.326: INFO: ExecWithOptions: Clientset creation
  Jun 29 12:40:18.326: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7342/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.183.119%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jun 29 12:40:18.368: INFO: Found all 1 expected endpoints: [netserver-2]
  Jun 29 12:40:18.368: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-7342" for this suite. @ 06/29/24 12:40:18.372
â€¢ [14.305 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1399
  STEP: Creating a kubernetes client @ 06/29/24 12:40:18.38
  Jun 29 12:40:18.380: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename kubectl @ 06/29/24 12:40:18.38
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:40:18.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:40:18.4
  Jun 29 12:40:18.404: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-2221 create -f -'
  Jun 29 12:40:18.490: INFO: stderr: ""
  Jun 29 12:40:18.490: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  Jun 29 12:40:18.490: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-2221 create -f -'
  Jun 29 12:40:18.580: INFO: stderr: ""
  Jun 29 12:40:18.580: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 06/29/24 12:40:18.58
  Jun 29 12:40:19.586: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 29 12:40:19.586: INFO: Found 1 / 1
  Jun 29 12:40:19.586: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Jun 29 12:40:19.589: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 29 12:40:19.589: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jun 29 12:40:19.589: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-2221 describe pod agnhost-primary-4rfnm'
  Jun 29 12:40:19.645: INFO: stderr: ""
  Jun 29 12:40:19.645: INFO: stdout: "Name:             agnhost-primary-4rfnm\nNamespace:        kubectl-2221\nPriority:         0\nService Account:  default\nNode:             ip-172-31-94-98/172.31.94.98\nStart Time:       Sat, 29 Jun 2024 12:40:18 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               192.168.183.116\nIPs:\n  IP:           192.168.183.116\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://fac2a8da16d79ced89b790462aa4d5d2e8ac6e78d6c20d077b49849cb272588b\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.47\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sat, 29 Jun 2024 12:40:19 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-bkjhz (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-bkjhz:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-2221/agnhost-primary-4rfnm to ip-172-31-94-98\n  Normal  Pulled     0s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.47\" already present on machine\n  Normal  Created    0s    kubelet            Created container agnhost-primary\n  Normal  Started    0s    kubelet            Started container agnhost-primary\n"
  Jun 29 12:40:19.645: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-2221 describe rc agnhost-primary'
  Jun 29 12:40:19.704: INFO: stderr: ""
  Jun 29 12:40:19.704: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-2221\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.47\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  1s    replication-controller  Created pod: agnhost-primary-4rfnm\n"
  Jun 29 12:40:19.705: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-2221 describe service agnhost-primary'
  Jun 29 12:40:19.757: INFO: stderr: ""
  Jun 29 12:40:19.757: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-2221\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.152.183.80\nIPs:               10.152.183.80\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         192.168.183.116:6379\nSession Affinity:  None\nEvents:            <none>\n"
  Jun 29 12:40:19.761: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-2221 describe node ip-172-31-10-28'
  Jun 29 12:40:19.851: INFO: stderr: ""
  Jun 29 12:40:19.851: INFO: stdout: "Name:               ip-172-31-10-28\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    juju-application=kubernetes-worker\n                    juju-charm=kubernetes-worker\n                    juju.io/cloud=ec2\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-10-28\n                    kubernetes.io/os=linux\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sat, 29 Jun 2024 12:07:05 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-10-28\n  AcquireTime:     <unset>\n  RenewTime:       Sat, 29 Jun 2024 12:40:16 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Sat, 29 Jun 2024 12:18:12 +0000   Sat, 29 Jun 2024 12:18:12 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Sat, 29 Jun 2024 12:37:34 +0000   Sat, 29 Jun 2024 12:07:05 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Sat, 29 Jun 2024 12:37:34 +0000   Sat, 29 Jun 2024 12:07:05 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Sat, 29 Jun 2024 12:37:34 +0000   Sat, 29 Jun 2024 12:07:05 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Sat, 29 Jun 2024 12:37:34 +0000   Sat, 29 Jun 2024 12:09:34 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  172.31.10.28\n  Hostname:    ip-172-31-10-28\nCapacity:\n  cpu:                2\n  ephemeral-storage:  16069568Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7958128Ki\n  pods:               110\nAllocatable:\n  cpu:                2\n  ephemeral-storage:  14809713845\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7855728Ki\n  pods:               110\nSystem Info:\n  Machine ID:                      ec20830f872e1eebe00a7604a91fa502\n  System UUID:                     ec20830f-872e-1eeb-e00a-7604a91fa502\n  Boot ID:                         e3d6abf2-4667-4d40-94ed-f81c8e6c1119\n  Kernel Version:                  6.5.0-1021-aws\n  OS Image:                        Ubuntu 22.04.4 LTS\n  Operating System:                linux\n  Architecture:                    amd64\n  Container Runtime Version:       containerd://1.6.8\n  Kubelet Version:                 v1.29.6\n  Kube-Proxy Version:              v1.29.6\nNon-terminated Pods:               (6 in total)\n  Namespace                        Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                        ----                                                       ------------  ----------  ---------------  -------------  ---\n  ingress-nginx-kubernetes-worker  nginx-ingress-controller-kubernetes-worker-zddqx           0 (0%)        0 (0%)      0 (0%)           0 (0%)         28m\n  kube-system                      calico-node-99b9n                                          250m (12%)    0 (0%)      0 (0%)           0 (0%)         23m\n  pod-network-test-7342            host-test-container-pod                                    0 (0%)        0 (0%)      0 (0%)           0 (0%)         3s\n  pod-network-test-7342            netserver-0                                                0 (0%)        0 (0%)      0 (0%)           0 (0%)         15s\n  sonobuoy                         sonobuoy-e2e-job-7574a47ae2364127                          0 (0%)        0 (0%)      0 (0%)           0 (0%)         18m\n  sonobuoy                         sonobuoy-systemd-logs-daemon-set-6e9f3632248049cc-bfvm8    0 (0%)        0 (0%)      0 (0%)           0 (0%)         18m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                250m (12%)  0 (0%)\n  memory             0 (0%)      0 (0%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:\n  Type     Reason                   Age   From             Message\n  ----     ------                   ----  ----             -------\n  Normal   Starting                 33m   kube-proxy       \n  Normal   Starting                 25m   kube-proxy       \n  Normal   NodeAllocatableEnforced  33m   kubelet          Updated Node Allocatable limit across pods\n  Warning  InvalidDiskCapacity      33m   kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeHasSufficientMemory  33m   kubelet          Node ip-172-31-10-28 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    33m   kubelet          Node ip-172-31-10-28 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     33m   kubelet          Node ip-172-31-10-28 status is now: NodeHasSufficientPID\n  Normal   Starting                 33m   kubelet          Starting kubelet.\n  Normal   RegisteredNode           31m   node-controller  Node ip-172-31-10-28 event: Registered Node ip-172-31-10-28 in Controller\n  Normal   NodeReady                30m   kubelet          Node ip-172-31-10-28 status is now: NodeReady\n  Normal   RegisteredNode           28m   node-controller  Node ip-172-31-10-28 event: Registered Node ip-172-31-10-28 in Controller\n  Normal   Starting                 25m   kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      25m   kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeAllocatableEnforced  25m   kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientMemory  25m   kubelet          Node ip-172-31-10-28 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    25m   kubelet          Node ip-172-31-10-28 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     25m   kubelet          Node ip-172-31-10-28 status is now: NodeHasSufficientPID\n"
  Jun 29 12:40:19.851: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-2221 describe namespace kubectl-2221'
  Jun 29 12:40:19.903: INFO: stderr: ""
  Jun 29 12:40:19.903: INFO: stdout: "Name:         kubectl-2221\nLabels:       e2e-framework=kubectl\n              e2e-run=464b4305-f763-4b0b-9fc5-b79df71c36aa\n              kubernetes.io/metadata.name=kubectl-2221\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  Jun 29 12:40:19.903: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2221" for this suite. @ 06/29/24 12:40:19.906
â€¢ [1.535 seconds]
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 06/29/24 12:40:19.915
  Jun 29 12:40:19.915: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename var-expansion @ 06/29/24 12:40:19.916
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:40:19.929
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:40:19.932
  STEP: Creating a pod to test substitution in container's command @ 06/29/24 12:40:19.935
  STEP: Saw pod success @ 06/29/24 12:40:23.956
  Jun 29 12:40:23.959: INFO: Trying to get logs from node ip-172-31-94-98 pod var-expansion-c2048492-cbcb-4939-9f0e-7fbda1ef3658 container dapi-container: <nil>
  STEP: delete the pod @ 06/29/24 12:40:23.965
  Jun 29 12:40:23.980: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3788" for this suite. @ 06/29/24 12:40:23.984
â€¢ [4.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 06/29/24 12:40:23.991
  Jun 29 12:40:23.991: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename webhook @ 06/29/24 12:40:23.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:40:24.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:40:24.009
  STEP: Setting up server cert @ 06/29/24 12:40:24.032
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/29/24 12:40:24.249
  STEP: Deploying the webhook pod @ 06/29/24 12:40:24.256
  STEP: Wait for the deployment to be ready @ 06/29/24 12:40:24.34
  Jun 29 12:40:24.353: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/29/24 12:40:26.364
  STEP: Verifying the service has paired with the endpoint @ 06/29/24 12:40:26.374
  Jun 29 12:40:27.374: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jun 29 12:40:27.381: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-5588-crds.webhook.example.com via the AdmissionRegistration API @ 06/29/24 12:40:27.893
  STEP: Creating a custom resource while v1 is storage version @ 06/29/24 12:40:27.906
  STEP: Patching Custom Resource Definition to set v2 as storage @ 06/29/24 12:40:29.935
  STEP: Patching the custom resource while v2 is storage version @ 06/29/24 12:40:29.95
  Jun 29 12:40:30.544: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2" for this suite. @ 06/29/24 12:40:30.548
  STEP: Destroying namespace "webhook-markers-5233" for this suite. @ 06/29/24 12:40:30.555
â€¢ [6.572 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 06/29/24 12:40:30.564
  Jun 29 12:40:30.564: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename projected @ 06/29/24 12:40:30.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:40:30.579
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:40:30.584
  STEP: Creating a pod to test downward API volume plugin @ 06/29/24 12:40:30.587
  STEP: Saw pod success @ 06/29/24 12:40:32.608
  Jun 29 12:40:32.612: INFO: Trying to get logs from node ip-172-31-94-98 pod downwardapi-volume-6ba9188a-2061-48d5-b3e5-29415797865d container client-container: <nil>
  STEP: delete the pod @ 06/29/24 12:40:32.617
  Jun 29 12:40:32.637: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4450" for this suite. @ 06/29/24 12:40:32.641
â€¢ [2.083 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 06/29/24 12:40:32.648
  Jun 29 12:40:32.648: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename proxy @ 06/29/24 12:40:32.649
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:40:32.663
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:40:32.668
  Jun 29 12:40:32.670: INFO: Creating pod...
  Jun 29 12:40:34.688: INFO: Creating service...
  Jun 29 12:40:34.702: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-640/pods/agnhost/proxy/some/path/with/DELETE
  Jun 29 12:40:34.712: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jun 29 12:40:34.713: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-640/pods/agnhost/proxy/some/path/with/GET
  Jun 29 12:40:34.716: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Jun 29 12:40:34.716: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-640/pods/agnhost/proxy/some/path/with/HEAD
  Jun 29 12:40:34.719: INFO: http.Client request:HEAD | StatusCode:200
  Jun 29 12:40:34.719: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-640/pods/agnhost/proxy/some/path/with/OPTIONS
  Jun 29 12:40:34.722: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jun 29 12:40:34.722: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-640/pods/agnhost/proxy/some/path/with/PATCH
  Jun 29 12:40:34.727: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jun 29 12:40:34.727: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-640/pods/agnhost/proxy/some/path/with/POST
  Jun 29 12:40:34.730: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jun 29 12:40:34.730: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-640/pods/agnhost/proxy/some/path/with/PUT
  Jun 29 12:40:34.733: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jun 29 12:40:34.733: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-640/services/test-service/proxy/some/path/with/DELETE
  Jun 29 12:40:34.738: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jun 29 12:40:34.738: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-640/services/test-service/proxy/some/path/with/GET
  Jun 29 12:40:34.742: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Jun 29 12:40:34.742: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-640/services/test-service/proxy/some/path/with/HEAD
  Jun 29 12:40:34.747: INFO: http.Client request:HEAD | StatusCode:200
  Jun 29 12:40:34.747: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-640/services/test-service/proxy/some/path/with/OPTIONS
  Jun 29 12:40:34.753: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jun 29 12:40:34.753: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-640/services/test-service/proxy/some/path/with/PATCH
  Jun 29 12:40:34.757: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jun 29 12:40:34.757: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-640/services/test-service/proxy/some/path/with/POST
  Jun 29 12:40:34.763: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jun 29 12:40:34.763: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-640/services/test-service/proxy/some/path/with/PUT
  Jun 29 12:40:34.769: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jun 29 12:40:34.769: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-640" for this suite. @ 06/29/24 12:40:34.772
â€¢ [2.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 06/29/24 12:40:34.779
  Jun 29 12:40:34.779: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename replicaset @ 06/29/24 12:40:34.779
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:40:34.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:40:34.797
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 06/29/24 12:40:34.8
  Jun 29 12:40:34.807: INFO: Pod name sample-pod: Found 0 pods out of 1
  Jun 29 12:40:39.813: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/29/24 12:40:39.813
  STEP: getting scale subresource @ 06/29/24 12:40:39.813
  STEP: updating a scale subresource @ 06/29/24 12:40:39.818
  STEP: verifying the replicaset Spec.Replicas was modified @ 06/29/24 12:40:39.822
  STEP: Patch a scale subresource @ 06/29/24 12:40:39.825
  Jun 29 12:40:39.838: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4833" for this suite. @ 06/29/24 12:40:39.843
â€¢ [5.074 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 06/29/24 12:40:39.854
  Jun 29 12:40:39.854: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename daemonsets @ 06/29/24 12:40:39.855
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:40:39.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:40:39.877
  STEP: Creating simple DaemonSet "daemon-set" @ 06/29/24 12:40:39.901
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/29/24 12:40:39.908
  Jun 29 12:40:39.912: INFO: DaemonSet pods can't tolerate node ip-172-31-15-151 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 12:40:39.912: INFO: DaemonSet pods can't tolerate node ip-172-31-22-17 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 12:40:39.915: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 29 12:40:39.915: INFO: Node ip-172-31-10-28 is running 0 daemon pod, expected 1
  Jun 29 12:40:40.914: INFO: DaemonSet pods can't tolerate node ip-172-31-15-151 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 12:40:40.914: INFO: DaemonSet pods can't tolerate node ip-172-31-22-17 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 12:40:40.917: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun 29 12:40:40.917: INFO: Node ip-172-31-10-28 is running 0 daemon pod, expected 1
  Jun 29 12:40:41.914: INFO: DaemonSet pods can't tolerate node ip-172-31-15-151 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 12:40:41.914: INFO: DaemonSet pods can't tolerate node ip-172-31-22-17 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 12:40:41.917: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun 29 12:40:41.917: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 06/29/24 12:40:41.922
  Jun 29 12:40:41.937: INFO: DaemonSet pods can't tolerate node ip-172-31-15-151 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 12:40:41.937: INFO: DaemonSet pods can't tolerate node ip-172-31-22-17 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 12:40:41.942: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun 29 12:40:41.942: INFO: Node ip-172-31-94-98 is running 0 daemon pod, expected 1
  Jun 29 12:40:42.938: INFO: DaemonSet pods can't tolerate node ip-172-31-15-151 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 12:40:42.938: INFO: DaemonSet pods can't tolerate node ip-172-31-22-17 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 12:40:42.941: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun 29 12:40:42.941: INFO: Node ip-172-31-94-98 is running 0 daemon pod, expected 1
  Jun 29 12:40:43.939: INFO: DaemonSet pods can't tolerate node ip-172-31-15-151 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 12:40:43.939: INFO: DaemonSet pods can't tolerate node ip-172-31-22-17 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 12:40:43.942: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun 29 12:40:43.942: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 06/29/24 12:40:43.946
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8404, will wait for the garbage collector to delete the pods @ 06/29/24 12:40:43.946
  Jun 29 12:40:44.007: INFO: Deleting DaemonSet.extensions daemon-set took: 7.274841ms
  Jun 29 12:40:44.108: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.876383ms
  Jun 29 12:40:45.412: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 29 12:40:45.412: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jun 29 12:40:45.415: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"16890"},"items":null}

  Jun 29 12:40:45.420: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"16890"},"items":null}

  Jun 29 12:40:45.433: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8404" for this suite. @ 06/29/24 12:40:45.436
â€¢ [5.589 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 06/29/24 12:40:45.442
  Jun 29 12:40:45.442: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename pods @ 06/29/24 12:40:45.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:40:45.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:40:45.459
  STEP: creating the pod @ 06/29/24 12:40:45.463
  STEP: submitting the pod to kubernetes @ 06/29/24 12:40:45.463
  W0629 12:40:45.471431      18 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: verifying the pod is in kubernetes @ 06/29/24 12:40:47.484
  STEP: updating the pod @ 06/29/24 12:40:47.489
  Jun 29 12:40:48.003: INFO: Successfully updated pod "pod-update-activedeadlineseconds-311a2f32-8c82-4665-99f9-86a71ca8cde7"
  Jun 29 12:40:52.017: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4669" for this suite. @ 06/29/24 12:40:52.022
â€¢ [6.588 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 06/29/24 12:40:52.031
  Jun 29 12:40:52.031: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename init-container @ 06/29/24 12:40:52.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:40:52.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:40:52.047
  STEP: creating the pod @ 06/29/24 12:40:52.05
  Jun 29 12:40:52.050: INFO: PodSpec: initContainers in spec.initContainers
  Jun 29 12:40:56.498: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9261" for this suite. @ 06/29/24 12:40:56.501
â€¢ [4.477 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 06/29/24 12:40:56.508
  Jun 29 12:40:56.508: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename disruption @ 06/29/24 12:40:56.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:40:56.525
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:40:56.528
  STEP: creating the pdb @ 06/29/24 12:40:56.531
  STEP: Waiting for the pdb to be processed @ 06/29/24 12:40:56.536
  STEP: updating the pdb @ 06/29/24 12:40:56.543
  STEP: Waiting for the pdb to be processed @ 06/29/24 12:40:56.551
  STEP: patching the pdb @ 06/29/24 12:40:56.558
  STEP: Waiting for the pdb to be processed @ 06/29/24 12:40:56.565
  STEP: Waiting for the pdb to be deleted @ 06/29/24 12:40:58.578
  Jun 29 12:40:58.580: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7096" for this suite. @ 06/29/24 12:40:58.585
â€¢ [2.083 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 06/29/24 12:40:58.592
  Jun 29 12:40:58.592: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename deployment @ 06/29/24 12:40:58.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:40:58.61
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:40:58.613
  Jun 29 12:40:58.616: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  Jun 29 12:40:58.624: INFO: Pod name sample-pod: Found 0 pods out of 1
  Jun 29 12:41:03.630: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/29/24 12:41:03.63
  Jun 29 12:41:03.630: INFO: Creating deployment "test-rolling-update-deployment"
  Jun 29 12:41:03.636: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  Jun 29 12:41:03.642: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  Jun 29 12:41:05.650: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  Jun 29 12:41:05.654: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  Jun 29 12:41:05.663: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7753",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f99f0d48-d718-44af-bbc3-35dde0aab38f",
      ResourceVersion: (string) (len=5) "17129",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855261663,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261663,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261664,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261663,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261663,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261664,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261663,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-7ddb77f68b\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun 29 12:41:05.669: INFO: New ReplicaSet "test-rolling-update-deployment-7ddb77f68b" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-7ddb77f68b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7753",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a04579da-18cd-4bc2-8a56-2eeac842d94e",
      ResourceVersion: (string) (len=5) "17119",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855261663,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "f99f0d48-d718-44af-bbc3-35dde0aab38f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261663,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 39 39 66 30 64  34 38 2d 64 37 31 38 2d  |\"f99f0d48-d718-|
              00000120  34 34 61 66 2d 62 62 63  33 2d 33 35 64 64 65 30  |44af-bbc3-35dde0|
              00000130  61 61 62 33 38 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |aab38f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261664,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 29 12:41:05.670: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  Jun 29 12:41:05.670: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7753",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d7f2e1e7-53c9-4c6c-bcbe-f14ffc5866b3",
      ResourceVersion: (string) (len=5) "17128",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855261658,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "f99f0d48-d718-44af-bbc3-35dde0aab38f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261658,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261664,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 66 39 39 66 30 64 34  |"uid\":\"f99f0d4|
              000000b0  38 2d 64 37 31 38 2d 34  34 61 66 2d 62 62 63 33  |8-d718-44af-bbc3|
              000000c0  2d 33 35 64 64 65 30 61  61 62 33 38 66 5c 22 7d  |-35dde0aab38f\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261664,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 29 12:41:05.675: INFO: Pod "test-rolling-update-deployment-7ddb77f68b-d5smx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-7ddb77f68b-d5smx",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-7ddb77f68b-",
      Namespace: (string) (len=15) "deployment-7753",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "af517477-8008-46af-a3f4-84e1c64d4b43",
      ResourceVersion: (string) (len=5) "17118",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855261663,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-7ddb77f68b",
          UID: (types.UID) (len=36) "a04579da-18cd-4bc2-8a56-2eeac842d94e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261663,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 30  34 35 37 39 64 61 2d 31  |d\":\"a04579da-1|
              00000090  38 63 64 2d 34 62 63 32  2d 38 61 35 36 2d 32 65  |8cd-4bc2-8a56-2e|
              000000a0  65 61 63 38 34 32 64 39  34 65 5c 22 7d 22 3a 7b  |eac842d94e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261664,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 38  33 2e 37 30 5c 22 7d 22  |2.168.183.70\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-f62cd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-f62cd",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-94-98",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261664,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261663,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261664,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261664,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261663,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.94.98",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.94.98"
        }
      },
      PodIP: (string) (len=14) "192.168.183.70",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.183.70"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855261663,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855261664,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://6266ce185113d3c5de103073283f649b1e55b9bf0896e9cf699f8c1c37100a79",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 29 12:41:05.676: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7753" for this suite. @ 06/29/24 12:41:05.68
â€¢ [7.095 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 06/29/24 12:41:05.687
  Jun 29 12:41:05.687: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename limitrange @ 06/29/24 12:41:05.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:41:05.7
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:41:05.702
  STEP: Creating a LimitRange @ 06/29/24 12:41:05.705
  STEP: Setting up watch @ 06/29/24 12:41:05.705
  STEP: Submitting a LimitRange @ 06/29/24 12:41:05.81
  STEP: Verifying LimitRange creation was observed @ 06/29/24 12:41:05.816
  STEP: Fetching the LimitRange to ensure it has proper values @ 06/29/24 12:41:05.816
  Jun 29 12:41:05.820: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Jun 29 12:41:05.820: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 06/29/24 12:41:05.82
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 06/29/24 12:41:05.828
  Jun 29 12:41:05.835: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Jun 29 12:41:05.835: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 06/29/24 12:41:05.835
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 06/29/24 12:41:05.842
  Jun 29 12:41:05.850: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  Jun 29 12:41:05.850: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 06/29/24 12:41:05.85
  STEP: Failing to create a Pod with more than max resources @ 06/29/24 12:41:05.851
  STEP: Updating a LimitRange @ 06/29/24 12:41:05.853
  STEP: Verifying LimitRange updating is effective @ 06/29/24 12:41:05.859
  STEP: Creating a Pod with less than former min resources @ 06/29/24 12:41:07.863
  STEP: Failing to create a Pod with more than max resources @ 06/29/24 12:41:07.87
  STEP: Deleting a LimitRange @ 06/29/24 12:41:07.872
  STEP: Verifying the LimitRange was deleted @ 06/29/24 12:41:07.881
  Jun 29 12:41:12.890: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 06/29/24 12:41:12.89
  Jun 29 12:41:12.898: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-2780" for this suite. @ 06/29/24 12:41:12.902
â€¢ [7.223 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 06/29/24 12:41:12.911
  Jun 29 12:41:12.911: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename daemonsets @ 06/29/24 12:41:12.912
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:41:12.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:41:12.93
  Jun 29 12:41:12.949: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 06/29/24 12:41:12.953
  Jun 29 12:41:12.956: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 29 12:41:12.956: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 06/29/24 12:41:12.956
  Jun 29 12:41:12.976: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 29 12:41:12.976: INFO: Node ip-172-31-37-211 is running 0 daemon pod, expected 1
  Jun 29 12:41:13.978: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 29 12:41:13.978: INFO: Node ip-172-31-37-211 is running 0 daemon pod, expected 1
  Jun 29 12:41:14.979: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun 29 12:41:14.979: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 06/29/24 12:41:14.982
  Jun 29 12:41:14.997: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun 29 12:41:14.997: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  Jun 29 12:41:15.998: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 29 12:41:15.998: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 06/29/24 12:41:15.998
  Jun 29 12:41:16.008: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 29 12:41:16.008: INFO: Node ip-172-31-37-211 is running 0 daemon pod, expected 1
  Jun 29 12:41:17.008: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun 29 12:41:17.008: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 06/29/24 12:41:17.016
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4762, will wait for the garbage collector to delete the pods @ 06/29/24 12:41:17.016
  Jun 29 12:41:17.077: INFO: Deleting DaemonSet.extensions daemon-set took: 7.948326ms
  Jun 29 12:41:17.178: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.683966ms
  Jun 29 12:41:18.782: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 29 12:41:18.782: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jun 29 12:41:18.786: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"17303"},"items":null}

  Jun 29 12:41:18.790: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"17303"},"items":null}

  Jun 29 12:41:18.811: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4762" for this suite. @ 06/29/24 12:41:18.815
â€¢ [5.912 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 06/29/24 12:41:18.823
  Jun 29 12:41:18.823: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename projected @ 06/29/24 12:41:18.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:41:18.838
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:41:18.841
  STEP: Creating the pod @ 06/29/24 12:41:18.844
  Jun 29 12:41:21.384: INFO: Successfully updated pod "annotationupdate6f977d78-a583-4541-bd43-4a16685ab9ee"
  Jun 29 12:41:25.407: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3244" for this suite. @ 06/29/24 12:41:25.411
â€¢ [6.598 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 06/29/24 12:41:25.422
  Jun 29 12:41:25.422: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename svcaccounts @ 06/29/24 12:41:25.422
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:41:25.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:41:25.495
  STEP: Creating a pod to test service account token:  @ 06/29/24 12:41:25.5
  STEP: Saw pod success @ 06/29/24 12:41:29.528
  Jun 29 12:41:29.531: INFO: Trying to get logs from node ip-172-31-10-28 pod test-pod-cf225c57-3304-4428-8a23-0e64b8770ec6 container agnhost-container: <nil>
  STEP: delete the pod @ 06/29/24 12:41:29.547
  Jun 29 12:41:29.563: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4917" for this suite. @ 06/29/24 12:41:29.566
â€¢ [4.151 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 06/29/24 12:41:29.573
  Jun 29 12:41:29.573: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename certificates @ 06/29/24 12:41:29.574
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:41:29.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:41:29.593
  STEP: getting /apis @ 06/29/24 12:41:29.912
  STEP: getting /apis/certificates.k8s.io @ 06/29/24 12:41:29.916
  STEP: getting /apis/certificates.k8s.io/v1 @ 06/29/24 12:41:29.917
  STEP: creating @ 06/29/24 12:41:29.918
  STEP: getting @ 06/29/24 12:41:29.935
  STEP: listing @ 06/29/24 12:41:29.938
  STEP: watching @ 06/29/24 12:41:29.94
  Jun 29 12:41:29.940: INFO: starting watch
  STEP: patching @ 06/29/24 12:41:29.941
  STEP: updating @ 06/29/24 12:41:29.949
  Jun 29 12:41:29.953: INFO: waiting for watch events with expected annotations
  Jun 29 12:41:29.953: INFO: saw patched and updated annotations
  STEP: getting /approval @ 06/29/24 12:41:29.953
  STEP: patching /approval @ 06/29/24 12:41:29.956
  STEP: updating /approval @ 06/29/24 12:41:29.963
  STEP: getting /status @ 06/29/24 12:41:29.968
  STEP: patching /status @ 06/29/24 12:41:29.971
  STEP: updating /status @ 06/29/24 12:41:29.979
  STEP: deleting @ 06/29/24 12:41:29.985
  STEP: deleting a collection @ 06/29/24 12:41:29.997
  Jun 29 12:41:30.011: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-4668" for this suite. @ 06/29/24 12:41:30.014
â€¢ [0.448 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 06/29/24 12:41:30.022
  Jun 29 12:41:30.022: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename crd-watch @ 06/29/24 12:41:30.023
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:41:30.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:41:30.036
  Jun 29 12:41:30.040: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Creating first CR  @ 06/29/24 12:41:32.576
  Jun 29 12:41:32.582: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-29T12:41:32Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-29T12:41:32Z]] name:name1 resourceVersion:17440 uid:e19ddd5c-d6c7-40dd-9049-384c319afcf7] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 06/29/24 12:41:42.584
  Jun 29 12:41:42.592: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-29T12:41:42Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-29T12:41:42Z]] name:name2 resourceVersion:17480 uid:9eaf0456-02b9-48bc-8b77-3dec71cb6c4a] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 06/29/24 12:41:52.596
  Jun 29 12:41:52.604: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-29T12:41:32Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-29T12:41:52Z]] name:name1 resourceVersion:17500 uid:e19ddd5c-d6c7-40dd-9049-384c319afcf7] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 06/29/24 12:42:02.605
  Jun 29 12:42:02.611: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-29T12:41:42Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-29T12:42:02Z]] name:name2 resourceVersion:17520 uid:9eaf0456-02b9-48bc-8b77-3dec71cb6c4a] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 06/29/24 12:42:12.615
  Jun 29 12:42:12.631: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-29T12:41:32Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-29T12:41:52Z]] name:name1 resourceVersion:17541 uid:e19ddd5c-d6c7-40dd-9049-384c319afcf7] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 06/29/24 12:42:22.638
  Jun 29 12:42:22.649: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-29T12:41:42Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-29T12:42:02Z]] name:name2 resourceVersion:17562 uid:9eaf0456-02b9-48bc-8b77-3dec71cb6c4a] num:map[num1:9223372036854775807 num2:1000000]]}
  Jun 29 12:42:33.165: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-5446" for this suite. @ 06/29/24 12:42:33.169
â€¢ [63.154 seconds]
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:94
  STEP: Creating a kubernetes client @ 06/29/24 12:42:33.176
  Jun 29 12:42:33.176: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename configmap @ 06/29/24 12:42:33.177
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:42:33.191
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:42:33.194
  STEP: Creating configMap configmap-3990/configmap-test-cc057e2b-7a05-46f2-a88a-b88311b0f112 @ 06/29/24 12:42:33.197
  STEP: Creating a pod to test consume configMaps @ 06/29/24 12:42:33.204
  STEP: Saw pod success @ 06/29/24 12:42:37.227
  Jun 29 12:42:37.230: INFO: Trying to get logs from node ip-172-31-94-98 pod pod-configmaps-4097cc4b-0078-4cd1-bb6a-3073d356b3f2 container env-test: <nil>
  STEP: delete the pod @ 06/29/24 12:42:37.239
  Jun 29 12:42:37.255: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3990" for this suite. @ 06/29/24 12:42:37.258
â€¢ [4.090 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 06/29/24 12:42:37.266
  Jun 29 12:42:37.266: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename aggregator @ 06/29/24 12:42:37.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:42:37.282
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:42:37.286
  Jun 29 12:42:37.288: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Registering the sample API server. @ 06/29/24 12:42:37.289
  Jun 29 12:42:37.510: INFO: Found ClusterRoles; assuming RBAC is enabled.
  Jun 29 12:42:37.544: INFO: deployment "sample-apiserver-deployment" doesn't have the required revision set
  Jun 29 12:42:39.594: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 29, 12, 42, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 29, 12, 42, 37, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 29, 12, 42, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 29, 12, 42, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 29 12:42:41.598: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 29, 12, 42, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 29, 12, 42, 37, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 29, 12, 42, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 29, 12, 42, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 29 12:42:43.598: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 29, 12, 42, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 29, 12, 42, 37, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 29, 12, 42, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 29, 12, 42, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 29 12:42:45.598: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 29, 12, 42, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 29, 12, 42, 37, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 29, 12, 42, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 29, 12, 42, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 29 12:42:47.601: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 29, 12, 42, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 29, 12, 42, 37, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 29, 12, 42, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 29, 12, 42, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 29 12:42:49.598: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 29, 12, 42, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 29, 12, 42, 37, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 29, 12, 42, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 29, 12, 42, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 29 12:42:51.599: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 29, 12, 42, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 29, 12, 42, 37, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 29, 12, 42, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 29, 12, 42, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 29 12:42:53.600: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 29, 12, 42, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 29, 12, 42, 37, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 29, 12, 42, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 29, 12, 42, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 29 12:42:55.598: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 29, 12, 42, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 29, 12, 42, 37, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 29, 12, 42, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 29, 12, 42, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 29 12:42:57.599: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 29, 12, 42, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 29, 12, 42, 37, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 29, 12, 42, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 29, 12, 42, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 29 12:42:59.600: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 29, 12, 42, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 29, 12, 42, 37, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 29, 12, 42, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 29, 12, 42, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 29 12:43:01.599: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 29, 12, 42, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 29, 12, 42, 37, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 29, 12, 42, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 29, 12, 42, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 29 12:43:03.599: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 29, 12, 42, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 29, 12, 42, 37, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 29, 12, 42, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 29, 12, 42, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 29 12:43:05.718: INFO: Waited 112.15254ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 06/29/24 12:43:05.748
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 06/29/24 12:43:05.753
  STEP: List APIServices @ 06/29/24 12:43:05.759
  Jun 29 12:43:05.763: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 06/29/24 12:43:05.763
  Jun 29 12:43:05.776: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 06/29/24 12:43:05.776
  Jun 29 12:43:05.857: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.June, 29, 12, 43, 5, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 06/29/24 12:43:05.857
  Jun 29 12:43:05.860: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-06-29 12:43:05 +0000 UTC Passed all checks passed}
  Jun 29 12:43:05.860: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun 29 12:43:05.860: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 06/29/24 12:43:05.86
  Jun 29 12:43:05.871: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-1429970122" @ 06/29/24 12:43:05.871
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 06/29/24 12:43:05.878
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 06/29/24 12:43:05.883
  STEP: Patch APIService Status @ 06/29/24 12:43:05.886
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 06/29/24 12:43:05.893
  Jun 29 12:43:05.897: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-06-29 12:43:05 +0000 UTC Passed all checks passed}
  Jun 29 12:43:05.897: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun 29 12:43:05.897: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  Jun 29 12:43:05.897: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 06/29/24 12:43:05.897
  STEP: Confirm that the generated APIService has been deleted @ 06/29/24 12:43:05.906
  Jun 29 12:43:05.906: INFO: Requesting list of APIServices to confirm quantity
  Jun 29 12:43:05.909: INFO: Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  Jun 29 12:43:05.909: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  Jun 29 12:43:06.008: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-3208" for this suite. @ 06/29/24 12:43:06.011
â€¢ [28.751 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 06/29/24 12:43:06.018
  Jun 29 12:43:06.018: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename pods @ 06/29/24 12:43:06.019
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:43:06.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:43:06.042
  STEP: Create a pod @ 06/29/24 12:43:06.045
  STEP: patching /status @ 06/29/24 12:43:08.065
  Jun 29 12:43:08.074: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  Jun 29 12:43:08.074: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2914" for this suite. @ 06/29/24 12:43:08.077
â€¢ [2.064 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 06/29/24 12:43:08.082
  Jun 29 12:43:08.082: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename gc @ 06/29/24 12:43:08.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:43:08.098
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:43:08.1
  Jun 29 12:43:08.132: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"6eb12709-ba80-4812-a287-0b3f70ca77e3", Controller:(*bool)(0xc001f43a9a), BlockOwnerDeletion:(*bool)(0xc001f43a9b)}}
  Jun 29 12:43:08.154: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"87fc1ab3-e415-4dd4-80cf-52506e62fd7e", Controller:(*bool)(0xc001f43cce), BlockOwnerDeletion:(*bool)(0xc001f43ccf)}}
  Jun 29 12:43:08.160: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"ff209024-bc7b-4882-b2c1-216bcf5bd9d6", Controller:(*bool)(0xc005684026), BlockOwnerDeletion:(*bool)(0xc005684027)}}
  Jun 29 12:43:13.175: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7775" for this suite. @ 06/29/24 12:43:13.178
â€¢ [5.104 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:335
  STEP: Creating a kubernetes client @ 06/29/24 12:43:13.186
  Jun 29 12:43:13.186: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename sched-pred @ 06/29/24 12:43:13.187
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:43:13.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:43:13.209
  Jun 29 12:43:13.212: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jun 29 12:43:13.219: INFO: Waiting for terminating namespaces to be deleted...
  Jun 29 12:43:13.223: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-10-28 before test
  Jun 29 12:43:13.229: INFO: nginx-ingress-controller-kubernetes-worker-zddqx from ingress-nginx-kubernetes-worker started at 2024-06-29 12:12:20 +0000 UTC (1 container statuses recorded)
  Jun 29 12:43:13.229: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jun 29 12:43:13.229: INFO: calico-node-99b9n from kube-system started at 2024-06-29 12:16:42 +0000 UTC (1 container statuses recorded)
  Jun 29 12:43:13.229: INFO: 	Container calico-node ready: true, restart count 0
  Jun 29 12:43:13.229: INFO: sonobuoy-e2e-job-7574a47ae2364127 from sonobuoy started at 2024-06-29 12:21:33 +0000 UTC (2 container statuses recorded)
  Jun 29 12:43:13.229: INFO: 	Container e2e ready: true, restart count 0
  Jun 29 12:43:13.229: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 29 12:43:13.229: INFO: sonobuoy-systemd-logs-daemon-set-6e9f3632248049cc-bfvm8 from sonobuoy started at 2024-06-29 12:21:33 +0000 UTC (2 container statuses recorded)
  Jun 29 12:43:13.229: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 29 12:43:13.229: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun 29 12:43:13.229: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-37-211 before test
  Jun 29 12:43:13.233: INFO: nginx-ingress-controller-kubernetes-worker-fcsv7 from ingress-nginx-kubernetes-worker started at 2024-06-29 12:06:30 +0000 UTC (1 container statuses recorded)
  Jun 29 12:43:13.233: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 1
  Jun 29 12:43:13.233: INFO: calico-node-kxdrr from kube-system started at 2024-06-29 12:18:33 +0000 UTC (1 container statuses recorded)
  Jun 29 12:43:13.233: INFO: 	Container calico-node ready: true, restart count 0
  Jun 29 12:43:13.233: INFO: coredns-bddfd76d7-xvgzd from kube-system started at 2024-06-29 12:06:30 +0000 UTC (1 container statuses recorded)
  Jun 29 12:43:13.233: INFO: 	Container coredns ready: true, restart count 0
  Jun 29 12:43:13.233: INFO: kube-state-metrics-6f48cdd76-svwlz from kube-system started at 2024-06-29 12:06:30 +0000 UTC (1 container statuses recorded)
  Jun 29 12:43:13.233: INFO: 	Container kube-state-metrics ready: true, restart count 5
  Jun 29 12:43:13.233: INFO: metrics-server-v0.6.3-69d7fbfdf8-xpcsj from kube-system started at 2024-06-29 12:06:30 +0000 UTC (2 container statuses recorded)
  Jun 29 12:43:13.233: INFO: 	Container metrics-server ready: true, restart count 6
  Jun 29 12:43:13.233: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Jun 29 12:43:13.233: INFO: dashboard-metrics-scraper-5dd7cb5fc-7nkfs from kubernetes-dashboard started at 2024-06-29 12:06:30 +0000 UTC (1 container statuses recorded)
  Jun 29 12:43:13.233: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Jun 29 12:43:13.233: INFO: kubernetes-dashboard-7b899cb9d9-2tg9x from kubernetes-dashboard started at 2024-06-29 12:06:30 +0000 UTC (1 container statuses recorded)
  Jun 29 12:43:13.233: INFO: 	Container kubernetes-dashboard ready: true, restart count 6
  Jun 29 12:43:13.233: INFO: sonobuoy-systemd-logs-daemon-set-6e9f3632248049cc-cpb7h from sonobuoy started at 2024-06-29 12:21:33 +0000 UTC (2 container statuses recorded)
  Jun 29 12:43:13.233: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 29 12:43:13.233: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun 29 12:43:13.233: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-94-98 before test
  Jun 29 12:43:13.239: INFO: nginx-ingress-controller-kubernetes-worker-dpg9h from ingress-nginx-kubernetes-worker started at 2024-06-29 12:16:13 +0000 UTC (1 container statuses recorded)
  Jun 29 12:43:13.239: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jun 29 12:43:13.239: INFO: calico-node-mvhgx from kube-system started at 2024-06-29 12:16:01 +0000 UTC (1 container statuses recorded)
  Jun 29 12:43:13.239: INFO: 	Container calico-node ready: true, restart count 0
  Jun 29 12:43:13.239: INFO: pod-kjhqg from pods-2914 started at 2024-06-29 12:43:06 +0000 UTC (1 container statuses recorded)
  Jun 29 12:43:13.239: INFO: 	Container agnhost ready: true, restart count 0
  Jun 29 12:43:13.239: INFO: sonobuoy from sonobuoy started at 2024-06-29 12:21:31 +0000 UTC (1 container statuses recorded)
  Jun 29 12:43:13.239: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jun 29 12:43:13.239: INFO: sonobuoy-systemd-logs-daemon-set-6e9f3632248049cc-485lm from sonobuoy started at 2024-06-29 12:21:33 +0000 UTC (2 container statuses recorded)
  Jun 29 12:43:13.239: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 29 12:43:13.239: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-10-28 @ 06/29/24 12:43:13.28
  STEP: verifying the node has the label node ip-172-31-37-211 @ 06/29/24 12:43:13.3
  STEP: verifying the node has the label node ip-172-31-94-98 @ 06/29/24 12:43:13.317
  Jun 29 12:43:13.339: INFO: Pod nginx-ingress-controller-kubernetes-worker-dpg9h requesting resource cpu=0m on Node ip-172-31-94-98
  Jun 29 12:43:13.339: INFO: Pod nginx-ingress-controller-kubernetes-worker-fcsv7 requesting resource cpu=0m on Node ip-172-31-37-211
  Jun 29 12:43:13.339: INFO: Pod nginx-ingress-controller-kubernetes-worker-zddqx requesting resource cpu=0m on Node ip-172-31-10-28
  Jun 29 12:43:13.339: INFO: Pod calico-node-99b9n requesting resource cpu=250m on Node ip-172-31-10-28
  Jun 29 12:43:13.339: INFO: Pod calico-node-kxdrr requesting resource cpu=250m on Node ip-172-31-37-211
  Jun 29 12:43:13.339: INFO: Pod calico-node-mvhgx requesting resource cpu=250m on Node ip-172-31-94-98
  Jun 29 12:43:13.339: INFO: Pod coredns-bddfd76d7-xvgzd requesting resource cpu=100m on Node ip-172-31-37-211
  Jun 29 12:43:13.339: INFO: Pod kube-state-metrics-6f48cdd76-svwlz requesting resource cpu=0m on Node ip-172-31-37-211
  Jun 29 12:43:13.339: INFO: Pod metrics-server-v0.6.3-69d7fbfdf8-xpcsj requesting resource cpu=5m on Node ip-172-31-37-211
  Jun 29 12:43:13.339: INFO: Pod dashboard-metrics-scraper-5dd7cb5fc-7nkfs requesting resource cpu=0m on Node ip-172-31-37-211
  Jun 29 12:43:13.339: INFO: Pod kubernetes-dashboard-7b899cb9d9-2tg9x requesting resource cpu=0m on Node ip-172-31-37-211
  Jun 29 12:43:13.339: INFO: Pod pod-kjhqg requesting resource cpu=0m on Node ip-172-31-94-98
  Jun 29 12:43:13.339: INFO: Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-94-98
  Jun 29 12:43:13.339: INFO: Pod sonobuoy-e2e-job-7574a47ae2364127 requesting resource cpu=0m on Node ip-172-31-10-28
  Jun 29 12:43:13.339: INFO: Pod sonobuoy-systemd-logs-daemon-set-6e9f3632248049cc-485lm requesting resource cpu=0m on Node ip-172-31-94-98
  Jun 29 12:43:13.339: INFO: Pod sonobuoy-systemd-logs-daemon-set-6e9f3632248049cc-bfvm8 requesting resource cpu=0m on Node ip-172-31-10-28
  Jun 29 12:43:13.339: INFO: Pod sonobuoy-systemd-logs-daemon-set-6e9f3632248049cc-cpb7h requesting resource cpu=0m on Node ip-172-31-37-211
  STEP: Starting Pods to consume most of the cluster CPU. @ 06/29/24 12:43:13.339
  Jun 29 12:43:13.339: INFO: Creating a pod which consumes cpu=1225m on Node ip-172-31-10-28
  Jun 29 12:43:13.352: INFO: Creating a pod which consumes cpu=1151m on Node ip-172-31-37-211
  Jun 29 12:43:13.368: INFO: Creating a pod which consumes cpu=1225m on Node ip-172-31-94-98
  STEP: Creating another pod that requires unavailable amount of CPU. @ 06/29/24 12:43:15.395
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-8efc0c0b-19da-49ce-9374-9e0693d06bfd.17dd7a3347554d38], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6149/filler-pod-8efc0c0b-19da-49ce-9374-9e0693d06bfd to ip-172-31-94-98] @ 06/29/24 12:43:15.398
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-8efc0c0b-19da-49ce-9374-9e0693d06bfd.17dd7a3364b3c7f9], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 06/29/24 12:43:15.398
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-8efc0c0b-19da-49ce-9374-9e0693d06bfd.17dd7a3365c9ccda], Reason = [Created], Message = [Created container filler-pod-8efc0c0b-19da-49ce-9374-9e0693d06bfd] @ 06/29/24 12:43:15.399
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-8efc0c0b-19da-49ce-9374-9e0693d06bfd.17dd7a3368ed9a20], Reason = [Started], Message = [Started container filler-pod-8efc0c0b-19da-49ce-9374-9e0693d06bfd] @ 06/29/24 12:43:15.399
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-bb6b9fb7-5b2b-4f8f-98c3-1469575280b4.17dd7a3346a1b2d6], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6149/filler-pod-bb6b9fb7-5b2b-4f8f-98c3-1469575280b4 to ip-172-31-37-211] @ 06/29/24 12:43:15.399
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-bb6b9fb7-5b2b-4f8f-98c3-1469575280b4.17dd7a3365b5a843], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 06/29/24 12:43:15.399
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-bb6b9fb7-5b2b-4f8f-98c3-1469575280b4.17dd7a3366a54df1], Reason = [Created], Message = [Created container filler-pod-bb6b9fb7-5b2b-4f8f-98c3-1469575280b4] @ 06/29/24 12:43:15.399
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-bb6b9fb7-5b2b-4f8f-98c3-1469575280b4.17dd7a3369dc63a1], Reason = [Started], Message = [Started container filler-pod-bb6b9fb7-5b2b-4f8f-98c3-1469575280b4] @ 06/29/24 12:43:15.399
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f869b1d5-7f11-4bce-8326-58e21ba2547a.17dd7a3345f2be6d], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6149/filler-pod-f869b1d5-7f11-4bce-8326-58e21ba2547a to ip-172-31-10-28] @ 06/29/24 12:43:15.399
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f869b1d5-7f11-4bce-8326-58e21ba2547a.17dd7a336561bb2f], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 06/29/24 12:43:15.399
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f869b1d5-7f11-4bce-8326-58e21ba2547a.17dd7a3366509053], Reason = [Created], Message = [Created container filler-pod-f869b1d5-7f11-4bce-8326-58e21ba2547a] @ 06/29/24 12:43:15.399
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f869b1d5-7f11-4bce-8326-58e21ba2547a.17dd7a336952ff80], Reason = [Started], Message = [Started container filler-pod-f869b1d5-7f11-4bce-8326-58e21ba2547a] @ 06/29/24 12:43:15.399
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17dd7a33bfcefebf], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 Insufficient cpu. preemption: 0/5 nodes are available: 2 Preemption is not helpful for scheduling, 3 No preemption victims found for incoming pod.] @ 06/29/24 12:43:15.411
  STEP: removing the label node off the node ip-172-31-10-28 @ 06/29/24 12:43:16.411
  STEP: verifying the node doesn't have the label node @ 06/29/24 12:43:16.424
  STEP: removing the label node off the node ip-172-31-37-211 @ 06/29/24 12:43:16.431
  STEP: verifying the node doesn't have the label node @ 06/29/24 12:43:16.444
  STEP: removing the label node off the node ip-172-31-94-98 @ 06/29/24 12:43:16.45
  STEP: verifying the node doesn't have the label node @ 06/29/24 12:43:16.465
  Jun 29 12:43:16.468: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6149" for this suite. @ 06/29/24 12:43:16.472
â€¢ [3.294 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 06/29/24 12:43:16.481
  Jun 29 12:43:16.481: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename deployment @ 06/29/24 12:43:16.481
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:43:16.498
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:43:16.5
  Jun 29 12:43:16.503: INFO: Creating deployment "webserver-deployment"
  Jun 29 12:43:16.510: INFO: Waiting for observed generation 1
  Jun 29 12:43:18.518: INFO: Waiting for all required pods to come up
  Jun 29 12:43:18.523: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 06/29/24 12:43:18.523
  Jun 29 12:43:18.523: INFO: Waiting for deployment "webserver-deployment" to complete
  Jun 29 12:43:18.528: INFO: Updating deployment "webserver-deployment" with a non-existent image
  Jun 29 12:43:18.537: INFO: Updating deployment webserver-deployment
  Jun 29 12:43:18.537: INFO: Waiting for observed generation 2
  Jun 29 12:43:20.546: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  Jun 29 12:43:20.550: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  Jun 29 12:43:20.554: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Jun 29 12:43:20.564: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  Jun 29 12:43:20.564: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  Jun 29 12:43:20.567: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Jun 29 12:43:20.574: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  Jun 29 12:43:20.574: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  Jun 29 12:43:20.584: INFO: Updating deployment webserver-deployment
  Jun 29 12:43:20.584: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  Jun 29 12:43:20.592: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  Jun 29 12:43:20.598: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  Jun 29 12:43:20.628: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2811",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1c9292c0-efa4-460d-b925-f00306ac7a37",
      ResourceVersion: (string) (len=5) "18218",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855261796,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261796,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun 29 12:43:20.642: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2811",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1b8a380f-de7a-41d7-a683-d06a1be4bb45",
      ResourceVersion: (string) (len=5) "18212",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855261798,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "1c9292c0-efa4-460d-b925-f00306ac7a37",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 63 39 32 39 32  63 30 2d 65 66 61 34 2d  |\"1c9292c0-efa4-|
              00000120  34 36 30 64 2d 62 39 32  35 2d 66 30 30 33 30 36  |460d-b925-f00306|
              00000130  61 63 37 61 33 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |ac7a37\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 29 12:43:20.644: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  Jun 29 12:43:20.644: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2811",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a1a0677f-1241-415a-b4dc-3585d0389c42",
      ResourceVersion: (string) (len=5) "18210",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855261796,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "1c9292c0-efa4-460d-b925-f00306ac7a37",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 63 39 32 39 32  63 30 2d 65 66 61 34 2d  |\"1c9292c0-efa4-|
              00000120  34 36 30 64 2d 62 39 32  35 2d 66 30 30 33 30 36  |460d-b925-f00306|
              00000130  61 63 37 61 33 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |ac7a37\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 29 12:43:20.669: INFO: Pod "webserver-deployment-557759b7c7-5dk8s" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-5dk8s",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2811",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d1cea565-9ca0-4ecf-8974-91c57012f920",
      ResourceVersion: (string) (len=5) "18251",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855261800,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "a1a0677f-1241-415a-b4dc-3585d0389c42",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 31  61 30 36 37 37 66 2d 31  |d\":\"a1a0677f-1|
              00000090  32 34 31 2d 34 31 35 61  2d 62 34 64 63 2d 33 35  |241-415a-b4dc-35|
              000000a0  38 35 64 30 33 38 39 63  34 32 5c 22 7d 22 3a 7b  |85d0389c42\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rm5ml",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rm5ml",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 29 12:43:20.670: INFO: Pod "webserver-deployment-557759b7c7-5lhqc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-5lhqc",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2811",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "706b0f7e-d3b7-471d-a4db-9d6b98d82607",
      ResourceVersion: (string) (len=5) "18238",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855261800,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "a1a0677f-1241-415a-b4dc-3585d0389c42",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 31  61 30 36 37 37 66 2d 31  |d\":\"a1a0677f-1|
              00000090  32 34 31 2d 34 31 35 61  2d 62 34 64 63 2d 33 35  |241-415a-b4dc-35|
              000000a0  38 35 64 30 33 38 39 63  34 32 5c 22 7d 22 3a 7b  |85d0389c42\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w9ll4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w9ll4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-10-28",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 29 12:43:20.672: INFO: Pod "webserver-deployment-557759b7c7-6pf6n" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-6pf6n",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2811",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c00d392c-1238-43bd-bb08-869b8421258f",
      ResourceVersion: (string) (len=5) "18253",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855261800,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "a1a0677f-1241-415a-b4dc-3585d0389c42",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 31  61 30 36 37 37 66 2d 31  |d\":\"a1a0677f-1|
              00000090  32 34 31 2d 34 31 35 61  2d 62 34 64 63 2d 33 35  |241-415a-b4dc-35|
              000000a0  38 35 64 30 33 38 39 63  34 32 5c 22 7d 22 3a 7b  |85d0389c42\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zrmqq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zrmqq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 29 12:43:20.673: INFO: Pod "webserver-deployment-557759b7c7-7v2dz" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-7v2dz",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2811",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "18329b5f-1c34-43f0-a43d-01ed81ad1d74",
      ResourceVersion: (string) (len=5) "18078",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855261796,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "a1a0677f-1241-415a-b4dc-3585d0389c42",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261796,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 31  61 30 36 37 37 66 2d 31  |d\":\"a1a0677f-1|
              00000090  32 34 31 2d 34 31 35 61  2d 62 34 64 63 2d 33 35  |241-415a-b4dc-35|
              000000a0  38 35 64 30 33 38 39 63  34 32 5c 22 7d 22 3a 7b  |85d0389c42\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 30  39 2e 31 38 5c 22 7d 22  |2.168.109.18\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fcd2q",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fcd2q",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-37-211",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261796,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261796,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.37.211",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.37.211"
        }
      },
      PodIP: (string) (len=14) "192.168.109.18",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.109.18"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855261796,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855261797,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://596da64c481c481fc7d1b89035d450d79a219d200d7f4172acd0da23d8291ea6",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 29 12:43:20.675: INFO: Pod "webserver-deployment-557759b7c7-8xm5n" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-8xm5n",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2811",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4035df09-d92f-48e3-bf04-ec9686a5b49b",
      ResourceVersion: (string) (len=5) "18069",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855261796,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "a1a0677f-1241-415a-b4dc-3585d0389c42",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261796,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 31  61 30 36 37 37 66 2d 31  |d\":\"a1a0677f-1|
              00000090  32 34 31 2d 34 31 35 61  2d 62 34 64 63 2d 33 35  |241-415a-b4dc-35|
              000000a0  38 35 64 30 33 38 39 63  34 32 5c 22 7d 22 3a 7b  |85d0389c42\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 38  33 2e 38 36 5c 22 7d 22  |2.168.183.86\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mr469",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mr469",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-94-98",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261796,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261796,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.94.98",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.94.98"
        }
      },
      PodIP: (string) (len=14) "192.168.183.86",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.183.86"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855261796,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855261797,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://92d36fab80eebc93d4ff6d42d3177341eb6ec9066375d3a08f9112bc2a3f385d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 29 12:43:20.678: INFO: Pod "webserver-deployment-557759b7c7-9fp4m" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-9fp4m",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2811",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a54206ac-823b-4e9d-82b5-6eeab3b39b6b",
      ResourceVersion: (string) (len=5) "18072",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855261796,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "a1a0677f-1241-415a-b4dc-3585d0389c42",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261796,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 31  61 30 36 37 37 66 2d 31  |d\":\"a1a0677f-1|
              00000090  32 34 31 2d 34 31 35 61  2d 62 34 64 63 2d 33 35  |241-415a-b4dc-35|
              000000a0  38 35 64 30 33 38 39 63  34 32 5c 22 7d 22 3a 7b  |85d0389c42\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 30  39 2e 33 36 5c 22 7d 22  |2.168.109.36\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jx464",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jx464",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-37-211",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261796,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261796,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.37.211",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.37.211"
        }
      },
      PodIP: (string) (len=14) "192.168.109.36",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.109.36"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855261796,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855261797,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://eee636bdbe3b7e1a822fbb8f2b269be6ea0f2938c78e2ad6168b88313d716b16",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 29 12:43:20.679: INFO: Pod "webserver-deployment-557759b7c7-clkzs" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-clkzs",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2811",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fe455760-58a6-47e5-81bd-b818fae58db4",
      ResourceVersion: (string) (len=5) "18247",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855261800,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "a1a0677f-1241-415a-b4dc-3585d0389c42",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 31  61 30 36 37 37 66 2d 31  |d\":\"a1a0677f-1|
              00000090  32 34 31 2d 34 31 35 61  2d 62 34 64 63 2d 33 35  |241-415a-b4dc-35|
              000000a0  38 35 64 30 33 38 39 63  34 32 5c 22 7d 22 3a 7b  |85d0389c42\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6hkhf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6hkhf",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-94-98",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 29 12:43:20.680: INFO: Pod "webserver-deployment-557759b7c7-f2jzf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-f2jzf",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2811",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "337763f1-d5cf-4ae3-874f-76c11e2a7e47",
      ResourceVersion: (string) (len=5) "18082",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855261796,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "a1a0677f-1241-415a-b4dc-3585d0389c42",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261796,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 31  61 30 36 37 37 66 2d 31  |d\":\"a1a0677f-1|
              00000090  32 34 31 2d 34 31 35 61  2d 62 34 64 63 2d 33 35  |241-415a-b4dc-35|
              000000a0  38 35 64 30 33 38 39 63  34 32 5c 22 7d 22 3a 7b  |85d0389c42\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 34 31  2e 37 32 5c 22 7d 22 3a  |2.168.41.72\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wdmj2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wdmj2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-10-28",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261796,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261796,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.10.28",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.10.28"
        }
      },
      PodIP: (string) (len=13) "192.168.41.72",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.41.72"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855261796,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855261797,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://43558cba4364ce16b937b1de99f509b257b0ee151695fdf7da3bd5ba4428935a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 29 12:43:20.681: INFO: Pod "webserver-deployment-557759b7c7-gzvrb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-gzvrb",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2811",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "02704309-f5cb-4d30-a6b6-5958427cfa2c",
      ResourceVersion: (string) (len=5) "18250",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855261800,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "a1a0677f-1241-415a-b4dc-3585d0389c42",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 31  61 30 36 37 37 66 2d 31  |d\":\"a1a0677f-1|
              00000090  32 34 31 2d 34 31 35 61  2d 62 34 64 63 2d 33 35  |241-415a-b4dc-35|
              000000a0  38 35 64 30 33 38 39 63  34 32 5c 22 7d 22 3a 7b  |85d0389c42\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9d99p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9d99p",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 29 12:43:20.682: INFO: Pod "webserver-deployment-557759b7c7-khs7q" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-khs7q",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2811",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "99072b21-6c53-4b22-a579-a52aff92dd94",
      ResourceVersion: (string) (len=5) "18252",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855261800,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "a1a0677f-1241-415a-b4dc-3585d0389c42",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 31  61 30 36 37 37 66 2d 31  |d\":\"a1a0677f-1|
              00000090  32 34 31 2d 34 31 35 61  2d 62 34 64 63 2d 33 35  |241-415a-b4dc-35|
              000000a0  38 35 64 30 33 38 39 63  34 32 5c 22 7d 22 3a 7b  |85d0389c42\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6k89s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6k89s",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 29 12:43:20.682: INFO: Pod "webserver-deployment-557759b7c7-mlxzg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-mlxzg",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2811",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "52cfa0c3-aa5f-4b5a-a034-05646b96c7a4",
      ResourceVersion: (string) (len=5) "18236",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855261800,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "a1a0677f-1241-415a-b4dc-3585d0389c42",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 31  61 30 36 37 37 66 2d 31  |d\":\"a1a0677f-1|
              00000090  32 34 31 2d 34 31 35 61  2d 62 34 64 63 2d 33 35  |241-415a-b4dc-35|
              000000a0  38 35 64 30 33 38 39 63  34 32 5c 22 7d 22 3a 7b  |85d0389c42\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tkkwv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tkkwv",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-37-211",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 29 12:43:20.686: INFO: Pod "webserver-deployment-557759b7c7-n2dmk" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-n2dmk",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2811",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "71d6c279-fad5-41ba-8c1d-37fe6539ca29",
      ResourceVersion: (string) (len=5) "18063",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855261796,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "a1a0677f-1241-415a-b4dc-3585d0389c42",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261796,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 31  61 30 36 37 37 66 2d 31  |d\":\"a1a0677f-1|
              00000090  32 34 31 2d 34 31 35 61  2d 62 34 64 63 2d 33 35  |241-415a-b4dc-35|
              000000a0  38 35 64 30 33 38 39 63  34 32 5c 22 7d 22 3a 7b  |85d0389c42\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 38  33 2e 36 37 5c 22 7d 22  |2.168.183.67\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6cbbq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6cbbq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-94-98",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261796,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261796,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.94.98",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.94.98"
        }
      },
      PodIP: (string) (len=14) "192.168.183.67",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.183.67"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855261796,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855261797,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://37d56501d0e8bdad647b2678a86f067b45d09545e520fa7aa5634b8a20f079c0",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 29 12:43:20.696: INFO: Pod "webserver-deployment-557759b7c7-njgpn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-njgpn",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2811",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "13b9dd03-0d98-4191-a2ce-332e541f02e8",
      ResourceVersion: (string) (len=5) "18249",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855261800,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "a1a0677f-1241-415a-b4dc-3585d0389c42",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 31  61 30 36 37 37 66 2d 31  |d\":\"a1a0677f-1|
              00000090  32 34 31 2d 34 31 35 61  2d 62 34 64 63 2d 33 35  |241-415a-b4dc-35|
              000000a0  38 35 64 30 33 38 39 63  34 32 5c 22 7d 22 3a 7b  |85d0389c42\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fzb27",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fzb27",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 29 12:43:20.696: INFO: Pod "webserver-deployment-557759b7c7-nwmf6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-nwmf6",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2811",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "705265e4-67be-43f4-baeb-55c311350591",
      ResourceVersion: (string) (len=5) "18228",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855261800,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "a1a0677f-1241-415a-b4dc-3585d0389c42",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 31  61 30 36 37 37 66 2d 31  |d\":\"a1a0677f-1|
              00000090  32 34 31 2d 34 31 35 61  2d 62 34 64 63 2d 33 35  |241-415a-b4dc-35|
              000000a0  38 35 64 30 33 38 39 63  34 32 5c 22 7d 22 3a 7b  |85d0389c42\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qm4cs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qm4cs",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-10-28",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.10.28",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.10.28"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855261800,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 29 12:43:20.698: INFO: Pod "webserver-deployment-557759b7c7-q9zdq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-q9zdq",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2811",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1a1add1c-2b0b-407c-9b35-2d85292e4765",
      ResourceVersion: (string) (len=5) "18224",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855261800,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "a1a0677f-1241-415a-b4dc-3585d0389c42",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 31  61 30 36 37 37 66 2d 31  |d\":\"a1a0677f-1|
              00000090  32 34 31 2d 34 31 35 61  2d 62 34 64 63 2d 33 35  |241-415a-b4dc-35|
              000000a0  38 35 64 30 33 38 39 63  34 32 5c 22 7d 22 3a 7b  |85d0389c42\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sf2h7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sf2h7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-10-28",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 29 12:43:20.698: INFO: Pod "webserver-deployment-557759b7c7-rvvst" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-rvvst",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2811",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dae4b84a-820f-4a13-b91b-18356e4321e3",
      ResourceVersion: (string) (len=5) "18066",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855261796,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "a1a0677f-1241-415a-b4dc-3585d0389c42",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261796,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 31  61 30 36 37 37 66 2d 31  |d\":\"a1a0677f-1|
              00000090  32 34 31 2d 34 31 35 61  2d 62 34 64 63 2d 33 35  |241-415a-b4dc-35|
              000000a0  38 35 64 30 33 38 39 63  34 32 5c 22 7d 22 3a 7b  |85d0389c42\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 38  33 2e 37 33 5c 22 7d 22  |2.168.183.73\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9zb7m",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9zb7m",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-94-98",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261796,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261796,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.94.98",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.94.98"
        }
      },
      PodIP: (string) (len=14) "192.168.183.73",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.183.73"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855261796,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855261797,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ae6096af30db4f4aad39dbaabac226a2e894e3132863531656f0f45e10e7ca2f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 29 12:43:20.701: INFO: Pod "webserver-deployment-557759b7c7-spzgg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-spzgg",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2811",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "255104f2-22d0-4fba-a781-6bd50f260b23",
      ResourceVersion: (string) (len=5) "18075",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855261796,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "a1a0677f-1241-415a-b4dc-3585d0389c42",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261796,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 31  61 30 36 37 37 66 2d 31  |d\":\"a1a0677f-1|
              00000090  32 34 31 2d 34 31 35 61  2d 62 34 64 63 2d 33 35  |241-415a-b4dc-35|
              000000a0  38 35 64 30 33 38 39 63  34 32 5c 22 7d 22 3a 7b  |85d0389c42\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 30  39 2e 31 39 5c 22 7d 22  |2.168.109.19\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8pvvg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8pvvg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-37-211",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261796,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261796,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.37.211",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.37.211"
        }
      },
      PodIP: (string) (len=14) "192.168.109.19",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.109.19"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855261796,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855261797,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://72c204de0addafeaac49c63204cf57064a6dfbfe7a579d98075618040743ef5d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 29 12:43:20.702: INFO: Pod "webserver-deployment-557759b7c7-srn82" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-srn82",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2811",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3bf84de2-9bd1-4c53-8381-f167d268f7f1",
      ResourceVersion: (string) (len=5) "18248",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855261800,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "a1a0677f-1241-415a-b4dc-3585d0389c42",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 31  61 30 36 37 37 66 2d 31  |d\":\"a1a0677f-1|
              00000090  32 34 31 2d 34 31 35 61  2d 62 34 64 63 2d 33 35  |241-415a-b4dc-35|
              000000a0  38 35 64 30 33 38 39 63  34 32 5c 22 7d 22 3a 7b  |85d0389c42\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tr6kt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tr6kt",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-37-211",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 29 12:43:20.703: INFO: Pod "webserver-deployment-557759b7c7-tx5rd" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-tx5rd",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2811",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d4aa91b0-b5f3-4c4c-a9c8-6b66e47ad932",
      ResourceVersion: (string) (len=5) "18060",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855261796,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "a1a0677f-1241-415a-b4dc-3585d0389c42",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261796,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 31  61 30 36 37 37 66 2d 31  |d\":\"a1a0677f-1|
              00000090  32 34 31 2d 34 31 35 61  2d 62 34 64 63 2d 33 35  |241-415a-b4dc-35|
              000000a0  38 35 64 30 33 38 39 63  34 32 5c 22 7d 22 3a 7b  |85d0389c42\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 38  33 2e 39 30 5c 22 7d 22  |2.168.183.90\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lqnfw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lqnfw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-94-98",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261796,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261796,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.94.98",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.94.98"
        }
      },
      PodIP: (string) (len=14) "192.168.183.90",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.183.90"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855261796,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855261797,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://7325cea24f89685dfc61608f414d7361e4d69801f7aedb2646e84c6e2b0b7f9b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 29 12:43:20.709: INFO: Pod "webserver-deployment-557759b7c7-xm9px" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-xm9px",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2811",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4fff29d6-ba86-4921-87bc-2e247ebc7c79",
      ResourceVersion: (string) (len=5) "18240",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855261800,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "a1a0677f-1241-415a-b4dc-3585d0389c42",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 31  61 30 36 37 37 66 2d 31  |d\":\"a1a0677f-1|
              00000090  32 34 31 2d 34 31 35 61  2d 62 34 64 63 2d 33 35  |241-415a-b4dc-35|
              000000a0  38 35 64 30 33 38 39 63  34 32 5c 22 7d 22 3a 7b  |85d0389c42\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2rpgx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2rpgx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-10-28",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.10.28",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.10.28"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855261800,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 29 12:43:20.715: INFO: Pod "webserver-deployment-9b4f5bf69-2szmk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-2szmk",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2811",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cd1ce333-1627-4c5e-96ff-a67ade2f965b",
      ResourceVersion: (string) (len=5) "18245",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855261800,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "1b8a380f-de7a-41d7-a683-d06a1be4bb45",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 62  38 61 33 38 30 66 2d 64  |d\":\"1b8a380f-d|
              00000090  65 37 61 2d 34 31 64 37  2d 61 36 38 33 2d 64 30  |e7a-41d7-a683-d0|
              000000a0  36 61 31 62 65 34 62 62  34 35 5c 22 7d 22 3a 7b  |6a1be4bb45\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hw6ns",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hw6ns",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 29 12:43:20.716: INFO: Pod "webserver-deployment-9b4f5bf69-7n9fg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-7n9fg",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2811",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ce728aa1-214d-4eb2-9c04-00b2a39112d4",
      ResourceVersion: (string) (len=5) "18246",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855261800,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "1b8a380f-de7a-41d7-a683-d06a1be4bb45",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 62  38 61 33 38 30 66 2d 64  |d\":\"1b8a380f-d|
              00000090  65 37 61 2d 34 31 64 37  2d 61 36 38 33 2d 64 30  |e7a-41d7-a683-d0|
              000000a0  36 61 31 62 65 34 62 62  34 35 5c 22 7d 22 3a 7b  |6a1be4bb45\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lwwc4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lwwc4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-37-211",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.37.211",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.37.211"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855261800,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 29 12:43:20.717: INFO: Pod "webserver-deployment-9b4f5bf69-bvm26" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-bvm26",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2811",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "57ced88b-d86f-4116-9887-15574c7b3c54",
      ResourceVersion: (string) (len=5) "18204",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855261798,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "1b8a380f-de7a-41d7-a683-d06a1be4bb45",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 62  38 61 33 38 30 66 2d 64  |d\":\"1b8a380f-d|
              00000090  65 37 61 2d 34 31 64 37  2d 61 36 38 33 2d 64 30  |e7a-41d7-a683-d0|
              000000a0  36 61 31 62 65 34 62 62  34 35 5c 22 7d 22 3a 7b  |6a1be4bb45\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 34 31 2e 39 34  5c 22 7d 22 3a 7b 22 2e  |68.41.94\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hx9ww",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hx9ww",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-10-28",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.10.28",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.10.28"
        }
      },
      PodIP: (string) (len=13) "192.168.41.94",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.41.94"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855261798,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 29 12:43:20.719: INFO: Pod "webserver-deployment-9b4f5bf69-d7qqt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-d7qqt",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2811",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7808d83f-cfde-4c7f-9ed9-59e3c3f714c7",
      ResourceVersion: (string) (len=5) "18243",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855261800,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "1b8a380f-de7a-41d7-a683-d06a1be4bb45",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 62  38 61 33 38 30 66 2d 64  |d\":\"1b8a380f-d|
              00000090  65 37 61 2d 34 31 64 37  2d 61 36 38 33 2d 64 30  |e7a-41d7-a683-d0|
              000000a0  36 61 31 62 65 34 62 62  34 35 5c 22 7d 22 3a 7b  |6a1be4bb45\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fmtfr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fmtfr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 29 12:43:20.720: INFO: Pod "webserver-deployment-9b4f5bf69-djv2c" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-djv2c",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2811",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5217e46b-da8a-4329-930e-3de0dc5aa049",
      ResourceVersion: (string) (len=5) "18235",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855261800,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "1b8a380f-de7a-41d7-a683-d06a1be4bb45",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 62  38 61 33 38 30 66 2d 64  |d\":\"1b8a380f-d|
              00000090  65 37 61 2d 34 31 64 37  2d 61 36 38 33 2d 64 30  |e7a-41d7-a683-d0|
              000000a0  36 61 31 62 65 34 62 62  34 35 5c 22 7d 22 3a 7b  |6a1be4bb45\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-km2s5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-km2s5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-94-98",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 29 12:43:20.721: INFO: Pod "webserver-deployment-9b4f5bf69-kxhd6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-kxhd6",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2811",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "893842cc-d858-4af2-b4aa-95ee5f2c474b",
      ResourceVersion: (string) (len=5) "18198",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855261798,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "1b8a380f-de7a-41d7-a683-d06a1be4bb45",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 62  38 61 33 38 30 66 2d 64  |d\":\"1b8a380f-d|
              00000090  65 37 61 2d 34 31 64 37  2d 61 36 38 33 2d 64 30  |e7a-41d7-a683-d0|
              000000a0  36 61 31 62 65 34 62 62  34 35 5c 22 7d 22 3a 7b  |6a1be4bb45\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261799,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 38 33 2e 38  30 5c 22 7d 22 3a 7b 22  |68.183.80\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7c54m",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7c54m",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-94-98",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261799,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.94.98",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.94.98"
        }
      },
      PodIP: (string) (len=14) "192.168.183.80",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.183.80"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855261798,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 29 12:43:20.731: INFO: Pod "webserver-deployment-9b4f5bf69-nn7br" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-nn7br",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2811",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "decedc87-bd7b-463d-82af-b9a94639f8a2",
      ResourceVersion: (string) (len=5) "18207",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855261798,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "1b8a380f-de7a-41d7-a683-d06a1be4bb45",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 62  38 61 33 38 30 66 2d 64  |d\":\"1b8a380f-d|
              00000090  65 37 61 2d 34 31 64 37  2d 61 36 38 33 2d 64 30  |e7a-41d7-a683-d0|
              000000a0  36 61 31 62 65 34 62 62  34 35 5c 22 7d 22 3a 7b  |6a1be4bb45\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 34 31 2e 38 36  5c 22 7d 22 3a 7b 22 2e  |68.41.86\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6swbr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6swbr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-10-28",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.10.28",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.10.28"
        }
      },
      PodIP: (string) (len=13) "192.168.41.86",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.41.86"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855261798,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 29 12:43:20.734: INFO: Pod "webserver-deployment-9b4f5bf69-qfwtc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-qfwtc",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2811",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "858df350-37a7-489c-9578-1acae4c11bb2",
      ResourceVersion: (string) (len=5) "18241",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855261800,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "1b8a380f-de7a-41d7-a683-d06a1be4bb45",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 62  38 61 33 38 30 66 2d 64  |d\":\"1b8a380f-d|
              00000090  65 37 61 2d 34 31 64 37  2d 61 36 38 33 2d 64 30  |e7a-41d7-a683-d0|
              000000a0  36 61 31 62 65 34 62 62  34 35 5c 22 7d 22 3a 7b  |6a1be4bb45\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rlh5n",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rlh5n",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 29 12:43:20.736: INFO: Pod "webserver-deployment-9b4f5bf69-qzstd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-qzstd",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2811",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2e62e2f5-afba-4805-86d2-5a7617020b57",
      ResourceVersion: (string) (len=5) "18194",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855261798,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "1b8a380f-de7a-41d7-a683-d06a1be4bb45",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 62  38 61 33 38 30 66 2d 64  |d\":\"1b8a380f-d|
              00000090  65 37 61 2d 34 31 64 37  2d 61 36 38 33 2d 64 30  |e7a-41d7-a683-d0|
              000000a0  36 61 31 62 65 34 62 62  34 35 5c 22 7d 22 3a 7b  |6a1be4bb45\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261799,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 38 33 2e 38  35 5c 22 7d 22 3a 7b 22  |68.183.85\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zcm9t",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zcm9t",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-94-98",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261799,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.94.98",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.94.98"
        }
      },
      PodIP: (string) (len=14) "192.168.183.85",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.183.85"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855261798,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 29 12:43:20.737: INFO: Pod "webserver-deployment-9b4f5bf69-wb6x2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-wb6x2",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2811",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9ce82ee9-0196-42fe-91d6-5ef0b22cd4ad",
      ResourceVersion: (string) (len=5) "18242",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855261800,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "1b8a380f-de7a-41d7-a683-d06a1be4bb45",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 62  38 61 33 38 30 66 2d 64  |d\":\"1b8a380f-d|
              00000090  65 37 61 2d 34 31 64 37  2d 61 36 38 33 2d 64 30  |e7a-41d7-a683-d0|
              000000a0  36 61 31 62 65 34 62 62  34 35 5c 22 7d 22 3a 7b  |6a1be4bb45\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xj2vk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xj2vk",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 29 12:43:20.738: INFO: Pod "webserver-deployment-9b4f5bf69-wr92h" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-wr92h",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2811",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "24875a21-4815-49d1-a48f-71953016e720",
      ResourceVersion: (string) (len=5) "18244",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855261800,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "1b8a380f-de7a-41d7-a683-d06a1be4bb45",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 62  38 61 33 38 30 66 2d 64  |d\":\"1b8a380f-d|
              00000090  65 37 61 2d 34 31 64 37  2d 61 36 38 33 2d 64 30  |e7a-41d7-a683-d0|
              000000a0  36 61 31 62 65 34 62 62  34 35 5c 22 7d 22 3a 7b  |6a1be4bb45\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-p42jg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-p42jg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-10-28",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 29 12:43:20.739: INFO: Pod "webserver-deployment-9b4f5bf69-xq22p" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-xq22p",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2811",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a59064fd-0197-4c25-96f6-5bac5c8f0a3c",
      ResourceVersion: (string) (len=5) "18200",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855261798,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "1b8a380f-de7a-41d7-a683-d06a1be4bb45",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 62  38 61 33 38 30 66 2d 64  |d\":\"1b8a380f-d|
              00000090  65 37 61 2d 34 31 64 37  2d 61 36 38 33 2d 64 30  |e7a-41d7-a683-d0|
              000000a0  36 61 31 62 65 34 62 62  34 35 5c 22 7d 22 3a 7b  |6a1be4bb45\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261799,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 30 39 2e 36  5c 22 7d 22 3a 7b 22 2e  |68.109.6\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fvfjm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fvfjm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-37-211",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261799,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855261798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.37.211",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.37.211"
        }
      },
      PodIP: (string) (len=13) "192.168.109.6",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.109.6"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855261798,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 29 12:43:20.741: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2811" for this suite. @ 06/29/24 12:43:20.75
â€¢ [4.284 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 06/29/24 12:43:20.765
  Jun 29 12:43:20.765: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename projected @ 06/29/24 12:43:20.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:43:20.788
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:43:20.794
  STEP: Creating projection with secret that has name projected-secret-test-417fc9ff-2ef4-4314-9057-a9eecc9e09aa @ 06/29/24 12:43:20.797
  STEP: Creating a pod to test consume secrets @ 06/29/24 12:43:20.803
  STEP: Saw pod success @ 06/29/24 12:43:22.829
  Jun 29 12:43:22.833: INFO: Trying to get logs from node ip-172-31-94-98 pod pod-projected-secrets-34296104-11e8-4c0e-99bf-72c3494b0b71 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/29/24 12:43:22.866
  Jun 29 12:43:22.889: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1370" for this suite. @ 06/29/24 12:43:22.892
â€¢ [2.134 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 06/29/24 12:43:22.9
  Jun 29 12:43:22.900: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename disruption @ 06/29/24 12:43:22.9
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:43:22.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:43:22.924
  STEP: Waiting for the pdb to be processed @ 06/29/24 12:43:22.93
  STEP: Updating PodDisruptionBudget status @ 06/29/24 12:43:24.936
  STEP: Waiting for all pods to be running @ 06/29/24 12:43:24.947
  Jun 29 12:43:24.952: INFO: running pods: 0 < 1
  STEP: locating a running pod @ 06/29/24 12:43:26.965
  STEP: Waiting for the pdb to be processed @ 06/29/24 12:43:27.005
  STEP: Patching PodDisruptionBudget status @ 06/29/24 12:43:27.021
  STEP: Waiting for the pdb to be processed @ 06/29/24 12:43:27.046
  Jun 29 12:43:27.051: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7545" for this suite. @ 06/29/24 12:43:27.054
â€¢ [4.161 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 06/29/24 12:43:27.061
  Jun 29 12:43:27.061: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename endpointslice @ 06/29/24 12:43:27.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:43:27.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:43:27.083
  Jun 29 12:43:27.102: INFO: Endpoints addresses: [172.31.15.151 172.31.22.17] , ports: [6443]
  Jun 29 12:43:27.102: INFO: EndpointSlices addresses: [172.31.15.151 172.31.22.17] , ports: [6443]
  Jun 29 12:43:27.102: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9002" for this suite. @ 06/29/24 12:43:27.106
â€¢ [0.051 seconds]
------------------------------
SSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 06/29/24 12:43:27.112
  Jun 29 12:43:27.112: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename endpointslicemirroring @ 06/29/24 12:43:27.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:43:27.134
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:43:27.141
  STEP: mirroring a new custom Endpoint @ 06/29/24 12:43:27.158
  Jun 29 12:43:27.173: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 06/29/24 12:43:29.178
  Jun 29 12:43:29.186: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  STEP: mirroring deletion of a custom Endpoint @ 06/29/24 12:43:31.191
  Jun 29 12:43:31.200: INFO: Waiting for 0 EndpointSlices to exist, got 1
  Jun 29 12:43:33.204: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-5981" for this suite. @ 06/29/24 12:43:33.207
â€¢ [6.101 seconds]
------------------------------
SS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 06/29/24 12:43:33.213
  Jun 29 12:43:33.213: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename dns @ 06/29/24 12:43:33.213
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:43:33.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:43:33.231
  STEP: Creating a test externalName service @ 06/29/24 12:43:33.234
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9496.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-9496.svc.cluster.local; sleep 1; done
   @ 06/29/24 12:43:33.237
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9496.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-9496.svc.cluster.local; sleep 1; done
   @ 06/29/24 12:43:33.238
  STEP: creating a pod to probe DNS @ 06/29/24 12:43:33.238
  STEP: submitting the pod to kubernetes @ 06/29/24 12:43:33.238
  STEP: retrieving the pod @ 06/29/24 12:43:39.269
  STEP: looking for the results for each expected name from probers @ 06/29/24 12:43:39.273
  Jun 29 12:43:39.281: INFO: DNS probes using dns-test-06cd9e9b-548f-4785-a46a-48f152a2681e succeeded

  STEP: changing the externalName to bar.example.com @ 06/29/24 12:43:39.281
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9496.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-9496.svc.cluster.local; sleep 1; done
   @ 06/29/24 12:43:39.289
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9496.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-9496.svc.cluster.local; sleep 1; done
   @ 06/29/24 12:43:39.289
  STEP: creating a second pod to probe DNS @ 06/29/24 12:43:39.289
  STEP: submitting the pod to kubernetes @ 06/29/24 12:43:39.29
  STEP: retrieving the pod @ 06/29/24 12:43:45.32
  STEP: looking for the results for each expected name from probers @ 06/29/24 12:43:45.325
  Jun 29 12:43:45.333: INFO: DNS probes using dns-test-413dde26-a8c0-4ed6-9aa8-6285252fcf86 succeeded

  STEP: changing the service to type=ClusterIP @ 06/29/24 12:43:45.333
  W0629 12:43:45.345509      18 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9496.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-9496.svc.cluster.local; sleep 1; done
   @ 06/29/24 12:43:45.345
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9496.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-9496.svc.cluster.local; sleep 1; done
   @ 06/29/24 12:43:45.345
  STEP: creating a third pod to probe DNS @ 06/29/24 12:43:45.345
  STEP: submitting the pod to kubernetes @ 06/29/24 12:43:45.349
  STEP: retrieving the pod @ 06/29/24 12:43:47.369
  STEP: looking for the results for each expected name from probers @ 06/29/24 12:43:47.373
  Jun 29 12:43:47.381: INFO: DNS probes using dns-test-03c00988-fb7c-4af7-b75a-d2f6f23eb1d5 succeeded

  STEP: deleting the pod @ 06/29/24 12:43:47.381
  STEP: deleting the pod @ 06/29/24 12:43:47.397
  STEP: deleting the pod @ 06/29/24 12:43:47.413
  STEP: deleting the test externalName service @ 06/29/24 12:43:47.427
  Jun 29 12:43:47.442: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9496" for this suite. @ 06/29/24 12:43:47.446
â€¢ [14.240 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 06/29/24 12:43:47.453
  Jun 29 12:43:47.453: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename pods @ 06/29/24 12:43:47.453
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:43:47.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:43:47.472
  STEP: Create set of pods @ 06/29/24 12:43:47.475
  Jun 29 12:43:47.483: INFO: created test-pod-1
  Jun 29 12:43:47.492: INFO: created test-pod-2
  Jun 29 12:43:47.498: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 06/29/24 12:43:47.498
  STEP: waiting for all pods to be deleted @ 06/29/24 12:43:51.667
  Jun 29 12:43:51.678: INFO: Pod quantity 3 is different from expected quantity 0
  Jun 29 12:43:52.672: INFO: Pod quantity 2 is different from expected quantity 0
  Jun 29 12:43:53.673: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4926" for this suite. @ 06/29/24 12:43:53.676
â€¢ [6.230 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:808
  STEP: Creating a kubernetes client @ 06/29/24 12:43:53.684
  Jun 29 12:43:53.684: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename resourcequota @ 06/29/24 12:43:53.684
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:43:53.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:43:53.7
  STEP: Creating a ResourceQuota with best effort scope @ 06/29/24 12:43:53.703
  STEP: Ensuring ResourceQuota status is calculated @ 06/29/24 12:43:53.708
  STEP: Creating a ResourceQuota with not best effort scope @ 06/29/24 12:43:55.714
  STEP: Ensuring ResourceQuota status is calculated @ 06/29/24 12:43:55.718
  STEP: Creating a best-effort pod @ 06/29/24 12:43:57.724
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 06/29/24 12:43:57.735
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 06/29/24 12:43:59.739
  STEP: Deleting the pod @ 06/29/24 12:44:01.744
  STEP: Ensuring resource quota status released the pod usage @ 06/29/24 12:44:01.758
  STEP: Creating a not best-effort pod @ 06/29/24 12:44:03.763
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 06/29/24 12:44:03.774
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 06/29/24 12:44:05.78
  STEP: Deleting the pod @ 06/29/24 12:44:07.784
  STEP: Ensuring resource quota status released the pod usage @ 06/29/24 12:44:07.8
  Jun 29 12:44:09.805: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8049" for this suite. @ 06/29/24 12:44:09.809
â€¢ [16.134 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 06/29/24 12:44:09.818
  Jun 29 12:44:09.818: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename init-container @ 06/29/24 12:44:09.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:44:09.836
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:44:09.839
  STEP: creating the pod @ 06/29/24 12:44:09.843
  Jun 29 12:44:09.843: INFO: PodSpec: initContainers in spec.initContainers
  Jun 29 12:44:12.708: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-6800" for this suite. @ 06/29/24 12:44:12.711
â€¢ [2.901 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:695
  STEP: Creating a kubernetes client @ 06/29/24 12:44:12.725
  Jun 29 12:44:12.725: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename resourcequota @ 06/29/24 12:44:12.729
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:44:12.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:44:12.749
  STEP: Creating a ResourceQuota with terminating scope @ 06/29/24 12:44:12.751
  STEP: Ensuring ResourceQuota status is calculated @ 06/29/24 12:44:12.763
  STEP: Creating a ResourceQuota with not terminating scope @ 06/29/24 12:44:14.767
  STEP: Ensuring ResourceQuota status is calculated @ 06/29/24 12:44:14.774
  STEP: Creating a long running pod @ 06/29/24 12:44:16.778
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 06/29/24 12:44:16.792
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 06/29/24 12:44:18.798
  STEP: Deleting the pod @ 06/29/24 12:44:20.803
  STEP: Ensuring resource quota status released the pod usage @ 06/29/24 12:44:20.816
  STEP: Creating a terminating pod @ 06/29/24 12:44:22.823
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 06/29/24 12:44:22.833
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 06/29/24 12:44:24.838
  STEP: Deleting the pod @ 06/29/24 12:44:26.843
  STEP: Ensuring resource quota status released the pod usage @ 06/29/24 12:44:26.856
  Jun 29 12:44:28.861: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6400" for this suite. @ 06/29/24 12:44:28.865
â€¢ [16.148 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:708
  STEP: Creating a kubernetes client @ 06/29/24 12:44:28.873
  Jun 29 12:44:28.873: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename sched-pred @ 06/29/24 12:44:28.874
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:44:28.886
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:44:28.889
  Jun 29 12:44:28.892: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jun 29 12:44:28.899: INFO: Waiting for terminating namespaces to be deleted...
  Jun 29 12:44:28.902: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-10-28 before test
  Jun 29 12:44:28.906: INFO: nginx-ingress-controller-kubernetes-worker-zddqx from ingress-nginx-kubernetes-worker started at 2024-06-29 12:12:20 +0000 UTC (1 container statuses recorded)
  Jun 29 12:44:28.906: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jun 29 12:44:28.906: INFO: calico-node-99b9n from kube-system started at 2024-06-29 12:16:42 +0000 UTC (1 container statuses recorded)
  Jun 29 12:44:28.906: INFO: 	Container calico-node ready: true, restart count 0
  Jun 29 12:44:28.906: INFO: sonobuoy-e2e-job-7574a47ae2364127 from sonobuoy started at 2024-06-29 12:21:33 +0000 UTC (2 container statuses recorded)
  Jun 29 12:44:28.906: INFO: 	Container e2e ready: true, restart count 0
  Jun 29 12:44:28.906: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 29 12:44:28.906: INFO: sonobuoy-systemd-logs-daemon-set-6e9f3632248049cc-bfvm8 from sonobuoy started at 2024-06-29 12:21:33 +0000 UTC (2 container statuses recorded)
  Jun 29 12:44:28.906: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 29 12:44:28.906: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun 29 12:44:28.906: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-37-211 before test
  Jun 29 12:44:28.910: INFO: nginx-ingress-controller-kubernetes-worker-fcsv7 from ingress-nginx-kubernetes-worker started at 2024-06-29 12:06:30 +0000 UTC (1 container statuses recorded)
  Jun 29 12:44:28.910: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 1
  Jun 29 12:44:28.910: INFO: calico-node-kxdrr from kube-system started at 2024-06-29 12:18:33 +0000 UTC (1 container statuses recorded)
  Jun 29 12:44:28.910: INFO: 	Container calico-node ready: true, restart count 0
  Jun 29 12:44:28.910: INFO: coredns-bddfd76d7-xvgzd from kube-system started at 2024-06-29 12:06:30 +0000 UTC (1 container statuses recorded)
  Jun 29 12:44:28.910: INFO: 	Container coredns ready: true, restart count 0
  Jun 29 12:44:28.910: INFO: kube-state-metrics-6f48cdd76-svwlz from kube-system started at 2024-06-29 12:06:30 +0000 UTC (1 container statuses recorded)
  Jun 29 12:44:28.910: INFO: 	Container kube-state-metrics ready: true, restart count 5
  Jun 29 12:44:28.910: INFO: metrics-server-v0.6.3-69d7fbfdf8-xpcsj from kube-system started at 2024-06-29 12:06:30 +0000 UTC (2 container statuses recorded)
  Jun 29 12:44:28.910: INFO: 	Container metrics-server ready: true, restart count 6
  Jun 29 12:44:28.910: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Jun 29 12:44:28.910: INFO: dashboard-metrics-scraper-5dd7cb5fc-7nkfs from kubernetes-dashboard started at 2024-06-29 12:06:30 +0000 UTC (1 container statuses recorded)
  Jun 29 12:44:28.910: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Jun 29 12:44:28.910: INFO: kubernetes-dashboard-7b899cb9d9-2tg9x from kubernetes-dashboard started at 2024-06-29 12:06:30 +0000 UTC (1 container statuses recorded)
  Jun 29 12:44:28.911: INFO: 	Container kubernetes-dashboard ready: true, restart count 6
  Jun 29 12:44:28.911: INFO: sonobuoy-systemd-logs-daemon-set-6e9f3632248049cc-cpb7h from sonobuoy started at 2024-06-29 12:21:33 +0000 UTC (2 container statuses recorded)
  Jun 29 12:44:28.911: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 29 12:44:28.911: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun 29 12:44:28.911: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-94-98 before test
  Jun 29 12:44:28.917: INFO: nginx-ingress-controller-kubernetes-worker-dpg9h from ingress-nginx-kubernetes-worker started at 2024-06-29 12:16:13 +0000 UTC (1 container statuses recorded)
  Jun 29 12:44:28.917: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jun 29 12:44:28.917: INFO: calico-node-mvhgx from kube-system started at 2024-06-29 12:16:01 +0000 UTC (1 container statuses recorded)
  Jun 29 12:44:28.917: INFO: 	Container calico-node ready: true, restart count 0
  Jun 29 12:44:28.917: INFO: sonobuoy from sonobuoy started at 2024-06-29 12:21:31 +0000 UTC (1 container statuses recorded)
  Jun 29 12:44:28.917: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jun 29 12:44:28.917: INFO: sonobuoy-systemd-logs-daemon-set-6e9f3632248049cc-485lm from sonobuoy started at 2024-06-29 12:21:33 +0000 UTC (2 container statuses recorded)
  Jun 29 12:44:28.917: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 29 12:44:28.917: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 06/29/24 12:44:28.917
  STEP: Explicitly delete pod here to free the resource it takes. @ 06/29/24 12:44:30.941
  STEP: Trying to apply a random label on the found node. @ 06/29/24 12:44:30.958
  STEP: verifying the node has the label kubernetes.io/e2e-6bc5a122-283e-4c10-97b4-a09a50868e9f 95 @ 06/29/24 12:44:30.968
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 06/29/24 12:44:30.974
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.94.98 on the node which pod4 resides and expect not scheduled @ 06/29/24 12:44:32.991
  STEP: removing the label kubernetes.io/e2e-6bc5a122-283e-4c10-97b4-a09a50868e9f off the node ip-172-31-94-98 @ 06/29/24 12:49:33.002
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-6bc5a122-283e-4c10-97b4-a09a50868e9f @ 06/29/24 12:49:33.015
  Jun 29 12:49:33.018: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-9088" for this suite. @ 06/29/24 12:49:33.026
â€¢ [304.159 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 06/29/24 12:49:33.033
  Jun 29 12:49:33.033: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename webhook @ 06/29/24 12:49:33.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:49:33.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:49:33.058
  STEP: Setting up server cert @ 06/29/24 12:49:33.093
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/29/24 12:49:33.448
  STEP: Deploying the webhook pod @ 06/29/24 12:49:33.457
  STEP: Wait for the deployment to be ready @ 06/29/24 12:49:33.469
  Jun 29 12:49:33.477: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/29/24 12:49:35.487
  STEP: Verifying the service has paired with the endpoint @ 06/29/24 12:49:35.497
  Jun 29 12:49:36.497: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jun 29 12:49:36.504: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-6880-crds.webhook.example.com via the AdmissionRegistration API @ 06/29/24 12:49:37.016
  STEP: Creating a custom resource that should be mutated by the webhook @ 06/29/24 12:49:37.03
  Jun 29 12:49:39.620: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7673" for this suite. @ 06/29/24 12:49:39.625
  STEP: Destroying namespace "webhook-markers-7082" for this suite. @ 06/29/24 12:49:39.634
â€¢ [6.606 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1838
  STEP: Creating a kubernetes client @ 06/29/24 12:49:39.64
  Jun 29 12:49:39.640: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename kubectl @ 06/29/24 12:49:39.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:49:39.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:49:39.654
  STEP: starting the proxy server @ 06/29/24 12:49:39.657
  Jun 29 12:49:39.657: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-451 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 06/29/24 12:49:39.689
  Jun 29 12:49:39.694: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-451" for this suite. @ 06/29/24 12:49:39.697
â€¢ [0.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 06/29/24 12:49:39.703
  Jun 29 12:49:39.703: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename services @ 06/29/24 12:49:39.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:49:39.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:49:39.72
  STEP: creating service endpoint-test2 in namespace services-4293 @ 06/29/24 12:49:39.723
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4293 to expose endpoints map[] @ 06/29/24 12:49:39.735
  Jun 29 12:49:39.743: INFO: successfully validated that service endpoint-test2 in namespace services-4293 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-4293 @ 06/29/24 12:49:39.743
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4293 to expose endpoints map[pod1:[80]] @ 06/29/24 12:49:41.768
  Jun 29 12:49:41.777: INFO: successfully validated that service endpoint-test2 in namespace services-4293 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 06/29/24 12:49:41.778
  Jun 29 12:49:41.778: INFO: Creating new exec pod
  Jun 29 12:49:44.794: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-4293 exec execpodnd5j4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Jun 29 12:49:44.900: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Jun 29 12:49:44.900: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 29 12:49:44.900: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-4293 exec execpodnd5j4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.49 80'
  Jun 29 12:49:44.991: INFO: stderr: "+ + ncecho -v -t hostName -w\n 2 10.152.183.49 80\nConnection to 10.152.183.49 80 port [tcp/http] succeeded!\n"
  Jun 29 12:49:44.991: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-4293 @ 06/29/24 12:49:44.991
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4293 to expose endpoints map[pod1:[80] pod2:[80]] @ 06/29/24 12:49:47.014
  Jun 29 12:49:47.030: INFO: successfully validated that service endpoint-test2 in namespace services-4293 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 06/29/24 12:49:47.03
  Jun 29 12:49:48.030: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-4293 exec execpodnd5j4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Jun 29 12:49:48.123: INFO: stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Jun 29 12:49:48.123: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 29 12:49:48.123: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-4293 exec execpodnd5j4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.49 80'
  Jun 29 12:49:48.214: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.49 80\nConnection to 10.152.183.49 80 port [tcp/http] succeeded!\n"
  Jun 29 12:49:48.214: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-4293 @ 06/29/24 12:49:48.214
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4293 to expose endpoints map[pod2:[80]] @ 06/29/24 12:49:48.227
  Jun 29 12:49:48.242: INFO: successfully validated that service endpoint-test2 in namespace services-4293 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 06/29/24 12:49:48.242
  Jun 29 12:49:49.243: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-4293 exec execpodnd5j4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Jun 29 12:49:49.334: INFO: stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Jun 29 12:49:49.334: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 29 12:49:49.334: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-4293 exec execpodnd5j4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.49 80'
  Jun 29 12:49:49.426: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.49 80\nConnection to 10.152.183.49 80 port [tcp/http] succeeded!\n"
  Jun 29 12:49:49.426: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-4293 @ 06/29/24 12:49:49.426
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4293 to expose endpoints map[] @ 06/29/24 12:49:49.437
  Jun 29 12:49:50.457: INFO: successfully validated that service endpoint-test2 in namespace services-4293 exposes endpoints map[]
  Jun 29 12:49:50.475: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4293" for this suite. @ 06/29/24 12:49:50.478
â€¢ [10.782 seconds]
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:321
  STEP: Creating a kubernetes client @ 06/29/24 12:49:50.485
  Jun 29 12:49:50.486: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename statefulset @ 06/29/24 12:49:50.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:49:50.498
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:49:50.5
  STEP: Creating service test in namespace statefulset-6904 @ 06/29/24 12:49:50.507
  STEP: Creating a new StatefulSet @ 06/29/24 12:49:50.513
  Jun 29 12:49:50.530: INFO: Found 0 stateful pods, waiting for 3
  Jun 29 12:50:00.526: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun 29 12:50:00.526: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Jun 29 12:50:00.526: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  Jun 29 12:50:00.536: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=statefulset-6904 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 29 12:50:00.624: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 29 12:50:00.624: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 29 12:50:00.624: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 06/29/24 12:50:10.633
  Jun 29 12:50:10.653: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 06/29/24 12:50:10.653
  STEP: Updating Pods in reverse ordinal order @ 06/29/24 12:50:20.661
  Jun 29 12:50:20.664: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=statefulset-6904 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun 29 12:50:20.757: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun 29 12:50:20.757: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun 29 12:50:20.757: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun 29 12:50:30.774: INFO: Waiting for StatefulSet statefulset-6904/ss2 to complete update
  STEP: Rolling back to a previous revision @ 06/29/24 12:50:40.778
  Jun 29 12:50:40.778: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=statefulset-6904 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 29 12:50:40.872: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 29 12:50:40.872: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 29 12:50:40.872: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun 29 12:50:50.900: INFO: Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 06/29/24 12:51:00.909
  Jun 29 12:51:00.912: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=statefulset-6904 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun 29 12:51:00.997: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun 29 12:51:00.997: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun 29 12:51:00.997: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun 29 12:51:11.012: INFO: Deleting all statefulset in ns statefulset-6904
  Jun 29 12:51:11.014: INFO: Scaling statefulset ss2 to 0
  Jun 29 12:51:21.027: INFO: Waiting for statefulset status.replicas updated to 0
  Jun 29 12:51:21.030: INFO: Deleting statefulset ss2
  Jun 29 12:51:21.044: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6904" for this suite. @ 06/29/24 12:51:21.048
â€¢ [90.569 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 06/29/24 12:51:21.055
  Jun 29 12:51:21.055: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename projected @ 06/29/24 12:51:21.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:51:21.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:51:21.075
  STEP: Creating configMap with name projected-configmap-test-volume-d8b2d1b8-71a6-4013-a71d-c7a2d3d882dc @ 06/29/24 12:51:21.078
  STEP: Creating a pod to test consume configMaps @ 06/29/24 12:51:21.083
  STEP: Saw pod success @ 06/29/24 12:51:25.113
  Jun 29 12:51:25.116: INFO: Trying to get logs from node ip-172-31-94-98 pod pod-projected-configmaps-5f1a5445-1fc3-4cbc-a471-fca626859e67 container agnhost-container: <nil>
  STEP: delete the pod @ 06/29/24 12:51:25.133
  Jun 29 12:51:25.149: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6537" for this suite. @ 06/29/24 12:51:25.152
â€¢ [4.104 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 06/29/24 12:51:25.159
  Jun 29 12:51:25.159: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 06/29/24 12:51:25.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:51:25.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:51:25.175
  STEP: creating a target pod @ 06/29/24 12:51:25.178
  STEP: adding an ephemeral container @ 06/29/24 12:51:27.197
  STEP: checking pod container endpoints @ 06/29/24 12:51:29.215
  Jun 29 12:51:29.215: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-7273 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 29 12:51:29.215: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  Jun 29 12:51:29.215: INFO: ExecWithOptions: Clientset creation
  Jun 29 12:51:29.215: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-7273/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Jun 29 12:51:29.267: INFO: Exec stderr: ""
  Jun 29 12:51:29.272: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-7273" for this suite. @ 06/29/24 12:51:29.277
â€¢ [4.125 seconds]
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 06/29/24 12:51:29.285
  Jun 29 12:51:29.285: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/29/24 12:51:29.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:51:29.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:51:29.299
  Jun 29 12:51:29.302: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  Jun 29 12:51:30.323: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4748" for this suite. @ 06/29/24 12:51:30.327
â€¢ [1.049 seconds]
------------------------------
S
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 06/29/24 12:51:30.333
  Jun 29 12:51:30.333: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename downward-api @ 06/29/24 12:51:30.334
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:51:30.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:51:30.353
  STEP: Creating a pod to test downward api env vars @ 06/29/24 12:51:30.355
  STEP: Saw pod success @ 06/29/24 12:51:34.381
  Jun 29 12:51:34.385: INFO: Trying to get logs from node ip-172-31-94-98 pod downward-api-279c0d6d-16fa-4644-ae7c-25625162b183 container dapi-container: <nil>
  STEP: delete the pod @ 06/29/24 12:51:34.392
  Jun 29 12:51:34.409: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5781" for this suite. @ 06/29/24 12:51:34.412
â€¢ [4.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 06/29/24 12:51:34.419
  Jun 29 12:51:34.419: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename gc @ 06/29/24 12:51:34.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:51:34.439
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:51:34.441
  STEP: create the deployment @ 06/29/24 12:51:34.443
  W0629 12:51:34.451356      18 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 06/29/24 12:51:34.451
  STEP: delete the deployment @ 06/29/24 12:51:34.46
  STEP: wait for all rs to be garbage collected @ 06/29/24 12:51:34.472
  STEP: expected 0 rs, got 1 rs @ 06/29/24 12:51:34.481
  STEP: expected 0 pods, got 2 pods @ 06/29/24 12:51:34.488
  STEP: Gathering metrics @ 06/29/24 12:51:34.981
  W0629 12:51:34.988343      18 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jun 29 12:51:34.988: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jun 29 12:51:34.989: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2929" for this suite. @ 06/29/24 12:51:34.992
â€¢ [0.579 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 06/29/24 12:51:34.998
  Jun 29 12:51:34.998: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename replicaset @ 06/29/24 12:51:34.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:51:35.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:51:35.019
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 06/29/24 12:51:35.022
  STEP: When a replicaset with a matching selector is created @ 06/29/24 12:51:37.043
  STEP: Then the orphan pod is adopted @ 06/29/24 12:51:37.048
  STEP: When the matched label of one of its pods change @ 06/29/24 12:51:38.055
  Jun 29 12:51:38.058: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 06/29/24 12:51:38.069
  Jun 29 12:51:39.086: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5609" for this suite. @ 06/29/24 12:51:39.089
â€¢ [4.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 06/29/24 12:51:39.098
  Jun 29 12:51:39.098: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename downward-api @ 06/29/24 12:51:39.099
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:51:39.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:51:39.114
  STEP: Creating a pod to test downward API volume plugin @ 06/29/24 12:51:39.117
  STEP: Saw pod success @ 06/29/24 12:51:43.169
  Jun 29 12:51:43.174: INFO: Trying to get logs from node ip-172-31-10-28 pod downwardapi-volume-b5c43602-384f-405a-918d-cf4ba973faab container client-container: <nil>
  STEP: delete the pod @ 06/29/24 12:51:43.224
  Jun 29 12:51:43.257: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6321" for this suite. @ 06/29/24 12:51:43.261
â€¢ [4.170 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:627
  STEP: Creating a kubernetes client @ 06/29/24 12:51:43.268
  Jun 29 12:51:43.268: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename job @ 06/29/24 12:51:43.269
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:51:43.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:51:43.289
  STEP: Creating a job @ 06/29/24 12:51:43.292
  STEP: Ensuring active pods == parallelism @ 06/29/24 12:51:43.297
  STEP: delete a job @ 06/29/24 12:51:45.302
  STEP: deleting Job.batch foo in namespace job-3287, will wait for the garbage collector to delete the pods @ 06/29/24 12:51:45.302
  Jun 29 12:51:45.365: INFO: Deleting Job.batch foo took: 8.344183ms
  Jun 29 12:51:45.466: INFO: Terminating Job.batch foo pods took: 101.082033ms
  STEP: Ensuring job was deleted @ 06/29/24 12:51:46.467
  Jun 29 12:51:46.470: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3287" for this suite. @ 06/29/24 12:51:46.473
â€¢ [3.211 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:169
  STEP: Creating a kubernetes client @ 06/29/24 12:51:46.479
  Jun 29 12:51:46.479: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 06/29/24 12:51:46.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:51:46.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:51:46.498
  STEP: create the container to handle the HTTPGet hook request. @ 06/29/24 12:51:46.504
  STEP: create the pod with lifecycle hook @ 06/29/24 12:51:48.528
  STEP: check poststart hook @ 06/29/24 12:51:50.549
  STEP: delete the pod with lifecycle hook @ 06/29/24 12:51:50.556
  Jun 29 12:51:52.573: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-6562" for this suite. @ 06/29/24 12:51:52.578
â€¢ [6.108 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1863
  STEP: Creating a kubernetes client @ 06/29/24 12:51:52.588
  Jun 29 12:51:52.588: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename kubectl @ 06/29/24 12:51:52.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:51:52.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:51:52.617
  STEP: Starting the proxy @ 06/29/24 12:51:52.621
  Jun 29 12:51:52.621: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-2194 proxy --unix-socket=/tmp/kubectl-proxy-unix2190285919/test'
  STEP: retrieving proxy /api/ output @ 06/29/24 12:51:52.686
  Jun 29 12:51:52.687: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2194" for this suite. @ 06/29/24 12:51:52.691
â€¢ [0.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 06/29/24 12:51:52.698
  Jun 29 12:51:52.698: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename container-probe @ 06/29/24 12:51:52.699
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:51:52.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:51:52.717
  STEP: Creating pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191 @ 06/29/24 12:51:52.719
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/29/24 12:51:54.737
  Jun 29 12:51:54.742: INFO: Initial restart count of pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 is 0
  Jun 29 12:51:54.745: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:51:56.750: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:51:58.757: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:52:00.762: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:52:02.766: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:52:04.772: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:52:06.779: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:52:08.783: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:52:10.788: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:52:12.793: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:52:14.799: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:52:16.804: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:52:18.810: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:52:20.815: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:52:22.821: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:52:24.825: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:52:26.830: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:52:28.834: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:52:30.840: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:52:32.845: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:52:34.851: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:52:36.856: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:52:38.863: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:52:40.868: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:52:42.872: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:52:44.879: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:52:46.883: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:52:48.888: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:52:50.891: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:52:52.897: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:52:54.901: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:52:56.906: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:52:58.910: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:53:00.916: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:53:02.921: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:53:04.927: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:53:06.932: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:53:08.937: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:53:10.942: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:53:12.949: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:53:14.953: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:53:16.957: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:53:18.961: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:53:20.966: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:53:22.972: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:53:24.976: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:53:26.982: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:53:28.989: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:53:30.993: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:53:32.997: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:53:35.002: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:53:37.007: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:53:39.011: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:53:41.016: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:53:43.020: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:53:45.024: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:53:47.028: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:53:49.035: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:53:51.040: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:53:53.044: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:53:55.049: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:53:57.054: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:53:59.060: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:54:01.064: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:54:03.070: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:54:05.075: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:54:07.081: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:54:09.087: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:54:11.092: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:54:13.097: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:54:15.103: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:54:17.109: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:54:19.115: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:54:21.121: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:54:23.127: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:54:25.134: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:54:27.138: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:54:29.143: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:54:31.148: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:54:33.153: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:54:35.160: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:54:37.164: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:54:39.170: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:54:41.175: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:54:43.181: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:54:45.187: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:54:47.194: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:54:49.199: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:54:51.203: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:54:53.209: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:54:55.213: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:54:57.220: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:54:59.225: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:55:01.231: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:55:03.236: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:55:05.240: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:55:07.244: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:55:09.249: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:55:11.254: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:55:13.260: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:55:15.265: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:55:17.271: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:55:19.276: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:55:21.280: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:55:23.285: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:55:25.289: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:55:27.294: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:55:29.300: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:55:31.306: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:55:33.310: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:55:35.315: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:55:37.320: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:55:39.325: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:55:41.329: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:55:43.335: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:55:45.340: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:55:47.345: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:55:49.350: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:55:51.356: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  Jun 29 12:55:53.361: INFO: Get pod test-webserver-be38584d-9abe-46bf-bd18-54cb5488ba47 in namespace container-probe-4191
  STEP: deleting the pod @ 06/29/24 12:55:55.361
  Jun 29 12:55:55.375: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4191" for this suite. @ 06/29/24 12:55:55.38
â€¢ [242.691 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 06/29/24 12:55:55.39
  Jun 29 12:55:55.390: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename projected @ 06/29/24 12:55:55.391
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:55:55.402
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:55:55.405
  STEP: Creating configMap with name projected-configmap-test-volume-map-6dac5709-6790-4bdd-9edc-5eddf449b032 @ 06/29/24 12:55:55.409
  STEP: Creating a pod to test consume configMaps @ 06/29/24 12:55:55.412
  STEP: Saw pod success @ 06/29/24 12:55:59.437
  Jun 29 12:55:59.442: INFO: Trying to get logs from node ip-172-31-94-98 pod pod-projected-configmaps-42d73b60-b1d9-4d65-a1b9-8e2b2c3aad3e container agnhost-container: <nil>
  STEP: delete the pod @ 06/29/24 12:55:59.451
  Jun 29 12:55:59.467: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1283" for this suite. @ 06/29/24 12:55:59.47
â€¢ [4.087 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:330
  STEP: Creating a kubernetes client @ 06/29/24 12:55:59.477
  Jun 29 12:55:59.477: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename resourcequota @ 06/29/24 12:55:59.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:55:59.493
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:55:59.496
  STEP: Counting existing ResourceQuota @ 06/29/24 12:56:16.502
  STEP: Creating a ResourceQuota @ 06/29/24 12:56:21.508
  STEP: Ensuring resource quota status is calculated @ 06/29/24 12:56:21.515
  STEP: Creating a ConfigMap @ 06/29/24 12:56:23.52
  STEP: Ensuring resource quota status captures configMap creation @ 06/29/24 12:56:23.533
  STEP: Deleting a ConfigMap @ 06/29/24 12:56:25.537
  STEP: Ensuring resource quota status released usage @ 06/29/24 12:56:25.543
  Jun 29 12:56:27.548: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9163" for this suite. @ 06/29/24 12:56:27.551
â€¢ [28.082 seconds]
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 06/29/24 12:56:27.559
  Jun 29 12:56:27.559: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename sched-preemption @ 06/29/24 12:56:27.559
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:56:27.574
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:56:27.578
  Jun 29 12:56:27.593: INFO: Waiting up to 1m0s for all nodes to be ready
  Jun 29 12:57:27.597: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 06/29/24 12:57:27.6
  Jun 29 12:57:27.618: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Jun 29 12:57:27.628: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Jun 29 12:57:27.644: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Jun 29 12:57:27.651: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Jun 29 12:57:27.670: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Jun 29 12:57:27.674: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 06/29/24 12:57:27.674
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 06/29/24 12:57:29.703
  Jun 29 12:57:33.788: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-6341" for this suite. @ 06/29/24 12:57:33.791
â€¢ [66.239 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 06/29/24 12:57:33.798
  Jun 29 12:57:33.798: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename configmap @ 06/29/24 12:57:33.799
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:57:33.814
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:57:33.817
  STEP: Creating configMap with name configmap-test-volume-map-d0956ab2-d2fc-4895-ac64-2ce7e4594c9c @ 06/29/24 12:57:33.82
  STEP: Creating a pod to test consume configMaps @ 06/29/24 12:57:33.824
  STEP: Saw pod success @ 06/29/24 12:57:37.85
  Jun 29 12:57:37.853: INFO: Trying to get logs from node ip-172-31-94-98 pod pod-configmaps-5105dcd9-e17a-4c0e-b303-7b803863ce77 container agnhost-container: <nil>
  STEP: delete the pod @ 06/29/24 12:57:37.87
  Jun 29 12:57:37.884: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7053" for this suite. @ 06/29/24 12:57:37.887
â€¢ [4.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 06/29/24 12:57:37.895
  Jun 29 12:57:37.895: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename var-expansion @ 06/29/24 12:57:37.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:57:37.907
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:57:37.911
  STEP: Creating a pod to test substitution in container's args @ 06/29/24 12:57:37.913
  STEP: Saw pod success @ 06/29/24 12:57:41.937
  Jun 29 12:57:41.941: INFO: Trying to get logs from node ip-172-31-94-98 pod var-expansion-3721f3c3-4382-4f85-8b4d-2f86d26e353c container dapi-container: <nil>
  STEP: delete the pod @ 06/29/24 12:57:41.947
  Jun 29 12:57:41.964: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3748" for this suite. @ 06/29/24 12:57:41.967
â€¢ [4.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:399
  STEP: Creating a kubernetes client @ 06/29/24 12:57:41.974
  Jun 29 12:57:41.974: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename kubectl @ 06/29/24 12:57:41.975
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:57:41.987
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:57:41.99
  STEP: creating all guestbook components @ 06/29/24 12:57:41.995
  Jun 29 12:57:41.995: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  Jun 29 12:57:41.995: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-31 create -f -'
  Jun 29 12:57:42.086: INFO: stderr: ""
  Jun 29 12:57:42.086: INFO: stdout: "service/agnhost-replica created\n"
  Jun 29 12:57:42.086: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  Jun 29 12:57:42.086: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-31 create -f -'
  Jun 29 12:57:42.182: INFO: stderr: ""
  Jun 29 12:57:42.182: INFO: stdout: "service/agnhost-primary created\n"
  Jun 29 12:57:42.183: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  Jun 29 12:57:42.183: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-31 create -f -'
  Jun 29 12:57:42.274: INFO: stderr: ""
  Jun 29 12:57:42.274: INFO: stdout: "service/frontend created\n"
  Jun 29 12:57:42.274: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  Jun 29 12:57:42.274: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-31 create -f -'
  Jun 29 12:57:42.339: INFO: stderr: ""
  Jun 29 12:57:42.339: INFO: stdout: "deployment.apps/frontend created\n"
  Jun 29 12:57:42.339: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Jun 29 12:57:42.339: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-31 create -f -'
  Jun 29 12:57:42.412: INFO: stderr: ""
  Jun 29 12:57:42.412: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  Jun 29 12:57:42.412: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Jun 29 12:57:42.412: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-31 create -f -'
  Jun 29 12:57:42.473: INFO: stderr: ""
  Jun 29 12:57:42.473: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 06/29/24 12:57:42.473
  Jun 29 12:57:42.473: INFO: Waiting for all frontend pods to be Running.
  Jun 29 12:57:47.527: INFO: Waiting for frontend to serve content.
  Jun 29 12:57:47.537: INFO: Trying to add a new entry to the guestbook.
  Jun 29 12:57:47.553: INFO: Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 06/29/24 12:57:47.561
  Jun 29 12:57:47.561: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-31 delete --grace-period=0 --force -f -'
  Jun 29 12:57:47.627: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun 29 12:57:47.628: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 06/29/24 12:57:47.628
  Jun 29 12:57:47.628: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-31 delete --grace-period=0 --force -f -'
  Jun 29 12:57:47.695: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun 29 12:57:47.695: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 06/29/24 12:57:47.695
  Jun 29 12:57:47.695: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-31 delete --grace-period=0 --force -f -'
  Jun 29 12:57:47.751: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun 29 12:57:47.751: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 06/29/24 12:57:47.751
  Jun 29 12:57:47.751: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-31 delete --grace-period=0 --force -f -'
  Jun 29 12:57:47.796: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun 29 12:57:47.796: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 06/29/24 12:57:47.797
  Jun 29 12:57:47.797: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-31 delete --grace-period=0 --force -f -'
  Jun 29 12:57:47.856: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun 29 12:57:47.856: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 06/29/24 12:57:47.856
  Jun 29 12:57:47.856: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-31 delete --grace-period=0 --force -f -'
  Jun 29 12:57:47.926: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun 29 12:57:47.926: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  Jun 29 12:57:47.926: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-31" for this suite. @ 06/29/24 12:57:47.931
â€¢ [5.966 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 06/29/24 12:57:47.94
  Jun 29 12:57:47.940: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename field-validation @ 06/29/24 12:57:47.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:57:47.96
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:57:47.962
  Jun 29 12:57:47.965: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  W0629 12:57:50.502556      18 warnings.go:70] unknown field "alpha"
  W0629 12:57:50.502577      18 warnings.go:70] unknown field "beta"
  W0629 12:57:50.502580      18 warnings.go:70] unknown field "delta"
  W0629 12:57:50.502584      18 warnings.go:70] unknown field "epsilon"
  W0629 12:57:50.502587      18 warnings.go:70] unknown field "gamma"
  Jun 29 12:57:51.044: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7963" for this suite. @ 06/29/24 12:57:51.049
â€¢ [3.116 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 06/29/24 12:57:51.056
  Jun 29 12:57:51.056: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename container-runtime @ 06/29/24 12:57:51.057
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:57:51.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:57:51.071
  STEP: create the container @ 06/29/24 12:57:51.074
  W0629 12:57:51.084519      18 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 06/29/24 12:57:51.084
  STEP: get the container status @ 06/29/24 12:57:54.107
  STEP: the container should be terminated @ 06/29/24 12:57:54.111
  STEP: the termination message should be set @ 06/29/24 12:57:54.111
  Jun 29 12:57:54.111: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 06/29/24 12:57:54.111
  Jun 29 12:57:54.125: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5487" for this suite. @ 06/29/24 12:57:54.128
â€¢ [3.079 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 06/29/24 12:57:54.135
  Jun 29 12:57:54.135: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename projected @ 06/29/24 12:57:54.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:57:54.151
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:57:54.154
  STEP: Creating configMap with name projected-configmap-test-volume-ce007981-21de-41c3-a969-b802b7dc77ee @ 06/29/24 12:57:54.156
  STEP: Creating a pod to test consume configMaps @ 06/29/24 12:57:54.161
  STEP: Saw pod success @ 06/29/24 12:57:56.18
  Jun 29 12:57:56.182: INFO: Trying to get logs from node ip-172-31-94-98 pod pod-projected-configmaps-6365fae2-e983-4598-93f5-4285aecafb75 container agnhost-container: <nil>
  STEP: delete the pod @ 06/29/24 12:57:56.188
  Jun 29 12:57:56.203: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9486" for this suite. @ 06/29/24 12:57:56.206
â€¢ [2.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 06/29/24 12:57:56.213
  Jun 29 12:57:56.213: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename field-validation @ 06/29/24 12:57:56.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:57:56.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:57:56.232
  STEP: apply creating a deployment @ 06/29/24 12:57:56.236
  Jun 29 12:57:56.253: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7896" for this suite. @ 06/29/24 12:57:56.258
â€¢ [0.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:558
  STEP: Creating a kubernetes client @ 06/29/24 12:57:56.264
  Jun 29 12:57:56.264: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename ingress @ 06/29/24 12:57:56.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:57:56.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:57:56.276
  STEP: getting /apis @ 06/29/24 12:57:56.283
  STEP: getting /apis/networking.k8s.io @ 06/29/24 12:57:56.286
  STEP: getting /apis/networking.k8s.iov1 @ 06/29/24 12:57:56.287
  STEP: creating @ 06/29/24 12:57:56.288
  STEP: getting @ 06/29/24 12:57:56.405
  STEP: listing @ 06/29/24 12:57:56.41
  STEP: watching @ 06/29/24 12:57:56.413
  Jun 29 12:57:56.413: INFO: starting watch
  STEP: cluster-wide listing @ 06/29/24 12:57:56.418
  STEP: cluster-wide watching @ 06/29/24 12:57:56.423
  Jun 29 12:57:56.423: INFO: starting watch
  STEP: patching @ 06/29/24 12:57:56.424
  STEP: updating @ 06/29/24 12:57:56.431
  Jun 29 12:57:56.444: INFO: waiting for watch events with expected annotations
  Jun 29 12:57:56.444: INFO: saw patched and updated annotations
  STEP: patching /status @ 06/29/24 12:57:56.444
  STEP: updating /status @ 06/29/24 12:57:56.452
  STEP: get /status @ 06/29/24 12:57:56.463
  STEP: deleting @ 06/29/24 12:57:56.468
  STEP: deleting a collection @ 06/29/24 12:57:56.484
  Jun 29 12:57:56.501: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-9574" for this suite. @ 06/29/24 12:57:56.504
â€¢ [0.250 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 06/29/24 12:57:56.514
  Jun 29 12:57:56.514: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename projected @ 06/29/24 12:57:56.515
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:57:56.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:57:56.533
  STEP: Creating configMap with name configmap-projected-all-test-volume-985c009d-0ee7-4e0a-bc71-9a9bee56a489 @ 06/29/24 12:57:56.538
  STEP: Creating secret with name secret-projected-all-test-volume-7d8cf2ff-ead5-44ec-bcb6-1fb7f9e40943 @ 06/29/24 12:57:56.543
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 06/29/24 12:57:56.548
  STEP: Saw pod success @ 06/29/24 12:58:00.572
  Jun 29 12:58:00.577: INFO: Trying to get logs from node ip-172-31-94-98 pod projected-volume-f9fb0f9c-c87a-4eba-9166-4b4f7aaa343f container projected-all-volume-test: <nil>
  STEP: delete the pod @ 06/29/24 12:58:00.584
  Jun 29 12:58:00.599: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5502" for this suite. @ 06/29/24 12:58:00.602
â€¢ [4.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 06/29/24 12:58:00.608
  Jun 29 12:58:00.608: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename pods @ 06/29/24 12:58:00.609
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:58:00.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:58:00.626
  STEP: creating the pod @ 06/29/24 12:58:00.629
  STEP: setting up watch @ 06/29/24 12:58:00.629
  STEP: submitting the pod to kubernetes @ 06/29/24 12:58:00.733
  STEP: verifying the pod is in kubernetes @ 06/29/24 12:58:00.745
  STEP: verifying pod creation was observed @ 06/29/24 12:58:00.752
  STEP: deleting the pod gracefully @ 06/29/24 12:58:02.764
  STEP: verifying pod deletion was observed @ 06/29/24 12:58:02.771
  Jun 29 12:58:04.006: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2675" for this suite. @ 06/29/24 12:58:04.01
â€¢ [3.409 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 06/29/24 12:58:04.018
  Jun 29 12:58:04.018: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename events @ 06/29/24 12:58:04.019
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:58:04.034
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:58:04.038
  STEP: Create set of events @ 06/29/24 12:58:04.041
  Jun 29 12:58:04.044: INFO: created test-event-1
  Jun 29 12:58:04.048: INFO: created test-event-2
  Jun 29 12:58:04.053: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 06/29/24 12:58:04.053
  STEP: delete collection of events @ 06/29/24 12:58:04.055
  Jun 29 12:58:04.055: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 06/29/24 12:58:04.075
  Jun 29 12:58:04.075: INFO: requesting list of events to confirm quantity
  Jun 29 12:58:04.079: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-3924" for this suite. @ 06/29/24 12:58:04.082
â€¢ [0.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 06/29/24 12:58:04.089
  Jun 29 12:58:04.089: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename emptydir @ 06/29/24 12:58:04.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:58:04.105
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:58:04.108
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 06/29/24 12:58:04.11
  STEP: Saw pod success @ 06/29/24 12:58:08.136
  Jun 29 12:58:08.140: INFO: Trying to get logs from node ip-172-31-94-98 pod pod-88f197fa-8ba7-40e1-86e2-d762344b4cb9 container test-container: <nil>
  STEP: delete the pod @ 06/29/24 12:58:08.147
  Jun 29 12:58:08.167: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3436" for this suite. @ 06/29/24 12:58:08.17
â€¢ [4.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1538
  STEP: Creating a kubernetes client @ 06/29/24 12:58:08.18
  Jun 29 12:58:08.180: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename kubectl @ 06/29/24 12:58:08.181
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:58:08.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:58:08.196
  STEP: creating Agnhost RC @ 06/29/24 12:58:08.2
  Jun 29 12:58:08.200: INFO: namespace kubectl-935
  Jun 29 12:58:08.200: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-935 create -f -'
  Jun 29 12:58:08.287: INFO: stderr: ""
  Jun 29 12:58:08.287: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 06/29/24 12:58:08.287
  Jun 29 12:58:09.291: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 29 12:58:09.291: INFO: Found 1 / 1
  Jun 29 12:58:09.291: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Jun 29 12:58:09.295: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 29 12:58:09.295: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jun 29 12:58:09.295: INFO: wait on agnhost-primary startup in kubectl-935 
  Jun 29 12:58:09.295: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-935 logs agnhost-primary-xb69w agnhost-primary'
  Jun 29 12:58:09.352: INFO: stderr: ""
  Jun 29 12:58:09.352: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 06/29/24 12:58:09.352
  Jun 29 12:58:09.352: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-935 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  Jun 29 12:58:09.405: INFO: stderr: ""
  Jun 29 12:58:09.405: INFO: stdout: "service/rm2 exposed\n"
  Jun 29 12:58:09.414: INFO: Service rm2 in namespace kubectl-935 found.
  STEP: exposing service @ 06/29/24 12:58:11.423
  Jun 29 12:58:11.423: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-935 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  Jun 29 12:58:11.517: INFO: stderr: ""
  Jun 29 12:58:11.517: INFO: stdout: "service/rm3 exposed\n"
  Jun 29 12:58:11.523: INFO: Service rm3 in namespace kubectl-935 found.
  Jun 29 12:58:13.530: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-935" for this suite. @ 06/29/24 12:58:13.533
â€¢ [5.360 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 06/29/24 12:58:13.54
  Jun 29 12:58:13.540: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename container-runtime @ 06/29/24 12:58:13.541
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:58:13.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:58:13.559
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 06/29/24 12:58:13.571
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 06/29/24 12:58:31.675
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 06/29/24 12:58:31.678
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 06/29/24 12:58:31.686
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 06/29/24 12:58:31.686
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 06/29/24 12:58:31.707
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 06/29/24 12:58:34.727
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 06/29/24 12:58:35.735
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 06/29/24 12:58:35.742
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 06/29/24 12:58:35.742
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 06/29/24 12:58:35.761
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 06/29/24 12:58:36.772
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 06/29/24 12:58:38.784
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 06/29/24 12:58:38.791
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 06/29/24 12:58:38.791
  Jun 29 12:58:38.820: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3736" for this suite. @ 06/29/24 12:58:38.825
â€¢ [25.291 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:784
  STEP: Creating a kubernetes client @ 06/29/24 12:58:38.832
  Jun 29 12:58:38.832: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename job @ 06/29/24 12:58:38.833
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:58:38.847
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:58:38.852
  STEP: Creating a job @ 06/29/24 12:58:38.854
  STEP: Ensure pods equal to parallelism count is attached to the job @ 06/29/24 12:58:38.858
  STEP: patching /status @ 06/29/24 12:58:40.863
  STEP: updating /status @ 06/29/24 12:58:40.869
  STEP: get /status @ 06/29/24 12:58:40.877
  Jun 29 12:58:40.888: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7675" for this suite. @ 06/29/24 12:58:40.891
â€¢ [2.065 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 06/29/24 12:58:40.898
  Jun 29 12:58:40.898: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename webhook @ 06/29/24 12:58:40.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:58:40.913
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:58:40.916
  STEP: Setting up server cert @ 06/29/24 12:58:41.012
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/29/24 12:58:41.165
  STEP: Deploying the webhook pod @ 06/29/24 12:58:41.173
  STEP: Wait for the deployment to be ready @ 06/29/24 12:58:41.185
  Jun 29 12:58:41.192: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/29/24 12:58:43.207
  STEP: Verifying the service has paired with the endpoint @ 06/29/24 12:58:43.216
  Jun 29 12:58:44.217: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 06/29/24 12:58:44.225
  STEP: create a pod that should be denied by the webhook @ 06/29/24 12:58:44.237
  STEP: create a pod that causes the webhook to hang @ 06/29/24 12:58:44.245
  STEP: create a configmap that should be denied by the webhook @ 06/29/24 12:58:54.255
  STEP: create a configmap that should be admitted by the webhook @ 06/29/24 12:58:54.262
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 06/29/24 12:58:54.269
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 06/29/24 12:58:54.278
  STEP: create a namespace that bypass the webhook @ 06/29/24 12:58:54.282
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 06/29/24 12:58:54.295
  Jun 29 12:58:54.356: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3622" for this suite. @ 06/29/24 12:58:54.361
  STEP: Destroying namespace "webhook-markers-6228" for this suite. @ 06/29/24 12:58:54.367
  STEP: Destroying namespace "exempted-namespace-228" for this suite. @ 06/29/24 12:58:54.372
â€¢ [13.482 seconds]
------------------------------
SS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:139
  STEP: Creating a kubernetes client @ 06/29/24 12:58:54.379
  Jun 29 12:58:54.379: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename configmap @ 06/29/24 12:58:54.38
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:58:54.391
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:58:54.394
  STEP: Creating configMap that has name configmap-test-emptyKey-c4a66405-bf4b-408b-a535-2d9952d0ef43 @ 06/29/24 12:58:54.397
  Jun 29 12:58:54.399: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9762" for this suite. @ 06/29/24 12:58:54.403
â€¢ [0.030 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 06/29/24 12:58:54.41
  Jun 29 12:58:54.410: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename secrets @ 06/29/24 12:58:54.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:58:54.423
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:58:54.426
  STEP: Creating secret with name secret-test-c58cbf56-54a3-4082-b48b-ad1a9111412b @ 06/29/24 12:58:54.429
  STEP: Creating a pod to test consume secrets @ 06/29/24 12:58:54.433
  STEP: Saw pod success @ 06/29/24 12:58:56.451
  Jun 29 12:58:56.454: INFO: Trying to get logs from node ip-172-31-94-98 pod pod-secrets-4bc76165-ac1f-432d-b233-90d3822028dc container secret-volume-test: <nil>
  STEP: delete the pod @ 06/29/24 12:58:56.459
  Jun 29 12:58:56.477: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3412" for this suite. @ 06/29/24 12:58:56.48
â€¢ [2.076 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 06/29/24 12:58:56.486
  Jun 29 12:58:56.487: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename emptydir @ 06/29/24 12:58:56.487
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:58:56.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:58:56.5
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 06/29/24 12:58:56.503
  STEP: Saw pod success @ 06/29/24 12:59:00.526
  Jun 29 12:59:00.529: INFO: Trying to get logs from node ip-172-31-94-98 pod pod-9b7c19b1-292a-4b32-9723-acd077bf1bca container test-container: <nil>
  STEP: delete the pod @ 06/29/24 12:59:00.534
  Jun 29 12:59:00.552: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6723" for this suite. @ 06/29/24 12:59:00.555
â€¢ [4.075 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 06/29/24 12:59:00.561
  Jun 29 12:59:00.561: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename projected @ 06/29/24 12:59:00.562
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 12:59:00.576
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 12:59:00.579
  STEP: Creating configMap with name cm-test-opt-del-09689c88-e9a6-450c-b85a-36f62f850dd2 @ 06/29/24 12:59:00.588
  STEP: Creating configMap with name cm-test-opt-upd-a3fcd14d-4239-4aee-9a07-8b8925eb3931 @ 06/29/24 12:59:00.597
  STEP: Creating the pod @ 06/29/24 12:59:00.604
  STEP: Deleting configmap cm-test-opt-del-09689c88-e9a6-450c-b85a-36f62f850dd2 @ 06/29/24 12:59:02.651
  STEP: Updating configmap cm-test-opt-upd-a3fcd14d-4239-4aee-9a07-8b8925eb3931 @ 06/29/24 12:59:02.656
  STEP: Creating configMap with name cm-test-opt-create-188d137c-8e9a-48ac-9d39-d2c365a72b9f @ 06/29/24 12:59:02.661
  STEP: waiting to observe update in volume @ 06/29/24 12:59:02.665
  Jun 29 13:00:06.953: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-558" for this suite. @ 06/29/24 13:00:06.957
â€¢ [66.404 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 06/29/24 13:00:06.966
  Jun 29 13:00:06.966: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename projected @ 06/29/24 13:00:06.966
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:00:06.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:00:06.986
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-e6c13cfa-99b8-4338-9909-11aafa50a72f @ 06/29/24 13:00:06.993
  STEP: Creating the pod @ 06/29/24 13:00:06.997
  STEP: Updating configmap projected-configmap-test-upd-e6c13cfa-99b8-4338-9909-11aafa50a72f @ 06/29/24 13:00:09.033
  STEP: waiting to observe update in volume @ 06/29/24 13:00:09.039
  Jun 29 13:01:31.394: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6092" for this suite. @ 06/29/24 13:01:31.399
â€¢ [84.440 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 06/29/24 13:01:31.407
  Jun 29 13:01:31.407: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename field-validation @ 06/29/24 13:01:31.407
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:01:31.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:01:31.428
  STEP: apply creating a deployment @ 06/29/24 13:01:31.431
  Jun 29 13:01:31.443: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6934" for this suite. @ 06/29/24 13:01:31.446
â€¢ [0.046 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:751
  STEP: Creating a kubernetes client @ 06/29/24 13:01:31.453
  Jun 29 13:01:31.453: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename statefulset @ 06/29/24 13:01:31.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:01:31.465
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:01:31.469
  STEP: Creating service test in namespace statefulset-353 @ 06/29/24 13:01:31.472
  STEP: Creating stateful set ss in namespace statefulset-353 @ 06/29/24 13:01:31.478
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-353 @ 06/29/24 13:01:31.485
  Jun 29 13:01:31.490: INFO: Found 0 stateful pods, waiting for 1
  Jun 29 13:01:41.491: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 06/29/24 13:01:41.491
  Jun 29 13:01:41.494: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=statefulset-353 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 29 13:01:41.595: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 29 13:01:41.596: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 29 13:01:41.596: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun 29 13:01:41.599: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  Jun 29 13:01:51.601: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jun 29 13:01:51.602: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jun 29 13:01:51.624: INFO: POD   NODE             PHASE    GRACE  CONDITIONS
  Jun 29 13:01:51.624: INFO: ss-0  ip-172-31-94-98  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-06-29 13:01:32 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-29 13:01:31 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-29 13:01:41 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-29 13:01:41 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-29 13:01:31 +0000 UTC  }]
  Jun 29 13:01:51.624: INFO: ss-2                   Pending         []
  Jun 29 13:01:51.624: INFO: 
  Jun 29 13:01:51.624: INFO: StatefulSet ss has not reached scale 3, at 2
  Jun 29 13:01:52.633: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.991188373s
  Jun 29 13:01:53.637: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.98281936s
  Jun 29 13:01:54.642: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.977675163s
  Jun 29 13:01:55.648: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.972581411s
  Jun 29 13:01:56.654: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.967419128s
  Jun 29 13:01:57.659: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.961249221s
  Jun 29 13:01:58.664: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.956762154s
  Jun 29 13:01:59.671: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.950900658s
  Jun 29 13:02:00.676: INFO: Verifying statefulset ss doesn't scale past 3 for another 944.462856ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-353 @ 06/29/24 13:02:01.677
  Jun 29 13:02:01.682: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=statefulset-353 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun 29 13:02:01.780: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun 29 13:02:01.780: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun 29 13:02:01.780: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun 29 13:02:01.780: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=statefulset-353 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun 29 13:02:01.889: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Jun 29 13:02:01.889: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun 29 13:02:01.889: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun 29 13:02:01.889: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=statefulset-353 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun 29 13:02:01.982: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Jun 29 13:02:01.982: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun 29 13:02:01.982: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun 29 13:02:01.985: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun 29 13:02:01.985: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Jun 29 13:02:01.985: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 06/29/24 13:02:01.985
  Jun 29 13:02:01.990: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=statefulset-353 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 29 13:02:02.075: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 29 13:02:02.075: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 29 13:02:02.075: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun 29 13:02:02.076: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=statefulset-353 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 29 13:02:02.166: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 29 13:02:02.166: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 29 13:02:02.166: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun 29 13:02:02.166: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=statefulset-353 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 29 13:02:02.255: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 29 13:02:02.256: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 29 13:02:02.256: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun 29 13:02:02.256: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jun 29 13:02:02.261: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  Jun 29 13:02:12.266: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jun 29 13:02:12.266: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Jun 29 13:02:12.266: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Jun 29 13:02:12.279: INFO: POD   NODE              PHASE    GRACE  CONDITIONS
  Jun 29 13:02:12.279: INFO: ss-0  ip-172-31-94-98   Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-06-29 13:01:32 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-29 13:01:31 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-29 13:02:02 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-29 13:02:02 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-29 13:01:31 +0000 UTC  }]
  Jun 29 13:02:12.279: INFO: ss-1  ip-172-31-37-211  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-06-29 13:01:52 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-29 13:01:51 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-29 13:02:02 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-29 13:02:02 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-29 13:01:51 +0000 UTC  }]
  Jun 29 13:02:12.279: INFO: ss-2  ip-172-31-10-28   Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-06-29 13:01:53 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-29 13:01:51 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-29 13:02:02 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-29 13:02:02 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-29 13:01:51 +0000 UTC  }]
  Jun 29 13:02:12.279: INFO: 
  Jun 29 13:02:12.279: INFO: StatefulSet ss has not reached scale 0, at 3
  Jun 29 13:02:13.284: INFO: POD   NODE             PHASE      GRACE  CONDITIONS
  Jun 29 13:02:13.284: INFO: ss-0  ip-172-31-94-98  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-06-29 13:02:12 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-29 13:01:31 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-29 13:02:02 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-29 13:02:02 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-29 13:01:31 +0000 UTC  }]
  Jun 29 13:02:13.284: INFO: 
  Jun 29 13:02:13.284: INFO: StatefulSet ss has not reached scale 0, at 1
  Jun 29 13:02:14.289: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.991461403s
  Jun 29 13:02:15.294: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.987082082s
  Jun 29 13:02:16.298: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.981385019s
  Jun 29 13:02:17.305: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.977208575s
  Jun 29 13:02:18.308: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.971246897s
  Jun 29 13:02:19.313: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.966863724s
  Jun 29 13:02:20.317: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.962304096s
  Jun 29 13:02:21.323: INFO: Verifying statefulset ss doesn't scale past 0 for another 958.426291ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-353 @ 06/29/24 13:02:22.324
  Jun 29 13:02:22.328: INFO: Scaling statefulset ss to 0
  Jun 29 13:02:22.337: INFO: Waiting for statefulset status.replicas updated to 0
  Jun 29 13:02:22.340: INFO: Deleting all statefulset in ns statefulset-353
  Jun 29 13:02:22.343: INFO: Scaling statefulset ss to 0
  Jun 29 13:02:22.350: INFO: Waiting for statefulset status.replicas updated to 0
  Jun 29 13:02:22.353: INFO: Deleting statefulset ss
  Jun 29 13:02:22.368: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-353" for this suite. @ 06/29/24 13:02:22.374
â€¢ [50.929 seconds]
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 06/29/24 13:02:22.382
  Jun 29 13:02:22.382: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename svcaccounts @ 06/29/24 13:02:22.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:02:22.398
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:02:22.401
  Jun 29 13:02:22.421: INFO: created pod pod-service-account-defaultsa
  Jun 29 13:02:22.421: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  Jun 29 13:02:22.427: INFO: created pod pod-service-account-mountsa
  Jun 29 13:02:22.427: INFO: pod pod-service-account-mountsa service account token volume mount: true
  Jun 29 13:02:22.437: INFO: created pod pod-service-account-nomountsa
  Jun 29 13:02:22.437: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  Jun 29 13:02:22.454: INFO: created pod pod-service-account-defaultsa-mountspec
  Jun 29 13:02:22.454: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  Jun 29 13:02:22.463: INFO: created pod pod-service-account-mountsa-mountspec
  Jun 29 13:02:22.463: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  Jun 29 13:02:22.468: INFO: created pod pod-service-account-nomountsa-mountspec
  Jun 29 13:02:22.468: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  Jun 29 13:02:22.477: INFO: created pod pod-service-account-defaultsa-nomountspec
  Jun 29 13:02:22.477: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  Jun 29 13:02:22.485: INFO: created pod pod-service-account-mountsa-nomountspec
  Jun 29 13:02:22.485: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  Jun 29 13:02:22.495: INFO: created pod pod-service-account-nomountsa-nomountspec
  Jun 29 13:02:22.495: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  Jun 29 13:02:22.495: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2691" for this suite. @ 06/29/24 13:02:22.5
â€¢ [0.133 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 06/29/24 13:02:22.516
  Jun 29 13:02:22.516: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename pods @ 06/29/24 13:02:22.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:02:22.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:02:22.539
  STEP: Saw pod success @ 06/29/24 13:02:26.588
  Jun 29 13:02:26.591: INFO: Trying to get logs from node ip-172-31-94-98 pod client-envvars-9458e855-84f1-4312-842c-30d25ea753bb container env3cont: <nil>
  STEP: delete the pod @ 06/29/24 13:02:26.602
  Jun 29 13:02:26.620: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7670" for this suite. @ 06/29/24 13:02:26.622
â€¢ [4.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1373
  STEP: Creating a kubernetes client @ 06/29/24 13:02:26.63
  Jun 29 13:02:26.630: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename kubectl @ 06/29/24 13:02:26.63
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:02:26.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:02:26.65
  STEP: validating cluster-info @ 06/29/24 13:02:26.653
  Jun 29 13:02:26.653: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-480 cluster-info'
  Jun 29 13:02:26.698: INFO: stderr: ""
  Jun 29 13:02:26.698: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.152.183.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  Jun 29 13:02:26.698: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-480" for this suite. @ 06/29/24 13:02:26.702
â€¢ [0.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:488
  STEP: Creating a kubernetes client @ 06/29/24 13:02:26.709
  Jun 29 13:02:26.709: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename security-context-test @ 06/29/24 13:02:26.71
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:02:26.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:02:26.727
  Jun 29 13:02:30.757: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2687" for this suite. @ 06/29/24 13:02:30.761
â€¢ [4.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 06/29/24 13:02:30.767
  Jun 29 13:02:30.767: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename replication-controller @ 06/29/24 13:02:30.768
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:02:30.784
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:02:30.789
  STEP: Creating replication controller my-hostname-basic-bbf45d5c-a39f-4ffe-91c5-83d339187e3e @ 06/29/24 13:02:30.791
  Jun 29 13:02:30.801: INFO: Pod name my-hostname-basic-bbf45d5c-a39f-4ffe-91c5-83d339187e3e: Found 0 pods out of 1
  Jun 29 13:02:35.805: INFO: Pod name my-hostname-basic-bbf45d5c-a39f-4ffe-91c5-83d339187e3e: Found 1 pods out of 1
  Jun 29 13:02:35.805: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-bbf45d5c-a39f-4ffe-91c5-83d339187e3e" are running
  Jun 29 13:02:35.809: INFO: Pod "my-hostname-basic-bbf45d5c-a39f-4ffe-91c5-83d339187e3e-htz2j" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-29 13:02:31 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-29 13:02:30 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-29 13:02:31 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-29 13:02:31 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-29 13:02:30 +0000 UTC Reason: Message:}])
  Jun 29 13:02:35.809: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 06/29/24 13:02:35.809
  Jun 29 13:02:35.820: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1383" for this suite. @ 06/29/24 13:02:35.823
â€¢ [5.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 06/29/24 13:02:35.832
  Jun 29 13:02:35.832: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename pod-network-test @ 06/29/24 13:02:35.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:02:35.844
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:02:35.847
  STEP: Performing setup for networking test in namespace pod-network-test-8572 @ 06/29/24 13:02:35.85
  STEP: creating a selector @ 06/29/24 13:02:35.85
  STEP: Creating the service pods in kubernetes @ 06/29/24 13:02:35.85
  Jun 29 13:02:35.850: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 06/29/24 13:02:47.936
  Jun 29 13:02:50.073: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Jun 29 13:02:50.073: INFO: Going to poll 192.168.41.119 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Jun 29 13:02:50.076: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.41.119 8081 | grep -v '^\s*$'] Namespace:pod-network-test-8572 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 29 13:02:50.076: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  Jun 29 13:02:50.076: INFO: ExecWithOptions: Clientset creation
  Jun 29 13:02:50.076: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8572/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.41.119+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jun 29 13:02:51.142: INFO: Found all 1 expected endpoints: [netserver-0]
  Jun 29 13:02:51.142: INFO: Going to poll 192.168.109.62 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Jun 29 13:02:51.146: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.109.62 8081 | grep -v '^\s*$'] Namespace:pod-network-test-8572 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 29 13:02:51.146: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  Jun 29 13:02:51.146: INFO: ExecWithOptions: Clientset creation
  Jun 29 13:02:51.146: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8572/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.109.62+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jun 29 13:02:52.194: INFO: Found all 1 expected endpoints: [netserver-1]
  Jun 29 13:02:52.194: INFO: Going to poll 192.168.183.126 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Jun 29 13:02:52.197: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.183.126 8081 | grep -v '^\s*$'] Namespace:pod-network-test-8572 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 29 13:02:52.197: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  Jun 29 13:02:52.198: INFO: ExecWithOptions: Clientset creation
  Jun 29 13:02:52.198: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8572/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.183.126+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jun 29 13:02:53.245: INFO: Found all 1 expected endpoints: [netserver-2]
  Jun 29 13:02:53.246: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-8572" for this suite. @ 06/29/24 13:02:53.251
â€¢ [17.427 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 06/29/24 13:02:53.259
  Jun 29 13:02:53.259: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename runtimeclass @ 06/29/24 13:02:53.259
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:02:53.275
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:02:53.278
  STEP: Deleting RuntimeClass runtimeclass-3628-delete-me @ 06/29/24 13:02:53.288
  STEP: Waiting for the RuntimeClass to disappear @ 06/29/24 13:02:53.293
  Jun 29 13:02:53.302: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3628" for this suite. @ 06/29/24 13:02:53.305
â€¢ [0.053 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:147
  STEP: Creating a kubernetes client @ 06/29/24 13:02:53.312
  Jun 29 13:02:53.312: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename kubelet-test @ 06/29/24 13:02:53.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:02:53.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:02:53.327
  STEP: Waiting for pod completion @ 06/29/24 13:02:53.338
  Jun 29 13:02:57.366: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2592" for this suite. @ 06/29/24 13:02:57.37
â€¢ [4.064 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 06/29/24 13:02:57.376
  Jun 29 13:02:57.376: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename init-container @ 06/29/24 13:02:57.377
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:02:57.391
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:02:57.395
  STEP: creating the pod @ 06/29/24 13:02:57.398
  Jun 29 13:02:57.398: INFO: PodSpec: initContainers in spec.initContainers
  Jun 29 13:03:41.531: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-d5842591-ce91-47c8-910c-9c463a9b4a71", GenerateName:"", Namespace:"init-container-9497", SelfLink:"", UID:"35b59654-6fbb-4c44-a67d-a07070c93ea6", ResourceVersion:"24662", Generation:0, CreationTimestamp:time.Date(2024, time.June, 29, 13, 2, 57, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"398083571"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 2, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001ac2108), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 3, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001ac2138), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-wqxgn", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc0013de0c0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-wqxgn", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-wqxgn", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-wqxgn", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0046a2548), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-94-98", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc0001e82a0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0046a25d0)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0046a25f0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc0046a25f8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0046a25fc), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc000d220c0), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.June, 29, 13, 2, 58, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.June, 29, 13, 2, 57, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.June, 29, 13, 2, 57, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.June, 29, 13, 2, 57, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.June, 29, 13, 2, 57, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.94.98", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.31.94.98"}}, PodIP:"192.168.183.70", PodIPs:[]v1.PodIP{v1.PodIP{IP:"192.168.183.70"}}, StartTime:time.Date(2024, time.June, 29, 13, 2, 57, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0001e83f0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0001e85b0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://0f80524f385386b54a364462f5c21d10622bd5c688c103091d56b2b5597923d1", Started:(*bool)(0xc0046a269a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0013de120), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc0046a26af), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0013de100), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc0046a267f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  Jun 29 13:03:41.531: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9497" for this suite. @ 06/29/24 13:03:41.535
â€¢ [44.165 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 06/29/24 13:03:41.542
  Jun 29 13:03:41.542: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename subpath @ 06/29/24 13:03:41.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:03:41.558
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:03:41.561
  STEP: Setting up data @ 06/29/24 13:03:41.563
  STEP: Creating pod pod-subpath-test-projected-xs2m @ 06/29/24 13:03:41.574
  STEP: Creating a pod to test atomic-volume-subpath @ 06/29/24 13:03:41.574
  STEP: Saw pod success @ 06/29/24 13:04:05.651
  Jun 29 13:04:05.654: INFO: Trying to get logs from node ip-172-31-10-28 pod pod-subpath-test-projected-xs2m container test-container-subpath-projected-xs2m: <nil>
  STEP: delete the pod @ 06/29/24 13:04:05.665
  STEP: Deleting pod pod-subpath-test-projected-xs2m @ 06/29/24 13:04:05.684
  Jun 29 13:04:05.684: INFO: Deleting pod "pod-subpath-test-projected-xs2m" in namespace "subpath-30"
  Jun 29 13:04:05.687: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-30" for this suite. @ 06/29/24 13:04:05.69
â€¢ [24.155 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 06/29/24 13:04:05.698
  Jun 29 13:04:05.698: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename runtimeclass @ 06/29/24 13:04:05.699
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:04:05.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:04:05.715
  Jun 29 13:04:05.728: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4741" for this suite. @ 06/29/24 13:04:05.731
â€¢ [0.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 06/29/24 13:04:05.739
  Jun 29 13:04:05.739: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename pods @ 06/29/24 13:04:05.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:04:05.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:04:05.755
  STEP: creating a Pod with a static label @ 06/29/24 13:04:05.767
  STEP: watching for Pod to be ready @ 06/29/24 13:04:05.774
  Jun 29 13:04:05.776: INFO: observed Pod pod-test in namespace pods-7745 in phase Pending with labels: map[test-pod-static:true] & conditions []
  Jun 29 13:04:05.780: INFO: observed Pod pod-test in namespace pods-7745 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-29 13:04:05 +0000 UTC  }]
  Jun 29 13:04:05.797: INFO: observed Pod pod-test in namespace pods-7745 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-06-29 13:04:05 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-29 13:04:05 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-29 13:04:05 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-29 13:04:05 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-29 13:04:05 +0000 UTC  }]
  Jun 29 13:04:06.568: INFO: Found Pod pod-test in namespace pods-7745 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-06-29 13:04:06 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-29 13:04:05 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-06-29 13:04:06 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-06-29 13:04:06 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-29 13:04:05 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 06/29/24 13:04:06.572
  STEP: getting the Pod and ensuring that it's patched @ 06/29/24 13:04:06.582
  STEP: replacing the Pod's status Ready condition to False @ 06/29/24 13:04:06.586
  STEP: check the Pod again to ensure its Ready conditions are False @ 06/29/24 13:04:06.598
  STEP: deleting the Pod via a Collection with a LabelSelector @ 06/29/24 13:04:06.598
  STEP: watching for the Pod to be deleted @ 06/29/24 13:04:06.608
  Jun 29 13:04:06.609: INFO: observed event type MODIFIED
  Jun 29 13:04:08.573: INFO: observed event type MODIFIED
  Jun 29 13:04:08.716: INFO: observed event type MODIFIED
  Jun 29 13:04:09.578: INFO: observed event type MODIFIED
  Jun 29 13:04:09.594: INFO: observed event type MODIFIED
  Jun 29 13:04:09.602: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7745" for this suite. @ 06/29/24 13:04:09.605
â€¢ [3.874 seconds]
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 06/29/24 13:04:09.613
  Jun 29 13:04:09.613: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename podtemplate @ 06/29/24 13:04:09.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:04:09.633
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:04:09.636
  Jun 29 13:04:09.669: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-6541" for this suite. @ 06/29/24 13:04:09.672
â€¢ [0.066 seconds]
------------------------------
SS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:136
  STEP: Creating a kubernetes client @ 06/29/24 13:04:09.678
  Jun 29 13:04:09.678: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 06/29/24 13:04:09.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:04:09.693
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:04:09.696
  STEP: create the container to handle the HTTPGet hook request. @ 06/29/24 13:04:09.703
  STEP: create the pod with lifecycle hook @ 06/29/24 13:04:11.721
  STEP: check poststart hook @ 06/29/24 13:04:13.742
  STEP: delete the pod with lifecycle hook @ 06/29/24 13:04:13.748
  Jun 29 13:04:17.771: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7027" for this suite. @ 06/29/24 13:04:17.775
â€¢ [8.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 06/29/24 13:04:17.78
  Jun 29 13:04:17.780: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename projected @ 06/29/24 13:04:17.781
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:04:17.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:04:17.8
  STEP: Creating a pod to test downward API volume plugin @ 06/29/24 13:04:17.803
  STEP: Saw pod success @ 06/29/24 13:04:21.825
  Jun 29 13:04:21.828: INFO: Trying to get logs from node ip-172-31-10-28 pod downwardapi-volume-50c672da-bdbf-4b1b-a880-4006810f9b90 container client-container: <nil>
  STEP: delete the pod @ 06/29/24 13:04:21.834
  Jun 29 13:04:21.847: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1180" for this suite. @ 06/29/24 13:04:21.85
â€¢ [4.076 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 06/29/24 13:04:21.856
  Jun 29 13:04:21.856: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename emptydir @ 06/29/24 13:04:21.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:04:21.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:04:21.876
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 06/29/24 13:04:21.879
  STEP: Saw pod success @ 06/29/24 13:04:25.906
  Jun 29 13:04:25.909: INFO: Trying to get logs from node ip-172-31-10-28 pod pod-b902fe2c-6615-473f-adaf-085f9bb82fad container test-container: <nil>
  STEP: delete the pod @ 06/29/24 13:04:25.916
  Jun 29 13:04:25.933: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-54" for this suite. @ 06/29/24 13:04:25.936
â€¢ [4.085 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:641
  STEP: Creating a kubernetes client @ 06/29/24 13:04:25.941
  Jun 29 13:04:25.941: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename statefulset @ 06/29/24 13:04:25.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:04:25.957
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:04:25.96
  STEP: Creating service test in namespace statefulset-766 @ 06/29/24 13:04:25.963
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 06/29/24 13:04:25.968
  STEP: Creating stateful set ss in namespace statefulset-766 @ 06/29/24 13:04:25.976
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-766 @ 06/29/24 13:04:25.981
  Jun 29 13:04:25.987: INFO: Found 0 stateful pods, waiting for 1
  Jun 29 13:04:35.987: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 06/29/24 13:04:35.988
  Jun 29 13:04:35.991: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=statefulset-766 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 29 13:04:36.079: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 29 13:04:36.079: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 29 13:04:36.079: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun 29 13:04:36.084: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  Jun 29 13:04:46.086: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jun 29 13:04:46.086: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jun 29 13:04:46.107: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999765s
  Jun 29 13:04:47.111: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.993640818s
  Jun 29 13:04:48.115: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.989691753s
  Jun 29 13:04:49.122: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.984582362s
  Jun 29 13:04:50.126: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.978777315s
  Jun 29 13:04:51.130: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.97407341s
  Jun 29 13:04:52.136: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.970154208s
  Jun 29 13:04:53.140: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.964569389s
  Jun 29 13:04:54.145: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.959945264s
  Jun 29 13:04:55.149: INFO: Verifying statefulset ss doesn't scale past 1 for another 955.377859ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-766 @ 06/29/24 13:04:56.149
  Jun 29 13:04:56.155: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=statefulset-766 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun 29 13:04:56.244: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun 29 13:04:56.244: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun 29 13:04:56.244: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun 29 13:04:56.248: INFO: Found 1 stateful pods, waiting for 3
  Jun 29 13:05:06.248: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun 29 13:05:06.248: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Jun 29 13:05:06.248: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 06/29/24 13:05:06.248
  STEP: Scale down will halt with unhealthy stateful pod @ 06/29/24 13:05:06.248
  Jun 29 13:05:06.256: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=statefulset-766 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 29 13:05:06.348: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 29 13:05:06.348: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 29 13:05:06.348: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun 29 13:05:06.348: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=statefulset-766 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 29 13:05:06.444: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 29 13:05:06.444: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 29 13:05:06.444: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun 29 13:05:06.444: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=statefulset-766 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 29 13:05:06.534: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 29 13:05:06.534: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 29 13:05:06.534: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun 29 13:05:06.534: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jun 29 13:05:06.537: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  Jun 29 13:05:16.544: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jun 29 13:05:16.544: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Jun 29 13:05:16.544: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Jun 29 13:05:16.564: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999816s
  Jun 29 13:05:17.568: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.989024315s
  Jun 29 13:05:18.573: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.985084545s
  Jun 29 13:05:19.579: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.980449572s
  Jun 29 13:05:20.584: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.974531188s
  Jun 29 13:05:21.590: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.969275331s
  Jun 29 13:05:22.608: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.950205509s
  Jun 29 13:05:23.614: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.945104125s
  Jun 29 13:05:24.619: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.938328276s
  Jun 29 13:05:25.624: INFO: Verifying statefulset ss doesn't scale past 3 for another 933.236026ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-766 @ 06/29/24 13:05:26.625
  Jun 29 13:05:26.630: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=statefulset-766 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun 29 13:05:26.716: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun 29 13:05:26.716: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun 29 13:05:26.716: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun 29 13:05:26.716: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=statefulset-766 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun 29 13:05:26.810: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun 29 13:05:26.810: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun 29 13:05:26.810: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun 29 13:05:26.810: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=statefulset-766 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun 29 13:05:26.900: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun 29 13:05:26.900: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun 29 13:05:26.900: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun 29 13:05:26.900: INFO: Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 06/29/24 13:05:36.911
  Jun 29 13:05:36.911: INFO: Deleting all statefulset in ns statefulset-766
  Jun 29 13:05:36.915: INFO: Scaling statefulset ss to 0
  Jun 29 13:05:36.921: INFO: Waiting for statefulset status.replicas updated to 0
  Jun 29 13:05:36.924: INFO: Deleting statefulset ss
  Jun 29 13:05:36.937: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-766" for this suite. @ 06/29/24 13:05:36.941
â€¢ [71.006 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 06/29/24 13:05:36.948
  Jun 29 13:05:36.948: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename container-probe @ 06/29/24 13:05:36.949
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:05:36.962
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:05:36.965
  STEP: Creating pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425 @ 06/29/24 13:05:36.968
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/29/24 13:05:38.986
  Jun 29 13:05:38.989: INFO: Initial restart count of pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a is 0
  Jun 29 13:05:38.994: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:05:40.998: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:05:43.005: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:05:45.009: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:05:47.015: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:05:49.020: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:05:51.024: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:05:53.030: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:05:55.035: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:05:57.039: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:05:59.042: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:06:01.049: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:06:03.053: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:06:05.057: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:06:07.062: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:06:09.067: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:06:11.073: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:06:13.079: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:06:15.083: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:06:17.088: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:06:19.094: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:06:21.101: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:06:23.106: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:06:25.112: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:06:27.117: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:06:29.122: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:06:31.127: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:06:33.133: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:06:35.137: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:06:37.142: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:06:39.146: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:06:41.151: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:06:43.155: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:06:45.159: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:06:47.163: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:06:49.170: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:06:51.176: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:06:53.181: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:06:55.187: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:06:57.192: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:06:59.198: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:07:01.202: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:07:03.209: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:07:05.214: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:07:07.221: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:07:09.226: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:07:11.231: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:07:13.236: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:07:15.240: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:07:17.244: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:07:19.249: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:07:21.254: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:07:23.258: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:07:25.262: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:07:27.268: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:07:29.275: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:07:31.280: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:07:33.284: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:07:35.290: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:07:37.295: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:07:39.300: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:07:41.304: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:07:43.308: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:07:45.312: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:07:47.319: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:07:49.326: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:07:51.332: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:07:53.337: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:07:55.342: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:07:57.346: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:07:59.352: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:08:01.356: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:08:03.361: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:08:05.367: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:08:07.373: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:08:09.376: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:08:11.383: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:08:13.389: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:08:15.394: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:08:17.398: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:08:19.404: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:08:21.409: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:08:23.414: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:08:25.419: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:08:27.425: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:08:29.429: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:08:31.435: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:08:33.440: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:08:35.443: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:08:37.448: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:08:39.452: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:08:41.458: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:08:43.464: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:08:45.470: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:08:47.474: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:08:49.480: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:08:51.483: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:08:53.489: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:08:55.494: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:08:57.499: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:08:59.503: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:09:01.510: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:09:03.515: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:09:05.523: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:09:07.527: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:09:09.533: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:09:11.536: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:09:13.540: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:09:15.544: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:09:17.549: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:09:19.554: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:09:21.558: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:09:23.565: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:09:25.571: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:09:27.577: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:09:29.581: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:09:31.587: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:09:33.591: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:09:35.595: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  Jun 29 13:09:37.602: INFO: Get pod busybox-4df6a046-4396-44d8-897f-e7cc6d3df82a in namespace container-probe-4425
  STEP: deleting the pod @ 06/29/24 13:09:39.603
  Jun 29 13:09:39.616: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4425" for this suite. @ 06/29/24 13:09:39.619
â€¢ [242.679 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 06/29/24 13:09:39.627
  Jun 29 13:09:39.627: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename downward-api @ 06/29/24 13:09:39.628
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:09:39.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:09:39.655
  STEP: Creating the pod @ 06/29/24 13:09:39.659
  Jun 29 13:09:42.210: INFO: Successfully updated pod "annotationupdate9980a522-025e-4b1f-ad2c-cdd5ce0b8328"
  Jun 29 13:09:46.234: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2242" for this suite. @ 06/29/24 13:09:46.239
â€¢ [6.619 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 06/29/24 13:09:46.247
  Jun 29 13:09:46.247: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename secrets @ 06/29/24 13:09:46.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:09:46.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:09:46.265
  STEP: Creating secret with name s-test-opt-del-29d6e936-eb0d-4324-93e9-71b81f43ba7f @ 06/29/24 13:09:46.27
  STEP: Creating secret with name s-test-opt-upd-19444d8b-b1fb-4607-9b4c-2e194b96a23b @ 06/29/24 13:09:46.275
  STEP: Creating the pod @ 06/29/24 13:09:46.28
  STEP: Deleting secret s-test-opt-del-29d6e936-eb0d-4324-93e9-71b81f43ba7f @ 06/29/24 13:09:48.335
  STEP: Updating secret s-test-opt-upd-19444d8b-b1fb-4607-9b4c-2e194b96a23b @ 06/29/24 13:09:48.343
  STEP: Creating secret with name s-test-opt-create-6ee5a1b2-ba71-4883-8368-37264b47f71b @ 06/29/24 13:09:48.348
  STEP: waiting to observe update in volume @ 06/29/24 13:09:48.353
  Jun 29 13:11:10.723: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9776" for this suite. @ 06/29/24 13:11:10.726
â€¢ [84.485 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 06/29/24 13:11:10.732
  Jun 29 13:11:10.732: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename security-context @ 06/29/24 13:11:10.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:11:10.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:11:10.76
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 06/29/24 13:11:10.762
  STEP: Saw pod success @ 06/29/24 13:11:14.783
  Jun 29 13:11:14.786: INFO: Trying to get logs from node ip-172-31-94-98 pod security-context-0317031e-7666-4240-ac53-3301a3a7778f container test-container: <nil>
  STEP: delete the pod @ 06/29/24 13:11:14.795
  Jun 29 13:11:14.812: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-9845" for this suite. @ 06/29/24 13:11:14.816
â€¢ [4.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 06/29/24 13:11:14.825
  Jun 29 13:11:14.825: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/29/24 13:11:14.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:11:14.836
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:11:14.839
  STEP: set up a multi version CRD @ 06/29/24 13:11:14.889
  Jun 29 13:11:14.890: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: rename a version @ 06/29/24 13:11:18.022
  STEP: check the new version name is served @ 06/29/24 13:11:18.035
  STEP: check the old version name is removed @ 06/29/24 13:11:18.869
  STEP: check the other version is not changed @ 06/29/24 13:11:19.474
  Jun 29 13:11:21.925: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8713" for this suite. @ 06/29/24 13:11:21.932
â€¢ [7.113 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2214
  STEP: Creating a kubernetes client @ 06/29/24 13:11:21.938
  Jun 29 13:11:21.938: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename services @ 06/29/24 13:11:21.938
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:11:21.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:11:21.957
  STEP: creating service in namespace services-3203 @ 06/29/24 13:11:21.959
  STEP: creating service affinity-nodeport in namespace services-3203 @ 06/29/24 13:11:21.959
  STEP: creating replication controller affinity-nodeport in namespace services-3203 @ 06/29/24 13:11:21.975
  I0629 13:11:21.981408      18 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-3203, replica count: 3
  I0629 13:11:25.033093      18 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun 29 13:11:25.043: INFO: Creating new exec pod
  Jun 29 13:11:28.064: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-3203 exec execpod-affinityrmn2r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  Jun 29 13:11:28.162: INFO: stderr: "+ nc -v -t -w 2 affinity-nodeport 80\n+ echo hostName\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  Jun 29 13:11:28.162: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 29 13:11:28.162: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-3203 exec execpod-affinityrmn2r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.180 80'
  Jun 29 13:11:28.252: INFO: stderr: "+ nc -v -t -w 2 10.152.183.180 80\nConnection to 10.152.183.180 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Jun 29 13:11:28.252: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 29 13:11:28.252: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-3203 exec execpod-affinityrmn2r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.37.211 30680'
  Jun 29 13:11:28.343: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.37.211 30680\nConnection to 172.31.37.211 30680 port [tcp/*] succeeded!\n"
  Jun 29 13:11:28.343: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 29 13:11:28.343: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-3203 exec execpod-affinityrmn2r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.10.28 30680'
  Jun 29 13:11:28.430: INFO: stderr: "+ nc -v -t -w 2 172.31.10.28 30680\n+ echo hostName\nConnection to 172.31.10.28 30680 port [tcp/*] succeeded!\n"
  Jun 29 13:11:28.430: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 29 13:11:28.430: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-3203 exec execpod-affinityrmn2r -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.10.28:30680/ ; done'
  Jun 29 13:11:28.589: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.28:30680/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.28:30680/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.28:30680/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.28:30680/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.28:30680/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.28:30680/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.28:30680/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.28:30680/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.28:30680/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.28:30680/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.28:30680/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.28:30680/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.28:30680/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.28:30680/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.28:30680/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.28:30680/\n"
  Jun 29 13:11:28.589: INFO: stdout: "\naffinity-nodeport-4gdz7\naffinity-nodeport-4gdz7\naffinity-nodeport-4gdz7\naffinity-nodeport-4gdz7\naffinity-nodeport-4gdz7\naffinity-nodeport-4gdz7\naffinity-nodeport-4gdz7\naffinity-nodeport-4gdz7\naffinity-nodeport-4gdz7\naffinity-nodeport-4gdz7\naffinity-nodeport-4gdz7\naffinity-nodeport-4gdz7\naffinity-nodeport-4gdz7\naffinity-nodeport-4gdz7\naffinity-nodeport-4gdz7\naffinity-nodeport-4gdz7"
  Jun 29 13:11:28.589: INFO: Received response from host: affinity-nodeport-4gdz7
  Jun 29 13:11:28.589: INFO: Received response from host: affinity-nodeport-4gdz7
  Jun 29 13:11:28.589: INFO: Received response from host: affinity-nodeport-4gdz7
  Jun 29 13:11:28.589: INFO: Received response from host: affinity-nodeport-4gdz7
  Jun 29 13:11:28.589: INFO: Received response from host: affinity-nodeport-4gdz7
  Jun 29 13:11:28.589: INFO: Received response from host: affinity-nodeport-4gdz7
  Jun 29 13:11:28.589: INFO: Received response from host: affinity-nodeport-4gdz7
  Jun 29 13:11:28.589: INFO: Received response from host: affinity-nodeport-4gdz7
  Jun 29 13:11:28.589: INFO: Received response from host: affinity-nodeport-4gdz7
  Jun 29 13:11:28.589: INFO: Received response from host: affinity-nodeport-4gdz7
  Jun 29 13:11:28.589: INFO: Received response from host: affinity-nodeport-4gdz7
  Jun 29 13:11:28.589: INFO: Received response from host: affinity-nodeport-4gdz7
  Jun 29 13:11:28.589: INFO: Received response from host: affinity-nodeport-4gdz7
  Jun 29 13:11:28.589: INFO: Received response from host: affinity-nodeport-4gdz7
  Jun 29 13:11:28.589: INFO: Received response from host: affinity-nodeport-4gdz7
  Jun 29 13:11:28.589: INFO: Received response from host: affinity-nodeport-4gdz7
  Jun 29 13:11:28.590: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-3203, will wait for the garbage collector to delete the pods @ 06/29/24 13:11:28.606
  Jun 29 13:11:28.667: INFO: Deleting ReplicationController affinity-nodeport took: 6.811212ms
  Jun 29 13:11:28.767: INFO: Terminating ReplicationController affinity-nodeport pods took: 100.220603ms
  Jun 29 13:11:31.788: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3203" for this suite. @ 06/29/24 13:11:31.792
â€¢ [9.860 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 06/29/24 13:11:31.799
  Jun 29 13:11:31.799: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/29/24 13:11:31.799
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:11:31.814
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:11:31.816
  Jun 29 13:11:31.818: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 06/29/24 13:11:33.229
  Jun 29 13:11:33.229: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=crd-publish-openapi-8633 --namespace=crd-publish-openapi-8633 create -f -'
  Jun 29 13:11:33.296: INFO: stderr: ""
  Jun 29 13:11:33.296: INFO: stdout: "e2e-test-crd-publish-openapi-1826-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Jun 29 13:11:33.296: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=crd-publish-openapi-8633 --namespace=crd-publish-openapi-8633 delete e2e-test-crd-publish-openapi-1826-crds test-cr'
  Jun 29 13:11:33.356: INFO: stderr: ""
  Jun 29 13:11:33.356: INFO: stdout: "e2e-test-crd-publish-openapi-1826-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  Jun 29 13:11:33.356: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=crd-publish-openapi-8633 --namespace=crd-publish-openapi-8633 apply -f -'
  Jun 29 13:11:33.418: INFO: stderr: ""
  Jun 29 13:11:33.418: INFO: stdout: "e2e-test-crd-publish-openapi-1826-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Jun 29 13:11:33.418: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=crd-publish-openapi-8633 --namespace=crd-publish-openapi-8633 delete e2e-test-crd-publish-openapi-1826-crds test-cr'
  Jun 29 13:11:33.468: INFO: stderr: ""
  Jun 29 13:11:33.468: INFO: stdout: "e2e-test-crd-publish-openapi-1826-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 06/29/24 13:11:33.468
  Jun 29 13:11:33.468: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=crd-publish-openapi-8633 explain e2e-test-crd-publish-openapi-1826-crds'
  Jun 29 13:11:33.510: INFO: stderr: ""
  Jun 29 13:11:33.510: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-1826-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  Jun 29 13:11:34.721: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8633" for this suite. @ 06/29/24 13:11:34.728
â€¢ [2.936 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 06/29/24 13:11:34.735
  Jun 29 13:11:34.735: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename subpath @ 06/29/24 13:11:34.735
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:11:34.75
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:11:34.754
  STEP: Setting up data @ 06/29/24 13:11:34.757
  STEP: Creating pod pod-subpath-test-downwardapi-4kwm @ 06/29/24 13:11:34.765
  STEP: Creating a pod to test atomic-volume-subpath @ 06/29/24 13:11:34.765
  STEP: Saw pod success @ 06/29/24 13:11:58.837
  Jun 29 13:11:58.840: INFO: Trying to get logs from node ip-172-31-94-98 pod pod-subpath-test-downwardapi-4kwm container test-container-subpath-downwardapi-4kwm: <nil>
  STEP: delete the pod @ 06/29/24 13:11:58.846
  STEP: Deleting pod pod-subpath-test-downwardapi-4kwm @ 06/29/24 13:11:58.865
  Jun 29 13:11:58.865: INFO: Deleting pod "pod-subpath-test-downwardapi-4kwm" in namespace "subpath-5776"
  Jun 29 13:11:58.868: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5776" for this suite. @ 06/29/24 13:11:58.871
â€¢ [24.143 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 06/29/24 13:11:58.878
  Jun 29 13:11:58.878: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename subjectreview @ 06/29/24 13:11:58.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:11:58.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:11:58.899
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-8807" @ 06/29/24 13:11:58.902
  Jun 29 13:11:58.907: INFO: saUsername: "system:serviceaccount:subjectreview-8807:e2e"
  Jun 29 13:11:58.907: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-8807"}
  Jun 29 13:11:58.907: INFO: saUID: "ab29bcdf-feb8-413b-92df-4283c77a2379"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-8807:e2e" @ 06/29/24 13:11:58.907
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-8807:e2e" @ 06/29/24 13:11:58.908
  Jun 29 13:11:58.909: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-8807:e2e" api 'list' configmaps in "subjectreview-8807" namespace @ 06/29/24 13:11:58.909
  Jun 29 13:11:58.910: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-8807:e2e" @ 06/29/24 13:11:58.911
  Jun 29 13:11:58.912: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  Jun 29 13:11:58.912: INFO: LocalSubjectAccessReview has been verified
  Jun 29 13:11:58.912: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-8807" for this suite. @ 06/29/24 13:11:58.916
â€¢ [0.045 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 06/29/24 13:11:58.923
  Jun 29 13:11:58.923: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename proxy @ 06/29/24 13:11:58.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:11:58.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:11:58.944
  Jun 29 13:11:58.947: INFO: Creating pod...
  Jun 29 13:12:00.968: INFO: Creating service...
  Jun 29 13:12:00.978: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1899/pods/agnhost/proxy?method=DELETE
  Jun 29 13:12:00.986: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jun 29 13:12:00.986: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1899/pods/agnhost/proxy?method=OPTIONS
  Jun 29 13:12:00.990: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jun 29 13:12:00.990: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1899/pods/agnhost/proxy?method=PATCH
  Jun 29 13:12:00.996: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jun 29 13:12:00.996: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1899/pods/agnhost/proxy?method=POST
  Jun 29 13:12:00.999: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jun 29 13:12:00.999: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1899/pods/agnhost/proxy?method=PUT
  Jun 29 13:12:01.002: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jun 29 13:12:01.002: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1899/services/e2e-proxy-test-service/proxy?method=DELETE
  Jun 29 13:12:01.008: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jun 29 13:12:01.008: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1899/services/e2e-proxy-test-service/proxy?method=OPTIONS
  Jun 29 13:12:01.013: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jun 29 13:12:01.013: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1899/services/e2e-proxy-test-service/proxy?method=PATCH
  Jun 29 13:12:01.018: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jun 29 13:12:01.018: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1899/services/e2e-proxy-test-service/proxy?method=POST
  Jun 29 13:12:01.024: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jun 29 13:12:01.024: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1899/services/e2e-proxy-test-service/proxy?method=PUT
  Jun 29 13:12:01.028: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jun 29 13:12:01.028: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1899/pods/agnhost/proxy?method=GET
  Jun 29 13:12:01.033: INFO: http.Client request:GET StatusCode:301
  Jun 29 13:12:01.033: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1899/services/e2e-proxy-test-service/proxy?method=GET
  Jun 29 13:12:01.041: INFO: http.Client request:GET StatusCode:301
  Jun 29 13:12:01.041: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1899/pods/agnhost/proxy?method=HEAD
  Jun 29 13:12:01.043: INFO: http.Client request:HEAD StatusCode:301
  Jun 29 13:12:01.043: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1899/services/e2e-proxy-test-service/proxy?method=HEAD
  Jun 29 13:12:01.047: INFO: http.Client request:HEAD StatusCode:301
  Jun 29 13:12:01.047: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-1899" for this suite. @ 06/29/24 13:12:01.052
â€¢ [2.136 seconds]
------------------------------
S
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1031
  STEP: Creating a kubernetes client @ 06/29/24 13:12:01.059
  Jun 29 13:12:01.059: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename statefulset @ 06/29/24 13:12:01.06
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:12:01.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:12:01.074
  STEP: Creating service test in namespace statefulset-2861 @ 06/29/24 13:12:01.077
  STEP: Creating statefulset ss in namespace statefulset-2861 @ 06/29/24 13:12:01.089
  Jun 29 13:12:01.104: INFO: Found 0 stateful pods, waiting for 1
  Jun 29 13:12:11.104: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 06/29/24 13:12:11.111
  STEP: Getting /status @ 06/29/24 13:12:11.12
  Jun 29 13:12:11.125: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 06/29/24 13:12:11.125
  Jun 29 13:12:11.134: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 06/29/24 13:12:11.134
  Jun 29 13:12:11.135: INFO: Observed &StatefulSet event: ADDED
  Jun 29 13:12:11.135: INFO: Found Statefulset ss in namespace statefulset-2861 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun 29 13:12:11.135: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 06/29/24 13:12:11.135
  Jun 29 13:12:11.135: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Jun 29 13:12:11.144: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 06/29/24 13:12:11.144
  Jun 29 13:12:11.146: INFO: Observed &StatefulSet event: ADDED
  Jun 29 13:12:11.146: INFO: Observed Statefulset ss in namespace statefulset-2861 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun 29 13:12:11.146: INFO: Observed &StatefulSet event: MODIFIED
  Jun 29 13:12:11.146: INFO: Deleting all statefulset in ns statefulset-2861
  Jun 29 13:12:11.149: INFO: Scaling statefulset ss to 0
  Jun 29 13:12:21.163: INFO: Waiting for statefulset status.replicas updated to 0
  Jun 29 13:12:21.167: INFO: Deleting statefulset ss
  Jun 29 13:12:21.179: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2861" for this suite. @ 06/29/24 13:12:21.183
â€¢ [20.129 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:889
  STEP: Creating a kubernetes client @ 06/29/24 13:12:21.189
  Jun 29 13:12:21.189: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename resourcequota @ 06/29/24 13:12:21.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:12:21.205
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:12:21.209
  STEP: Creating a ResourceQuota @ 06/29/24 13:12:21.211
  STEP: Getting a ResourceQuota @ 06/29/24 13:12:21.215
  STEP: Updating a ResourceQuota @ 06/29/24 13:12:21.219
  STEP: Verifying a ResourceQuota was modified @ 06/29/24 13:12:21.225
  STEP: Deleting a ResourceQuota @ 06/29/24 13:12:21.228
  STEP: Verifying the deleted ResourceQuota @ 06/29/24 13:12:21.235
  Jun 29 13:12:21.238: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6808" for this suite. @ 06/29/24 13:12:21.241
â€¢ [0.058 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 06/29/24 13:12:21.247
  Jun 29 13:12:21.247: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename chunking @ 06/29/24 13:12:21.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:12:21.26
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:12:21.263
  STEP: creating a large number of resources @ 06/29/24 13:12:21.266
  STEP: retrieving the first page @ 06/29/24 13:12:38.954
  Jun 29 13:12:39.004: INFO: Retrieved 40/40 results with rv 27191 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjcxOTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 06/29/24 13:12:39.004
  Jun 29 13:12:59.011: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjcxOTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 29 13:13:19.012: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjcxOTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 29 13:13:39.010: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjcxOTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 29 13:13:59.013: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjcxOTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 29 13:14:19.014: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjcxOTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 29 13:14:39.012: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjcxOTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 29 13:14:59.010: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjcxOTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 29 13:15:19.012: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjcxOTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 29 13:15:39.012: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjcxOTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 29 13:15:59.013: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjcxOTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 29 13:16:19.013: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjcxOTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 29 13:16:39.013: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjcxOTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 29 13:16:59.009: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjcxOTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 29 13:17:19.012: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjcxOTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 29 13:17:39.012: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjcxOTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 29 13:17:59.012: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjcxOTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 29 13:18:19.014: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjcxOTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 29 13:18:39.012: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjcxOTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 29 13:18:59.013: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjcxOTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 29 13:19:19.014: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjcxOTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 29 13:19:39.013: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjcxOTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 29 13:19:59.013: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjcxOTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 29 13:20:19.012: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjcxOTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 29 13:20:39.012: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjcxOTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 29 13:20:59.012: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjcxOTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 29 13:21:19.012: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjcxOTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 29 13:21:39.014: INFO: got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  Jun 29 13:21:39.014: INFO: Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 06/29/24 13:21:39.014
  STEP: retrieving all remaining pages @ 06/29/24 13:21:39.018
  Jun 29 13:21:39.022: INFO: Retrieved 40/40 results with rv 28246 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNDYsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  Jun 29 13:21:39.027: INFO: Retrieved 40/40 results with rv 28246 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNDYsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  Jun 29 13:21:39.030: INFO: Retrieved 40/40 results with rv 28246 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNDYsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  Jun 29 13:21:39.034: INFO: Retrieved 40/40 results with rv 28246 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNDYsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  Jun 29 13:21:39.039: INFO: Retrieved 40/40 results with rv 28246 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNDYsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  Jun 29 13:21:39.043: INFO: Retrieved 40/40 results with rv 28246 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNDYsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  Jun 29 13:21:39.048: INFO: Retrieved 40/40 results with rv 28246 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNDYsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  Jun 29 13:21:39.053: INFO: Retrieved 40/40 results with rv 28246 and continue 
  Jun 29 13:21:39.053: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-8200" for this suite. @ 06/29/24 13:21:39.057
â€¢ [557.818 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 06/29/24 13:21:39.068
  Jun 29 13:21:39.068: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename configmap @ 06/29/24 13:21:39.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:21:39.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:21:39.09
  STEP: Creating configMap with name configmap-test-volume-049cf447-8d91-4d16-8b84-6aba1f0aaf55 @ 06/29/24 13:21:39.093
  STEP: Creating a pod to test consume configMaps @ 06/29/24 13:21:39.098
  STEP: Saw pod success @ 06/29/24 13:21:43.188
  Jun 29 13:21:43.191: INFO: Trying to get logs from node ip-172-31-94-98 pod pod-configmaps-b86e9a03-f33f-42f7-848f-21d43cfa2845 container configmap-volume-test: <nil>
  STEP: delete the pod @ 06/29/24 13:21:43.207
  Jun 29 13:21:43.222: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-79" for this suite. @ 06/29/24 13:21:43.225
â€¢ [4.163 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 06/29/24 13:21:43.232
  Jun 29 13:21:43.232: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename secrets @ 06/29/24 13:21:43.233
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:21:43.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:21:43.249
  STEP: Creating secret with name secret-test-014be91d-49b7-4669-bab7-a15549ec1e74 @ 06/29/24 13:21:43.252
  STEP: Creating a pod to test consume secrets @ 06/29/24 13:21:43.257
  STEP: Saw pod success @ 06/29/24 13:21:45.274
  Jun 29 13:21:45.282: INFO: Trying to get logs from node ip-172-31-94-98 pod pod-secrets-5cc28ba6-721a-49b4-8de2-9b4fce0667f4 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/29/24 13:21:45.289
  Jun 29 13:21:45.304: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3406" for this suite. @ 06/29/24 13:21:45.307
â€¢ [2.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 06/29/24 13:21:45.314
  Jun 29 13:21:45.314: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename subpath @ 06/29/24 13:21:45.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:21:45.334
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:21:45.336
  STEP: Setting up data @ 06/29/24 13:21:45.338
  STEP: Creating pod pod-subpath-test-configmap-pggc @ 06/29/24 13:21:45.348
  STEP: Creating a pod to test atomic-volume-subpath @ 06/29/24 13:21:45.348
  STEP: Saw pod success @ 06/29/24 13:22:07.422
  Jun 29 13:22:07.427: INFO: Trying to get logs from node ip-172-31-94-98 pod pod-subpath-test-configmap-pggc container test-container-subpath-configmap-pggc: <nil>
  STEP: delete the pod @ 06/29/24 13:22:07.431
  STEP: Deleting pod pod-subpath-test-configmap-pggc @ 06/29/24 13:22:07.446
  Jun 29 13:22:07.446: INFO: Deleting pod "pod-subpath-test-configmap-pggc" in namespace "subpath-7520"
  Jun 29 13:22:07.449: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7520" for this suite. @ 06/29/24 13:22:07.454
â€¢ [22.148 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 06/29/24 13:22:07.463
  Jun 29 13:22:07.463: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename conformance-tests @ 06/29/24 13:22:07.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:22:07.48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:22:07.486
  STEP: Getting node addresses @ 06/29/24 13:22:07.489
  Jun 29 13:22:07.489: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  Jun 29 13:22:07.495: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-5303" for this suite. @ 06/29/24 13:22:07.498
â€¢ [0.042 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 06/29/24 13:22:07.505
  Jun 29 13:22:07.505: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename deployment @ 06/29/24 13:22:07.505
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:22:07.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:22:07.525
  STEP: creating a Deployment @ 06/29/24 13:22:07.532
  Jun 29 13:22:07.532: INFO: Creating simple deployment test-deployment-4q9zl
  Jun 29 13:22:07.542: INFO: new replicaset for deployment "test-deployment-4q9zl" is yet to be created
  STEP: Getting /status @ 06/29/24 13:22:09.559
  Jun 29 13:22:09.562: INFO: Deployment test-deployment-4q9zl has Conditions: [{Available True 2024-06-29 13:22:09 +0000 UTC 2024-06-29 13:22:09 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-06-29 13:22:09 +0000 UTC 2024-06-29 13:22:07 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-4q9zl-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 06/29/24 13:22:09.562
  Jun 29 13:22:09.574: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 29, 13, 22, 9, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 29, 13, 22, 9, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 29, 13, 22, 9, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 29, 13, 22, 7, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-4q9zl-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 06/29/24 13:22:09.574
  Jun 29 13:22:09.576: INFO: Observed &Deployment event: ADDED
  Jun 29 13:22:09.576: INFO: Observed Deployment test-deployment-4q9zl in namespace deployment-639 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-29 13:22:07 +0000 UTC 2024-06-29 13:22:07 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-4q9zl-5d576bd769"}
  Jun 29 13:22:09.576: INFO: Observed &Deployment event: MODIFIED
  Jun 29 13:22:09.576: INFO: Observed Deployment test-deployment-4q9zl in namespace deployment-639 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-29 13:22:07 +0000 UTC 2024-06-29 13:22:07 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-4q9zl-5d576bd769"}
  Jun 29 13:22:09.576: INFO: Observed Deployment test-deployment-4q9zl in namespace deployment-639 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-06-29 13:22:07 +0000 UTC 2024-06-29 13:22:07 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jun 29 13:22:09.576: INFO: Observed &Deployment event: MODIFIED
  Jun 29 13:22:09.576: INFO: Observed Deployment test-deployment-4q9zl in namespace deployment-639 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-06-29 13:22:07 +0000 UTC 2024-06-29 13:22:07 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jun 29 13:22:09.576: INFO: Observed Deployment test-deployment-4q9zl in namespace deployment-639 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-29 13:22:07 +0000 UTC 2024-06-29 13:22:07 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-4q9zl-5d576bd769" is progressing.}
  Jun 29 13:22:09.576: INFO: Observed &Deployment event: MODIFIED
  Jun 29 13:22:09.577: INFO: Observed Deployment test-deployment-4q9zl in namespace deployment-639 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-06-29 13:22:09 +0000 UTC 2024-06-29 13:22:09 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jun 29 13:22:09.577: INFO: Observed Deployment test-deployment-4q9zl in namespace deployment-639 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-29 13:22:09 +0000 UTC 2024-06-29 13:22:07 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-4q9zl-5d576bd769" has successfully progressed.}
  Jun 29 13:22:09.577: INFO: Observed &Deployment event: MODIFIED
  Jun 29 13:22:09.577: INFO: Observed Deployment test-deployment-4q9zl in namespace deployment-639 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-06-29 13:22:09 +0000 UTC 2024-06-29 13:22:09 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jun 29 13:22:09.577: INFO: Observed Deployment test-deployment-4q9zl in namespace deployment-639 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-29 13:22:09 +0000 UTC 2024-06-29 13:22:07 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-4q9zl-5d576bd769" has successfully progressed.}
  Jun 29 13:22:09.577: INFO: Found Deployment test-deployment-4q9zl in namespace deployment-639 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun 29 13:22:09.577: INFO: Deployment test-deployment-4q9zl has an updated status
  STEP: patching the Statefulset Status @ 06/29/24 13:22:09.577
  Jun 29 13:22:09.577: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Jun 29 13:22:09.583: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 06/29/24 13:22:09.583
  Jun 29 13:22:09.585: INFO: Observed &Deployment event: ADDED
  Jun 29 13:22:09.585: INFO: Observed deployment test-deployment-4q9zl in namespace deployment-639 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-29 13:22:07 +0000 UTC 2024-06-29 13:22:07 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-4q9zl-5d576bd769"}
  Jun 29 13:22:09.585: INFO: Observed &Deployment event: MODIFIED
  Jun 29 13:22:09.585: INFO: Observed deployment test-deployment-4q9zl in namespace deployment-639 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-29 13:22:07 +0000 UTC 2024-06-29 13:22:07 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-4q9zl-5d576bd769"}
  Jun 29 13:22:09.585: INFO: Observed deployment test-deployment-4q9zl in namespace deployment-639 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-06-29 13:22:07 +0000 UTC 2024-06-29 13:22:07 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jun 29 13:22:09.585: INFO: Observed &Deployment event: MODIFIED
  Jun 29 13:22:09.585: INFO: Observed deployment test-deployment-4q9zl in namespace deployment-639 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-06-29 13:22:07 +0000 UTC 2024-06-29 13:22:07 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jun 29 13:22:09.585: INFO: Observed deployment test-deployment-4q9zl in namespace deployment-639 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-29 13:22:07 +0000 UTC 2024-06-29 13:22:07 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-4q9zl-5d576bd769" is progressing.}
  Jun 29 13:22:09.585: INFO: Observed &Deployment event: MODIFIED
  Jun 29 13:22:09.585: INFO: Observed deployment test-deployment-4q9zl in namespace deployment-639 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-06-29 13:22:09 +0000 UTC 2024-06-29 13:22:09 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jun 29 13:22:09.585: INFO: Observed deployment test-deployment-4q9zl in namespace deployment-639 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-29 13:22:09 +0000 UTC 2024-06-29 13:22:07 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-4q9zl-5d576bd769" has successfully progressed.}
  Jun 29 13:22:09.586: INFO: Observed &Deployment event: MODIFIED
  Jun 29 13:22:09.586: INFO: Observed deployment test-deployment-4q9zl in namespace deployment-639 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-06-29 13:22:09 +0000 UTC 2024-06-29 13:22:09 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jun 29 13:22:09.586: INFO: Observed deployment test-deployment-4q9zl in namespace deployment-639 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-29 13:22:09 +0000 UTC 2024-06-29 13:22:07 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-4q9zl-5d576bd769" has successfully progressed.}
  Jun 29 13:22:09.586: INFO: Observed deployment test-deployment-4q9zl in namespace deployment-639 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun 29 13:22:09.586: INFO: Observed &Deployment event: MODIFIED
  Jun 29 13:22:09.586: INFO: Found deployment test-deployment-4q9zl in namespace deployment-639 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  Jun 29 13:22:09.586: INFO: Deployment test-deployment-4q9zl has a patched status
  Jun 29 13:22:09.590: INFO: Deployment "test-deployment-4q9zl":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-4q9zl",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-639",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1157e6a1-341b-4213-a54a-7f99bccd9360",
      ResourceVersion: (string) (len=5) "28843",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855264127,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855264127,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855264129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855264129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=224) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |ions":{},"f:obse|
              00000090  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              000000a0  7b 7d 2c 22 66 3a 72 65  61 64 79 52 65 70 6c 69  |{},"f:readyRepli|
              000000b0  63 61 73 22 3a 7b 7d 2c  22 66 3a 72 65 70 6c 69  |cas":{},"f:repli|
              000000c0  63 61 73 22 3a 7b 7d 2c  22 66 3a 75 70 64 61 74  |cas":{},"f:updat|
              000000d0  65 64 52 65 70 6c 69 63  61 73 22 3a 7b 7d 7d 7d  |edReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=1) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun 29 13:22:09.594: INFO: New ReplicaSet "test-deployment-4q9zl-5d576bd769" of Deployment "test-deployment-4q9zl":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-4q9zl-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-639",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c805ef55-8953-4f6a-be86-1b41730e88cb",
      ResourceVersion: (string) (len=5) "28839",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855264127,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-4q9zl",
          UID: (types.UID) (len=36) "1157e6a1-341b-4213-a54a-7f99bccd9360",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855264127,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 31 31 35  |k:{\"uid\":\"115|
              00000120  37 65 36 61 31 2d 33 34  31 62 2d 34 32 31 33 2d  |7e6a1-341b-4213-|
              00000130  61 35 34 61 2d 37 66 39  39 62 63 63 64 39 33 36  |a54a-7f99bccd936|
              00000140  30 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |0\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855264129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
            (string) (len=3) "e2e": (string) (len=7) "testing"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 29 13:22:09.600: INFO: Pod "test-deployment-4q9zl-5d576bd769-sq7vt" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-4q9zl-5d576bd769-sq7vt",
      GenerateName: (string) (len=33) "test-deployment-4q9zl-5d576bd769-",
      Namespace: (string) (len=14) "deployment-639",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "81ddc2eb-4c7e-4450-b36b-da1bc7420fc0",
      ResourceVersion: (string) (len=5) "28838",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855264127,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-4q9zl-5d576bd769",
          UID: (types.UID) (len=36) "c805ef55-8953-4f6a-be86-1b41730e88cb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855264127,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 63 38 30 35 65 66 35  35 2d 38 39 35 33 2d 34  |"c805ef55-8953-4|
              000000a0  66 36 61 2d 62 65 38 36  2d 31 62 34 31 37 33 30  |f6a-be86-1b41730|
              000000b0  65 38 38 63 62 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |e88cb\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855264129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 38  33 2e 38 33 5c 22 7d 22  |2.168.183.83\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l8xqz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l8xqz",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-94-98",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855264129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855264127,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855264129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855264129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855264127,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.94.98",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.94.98"
        }
      },
      PodIP: (string) (len=14) "192.168.183.83",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.183.83"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855264127,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855264128,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2ce7793ef394821c331ad35e0494848e7befedc9987d535d02fef4d1ec232bfb",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 29 13:22:09.601: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-639" for this suite. @ 06/29/24 13:22:09.605
â€¢ [2.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:141
  STEP: Creating a kubernetes client @ 06/29/24 13:22:09.611
  Jun 29 13:22:09.611: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename secrets @ 06/29/24 13:22:09.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:22:09.627
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:22:09.63
  STEP: Creating projection with secret that has name secret-emptykey-test-361e7053-bda6-44f8-9682-e5a5dd10b5d0 @ 06/29/24 13:22:09.632
  Jun 29 13:22:09.634: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9356" for this suite. @ 06/29/24 13:22:09.637
â€¢ [0.031 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 06/29/24 13:22:09.643
  Jun 29 13:22:09.643: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 06/29/24 13:22:09.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:22:09.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:22:09.66
  STEP: creating a target pod @ 06/29/24 13:22:09.663
  STEP: adding an ephemeral container @ 06/29/24 13:22:11.686
  STEP: checking pod container endpoints @ 06/29/24 13:22:13.703
  Jun 29 13:22:13.703: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-794 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 29 13:22:13.703: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  Jun 29 13:22:13.704: INFO: ExecWithOptions: Clientset creation
  Jun 29 13:22:13.704: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-794/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Jun 29 13:22:13.756: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 06/29/24 13:22:13.774
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 06/29/24 13:22:13.778
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 06/29/24 13:22:13.79
  Jun 29 13:22:13.793: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-794" for this suite. @ 06/29/24 13:22:13.798
â€¢ [4.163 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 06/29/24 13:22:13.806
  Jun 29 13:22:13.806: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename projected @ 06/29/24 13:22:13.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:22:13.821
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:22:13.825
  STEP: Creating projection with secret that has name projected-secret-test-map-41d0be7d-d78e-40eb-8797-803862ffb26b @ 06/29/24 13:22:13.828
  STEP: Creating a pod to test consume secrets @ 06/29/24 13:22:13.834
  STEP: Saw pod success @ 06/29/24 13:22:17.855
  Jun 29 13:22:17.859: INFO: Trying to get logs from node ip-172-31-94-98 pod pod-projected-secrets-2bcec721-7b57-4307-82bc-f4c1dace3e27 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/29/24 13:22:17.865
  Jun 29 13:22:17.880: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3638" for this suite. @ 06/29/24 13:22:17.883
â€¢ [4.083 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 06/29/24 13:22:17.889
  Jun 29 13:22:17.889: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename chunking @ 06/29/24 13:22:17.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:22:17.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:22:17.907
  STEP: creating a large number of resources @ 06/29/24 13:22:17.909
  STEP: retrieving those results in paged fashion several times @ 06/29/24 13:22:35.597
  Jun 29 13:22:35.645: INFO: Retrieved 17/17 results with rv 29424 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjQsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  Jun 29 13:22:35.694: INFO: Retrieved 17/17 results with rv 29424 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  Jun 29 13:22:35.744: INFO: Retrieved 17/17 results with rv 29424 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjQsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  Jun 29 13:22:35.795: INFO: Retrieved 17/17 results with rv 29424 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjQsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  Jun 29 13:22:35.844: INFO: Retrieved 17/17 results with rv 29424 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjQsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  Jun 29 13:22:35.895: INFO: Retrieved 17/17 results with rv 29424 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjQsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  Jun 29 13:22:35.945: INFO: Retrieved 17/17 results with rv 29424 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjQsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  Jun 29 13:22:35.994: INFO: Retrieved 17/17 results with rv 29424 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjQsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  Jun 29 13:22:36.044: INFO: Retrieved 17/17 results with rv 29424 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjQsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  Jun 29 13:22:36.096: INFO: Retrieved 17/17 results with rv 29424 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjQsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  Jun 29 13:22:36.143: INFO: Retrieved 17/17 results with rv 29424 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjQsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  Jun 29 13:22:36.195: INFO: Retrieved 17/17 results with rv 29424 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjQsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  Jun 29 13:22:36.245: INFO: Retrieved 17/17 results with rv 29424 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjQsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  Jun 29 13:22:36.295: INFO: Retrieved 17/17 results with rv 29424 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjQsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  Jun 29 13:22:36.344: INFO: Retrieved 17/17 results with rv 29424 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjQsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  Jun 29 13:22:36.395: INFO: Retrieved 17/17 results with rv 29424 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjQsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  Jun 29 13:22:36.443: INFO: Retrieved 17/17 results with rv 29424 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjQsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  Jun 29 13:22:36.494: INFO: Retrieved 17/17 results with rv 29424 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjQsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  Jun 29 13:22:36.545: INFO: Retrieved 17/17 results with rv 29424 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjQsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  Jun 29 13:22:36.594: INFO: Retrieved 17/17 results with rv 29424 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjQsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  Jun 29 13:22:36.644: INFO: Retrieved 17/17 results with rv 29424 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjQsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  Jun 29 13:22:36.695: INFO: Retrieved 17/17 results with rv 29424 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjQsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  Jun 29 13:22:36.743: INFO: Retrieved 17/17 results with rv 29424 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjQsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  Jun 29 13:22:36.793: INFO: Retrieved 9/17 results with rv 29424 and continue 
  Jun 29 13:22:36.845: INFO: Retrieved 17/17 results with rv 29427 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjcsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  Jun 29 13:22:36.896: INFO: Retrieved 17/17 results with rv 29427 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjcsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  Jun 29 13:22:36.944: INFO: Retrieved 17/17 results with rv 29427 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjcsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  Jun 29 13:22:36.996: INFO: Retrieved 17/17 results with rv 29427 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjcsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  Jun 29 13:22:37.044: INFO: Retrieved 17/17 results with rv 29427 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjcsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  Jun 29 13:22:37.094: INFO: Retrieved 17/17 results with rv 29427 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjcsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  Jun 29 13:22:37.145: INFO: Retrieved 17/17 results with rv 29427 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjcsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  Jun 29 13:22:37.194: INFO: Retrieved 17/17 results with rv 29427 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjcsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  Jun 29 13:22:37.244: INFO: Retrieved 17/17 results with rv 29427 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjcsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  Jun 29 13:22:37.296: INFO: Retrieved 17/17 results with rv 29427 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjcsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  Jun 29 13:22:37.344: INFO: Retrieved 17/17 results with rv 29427 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjcsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  Jun 29 13:22:37.395: INFO: Retrieved 17/17 results with rv 29427 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjcsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  Jun 29 13:22:37.445: INFO: Retrieved 17/17 results with rv 29427 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjcsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  Jun 29 13:22:37.494: INFO: Retrieved 17/17 results with rv 29427 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjcsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  Jun 29 13:22:37.545: INFO: Retrieved 17/17 results with rv 29427 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjcsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  Jun 29 13:22:37.595: INFO: Retrieved 17/17 results with rv 29427 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjcsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  Jun 29 13:22:37.644: INFO: Retrieved 17/17 results with rv 29427 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjcsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  Jun 29 13:22:37.694: INFO: Retrieved 17/17 results with rv 29427 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjcsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  Jun 29 13:22:37.745: INFO: Retrieved 17/17 results with rv 29427 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjcsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  Jun 29 13:22:37.793: INFO: Retrieved 17/17 results with rv 29427 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjcsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  Jun 29 13:22:37.844: INFO: Retrieved 17/17 results with rv 29427 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjcsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  Jun 29 13:22:37.896: INFO: Retrieved 17/17 results with rv 29427 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjcsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  Jun 29 13:22:37.944: INFO: Retrieved 17/17 results with rv 29427 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjcsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  Jun 29 13:22:37.994: INFO: Retrieved 9/17 results with rv 29427 and continue 
  Jun 29 13:22:38.046: INFO: Retrieved 17/17 results with rv 29429 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjksInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  Jun 29 13:22:38.094: INFO: Retrieved 17/17 results with rv 29429 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjksInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  Jun 29 13:22:38.144: INFO: Retrieved 17/17 results with rv 29429 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjksInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  Jun 29 13:22:38.195: INFO: Retrieved 17/17 results with rv 29429 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjksInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  Jun 29 13:22:38.243: INFO: Retrieved 17/17 results with rv 29429 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjksInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  Jun 29 13:22:38.294: INFO: Retrieved 17/17 results with rv 29429 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjksInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  Jun 29 13:22:38.346: INFO: Retrieved 17/17 results with rv 29429 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjksInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  Jun 29 13:22:38.394: INFO: Retrieved 17/17 results with rv 29429 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjksInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  Jun 29 13:22:38.444: INFO: Retrieved 17/17 results with rv 29429 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjksInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  Jun 29 13:22:38.496: INFO: Retrieved 17/17 results with rv 29429 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjksInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  Jun 29 13:22:38.544: INFO: Retrieved 17/17 results with rv 29429 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjksInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  Jun 29 13:22:38.594: INFO: Retrieved 17/17 results with rv 29429 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjksInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  Jun 29 13:22:38.645: INFO: Retrieved 17/17 results with rv 29429 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjksInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  Jun 29 13:22:38.694: INFO: Retrieved 17/17 results with rv 29429 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjksInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  Jun 29 13:22:38.744: INFO: Retrieved 17/17 results with rv 29429 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjksInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  Jun 29 13:22:38.796: INFO: Retrieved 17/17 results with rv 29429 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjksInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  Jun 29 13:22:38.844: INFO: Retrieved 17/17 results with rv 29429 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjksInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  Jun 29 13:22:38.894: INFO: Retrieved 17/17 results with rv 29429 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjksInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  Jun 29 13:22:38.945: INFO: Retrieved 17/17 results with rv 29429 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjksInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  Jun 29 13:22:38.993: INFO: Retrieved 17/17 results with rv 29429 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjksInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  Jun 29 13:22:39.044: INFO: Retrieved 17/17 results with rv 29429 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjksInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  Jun 29 13:22:39.095: INFO: Retrieved 17/17 results with rv 29429 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjksInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  Jun 29 13:22:39.144: INFO: Retrieved 17/17 results with rv 29429 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0MjksInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  Jun 29 13:22:39.194: INFO: Retrieved 9/17 results with rv 29429 and continue 
  STEP: retrieving those results all at once @ 06/29/24 13:22:39.194
  Jun 29 13:22:39.253: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-9518" for this suite. @ 06/29/24 13:22:39.295
â€¢ [21.458 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 06/29/24 13:22:39.348
  Jun 29 13:22:39.348: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename dns @ 06/29/24 13:22:39.349
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:22:39.365
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:22:39.368
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 06/29/24 13:22:39.37
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 06/29/24 13:22:39.37
  STEP: creating a pod to probe DNS @ 06/29/24 13:22:39.37
  STEP: submitting the pod to kubernetes @ 06/29/24 13:22:39.37
  STEP: retrieving the pod @ 06/29/24 13:22:41.391
  STEP: looking for the results for each expected name from probers @ 06/29/24 13:22:41.394
  Jun 29 13:22:41.411: INFO: DNS probes using dns-6838/dns-test-bcd41f67-1532-4958-8bc3-62b7d3c8b324 succeeded

  STEP: deleting the pod @ 06/29/24 13:22:41.411
  Jun 29 13:22:41.422: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6838" for this suite. @ 06/29/24 13:22:41.427
â€¢ [2.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 06/29/24 13:22:41.435
  Jun 29 13:22:41.435: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename emptydir @ 06/29/24 13:22:41.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:22:41.449
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:22:41.455
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 06/29/24 13:22:41.458
  STEP: Saw pod success @ 06/29/24 13:22:43.471
  Jun 29 13:22:43.474: INFO: Trying to get logs from node ip-172-31-94-98 pod pod-770b8f68-7aa3-42e0-8adf-324c6ac8b1d7 container test-container: <nil>
  STEP: delete the pod @ 06/29/24 13:22:43.482
  Jun 29 13:22:43.496: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6843" for this suite. @ 06/29/24 13:22:43.499
â€¢ [2.071 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 06/29/24 13:22:43.506
  Jun 29 13:22:43.506: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename projected @ 06/29/24 13:22:43.507
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:22:43.519
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:22:43.523
  STEP: Creating a pod to test downward API volume plugin @ 06/29/24 13:22:43.526
  STEP: Saw pod success @ 06/29/24 13:22:45.542
  Jun 29 13:22:45.546: INFO: Trying to get logs from node ip-172-31-94-98 pod downwardapi-volume-ad5ff443-f2e6-43c5-88b6-f9b473c28945 container client-container: <nil>
  STEP: delete the pod @ 06/29/24 13:22:45.552
  Jun 29 13:22:45.569: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6611" for this suite. @ 06/29/24 13:22:45.574
â€¢ [2.075 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 06/29/24 13:22:45.581
  Jun 29 13:22:45.581: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/29/24 13:22:45.582
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:22:45.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:22:45.6
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 06/29/24 13:22:45.603
  Jun 29 13:22:45.603: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  Jun 29 13:22:46.991: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  Jun 29 13:22:52.006: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9773" for this suite. @ 06/29/24 13:22:52.014
â€¢ [6.441 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 06/29/24 13:22:52.022
  Jun 29 13:22:52.022: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename dns @ 06/29/24 13:22:52.023
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:22:52.04
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:22:52.043
  STEP: Creating a test headless service @ 06/29/24 13:22:52.046
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-6015.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-6015.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-6015.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-6015.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-6015.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-6015.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-6015.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-6015.svc.cluster.local;sleep 1; done
   @ 06/29/24 13:22:52.052
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-6015.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-6015.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-6015.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-6015.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-6015.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-6015.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-6015.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-6015.svc.cluster.local;sleep 1; done
   @ 06/29/24 13:22:52.052
  STEP: creating a pod to probe DNS @ 06/29/24 13:22:52.052
  STEP: submitting the pod to kubernetes @ 06/29/24 13:22:52.052
  STEP: retrieving the pod @ 06/29/24 13:22:54.077
  STEP: looking for the results for each expected name from probers @ 06/29/24 13:22:54.08
  Jun 29 13:22:54.084: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-6015.svc.cluster.local from pod dns-6015/dns-test-58e19091-b612-4132-9805-b6bbc51e2b76: the server could not find the requested resource (get pods dns-test-58e19091-b612-4132-9805-b6bbc51e2b76)
  Jun 29 13:22:54.089: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-6015.svc.cluster.local from pod dns-6015/dns-test-58e19091-b612-4132-9805-b6bbc51e2b76: the server could not find the requested resource (get pods dns-test-58e19091-b612-4132-9805-b6bbc51e2b76)
  Jun 29 13:22:54.092: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-6015.svc.cluster.local from pod dns-6015/dns-test-58e19091-b612-4132-9805-b6bbc51e2b76: the server could not find the requested resource (get pods dns-test-58e19091-b612-4132-9805-b6bbc51e2b76)
  Jun 29 13:22:54.095: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-6015.svc.cluster.local from pod dns-6015/dns-test-58e19091-b612-4132-9805-b6bbc51e2b76: the server could not find the requested resource (get pods dns-test-58e19091-b612-4132-9805-b6bbc51e2b76)
  Jun 29 13:22:54.100: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-6015.svc.cluster.local from pod dns-6015/dns-test-58e19091-b612-4132-9805-b6bbc51e2b76: the server could not find the requested resource (get pods dns-test-58e19091-b612-4132-9805-b6bbc51e2b76)
  Jun 29 13:22:54.103: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-6015.svc.cluster.local from pod dns-6015/dns-test-58e19091-b612-4132-9805-b6bbc51e2b76: the server could not find the requested resource (get pods dns-test-58e19091-b612-4132-9805-b6bbc51e2b76)
  Jun 29 13:22:54.106: INFO: Unable to read jessie_udp@dns-test-service-2.dns-6015.svc.cluster.local from pod dns-6015/dns-test-58e19091-b612-4132-9805-b6bbc51e2b76: the server could not find the requested resource (get pods dns-test-58e19091-b612-4132-9805-b6bbc51e2b76)
  Jun 29 13:22:54.111: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-6015.svc.cluster.local from pod dns-6015/dns-test-58e19091-b612-4132-9805-b6bbc51e2b76: the server could not find the requested resource (get pods dns-test-58e19091-b612-4132-9805-b6bbc51e2b76)
  Jun 29 13:22:54.111: INFO: Lookups using dns-6015/dns-test-58e19091-b612-4132-9805-b6bbc51e2b76 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-6015.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-6015.svc.cluster.local wheezy_udp@dns-test-service-2.dns-6015.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-6015.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-6015.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-6015.svc.cluster.local jessie_udp@dns-test-service-2.dns-6015.svc.cluster.local jessie_tcp@dns-test-service-2.dns-6015.svc.cluster.local]

  Jun 29 13:22:54.117: INFO: Pod client logs for webserver: 
  Jun 29 13:22:54.122: INFO: Pod client logs for querier: 
  Jun 29 13:22:54.129: INFO: Pod client logs for jessie-querier: 
  Jun 29 13:22:59.115: INFO: DNS probes using dns-6015/dns-test-58e19091-b612-4132-9805-b6bbc51e2b76 succeeded

  STEP: deleting the pod @ 06/29/24 13:22:59.116
  STEP: deleting the test headless service @ 06/29/24 13:22:59.129
  Jun 29 13:22:59.143: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6015" for this suite. @ 06/29/24 13:22:59.147
â€¢ [7.133 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 06/29/24 13:22:59.156
  Jun 29 13:22:59.156: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename apf @ 06/29/24 13:22:59.156
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:22:59.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:22:59.17
  STEP: getting /apis @ 06/29/24 13:22:59.174
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 06/29/24 13:22:59.177
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 06/29/24 13:22:59.178
  STEP: creating @ 06/29/24 13:22:59.179
  STEP: getting @ 06/29/24 13:22:59.202
  STEP: listing @ 06/29/24 13:22:59.206
  STEP: watching @ 06/29/24 13:22:59.21
  Jun 29 13:22:59.210: INFO: starting watch
  STEP: patching @ 06/29/24 13:22:59.211
  STEP: updating @ 06/29/24 13:22:59.215
  Jun 29 13:22:59.224: INFO: waiting for watch events with expected annotations
  STEP: getting /status @ 06/29/24 13:22:59.224
  STEP: patching /status @ 06/29/24 13:22:59.227
  STEP: updating /status @ 06/29/24 13:22:59.232
  STEP: deleting @ 06/29/24 13:22:59.242
  STEP: deleting a collection @ 06/29/24 13:22:59.257
  Jun 29 13:22:59.278: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-3963" for this suite. @ 06/29/24 13:22:59.281
â€¢ [0.130 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 06/29/24 13:22:59.286
  Jun 29 13:22:59.286: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename var-expansion @ 06/29/24 13:22:59.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:22:59.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:22:59.304
  STEP: creating the pod @ 06/29/24 13:22:59.307
  STEP: waiting for pod running @ 06/29/24 13:22:59.315
  STEP: creating a file in subpath @ 06/29/24 13:23:01.326
  Jun 29 13:23:01.329: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-8303 PodName:var-expansion-71312a2c-6559-49fe-9f70-8b1307ab1680 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 29 13:23:01.329: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  Jun 29 13:23:01.329: INFO: ExecWithOptions: Clientset creation
  Jun 29 13:23:01.329: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-8303/pods/var-expansion-71312a2c-6559-49fe-9f70-8b1307ab1680/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 06/29/24 13:23:01.378
  Jun 29 13:23:01.382: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-8303 PodName:var-expansion-71312a2c-6559-49fe-9f70-8b1307ab1680 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 29 13:23:01.382: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  Jun 29 13:23:01.383: INFO: ExecWithOptions: Clientset creation
  Jun 29 13:23:01.383: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-8303/pods/var-expansion-71312a2c-6559-49fe-9f70-8b1307ab1680/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 06/29/24 13:23:01.422
  Jun 29 13:23:01.935: INFO: Successfully updated pod "var-expansion-71312a2c-6559-49fe-9f70-8b1307ab1680"
  STEP: waiting for annotated pod running @ 06/29/24 13:23:01.935
  STEP: deleting the pod gracefully @ 06/29/24 13:23:01.94
  Jun 29 13:23:01.940: INFO: Deleting pod "var-expansion-71312a2c-6559-49fe-9f70-8b1307ab1680" in namespace "var-expansion-8303"
  Jun 29 13:23:01.949: INFO: Wait up to 5m0s for pod "var-expansion-71312a2c-6559-49fe-9f70-8b1307ab1680" to be fully deleted
  Jun 29 13:23:34.029: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8303" for this suite. @ 06/29/24 13:23:34.033
â€¢ [34.755 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 06/29/24 13:23:34.041
  Jun 29 13:23:34.041: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename webhook @ 06/29/24 13:23:34.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:23:34.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:23:34.061
  STEP: Setting up server cert @ 06/29/24 13:23:34.088
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/29/24 13:23:34.293
  STEP: Deploying the webhook pod @ 06/29/24 13:23:34.303
  STEP: Wait for the deployment to be ready @ 06/29/24 13:23:34.316
  Jun 29 13:23:34.323: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/29/24 13:23:36.335
  STEP: Verifying the service has paired with the endpoint @ 06/29/24 13:23:36.345
  Jun 29 13:23:37.345: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 06/29/24 13:23:37.417
  STEP: Creating a configMap that should be mutated @ 06/29/24 13:23:37.427
  STEP: Deleting the collection of validation webhooks @ 06/29/24 13:23:37.451
  STEP: Creating a configMap that should not be mutated @ 06/29/24 13:23:37.499
  Jun 29 13:23:37.553: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3838" for this suite. @ 06/29/24 13:23:37.557
  STEP: Destroying namespace "webhook-markers-4492" for this suite. @ 06/29/24 13:23:37.565
â€¢ [3.652 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 06/29/24 13:23:37.693
  Jun 29 13:23:37.693: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename csiinlinevolumes @ 06/29/24 13:23:37.693
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:23:37.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:23:37.709
  STEP: creating @ 06/29/24 13:23:37.712
  STEP: getting @ 06/29/24 13:23:37.73
  STEP: listing in namespace @ 06/29/24 13:23:37.732
  STEP: patching @ 06/29/24 13:23:37.736
  STEP: deleting @ 06/29/24 13:23:37.756
  Jun 29 13:23:37.768: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-1593" for this suite. @ 06/29/24 13:23:37.771
â€¢ [0.085 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 06/29/24 13:23:37.778
  Jun 29 13:23:37.778: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename namespaces @ 06/29/24 13:23:37.778
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:23:37.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:23:37.795
  STEP: Read namespace status @ 06/29/24 13:23:37.797
  Jun 29 13:23:37.800: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 06/29/24 13:23:37.8
  Jun 29 13:23:37.805: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 06/29/24 13:23:37.805
  Jun 29 13:23:37.815: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  Jun 29 13:23:37.815: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-689" for this suite. @ 06/29/24 13:23:37.819
â€¢ [0.049 seconds]
------------------------------
S
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:530
  STEP: Creating a kubernetes client @ 06/29/24 13:23:37.827
  Jun 29 13:23:37.827: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename security-context-test @ 06/29/24 13:23:37.828
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:23:37.837
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:23:37.842
  Jun 29 13:23:41.877: INFO: Got logs for pod "busybox-privileged-false-e7917e3b-35a5-4bd7-a4e9-d5792425a9e6": "ip: RTNETLINK answers: Operation not permitted\n"
  Jun 29 13:23:41.877: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-7535" for this suite. @ 06/29/24 13:23:41.88
â€¢ [4.061 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 06/29/24 13:23:41.888
  Jun 29 13:23:41.888: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename cronjob @ 06/29/24 13:23:41.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:23:41.899
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:23:41.902
  STEP: Creating a cronjob @ 06/29/24 13:23:41.905
  STEP: Ensuring more than one job is running at a time @ 06/29/24 13:23:41.91
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 06/29/24 13:25:01.915
  STEP: Removing cronjob @ 06/29/24 13:25:01.92
  Jun 29 13:25:01.929: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7558" for this suite. @ 06/29/24 13:25:01.933
â€¢ [80.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 06/29/24 13:25:01.942
  Jun 29 13:25:01.942: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename projected @ 06/29/24 13:25:01.943
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:25:01.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:25:01.967
  STEP: Creating the pod @ 06/29/24 13:25:01.969
  Jun 29 13:25:04.516: INFO: Successfully updated pod "labelsupdate29823a5f-8865-40f9-bf5f-7e3cb27979d2"
  Jun 29 13:25:08.540: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9105" for this suite. @ 06/29/24 13:25:08.545
â€¢ [6.609 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 06/29/24 13:25:08.551
  Jun 29 13:25:08.552: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename runtimeclass @ 06/29/24 13:25:08.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:25:08.617
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:25:08.62
  Jun 29 13:25:08.652: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3983" for this suite. @ 06/29/24 13:25:08.655
â€¢ [0.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 06/29/24 13:25:08.662
  Jun 29 13:25:08.662: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename subpath @ 06/29/24 13:25:08.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:25:08.677
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:25:08.681
  STEP: Setting up data @ 06/29/24 13:25:08.684
  STEP: Creating pod pod-subpath-test-configmap-4n8p @ 06/29/24 13:25:08.693
  STEP: Creating a pod to test atomic-volume-subpath @ 06/29/24 13:25:08.693
  STEP: Saw pod success @ 06/29/24 13:25:30.764
  Jun 29 13:25:30.767: INFO: Trying to get logs from node ip-172-31-94-98 pod pod-subpath-test-configmap-4n8p container test-container-subpath-configmap-4n8p: <nil>
  STEP: delete the pod @ 06/29/24 13:25:30.779
  STEP: Deleting pod pod-subpath-test-configmap-4n8p @ 06/29/24 13:25:30.793
  Jun 29 13:25:30.793: INFO: Deleting pod "pod-subpath-test-configmap-4n8p" in namespace "subpath-4799"
  Jun 29 13:25:30.795: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4799" for this suite. @ 06/29/24 13:25:30.8
â€¢ [22.146 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 06/29/24 13:25:30.808
  Jun 29 13:25:30.808: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename webhook @ 06/29/24 13:25:30.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:25:30.825
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:25:30.828
  STEP: Setting up server cert @ 06/29/24 13:25:30.848
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/29/24 13:25:31.103
  STEP: Deploying the webhook pod @ 06/29/24 13:25:31.112
  STEP: Wait for the deployment to be ready @ 06/29/24 13:25:31.13
  Jun 29 13:25:31.145: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/29/24 13:25:33.156
  STEP: Verifying the service has paired with the endpoint @ 06/29/24 13:25:33.165
  Jun 29 13:25:34.166: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 06/29/24 13:25:34.24
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/29/24 13:25:34.266
  STEP: Deleting the collection of validation webhooks @ 06/29/24 13:25:34.288
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/29/24 13:25:34.346
  Jun 29 13:25:34.397: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8248" for this suite. @ 06/29/24 13:25:34.403
  STEP: Destroying namespace "webhook-markers-9035" for this suite. @ 06/29/24 13:25:34.409
â€¢ [3.608 seconds]
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 06/29/24 13:25:34.417
  Jun 29 13:25:34.417: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename svcaccounts @ 06/29/24 13:25:34.417
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:25:34.431
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:25:34.435
  STEP: Creating ServiceAccount "e2e-sa-hqld4"  @ 06/29/24 13:25:34.437
  Jun 29 13:25:34.441: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-hqld4"  @ 06/29/24 13:25:34.441
  Jun 29 13:25:34.451: INFO: AutomountServiceAccountToken: true
  Jun 29 13:25:34.451: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9816" for this suite. @ 06/29/24 13:25:34.454
â€¢ [0.043 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 06/29/24 13:25:34.461
  Jun 29 13:25:34.461: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename downward-api @ 06/29/24 13:25:34.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:25:34.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:25:34.475
  STEP: Creating a pod to test downward API volume plugin @ 06/29/24 13:25:34.478
  STEP: Saw pod success @ 06/29/24 13:25:38.502
  Jun 29 13:25:38.506: INFO: Trying to get logs from node ip-172-31-94-98 pod downwardapi-volume-f7b0e37b-e773-4c83-9bc0-6aa780b719e9 container client-container: <nil>
  STEP: delete the pod @ 06/29/24 13:25:38.513
  Jun 29 13:25:38.527: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4686" for this suite. @ 06/29/24 13:25:38.53
â€¢ [4.076 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:163
  STEP: Creating a kubernetes client @ 06/29/24 13:25:38.537
  Jun 29 13:25:38.537: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename resourcequota @ 06/29/24 13:25:38.537
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:25:38.548
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:25:38.55
  STEP: Discovering how many secrets are in namespace by default @ 06/29/24 13:25:38.556
  STEP: Counting existing ResourceQuota @ 06/29/24 13:25:43.56
  STEP: Creating a ResourceQuota @ 06/29/24 13:25:48.565
  STEP: Ensuring resource quota status is calculated @ 06/29/24 13:25:48.571
  STEP: Creating a Secret @ 06/29/24 13:25:50.577
  STEP: Ensuring resource quota status captures secret creation @ 06/29/24 13:25:50.589
  STEP: Deleting a secret @ 06/29/24 13:25:52.596
  STEP: Ensuring resource quota status released usage @ 06/29/24 13:25:52.603
  Jun 29 13:25:54.609: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1185" for this suite. @ 06/29/24 13:25:54.613
â€¢ [16.082 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 06/29/24 13:25:54.619
  Jun 29 13:25:54.619: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename webhook @ 06/29/24 13:25:54.619
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:25:54.635
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:25:54.639
  STEP: Setting up server cert @ 06/29/24 13:25:54.659
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/29/24 13:25:54.777
  STEP: Deploying the webhook pod @ 06/29/24 13:25:54.782
  STEP: Wait for the deployment to be ready @ 06/29/24 13:25:54.796
  Jun 29 13:25:54.813: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/29/24 13:25:56.826
  STEP: Verifying the service has paired with the endpoint @ 06/29/24 13:25:56.837
  Jun 29 13:25:57.839: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 06/29/24 13:25:57.849
  STEP: create a pod @ 06/29/24 13:25:57.861
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 06/29/24 13:25:59.878
  Jun 29 13:25:59.878: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=webhook-9489 attach --namespace=webhook-9489 to-be-attached-pod -i -c=container1'
  Jun 29 13:25:59.930: INFO: rc: 1
  Jun 29 13:25:59.976: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9489" for this suite. @ 06/29/24 13:25:59.982
  STEP: Destroying namespace "webhook-markers-4112" for this suite. @ 06/29/24 13:25:59.988
â€¢ [5.376 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:902
  STEP: Creating a kubernetes client @ 06/29/24 13:25:59.995
  Jun 29 13:25:59.995: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename statefulset @ 06/29/24 13:25:59.995
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:26:00.009
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:26:00.013
  STEP: Creating service test in namespace statefulset-5344 @ 06/29/24 13:26:00.018
  STEP: Creating statefulset ss in namespace statefulset-5344 @ 06/29/24 13:26:00.024
  Jun 29 13:26:00.035: INFO: Found 0 stateful pods, waiting for 1
  Jun 29 13:26:10.038: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 06/29/24 13:26:10.044
  STEP: updating a scale subresource @ 06/29/24 13:26:10.048
  STEP: verifying the statefulset Spec.Replicas was modified @ 06/29/24 13:26:10.054
  STEP: Patch a scale subresource @ 06/29/24 13:26:10.057
  STEP: verifying the statefulset Spec.Replicas was modified @ 06/29/24 13:26:10.064
  Jun 29 13:26:10.071: INFO: Deleting all statefulset in ns statefulset-5344
  Jun 29 13:26:10.076: INFO: Scaling statefulset ss to 0
  Jun 29 13:26:20.092: INFO: Waiting for statefulset status.replicas updated to 0
  Jun 29 13:26:20.095: INFO: Deleting statefulset ss
  Jun 29 13:26:20.110: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5344" for this suite. @ 06/29/24 13:26:20.113
â€¢ [20.131 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 06/29/24 13:26:20.126
  Jun 29 13:26:20.126: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename downward-api @ 06/29/24 13:26:20.126
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:26:20.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:26:20.143
  STEP: Creating a pod to test downward api env vars @ 06/29/24 13:26:20.148
  STEP: Saw pod success @ 06/29/24 13:26:24.175
  Jun 29 13:26:24.179: INFO: Trying to get logs from node ip-172-31-94-98 pod downward-api-9274699b-b40d-415c-8aae-f895605c11c3 container dapi-container: <nil>
  STEP: delete the pod @ 06/29/24 13:26:24.186
  Jun 29 13:26:24.201: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7060" for this suite. @ 06/29/24 13:26:24.205
â€¢ [4.084 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 06/29/24 13:26:24.21
  Jun 29 13:26:24.210: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename init-container @ 06/29/24 13:26:24.211
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:26:24.225
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:26:24.228
  STEP: creating the pod @ 06/29/24 13:26:24.231
  Jun 29 13:26:24.231: INFO: PodSpec: initContainers in spec.initContainers
  Jun 29 13:26:27.689: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-6795" for this suite. @ 06/29/24 13:26:27.693
â€¢ [3.489 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:51
  STEP: Creating a kubernetes client @ 06/29/24 13:26:27.701
  Jun 29 13:26:27.701: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename kubelet-test @ 06/29/24 13:26:27.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:26:27.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:26:27.717
  Jun 29 13:26:29.747: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9254" for this suite. @ 06/29/24 13:26:29.751
â€¢ [2.057 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:47
  STEP: Creating a kubernetes client @ 06/29/24 13:26:29.758
  Jun 29 13:26:29.758: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename secrets @ 06/29/24 13:26:29.758
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:26:29.772
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:26:29.775
  STEP: Creating secret with name secret-test-b02e0b7c-1a91-45cf-9f95-ae8c63fbaf5b @ 06/29/24 13:26:29.78
  STEP: Creating a pod to test consume secrets @ 06/29/24 13:26:29.785
  STEP: Saw pod success @ 06/29/24 13:26:31.807
  Jun 29 13:26:31.810: INFO: Trying to get logs from node ip-172-31-94-98 pod pod-secrets-50249b17-26c5-4039-b9dc-b9cd9b2f82a7 container secret-env-test: <nil>
  STEP: delete the pod @ 06/29/24 13:26:31.815
  Jun 29 13:26:31.833: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7848" for this suite. @ 06/29/24 13:26:31.836
â€¢ [2.085 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 06/29/24 13:26:31.843
  Jun 29 13:26:31.843: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename ingressclass @ 06/29/24 13:26:31.844
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:26:31.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:26:31.863
  STEP: getting /apis @ 06/29/24 13:26:31.866
  STEP: getting /apis/networking.k8s.io @ 06/29/24 13:26:31.869
  STEP: getting /apis/networking.k8s.iov1 @ 06/29/24 13:26:31.87
  STEP: creating @ 06/29/24 13:26:31.871
  STEP: getting @ 06/29/24 13:26:31.884
  STEP: listing @ 06/29/24 13:26:31.887
  STEP: watching @ 06/29/24 13:26:31.89
  Jun 29 13:26:31.890: INFO: starting watch
  STEP: patching @ 06/29/24 13:26:31.891
  STEP: updating @ 06/29/24 13:26:31.896
  Jun 29 13:26:31.901: INFO: waiting for watch events with expected annotations
  Jun 29 13:26:31.901: INFO: saw patched and updated annotations
  STEP: deleting @ 06/29/24 13:26:31.902
  STEP: deleting a collection @ 06/29/24 13:26:31.914
  Jun 29 13:26:31.930: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-162" for this suite. @ 06/29/24 13:26:31.934
â€¢ [0.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 06/29/24 13:26:31.94
  Jun 29 13:26:31.940: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename pod-network-test @ 06/29/24 13:26:31.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:26:31.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:26:31.959
  STEP: Performing setup for networking test in namespace pod-network-test-7850 @ 06/29/24 13:26:31.963
  STEP: creating a selector @ 06/29/24 13:26:31.963
  STEP: Creating the service pods in kubernetes @ 06/29/24 13:26:31.963
  Jun 29 13:26:31.963: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 06/29/24 13:26:44.054
  Jun 29 13:26:46.075: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Jun 29 13:26:46.075: INFO: Breadth first check of 192.168.41.73 on host 172.31.10.28...
  Jun 29 13:26:46.078: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.183.103:9080/dial?request=hostname&protocol=udp&host=192.168.41.73&port=8081&tries=1'] Namespace:pod-network-test-7850 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 29 13:26:46.078: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  Jun 29 13:26:46.078: INFO: ExecWithOptions: Clientset creation
  Jun 29 13:26:46.078: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7850/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.183.103%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.41.73%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jun 29 13:26:46.125: INFO: Waiting for responses: map[]
  Jun 29 13:26:46.126: INFO: reached 192.168.41.73 after 0/1 tries
  Jun 29 13:26:46.126: INFO: Breadth first check of 192.168.109.53 on host 172.31.37.211...
  Jun 29 13:26:46.129: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.183.103:9080/dial?request=hostname&protocol=udp&host=192.168.109.53&port=8081&tries=1'] Namespace:pod-network-test-7850 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 29 13:26:46.129: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  Jun 29 13:26:46.129: INFO: ExecWithOptions: Clientset creation
  Jun 29 13:26:46.129: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7850/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.183.103%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.109.53%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jun 29 13:26:46.173: INFO: Waiting for responses: map[]
  Jun 29 13:26:46.173: INFO: reached 192.168.109.53 after 0/1 tries
  Jun 29 13:26:46.173: INFO: Breadth first check of 192.168.183.99 on host 172.31.94.98...
  Jun 29 13:26:46.176: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.183.103:9080/dial?request=hostname&protocol=udp&host=192.168.183.99&port=8081&tries=1'] Namespace:pod-network-test-7850 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 29 13:26:46.176: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  Jun 29 13:26:46.177: INFO: ExecWithOptions: Clientset creation
  Jun 29 13:26:46.177: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7850/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.183.103%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.183.99%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jun 29 13:26:46.232: INFO: Waiting for responses: map[]
  Jun 29 13:26:46.232: INFO: reached 192.168.183.99 after 0/1 tries
  Jun 29 13:26:46.232: INFO: Going to retry 0 out of 3 pods....
  Jun 29 13:26:46.232: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-7850" for this suite. @ 06/29/24 13:26:46.236
â€¢ [14.303 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 06/29/24 13:26:46.243
  Jun 29 13:26:46.243: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename deployment @ 06/29/24 13:26:46.244
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:26:46.262
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:26:46.264
  Jun 29 13:26:46.277: INFO: Pod name rollover-pod: Found 0 pods out of 1
  Jun 29 13:26:51.280: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/29/24 13:26:51.28
  Jun 29 13:26:51.280: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  Jun 29 13:26:53.286: INFO: Creating deployment "test-rollover-deployment"
  Jun 29 13:26:53.300: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  Jun 29 13:26:55.308: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  Jun 29 13:26:55.315: INFO: Ensure that both replica sets have 1 created replica
  Jun 29 13:26:55.323: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  Jun 29 13:26:55.331: INFO: Updating deployment test-rollover-deployment
  Jun 29 13:26:55.331: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  Jun 29 13:26:57.344: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  Jun 29 13:26:57.350: INFO: Make sure deployment "test-rollover-deployment" is complete
  Jun 29 13:26:57.357: INFO: all replica sets need to contain the pod-template-hash label
  Jun 29 13:26:57.357: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 29, 13, 26, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 29, 13, 26, 53, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 29, 13, 26, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 29, 13, 26, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 29 13:26:59.371: INFO: all replica sets need to contain the pod-template-hash label
  Jun 29 13:26:59.371: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 29, 13, 26, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 29, 13, 26, 53, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 29, 13, 26, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 29, 13, 26, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 29 13:27:01.364: INFO: all replica sets need to contain the pod-template-hash label
  Jun 29 13:27:01.364: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 29, 13, 26, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 29, 13, 26, 53, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 29, 13, 26, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 29, 13, 26, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 29 13:27:03.366: INFO: all replica sets need to contain the pod-template-hash label
  Jun 29 13:27:03.366: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 29, 13, 26, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 29, 13, 26, 53, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 29, 13, 26, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 29, 13, 26, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 29 13:27:05.366: INFO: all replica sets need to contain the pod-template-hash label
  Jun 29 13:27:05.366: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 29, 13, 26, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 29, 13, 26, 53, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 29, 13, 26, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 29, 13, 26, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 29 13:27:07.365: INFO: 
  Jun 29 13:27:07.365: INFO: Ensure that both old replica sets have no replicas
  Jun 29 13:27:07.373: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5926",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d0362315-65b7-4f97-bded-4c6feafad04c",
      ResourceVersion: (string) (len=5) "31684",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855264413,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855264415,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855264426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855264413,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855264413,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855264426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855264413,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-68774655d5\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun 29 13:27:07.379: INFO: New ReplicaSet "test-rollover-deployment-68774655d5" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-68774655d5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5926",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1a350a3f-5309-4ebc-8ef1-887c8d9e0c38",
      ResourceVersion: (string) (len=5) "31674",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855264415,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "d0362315-65b7-4f97-bded-4c6feafad04c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855264415,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 30 33 36 32 33  31 35 2d 36 35 62 37 2d  |\"d0362315-65b7-|
              00000120  34 66 39 37 2d 62 64 65  64 2d 34 63 36 66 65 61  |4f97-bded-4c6fea|
              00000130  66 61 64 30 34 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |fad04c\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855264426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 29 13:27:07.380: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  Jun 29 13:27:07.380: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5926",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "96a7e60b-e4ec-4381-a7da-d8931851ef16",
      ResourceVersion: (string) (len=5) "31683",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855264406,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "d0362315-65b7-4f97-bded-4c6feafad04c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855264406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855264426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  64 30 33 36 32 33 31 35  2d 36 35 62 37 2d 34 66  |d0362315-65b7-4f|
              000000c0  39 37 2d 62 64 65 64 2d  34 63 36 66 65 61 66 61  |97-bded-4c6feafa|
              000000d0  64 30 34 63 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |d04c\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855264426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 29 13:27:07.381: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5926",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "234fd3e4-0fc7-4722-b6fb-aaf838df5d6f",
      ResourceVersion: (string) (len=5) "31620",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855264413,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "d0362315-65b7-4f97-bded-4c6feafad04c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855264415,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 30 33 36 32 33  31 35 2d 36 35 62 37 2d  |\"d0362315-65b7-|
              00000120  34 66 39 37 2d 62 64 65  64 2d 34 63 36 66 65 61  |4f97-bded-4c6fea|
              00000130  66 61 64 30 34 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |fad04c\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855264415,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 29 13:27:07.385: INFO: Pod "test-rollover-deployment-68774655d5-nzpwj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-68774655d5-nzpwj",
      GenerateName: (string) (len=36) "test-rollover-deployment-68774655d5-",
      Namespace: (string) (len=15) "deployment-5926",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1c928d87-8d47-4957-8682-a28aba515370",
      ResourceVersion: (string) (len=5) "31642",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855264415,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-68774655d5",
          UID: (types.UID) (len=36) "1a350a3f-5309-4ebc-8ef1-887c8d9e0c38",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855264415,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 61  33 35 30 61 33 66 2d 35  |d\":\"1a350a3f-5|
              00000090  33 30 39 2d 34 65 62 63  2d 38 65 66 31 2d 38 38  |309-4ebc-8ef1-88|
              000000a0  37 63 38 64 39 65 30 63  33 38 5c 22 7d 22 3a 7b  |7c8d9e0c38\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855264416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 38  33 2e 31 31 33 5c 22 7d  |2.168.183.113\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6bjm8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6bjm8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-94-98",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855264416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855264415,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855264416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855264416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855264415,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.94.98",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.94.98"
        }
      },
      PodIP: (string) (len=15) "192.168.183.113",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.183.113"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855264415,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855264415,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://29b1c1e8ff9c299194f51a09b2780fdc2c38d8f1df60a511dba7ff059cdd7546",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 29 13:27:07.387: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5926" for this suite. @ 06/29/24 13:27:07.39
â€¢ [21.154 seconds]
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 06/29/24 13:27:07.397
  Jun 29 13:27:07.397: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename configmap @ 06/29/24 13:27:07.398
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:27:07.413
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:27:07.416
  STEP: Creating configMap with name configmap-test-volume-5bb55f98-c380-4006-89c5-f14aeda3a936 @ 06/29/24 13:27:07.418
  STEP: Creating a pod to test consume configMaps @ 06/29/24 13:27:07.423
  STEP: Saw pod success @ 06/29/24 13:27:11.446
  Jun 29 13:27:11.451: INFO: Trying to get logs from node ip-172-31-10-28 pod pod-configmaps-f649f000-3584-4b56-83c6-7f7f19e1cee1 container agnhost-container: <nil>
  STEP: delete the pod @ 06/29/24 13:27:11.463
  Jun 29 13:27:11.477: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2009" for this suite. @ 06/29/24 13:27:11.48
â€¢ [4.091 seconds]
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 06/29/24 13:27:11.488
  Jun 29 13:27:11.488: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename emptydir-wrapper @ 06/29/24 13:27:11.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:27:11.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:27:11.505
  STEP: Cleaning up the secret @ 06/29/24 13:27:13.543
  STEP: Cleaning up the configmap @ 06/29/24 13:27:13.55
  STEP: Cleaning up the pod @ 06/29/24 13:27:13.556
  Jun 29 13:27:13.571: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-7870" for this suite. @ 06/29/24 13:27:13.575
â€¢ [2.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 06/29/24 13:27:13.582
  Jun 29 13:27:13.582: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename downward-api @ 06/29/24 13:27:13.583
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:27:13.596
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:27:13.6
  STEP: Creating a pod to test downward API volume plugin @ 06/29/24 13:27:13.602
  STEP: Saw pod success @ 06/29/24 13:27:17.627
  Jun 29 13:27:17.631: INFO: Trying to get logs from node ip-172-31-94-98 pod downwardapi-volume-769d7eb2-624c-4b58-8bf8-e14e6db847bc container client-container: <nil>
  STEP: delete the pod @ 06/29/24 13:27:17.643
  Jun 29 13:27:17.658: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4050" for this suite. @ 06/29/24 13:27:17.663
â€¢ [4.088 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 06/29/24 13:27:17.67
  Jun 29 13:27:17.670: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename server-version @ 06/29/24 13:27:17.671
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:27:17.685
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:27:17.688
  STEP: Request ServerVersion @ 06/29/24 13:27:17.69
  STEP: Confirm major version @ 06/29/24 13:27:17.691
  Jun 29 13:27:17.691: INFO: Major version: 1
  STEP: Confirm minor version @ 06/29/24 13:27:17.691
  Jun 29 13:27:17.691: INFO: cleanMinorVersion: 29
  Jun 29 13:27:17.691: INFO: Minor version: 29
  Jun 29 13:27:17.691: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-487" for this suite. @ 06/29/24 13:27:17.696
â€¢ [0.031 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 06/29/24 13:27:17.702
  Jun 29 13:27:17.702: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename field-validation @ 06/29/24 13:27:17.703
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:27:17.719
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:27:17.723
  Jun 29 13:27:17.726: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  W0629 13:27:20.265308      18 warnings.go:70] unknown field "alpha"
  W0629 13:27:20.265333      18 warnings.go:70] unknown field "beta"
  W0629 13:27:20.265336      18 warnings.go:70] unknown field "delta"
  W0629 13:27:20.265340      18 warnings.go:70] unknown field "epsilon"
  W0629 13:27:20.265343      18 warnings.go:70] unknown field "gamma"
  Jun 29 13:27:20.807: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4617" for this suite. @ 06/29/24 13:27:20.81
â€¢ [3.113 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 06/29/24 13:27:20.816
  Jun 29 13:27:20.816: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename var-expansion @ 06/29/24 13:27:20.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:27:20.832
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:27:20.837
  STEP: Creating a pod to test env composition @ 06/29/24 13:27:20.84
  STEP: Saw pod success @ 06/29/24 13:27:22.859
  Jun 29 13:27:22.862: INFO: Trying to get logs from node ip-172-31-94-98 pod var-expansion-f638c2fd-d5d1-4fe2-9e68-1ace0a0c50f3 container dapi-container: <nil>
  STEP: delete the pod @ 06/29/24 13:27:22.871
  Jun 29 13:27:22.886: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4465" for this suite. @ 06/29/24 13:27:22.889
â€¢ [2.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 06/29/24 13:27:22.899
  Jun 29 13:27:22.899: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename proxy @ 06/29/24 13:27:22.9
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:27:22.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:27:22.922
  STEP: starting an echo server on multiple ports @ 06/29/24 13:27:22.937
  STEP: creating replication controller proxy-service-dbxt4 in namespace proxy-7279 @ 06/29/24 13:27:22.938
  I0629 13:27:22.944822      18 runners.go:197] Created replication controller with name: proxy-service-dbxt4, namespace: proxy-7279, replica count: 1
  I0629 13:27:23.995826      18 runners.go:197] proxy-service-dbxt4 Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  I0629 13:27:24.996423      18 runners.go:197] proxy-service-dbxt4 Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun 29 13:27:25.001: INFO: setup took 2.074063568s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 06/29/24 13:27:25.001
  Jun 29 13:27:25.006: INFO: (0) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:162/proxy/: bar (200; 4.826558ms)
  Jun 29 13:27:25.006: INFO: (0) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:1080/proxy/rewriteme">... (200; 4.971513ms)
  Jun 29 13:27:25.007: INFO: (0) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:1080/proxy/rewriteme">test<... (200; 6.125224ms)
  Jun 29 13:27:25.007: INFO: (0) /api/v1/namespaces/proxy-7279/services/proxy-service-dbxt4:portname2/proxy/: bar (200; 6.338154ms)
  Jun 29 13:27:25.009: INFO: (0) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:160/proxy/: foo (200; 7.57439ms)
  Jun 29 13:27:25.009: INFO: (0) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:162/proxy/: bar (200; 8.292926ms)
  Jun 29 13:27:25.009: INFO: (0) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:160/proxy/: foo (200; 8.365065ms)
  Jun 29 13:27:25.009: INFO: (0) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g/proxy/rewriteme">test</a> (200; 8.552369ms)
  Jun 29 13:27:25.011: INFO: (0) /api/v1/namespaces/proxy-7279/services/https:proxy-service-dbxt4:tlsportname2/proxy/: tls qux (200; 10.407048ms)
  Jun 29 13:27:25.011: INFO: (0) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:462/proxy/: tls qux (200; 10.276067ms)
  Jun 29 13:27:25.011: INFO: (0) /api/v1/namespaces/proxy-7279/services/http:proxy-service-dbxt4:portname2/proxy/: bar (200; 10.187242ms)
  Jun 29 13:27:25.011: INFO: (0) /api/v1/namespaces/proxy-7279/services/http:proxy-service-dbxt4:portname1/proxy/: foo (200; 10.407731ms)
  Jun 29 13:27:25.013: INFO: (0) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:443/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:443/proxy/tlsrewritem... (200; 12.0896ms)
  Jun 29 13:27:25.013: INFO: (0) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:460/proxy/: tls baz (200; 12.295111ms)
  Jun 29 13:27:25.013: INFO: (0) /api/v1/namespaces/proxy-7279/services/proxy-service-dbxt4:portname1/proxy/: foo (200; 12.190282ms)
  Jun 29 13:27:25.013: INFO: (0) /api/v1/namespaces/proxy-7279/services/https:proxy-service-dbxt4:tlsportname1/proxy/: tls baz (200; 12.552997ms)
  Jun 29 13:27:25.017: INFO: (1) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:460/proxy/: tls baz (200; 3.258475ms)
  Jun 29 13:27:25.018: INFO: (1) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:1080/proxy/rewriteme">... (200; 4.151121ms)
  Jun 29 13:27:25.018: INFO: (1) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:1080/proxy/rewriteme">test<... (200; 4.45956ms)
  Jun 29 13:27:25.019: INFO: (1) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:162/proxy/: bar (200; 4.828477ms)
  Jun 29 13:27:25.019: INFO: (1) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g/proxy/rewriteme">test</a> (200; 4.946522ms)
  Jun 29 13:27:25.019: INFO: (1) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:160/proxy/: foo (200; 5.365513ms)
  Jun 29 13:27:25.019: INFO: (1) /api/v1/namespaces/proxy-7279/services/http:proxy-service-dbxt4:portname1/proxy/: foo (200; 5.959123ms)
  Jun 29 13:27:25.020: INFO: (1) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:462/proxy/: tls qux (200; 5.885759ms)
  Jun 29 13:27:25.020: INFO: (1) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:160/proxy/: foo (200; 6.443002ms)
  Jun 29 13:27:25.020: INFO: (1) /api/v1/namespaces/proxy-7279/services/proxy-service-dbxt4:portname1/proxy/: foo (200; 6.556292ms)
  Jun 29 13:27:25.020: INFO: (1) /api/v1/namespaces/proxy-7279/services/proxy-service-dbxt4:portname2/proxy/: bar (200; 6.567797ms)
  Jun 29 13:27:25.021: INFO: (1) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:443/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:443/proxy/tlsrewritem... (200; 7.378475ms)
  Jun 29 13:27:25.021: INFO: (1) /api/v1/namespaces/proxy-7279/services/https:proxy-service-dbxt4:tlsportname1/proxy/: tls baz (200; 7.526772ms)
  Jun 29 13:27:25.021: INFO: (1) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:162/proxy/: bar (200; 7.625432ms)
  Jun 29 13:27:25.022: INFO: (1) /api/v1/namespaces/proxy-7279/services/http:proxy-service-dbxt4:portname2/proxy/: bar (200; 8.447122ms)
  Jun 29 13:27:25.022: INFO: (1) /api/v1/namespaces/proxy-7279/services/https:proxy-service-dbxt4:tlsportname2/proxy/: tls qux (200; 8.520633ms)
  Jun 29 13:27:25.025: INFO: (2) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:1080/proxy/rewriteme">test<... (200; 2.973812ms)
  Jun 29 13:27:25.025: INFO: (2) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:162/proxy/: bar (200; 2.972744ms)
  Jun 29 13:27:25.027: INFO: (2) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g/proxy/rewriteme">test</a> (200; 5.047917ms)
  Jun 29 13:27:25.028: INFO: (2) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:160/proxy/: foo (200; 5.195157ms)
  Jun 29 13:27:25.029: INFO: (2) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:443/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:443/proxy/tlsrewritem... (200; 7.18158ms)
  Jun 29 13:27:25.030: INFO: (2) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:1080/proxy/rewriteme">... (200; 7.1629ms)
  Jun 29 13:27:25.031: INFO: (2) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:460/proxy/: tls baz (200; 8.224369ms)
  Jun 29 13:27:25.031: INFO: (2) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:162/proxy/: bar (200; 8.36686ms)
  Jun 29 13:27:25.033: INFO: (2) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:160/proxy/: foo (200; 10.454473ms)
  Jun 29 13:27:25.033: INFO: (2) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:462/proxy/: tls qux (200; 10.535334ms)
  Jun 29 13:27:25.033: INFO: (2) /api/v1/namespaces/proxy-7279/services/https:proxy-service-dbxt4:tlsportname2/proxy/: tls qux (200; 10.382178ms)
  Jun 29 13:27:25.033: INFO: (2) /api/v1/namespaces/proxy-7279/services/proxy-service-dbxt4:portname1/proxy/: foo (200; 11.105949ms)
  Jun 29 13:27:25.034: INFO: (2) /api/v1/namespaces/proxy-7279/services/http:proxy-service-dbxt4:portname2/proxy/: bar (200; 11.770641ms)
  Jun 29 13:27:25.034: INFO: (2) /api/v1/namespaces/proxy-7279/services/proxy-service-dbxt4:portname2/proxy/: bar (200; 11.794005ms)
  Jun 29 13:27:25.034: INFO: (2) /api/v1/namespaces/proxy-7279/services/https:proxy-service-dbxt4:tlsportname1/proxy/: tls baz (200; 11.775731ms)
  Jun 29 13:27:25.034: INFO: (2) /api/v1/namespaces/proxy-7279/services/http:proxy-service-dbxt4:portname1/proxy/: foo (200; 11.910505ms)
  Jun 29 13:27:25.038: INFO: (3) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:160/proxy/: foo (200; 3.467574ms)
  Jun 29 13:27:25.038: INFO: (3) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:1080/proxy/rewriteme">... (200; 3.897556ms)
  Jun 29 13:27:25.039: INFO: (3) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:462/proxy/: tls qux (200; 3.881269ms)
  Jun 29 13:27:25.039: INFO: (3) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:443/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:443/proxy/tlsrewritem... (200; 4.739622ms)
  Jun 29 13:27:25.039: INFO: (3) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g/proxy/rewriteme">test</a> (200; 4.667449ms)
  Jun 29 13:27:25.040: INFO: (3) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:162/proxy/: bar (200; 5.214384ms)
  Jun 29 13:27:25.040: INFO: (3) /api/v1/namespaces/proxy-7279/services/https:proxy-service-dbxt4:tlsportname1/proxy/: tls baz (200; 5.303787ms)
  Jun 29 13:27:25.040: INFO: (3) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:1080/proxy/rewriteme">test<... (200; 5.501524ms)
  Jun 29 13:27:25.041: INFO: (3) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:160/proxy/: foo (200; 6.033397ms)
  Jun 29 13:27:25.041: INFO: (3) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:162/proxy/: bar (200; 6.510827ms)
  Jun 29 13:27:25.041: INFO: (3) /api/v1/namespaces/proxy-7279/services/proxy-service-dbxt4:portname1/proxy/: foo (200; 6.73993ms)
  Jun 29 13:27:25.041: INFO: (3) /api/v1/namespaces/proxy-7279/services/http:proxy-service-dbxt4:portname1/proxy/: foo (200; 6.768124ms)
  Jun 29 13:27:25.041: INFO: (3) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:460/proxy/: tls baz (200; 6.788779ms)
  Jun 29 13:27:25.042: INFO: (3) /api/v1/namespaces/proxy-7279/services/http:proxy-service-dbxt4:portname2/proxy/: bar (200; 7.508102ms)
  Jun 29 13:27:25.042: INFO: (3) /api/v1/namespaces/proxy-7279/services/https:proxy-service-dbxt4:tlsportname2/proxy/: tls qux (200; 7.697502ms)
  Jun 29 13:27:25.044: INFO: (3) /api/v1/namespaces/proxy-7279/services/proxy-service-dbxt4:portname2/proxy/: bar (200; 9.305701ms)
  Jun 29 13:27:25.047: INFO: (4) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:443/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:443/proxy/tlsrewritem... (200; 3.311701ms)
  Jun 29 13:27:25.047: INFO: (4) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:162/proxy/: bar (200; 3.369235ms)
  Jun 29 13:27:25.049: INFO: (4) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:1080/proxy/rewriteme">test<... (200; 4.584284ms)
  Jun 29 13:27:25.049: INFO: (4) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:460/proxy/: tls baz (200; 4.823306ms)
  Jun 29 13:27:25.049: INFO: (4) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:160/proxy/: foo (200; 5.045725ms)
  Jun 29 13:27:25.049: INFO: (4) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g/proxy/rewriteme">test</a> (200; 5.072556ms)
  Jun 29 13:27:25.050: INFO: (4) /api/v1/namespaces/proxy-7279/services/https:proxy-service-dbxt4:tlsportname2/proxy/: tls qux (200; 5.321487ms)
  Jun 29 13:27:25.050: INFO: (4) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:160/proxy/: foo (200; 5.669973ms)
  Jun 29 13:27:25.050: INFO: (4) /api/v1/namespaces/proxy-7279/services/proxy-service-dbxt4:portname1/proxy/: foo (200; 6.002286ms)
  Jun 29 13:27:25.051: INFO: (4) /api/v1/namespaces/proxy-7279/services/proxy-service-dbxt4:portname2/proxy/: bar (200; 6.381381ms)
  Jun 29 13:27:25.051: INFO: (4) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:162/proxy/: bar (200; 6.479354ms)
  Jun 29 13:27:25.051: INFO: (4) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:1080/proxy/rewriteme">... (200; 7.110182ms)
  Jun 29 13:27:25.051: INFO: (4) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:462/proxy/: tls qux (200; 7.048562ms)
  Jun 29 13:27:25.052: INFO: (4) /api/v1/namespaces/proxy-7279/services/http:proxy-service-dbxt4:portname2/proxy/: bar (200; 7.405074ms)
  Jun 29 13:27:25.052: INFO: (4) /api/v1/namespaces/proxy-7279/services/https:proxy-service-dbxt4:tlsportname1/proxy/: tls baz (200; 7.770186ms)
  Jun 29 13:27:25.052: INFO: (4) /api/v1/namespaces/proxy-7279/services/http:proxy-service-dbxt4:portname1/proxy/: foo (200; 8.068974ms)
  Jun 29 13:27:25.056: INFO: (5) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:1080/proxy/rewriteme">... (200; 3.446202ms)
  Jun 29 13:27:25.056: INFO: (5) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:443/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:443/proxy/tlsrewritem... (200; 3.910134ms)
  Jun 29 13:27:25.057: INFO: (5) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:162/proxy/: bar (200; 4.546699ms)
  Jun 29 13:27:25.057: INFO: (5) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:162/proxy/: bar (200; 4.717557ms)
  Jun 29 13:27:25.058: INFO: (5) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g/proxy/rewriteme">test</a> (200; 5.055192ms)
  Jun 29 13:27:25.058: INFO: (5) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:462/proxy/: tls qux (200; 5.457954ms)
  Jun 29 13:27:25.059: INFO: (5) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:460/proxy/: tls baz (200; 5.846214ms)
  Jun 29 13:27:25.059: INFO: (5) /api/v1/namespaces/proxy-7279/services/proxy-service-dbxt4:portname1/proxy/: foo (200; 6.665316ms)
  Jun 29 13:27:25.059: INFO: (5) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:160/proxy/: foo (200; 6.552934ms)
  Jun 29 13:27:25.059: INFO: (5) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:1080/proxy/rewriteme">test<... (200; 6.689083ms)
  Jun 29 13:27:25.059: INFO: (5) /api/v1/namespaces/proxy-7279/services/https:proxy-service-dbxt4:tlsportname1/proxy/: tls baz (200; 7.133824ms)
  Jun 29 13:27:25.059: INFO: (5) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:160/proxy/: foo (200; 7.03684ms)
  Jun 29 13:27:25.060: INFO: (5) /api/v1/namespaces/proxy-7279/services/http:proxy-service-dbxt4:portname1/proxy/: foo (200; 6.952904ms)
  Jun 29 13:27:25.060: INFO: (5) /api/v1/namespaces/proxy-7279/services/https:proxy-service-dbxt4:tlsportname2/proxy/: tls qux (200; 7.070437ms)
  Jun 29 13:27:25.060: INFO: (5) /api/v1/namespaces/proxy-7279/services/http:proxy-service-dbxt4:portname2/proxy/: bar (200; 7.300419ms)
  Jun 29 13:27:25.060: INFO: (5) /api/v1/namespaces/proxy-7279/services/proxy-service-dbxt4:portname2/proxy/: bar (200; 7.81604ms)
  Jun 29 13:27:25.063: INFO: (6) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:1080/proxy/rewriteme">test<... (200; 2.701835ms)
  Jun 29 13:27:25.065: INFO: (6) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:160/proxy/: foo (200; 4.335391ms)
  Jun 29 13:27:25.065: INFO: (6) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:462/proxy/: tls qux (200; 4.541331ms)
  Jun 29 13:27:25.065: INFO: (6) /api/v1/namespaces/proxy-7279/services/http:proxy-service-dbxt4:portname1/proxy/: foo (200; 4.745586ms)
  Jun 29 13:27:25.065: INFO: (6) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:162/proxy/: bar (200; 4.619463ms)
  Jun 29 13:27:25.066: INFO: (6) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:160/proxy/: foo (200; 5.419439ms)
  Jun 29 13:27:25.067: INFO: (6) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:1080/proxy/rewriteme">... (200; 6.26303ms)
  Jun 29 13:27:25.067: INFO: (6) /api/v1/namespaces/proxy-7279/services/proxy-service-dbxt4:portname1/proxy/: foo (200; 6.577167ms)
  Jun 29 13:27:25.067: INFO: (6) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:460/proxy/: tls baz (200; 6.727431ms)
  Jun 29 13:27:25.067: INFO: (6) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:162/proxy/: bar (200; 6.695902ms)
  Jun 29 13:27:25.067: INFO: (6) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g/proxy/rewriteme">test</a> (200; 6.774474ms)
  Jun 29 13:27:25.067: INFO: (6) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:443/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:443/proxy/tlsrewritem... (200; 6.768375ms)
  Jun 29 13:27:25.068: INFO: (6) /api/v1/namespaces/proxy-7279/services/https:proxy-service-dbxt4:tlsportname2/proxy/: tls qux (200; 7.004684ms)
  Jun 29 13:27:25.068: INFO: (6) /api/v1/namespaces/proxy-7279/services/https:proxy-service-dbxt4:tlsportname1/proxy/: tls baz (200; 7.318188ms)
  Jun 29 13:27:25.068: INFO: (6) /api/v1/namespaces/proxy-7279/services/proxy-service-dbxt4:portname2/proxy/: bar (200; 7.337397ms)
  Jun 29 13:27:25.069: INFO: (6) /api/v1/namespaces/proxy-7279/services/http:proxy-service-dbxt4:portname2/proxy/: bar (200; 8.238711ms)
  Jun 29 13:27:25.072: INFO: (7) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:160/proxy/: foo (200; 3.046357ms)
  Jun 29 13:27:25.072: INFO: (7) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:460/proxy/: tls baz (200; 3.117067ms)
  Jun 29 13:27:25.073: INFO: (7) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:1080/proxy/rewriteme">... (200; 4.209115ms)
  Jun 29 13:27:25.074: INFO: (7) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:1080/proxy/rewriteme">test<... (200; 4.972165ms)
  Jun 29 13:27:25.074: INFO: (7) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:162/proxy/: bar (200; 5.137787ms)
  Jun 29 13:27:25.074: INFO: (7) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:162/proxy/: bar (200; 5.02718ms)
  Jun 29 13:27:25.074: INFO: (7) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:462/proxy/: tls qux (200; 5.117084ms)
  Jun 29 13:27:25.075: INFO: (7) /api/v1/namespaces/proxy-7279/services/https:proxy-service-dbxt4:tlsportname2/proxy/: tls qux (200; 5.729559ms)
  Jun 29 13:27:25.075: INFO: (7) /api/v1/namespaces/proxy-7279/services/https:proxy-service-dbxt4:tlsportname1/proxy/: tls baz (200; 5.829911ms)
  Jun 29 13:27:25.076: INFO: (7) /api/v1/namespaces/proxy-7279/services/http:proxy-service-dbxt4:portname2/proxy/: bar (200; 6.610517ms)
  Jun 29 13:27:25.076: INFO: (7) /api/v1/namespaces/proxy-7279/services/proxy-service-dbxt4:portname1/proxy/: foo (200; 6.779065ms)
  Jun 29 13:27:25.076: INFO: (7) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:160/proxy/: foo (200; 6.926693ms)
  Jun 29 13:27:25.076: INFO: (7) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:443/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:443/proxy/tlsrewritem... (200; 7.274886ms)
  Jun 29 13:27:25.076: INFO: (7) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g/proxy/rewriteme">test</a> (200; 7.094324ms)
  Jun 29 13:27:25.077: INFO: (7) /api/v1/namespaces/proxy-7279/services/http:proxy-service-dbxt4:portname1/proxy/: foo (200; 7.995011ms)
  Jun 29 13:27:25.077: INFO: (7) /api/v1/namespaces/proxy-7279/services/proxy-service-dbxt4:portname2/proxy/: bar (200; 7.997834ms)
  Jun 29 13:27:25.080: INFO: (8) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:162/proxy/: bar (200; 2.573604ms)
  Jun 29 13:27:25.081: INFO: (8) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:1080/proxy/rewriteme">test<... (200; 3.894107ms)
  Jun 29 13:27:25.082: INFO: (8) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:162/proxy/: bar (200; 4.710413ms)
  Jun 29 13:27:25.083: INFO: (8) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g/proxy/rewriteme">test</a> (200; 5.388379ms)
  Jun 29 13:27:25.083: INFO: (8) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:160/proxy/: foo (200; 6.21828ms)
  Jun 29 13:27:25.085: INFO: (8) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:462/proxy/: tls qux (200; 7.374022ms)
  Jun 29 13:27:25.085: INFO: (8) /api/v1/namespaces/proxy-7279/services/proxy-service-dbxt4:portname1/proxy/: foo (200; 7.549714ms)
  Jun 29 13:27:25.085: INFO: (8) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:460/proxy/: tls baz (200; 7.465573ms)
  Jun 29 13:27:25.085: INFO: (8) /api/v1/namespaces/proxy-7279/services/https:proxy-service-dbxt4:tlsportname1/proxy/: tls baz (200; 7.70062ms)
  Jun 29 13:27:25.086: INFO: (8) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:443/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:443/proxy/tlsrewritem... (200; 8.71882ms)
  Jun 29 13:27:25.086: INFO: (8) /api/v1/namespaces/proxy-7279/services/proxy-service-dbxt4:portname2/proxy/: bar (200; 8.746599ms)
  Jun 29 13:27:25.086: INFO: (8) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:160/proxy/: foo (200; 8.944648ms)
  Jun 29 13:27:25.086: INFO: (8) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:1080/proxy/rewriteme">... (200; 8.936279ms)
  Jun 29 13:27:25.086: INFO: (8) /api/v1/namespaces/proxy-7279/services/https:proxy-service-dbxt4:tlsportname2/proxy/: tls qux (200; 9.184536ms)
  Jun 29 13:27:25.086: INFO: (8) /api/v1/namespaces/proxy-7279/services/http:proxy-service-dbxt4:portname2/proxy/: bar (200; 9.200896ms)
  Jun 29 13:27:25.087: INFO: (8) /api/v1/namespaces/proxy-7279/services/http:proxy-service-dbxt4:portname1/proxy/: foo (200; 9.48419ms)
  Jun 29 13:27:25.091: INFO: (9) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:462/proxy/: tls qux (200; 3.922597ms)
  Jun 29 13:27:25.091: INFO: (9) /api/v1/namespaces/proxy-7279/services/http:proxy-service-dbxt4:portname1/proxy/: foo (200; 4.523295ms)
  Jun 29 13:27:25.092: INFO: (9) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:1080/proxy/rewriteme">... (200; 5.176358ms)
  Jun 29 13:27:25.092: INFO: (9) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:160/proxy/: foo (200; 5.210534ms)
  Jun 29 13:27:25.092: INFO: (9) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g/proxy/rewriteme">test</a> (200; 5.485357ms)
  Jun 29 13:27:25.093: INFO: (9) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:162/proxy/: bar (200; 5.723233ms)
  Jun 29 13:27:25.093: INFO: (9) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:460/proxy/: tls baz (200; 6.446816ms)
  Jun 29 13:27:25.094: INFO: (9) /api/v1/namespaces/proxy-7279/services/http:proxy-service-dbxt4:portname2/proxy/: bar (200; 6.723367ms)
  Jun 29 13:27:25.094: INFO: (9) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:443/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:443/proxy/tlsrewritem... (200; 6.868547ms)
  Jun 29 13:27:25.094: INFO: (9) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:160/proxy/: foo (200; 6.924746ms)
  Jun 29 13:27:25.094: INFO: (9) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:1080/proxy/rewriteme">test<... (200; 7.232811ms)
  Jun 29 13:27:25.094: INFO: (9) /api/v1/namespaces/proxy-7279/services/https:proxy-service-dbxt4:tlsportname2/proxy/: tls qux (200; 7.394087ms)
  Jun 29 13:27:25.094: INFO: (9) /api/v1/namespaces/proxy-7279/services/proxy-service-dbxt4:portname2/proxy/: bar (200; 7.529945ms)
  Jun 29 13:27:25.094: INFO: (9) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:162/proxy/: bar (200; 7.319944ms)
  Jun 29 13:27:25.095: INFO: (9) /api/v1/namespaces/proxy-7279/services/https:proxy-service-dbxt4:tlsportname1/proxy/: tls baz (200; 8.119485ms)
  Jun 29 13:27:25.097: INFO: (9) /api/v1/namespaces/proxy-7279/services/proxy-service-dbxt4:portname1/proxy/: foo (200; 9.816881ms)
  Jun 29 13:27:25.100: INFO: (10) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g/proxy/rewriteme">test</a> (200; 2.998779ms)
  Jun 29 13:27:25.100: INFO: (10) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:162/proxy/: bar (200; 2.923079ms)
  Jun 29 13:27:25.100: INFO: (10) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:162/proxy/: bar (200; 3.453549ms)
  Jun 29 13:27:25.101: INFO: (10) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:443/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:443/proxy/tlsrewritem... (200; 4.083502ms)
  Jun 29 13:27:25.101: INFO: (10) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:160/proxy/: foo (200; 4.564588ms)
  Jun 29 13:27:25.101: INFO: (10) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:1080/proxy/rewriteme">test<... (200; 4.424845ms)
  Jun 29 13:27:25.102: INFO: (10) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:1080/proxy/rewriteme">... (200; 4.830766ms)
  Jun 29 13:27:25.102: INFO: (10) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:160/proxy/: foo (200; 5.444928ms)
  Jun 29 13:27:25.103: INFO: (10) /api/v1/namespaces/proxy-7279/services/http:proxy-service-dbxt4:portname2/proxy/: bar (200; 5.968353ms)
  Jun 29 13:27:25.103: INFO: (10) /api/v1/namespaces/proxy-7279/services/proxy-service-dbxt4:portname1/proxy/: foo (200; 6.122346ms)
  Jun 29 13:27:25.103: INFO: (10) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:460/proxy/: tls baz (200; 6.474221ms)
  Jun 29 13:27:25.103: INFO: (10) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:462/proxy/: tls qux (200; 6.651826ms)
  Jun 29 13:27:25.104: INFO: (10) /api/v1/namespaces/proxy-7279/services/https:proxy-service-dbxt4:tlsportname1/proxy/: tls baz (200; 6.962335ms)
  Jun 29 13:27:25.104: INFO: (10) /api/v1/namespaces/proxy-7279/services/https:proxy-service-dbxt4:tlsportname2/proxy/: tls qux (200; 6.946995ms)
  Jun 29 13:27:25.104: INFO: (10) /api/v1/namespaces/proxy-7279/services/proxy-service-dbxt4:portname2/proxy/: bar (200; 7.281716ms)
  Jun 29 13:27:25.105: INFO: (10) /api/v1/namespaces/proxy-7279/services/http:proxy-service-dbxt4:portname1/proxy/: foo (200; 7.951898ms)
  Jun 29 13:27:25.109: INFO: (11) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:1080/proxy/rewriteme">test<... (200; 3.655327ms)
  Jun 29 13:27:25.110: INFO: (11) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:1080/proxy/rewriteme">... (200; 4.706376ms)
  Jun 29 13:27:25.110: INFO: (11) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:162/proxy/: bar (200; 5.13064ms)
  Jun 29 13:27:25.111: INFO: (11) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:160/proxy/: foo (200; 5.372932ms)
  Jun 29 13:27:25.111: INFO: (11) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:443/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:443/proxy/tlsrewritem... (200; 5.507133ms)
  Jun 29 13:27:25.111: INFO: (11) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:462/proxy/: tls qux (200; 5.674057ms)
  Jun 29 13:27:25.111: INFO: (11) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:160/proxy/: foo (200; 5.799295ms)
  Jun 29 13:27:25.111: INFO: (11) /api/v1/namespaces/proxy-7279/services/https:proxy-service-dbxt4:tlsportname1/proxy/: tls baz (200; 6.206063ms)
  Jun 29 13:27:25.112: INFO: (11) /api/v1/namespaces/proxy-7279/services/http:proxy-service-dbxt4:portname1/proxy/: foo (200; 6.656998ms)
  Jun 29 13:27:25.112: INFO: (11) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:162/proxy/: bar (200; 6.997271ms)
  Jun 29 13:27:25.112: INFO: (11) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g/proxy/rewriteme">test</a> (200; 6.886933ms)
  Jun 29 13:27:25.113: INFO: (11) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:460/proxy/: tls baz (200; 7.66341ms)
  Jun 29 13:27:25.113: INFO: (11) /api/v1/namespaces/proxy-7279/services/https:proxy-service-dbxt4:tlsportname2/proxy/: tls qux (200; 7.804373ms)
  Jun 29 13:27:25.113: INFO: (11) /api/v1/namespaces/proxy-7279/services/proxy-service-dbxt4:portname2/proxy/: bar (200; 8.056478ms)
  Jun 29 13:27:25.113: INFO: (11) /api/v1/namespaces/proxy-7279/services/proxy-service-dbxt4:portname1/proxy/: foo (200; 7.946852ms)
  Jun 29 13:27:25.113: INFO: (11) /api/v1/namespaces/proxy-7279/services/http:proxy-service-dbxt4:portname2/proxy/: bar (200; 8.23445ms)
  Jun 29 13:27:25.117: INFO: (12) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:162/proxy/: bar (200; 3.196598ms)
  Jun 29 13:27:25.118: INFO: (12) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:1080/proxy/rewriteme">... (200; 3.946382ms)
  Jun 29 13:27:25.118: INFO: (12) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:162/proxy/: bar (200; 4.301774ms)
  Jun 29 13:27:25.118: INFO: (12) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g/proxy/rewriteme">test</a> (200; 4.382356ms)
  Jun 29 13:27:25.118: INFO: (12) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:462/proxy/: tls qux (200; 4.81875ms)
  Jun 29 13:27:25.119: INFO: (12) /api/v1/namespaces/proxy-7279/services/proxy-service-dbxt4:portname1/proxy/: foo (200; 5.298061ms)
  Jun 29 13:27:25.120: INFO: (12) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:160/proxy/: foo (200; 5.709402ms)
  Jun 29 13:27:25.120: INFO: (12) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:460/proxy/: tls baz (200; 5.868129ms)
  Jun 29 13:27:25.120: INFO: (12) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:443/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:443/proxy/tlsrewritem... (200; 5.960724ms)
  Jun 29 13:27:25.120: INFO: (12) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:1080/proxy/rewriteme">test<... (200; 6.263086ms)
  Jun 29 13:27:25.120: INFO: (12) /api/v1/namespaces/proxy-7279/services/https:proxy-service-dbxt4:tlsportname1/proxy/: tls baz (200; 6.637267ms)
  Jun 29 13:27:25.120: INFO: (12) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:160/proxy/: foo (200; 6.784089ms)
  Jun 29 13:27:25.121: INFO: (12) /api/v1/namespaces/proxy-7279/services/https:proxy-service-dbxt4:tlsportname2/proxy/: tls qux (200; 6.966218ms)
  Jun 29 13:27:25.121: INFO: (12) /api/v1/namespaces/proxy-7279/services/http:proxy-service-dbxt4:portname2/proxy/: bar (200; 7.148531ms)
  Jun 29 13:27:25.121: INFO: (12) /api/v1/namespaces/proxy-7279/services/http:proxy-service-dbxt4:portname1/proxy/: foo (200; 7.551317ms)
  Jun 29 13:27:25.122: INFO: (12) /api/v1/namespaces/proxy-7279/services/proxy-service-dbxt4:portname2/proxy/: bar (200; 8.147162ms)
  Jun 29 13:27:25.125: INFO: (13) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:460/proxy/: tls baz (200; 3.33898ms)
  Jun 29 13:27:25.126: INFO: (13) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:160/proxy/: foo (200; 4.257546ms)
  Jun 29 13:27:25.126: INFO: (13) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:462/proxy/: tls qux (200; 4.255766ms)
  Jun 29 13:27:25.126: INFO: (13) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:1080/proxy/rewriteme">... (200; 4.384748ms)
  Jun 29 13:27:25.127: INFO: (13) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:443/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:443/proxy/tlsrewritem... (200; 4.894822ms)
  Jun 29 13:27:25.128: INFO: (13) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g/proxy/rewriteme">test</a> (200; 5.9507ms)
  Jun 29 13:27:25.128: INFO: (13) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:162/proxy/: bar (200; 5.847016ms)
  Jun 29 13:27:25.128: INFO: (13) /api/v1/namespaces/proxy-7279/services/https:proxy-service-dbxt4:tlsportname1/proxy/: tls baz (200; 6.03861ms)
  Jun 29 13:27:25.128: INFO: (13) /api/v1/namespaces/proxy-7279/services/http:proxy-service-dbxt4:portname1/proxy/: foo (200; 6.470326ms)
  Jun 29 13:27:25.129: INFO: (13) /api/v1/namespaces/proxy-7279/services/proxy-service-dbxt4:portname2/proxy/: bar (200; 6.494837ms)
  Jun 29 13:27:25.129: INFO: (13) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:162/proxy/: bar (200; 6.559558ms)
  Jun 29 13:27:25.129: INFO: (13) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:160/proxy/: foo (200; 6.654552ms)
  Jun 29 13:27:25.129: INFO: (13) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:1080/proxy/rewriteme">test<... (200; 6.845908ms)
  Jun 29 13:27:25.129: INFO: (13) /api/v1/namespaces/proxy-7279/services/https:proxy-service-dbxt4:tlsportname2/proxy/: tls qux (200; 7.095795ms)
  Jun 29 13:27:25.130: INFO: (13) /api/v1/namespaces/proxy-7279/services/proxy-service-dbxt4:portname1/proxy/: foo (200; 7.767458ms)
  Jun 29 13:27:25.130: INFO: (13) /api/v1/namespaces/proxy-7279/services/http:proxy-service-dbxt4:portname2/proxy/: bar (200; 7.964548ms)
  Jun 29 13:27:25.133: INFO: (14) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:460/proxy/: tls baz (200; 3.288508ms)
  Jun 29 13:27:25.134: INFO: (14) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:1080/proxy/rewriteme">... (200; 3.872243ms)
  Jun 29 13:27:25.134: INFO: (14) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:462/proxy/: tls qux (200; 4.335041ms)
  Jun 29 13:27:25.135: INFO: (14) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:162/proxy/: bar (200; 4.570151ms)
  Jun 29 13:27:25.135: INFO: (14) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:160/proxy/: foo (200; 5.273819ms)
  Jun 29 13:27:25.136: INFO: (14) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:1080/proxy/rewriteme">test<... (200; 5.561961ms)
  Jun 29 13:27:25.136: INFO: (14) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:160/proxy/: foo (200; 5.717915ms)
  Jun 29 13:27:25.137: INFO: (14) /api/v1/namespaces/proxy-7279/services/proxy-service-dbxt4:portname2/proxy/: bar (200; 6.276549ms)
  Jun 29 13:27:25.137: INFO: (14) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:443/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:443/proxy/tlsrewritem... (200; 6.376896ms)
  Jun 29 13:27:25.137: INFO: (14) /api/v1/namespaces/proxy-7279/services/https:proxy-service-dbxt4:tlsportname1/proxy/: tls baz (200; 6.80322ms)
  Jun 29 13:27:25.137: INFO: (14) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:162/proxy/: bar (200; 6.921973ms)
  Jun 29 13:27:25.137: INFO: (14) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g/proxy/rewriteme">test</a> (200; 7.2641ms)
  Jun 29 13:27:25.137: INFO: (14) /api/v1/namespaces/proxy-7279/services/http:proxy-service-dbxt4:portname2/proxy/: bar (200; 7.471542ms)
  Jun 29 13:27:25.138: INFO: (14) /api/v1/namespaces/proxy-7279/services/http:proxy-service-dbxt4:portname1/proxy/: foo (200; 8.327073ms)
  Jun 29 13:27:25.138: INFO: (14) /api/v1/namespaces/proxy-7279/services/proxy-service-dbxt4:portname1/proxy/: foo (200; 8.283751ms)
  Jun 29 13:27:25.139: INFO: (14) /api/v1/namespaces/proxy-7279/services/https:proxy-service-dbxt4:tlsportname2/proxy/: tls qux (200; 8.516151ms)
  Jun 29 13:27:25.142: INFO: (15) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:162/proxy/: bar (200; 3.22158ms)
  Jun 29 13:27:25.142: INFO: (15) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:443/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:443/proxy/tlsrewritem... (200; 3.611769ms)
  Jun 29 13:27:25.143: INFO: (15) /api/v1/namespaces/proxy-7279/services/proxy-service-dbxt4:portname1/proxy/: foo (200; 4.745255ms)
  Jun 29 13:27:25.144: INFO: (15) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g/proxy/rewriteme">test</a> (200; 5.09124ms)
  Jun 29 13:27:25.144: INFO: (15) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:160/proxy/: foo (200; 5.405946ms)
  Jun 29 13:27:25.145: INFO: (15) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:160/proxy/: foo (200; 5.746031ms)
  Jun 29 13:27:25.145: INFO: (15) /api/v1/namespaces/proxy-7279/services/http:proxy-service-dbxt4:portname1/proxy/: foo (200; 6.153678ms)
  Jun 29 13:27:25.146: INFO: (15) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:460/proxy/: tls baz (200; 6.78888ms)
  Jun 29 13:27:25.146: INFO: (15) /api/v1/namespaces/proxy-7279/services/https:proxy-service-dbxt4:tlsportname1/proxy/: tls baz (200; 6.762991ms)
  Jun 29 13:27:25.146: INFO: (15) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:462/proxy/: tls qux (200; 6.822057ms)
  Jun 29 13:27:25.146: INFO: (15) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:162/proxy/: bar (200; 6.996597ms)
  Jun 29 13:27:25.146: INFO: (15) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:1080/proxy/rewriteme">test<... (200; 7.040368ms)
  Jun 29 13:27:25.146: INFO: (15) /api/v1/namespaces/proxy-7279/services/proxy-service-dbxt4:portname2/proxy/: bar (200; 7.456225ms)
  Jun 29 13:27:25.146: INFO: (15) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:1080/proxy/rewriteme">... (200; 7.579173ms)
  Jun 29 13:27:25.147: INFO: (15) /api/v1/namespaces/proxy-7279/services/https:proxy-service-dbxt4:tlsportname2/proxy/: tls qux (200; 7.848075ms)
  Jun 29 13:27:25.148: INFO: (15) /api/v1/namespaces/proxy-7279/services/http:proxy-service-dbxt4:portname2/proxy/: bar (200; 9.369816ms)
  Jun 29 13:27:25.151: INFO: (16) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:160/proxy/: foo (200; 2.835157ms)
  Jun 29 13:27:25.152: INFO: (16) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:162/proxy/: bar (200; 3.73006ms)
  Jun 29 13:27:25.153: INFO: (16) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:160/proxy/: foo (200; 4.135068ms)
  Jun 29 13:27:25.153: INFO: (16) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:462/proxy/: tls qux (200; 4.229827ms)
  Jun 29 13:27:25.153: INFO: (16) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g/proxy/rewriteme">test</a> (200; 4.489358ms)
  Jun 29 13:27:25.154: INFO: (16) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:443/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:443/proxy/tlsrewritem... (200; 5.309569ms)
  Jun 29 13:27:25.154: INFO: (16) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:162/proxy/: bar (200; 5.807603ms)
  Jun 29 13:27:25.154: INFO: (16) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:1080/proxy/rewriteme">... (200; 6.054613ms)
  Jun 29 13:27:25.155: INFO: (16) /api/v1/namespaces/proxy-7279/services/proxy-service-dbxt4:portname1/proxy/: foo (200; 6.461797ms)
  Jun 29 13:27:25.155: INFO: (16) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:460/proxy/: tls baz (200; 6.725736ms)
  Jun 29 13:27:25.155: INFO: (16) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:1080/proxy/rewriteme">test<... (200; 6.839249ms)
  Jun 29 13:27:25.156: INFO: (16) /api/v1/namespaces/proxy-7279/services/proxy-service-dbxt4:portname2/proxy/: bar (200; 7.100537ms)
  Jun 29 13:27:25.156: INFO: (16) /api/v1/namespaces/proxy-7279/services/http:proxy-service-dbxt4:portname1/proxy/: foo (200; 7.40093ms)
  Jun 29 13:27:25.156: INFO: (16) /api/v1/namespaces/proxy-7279/services/https:proxy-service-dbxt4:tlsportname1/proxy/: tls baz (200; 7.679262ms)
  Jun 29 13:27:25.156: INFO: (16) /api/v1/namespaces/proxy-7279/services/http:proxy-service-dbxt4:portname2/proxy/: bar (200; 7.941866ms)
  Jun 29 13:27:25.158: INFO: (16) /api/v1/namespaces/proxy-7279/services/https:proxy-service-dbxt4:tlsportname2/proxy/: tls qux (200; 9.05005ms)
  Jun 29 13:27:25.161: INFO: (17) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:1080/proxy/rewriteme">test<... (200; 3.365599ms)
  Jun 29 13:27:25.161: INFO: (17) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:443/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:443/proxy/tlsrewritem... (200; 3.625857ms)
  Jun 29 13:27:25.163: INFO: (17) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g/proxy/rewriteme">test</a> (200; 4.968518ms)
  Jun 29 13:27:25.163: INFO: (17) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:1080/proxy/rewriteme">... (200; 4.890412ms)
  Jun 29 13:27:25.163: INFO: (17) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:460/proxy/: tls baz (200; 5.216645ms)
  Jun 29 13:27:25.163: INFO: (17) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:160/proxy/: foo (200; 5.129075ms)
  Jun 29 13:27:25.164: INFO: (17) /api/v1/namespaces/proxy-7279/services/http:proxy-service-dbxt4:portname2/proxy/: bar (200; 6.179338ms)
  Jun 29 13:27:25.164: INFO: (17) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:162/proxy/: bar (200; 6.126612ms)
  Jun 29 13:27:25.165: INFO: (17) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:162/proxy/: bar (200; 6.810369ms)
  Jun 29 13:27:25.165: INFO: (17) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:160/proxy/: foo (200; 6.83592ms)
  Jun 29 13:27:25.165: INFO: (17) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:462/proxy/: tls qux (200; 6.870252ms)
  Jun 29 13:27:25.165: INFO: (17) /api/v1/namespaces/proxy-7279/services/proxy-service-dbxt4:portname2/proxy/: bar (200; 7.349042ms)
  Jun 29 13:27:25.165: INFO: (17) /api/v1/namespaces/proxy-7279/services/proxy-service-dbxt4:portname1/proxy/: foo (200; 7.227444ms)
  Jun 29 13:27:25.166: INFO: (17) /api/v1/namespaces/proxy-7279/services/https:proxy-service-dbxt4:tlsportname1/proxy/: tls baz (200; 8.01721ms)
  Jun 29 13:27:25.166: INFO: (17) /api/v1/namespaces/proxy-7279/services/http:proxy-service-dbxt4:portname1/proxy/: foo (200; 8.228096ms)
  Jun 29 13:27:25.166: INFO: (17) /api/v1/namespaces/proxy-7279/services/https:proxy-service-dbxt4:tlsportname2/proxy/: tls qux (200; 8.375866ms)
  Jun 29 13:27:25.170: INFO: (18) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:462/proxy/: tls qux (200; 3.790564ms)
  Jun 29 13:27:25.171: INFO: (18) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:160/proxy/: foo (200; 4.59688ms)
  Jun 29 13:27:25.171: INFO: (18) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:460/proxy/: tls baz (200; 5.225516ms)
  Jun 29 13:27:25.172: INFO: (18) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:1080/proxy/rewriteme">test<... (200; 5.517597ms)
  Jun 29 13:27:25.172: INFO: (18) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:162/proxy/: bar (200; 5.813548ms)
  Jun 29 13:27:25.172: INFO: (18) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:162/proxy/: bar (200; 5.820987ms)
  Jun 29 13:27:25.173: INFO: (18) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:1080/proxy/rewriteme">... (200; 5.891298ms)
  Jun 29 13:27:25.173: INFO: (18) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g/proxy/rewriteme">test</a> (200; 6.581185ms)
  Jun 29 13:27:25.173: INFO: (18) /api/v1/namespaces/proxy-7279/services/http:proxy-service-dbxt4:portname2/proxy/: bar (200; 6.651162ms)
  Jun 29 13:27:25.173: INFO: (18) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:160/proxy/: foo (200; 6.857823ms)
  Jun 29 13:27:25.174: INFO: (18) /api/v1/namespaces/proxy-7279/services/proxy-service-dbxt4:portname1/proxy/: foo (200; 7.15525ms)
  Jun 29 13:27:25.174: INFO: (18) /api/v1/namespaces/proxy-7279/services/proxy-service-dbxt4:portname2/proxy/: bar (200; 7.367563ms)
  Jun 29 13:27:25.174: INFO: (18) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:443/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:443/proxy/tlsrewritem... (200; 7.521997ms)
  Jun 29 13:27:25.174: INFO: (18) /api/v1/namespaces/proxy-7279/services/https:proxy-service-dbxt4:tlsportname2/proxy/: tls qux (200; 7.783428ms)
  Jun 29 13:27:25.174: INFO: (18) /api/v1/namespaces/proxy-7279/services/https:proxy-service-dbxt4:tlsportname1/proxy/: tls baz (200; 8.048736ms)
  Jun 29 13:27:25.175: INFO: (18) /api/v1/namespaces/proxy-7279/services/http:proxy-service-dbxt4:portname1/proxy/: foo (200; 8.4364ms)
  Jun 29 13:27:25.178: INFO: (19) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:162/proxy/: bar (200; 3.069875ms)
  Jun 29 13:27:25.179: INFO: (19) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g/proxy/rewriteme">test</a> (200; 4.166345ms)
  Jun 29 13:27:25.180: INFO: (19) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:1080/proxy/rewriteme">test<... (200; 4.295636ms)
  Jun 29 13:27:25.180: INFO: (19) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:160/proxy/: foo (200; 4.725114ms)
  Jun 29 13:27:25.181: INFO: (19) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:443/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:443/proxy/tlsrewritem... (200; 5.801395ms)
  Jun 29 13:27:25.181: INFO: (19) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:462/proxy/: tls qux (200; 5.692801ms)
  Jun 29 13:27:25.181: INFO: (19) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:162/proxy/: bar (200; 6.013389ms)
  Jun 29 13:27:25.181: INFO: (19) /api/v1/namespaces/proxy-7279/pods/proxy-service-dbxt4-9zb9g:160/proxy/: foo (200; 5.85941ms)
  Jun 29 13:27:25.182: INFO: (19) /api/v1/namespaces/proxy-7279/services/https:proxy-service-dbxt4:tlsportname1/proxy/: tls baz (200; 6.545221ms)
  Jun 29 13:27:25.182: INFO: (19) /api/v1/namespaces/proxy-7279/services/http:proxy-service-dbxt4:portname1/proxy/: foo (200; 7.000838ms)
  Jun 29 13:27:25.183: INFO: (19) /api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-7279/pods/http:proxy-service-dbxt4-9zb9g:1080/proxy/rewriteme">... (200; 7.242354ms)
  Jun 29 13:27:25.183: INFO: (19) /api/v1/namespaces/proxy-7279/pods/https:proxy-service-dbxt4-9zb9g:460/proxy/: tls baz (200; 7.156918ms)
  Jun 29 13:27:25.183: INFO: (19) /api/v1/namespaces/proxy-7279/services/proxy-service-dbxt4:portname2/proxy/: bar (200; 7.347458ms)
  Jun 29 13:27:25.183: INFO: (19) /api/v1/namespaces/proxy-7279/services/http:proxy-service-dbxt4:portname2/proxy/: bar (200; 7.900594ms)
  Jun 29 13:27:25.183: INFO: (19) /api/v1/namespaces/proxy-7279/services/https:proxy-service-dbxt4:tlsportname2/proxy/: tls qux (200; 8.051612ms)
  Jun 29 13:27:25.184: INFO: (19) /api/v1/namespaces/proxy-7279/services/proxy-service-dbxt4:portname1/proxy/: foo (200; 9.220069ms)
  STEP: deleting ReplicationController proxy-service-dbxt4 in namespace proxy-7279, will wait for the garbage collector to delete the pods @ 06/29/24 13:27:25.185
  Jun 29 13:27:25.246: INFO: Deleting ReplicationController proxy-service-dbxt4 took: 7.640693ms
  Jun 29 13:27:25.347: INFO: Terminating ReplicationController proxy-service-dbxt4 pods took: 100.432496ms
  Jun 29 13:27:27.747: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-7279" for this suite. @ 06/29/24 13:27:27.753
â€¢ [4.862 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 06/29/24 13:27:27.761
  Jun 29 13:27:27.761: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename csistoragecapacity @ 06/29/24 13:27:27.762
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:27:27.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:27:27.779
  STEP: getting /apis @ 06/29/24 13:27:27.781
  STEP: getting /apis/storage.k8s.io @ 06/29/24 13:27:27.784
  STEP: getting /apis/storage.k8s.io/v1 @ 06/29/24 13:27:27.785
  STEP: creating @ 06/29/24 13:27:27.786
  STEP: watching @ 06/29/24 13:27:27.804
  Jun 29 13:27:27.804: INFO: starting watch
  STEP: getting @ 06/29/24 13:27:27.81
  STEP: listing in namespace @ 06/29/24 13:27:27.813
  STEP: listing across namespaces @ 06/29/24 13:27:27.817
  STEP: patching @ 06/29/24 13:27:27.819
  STEP: updating @ 06/29/24 13:27:27.824
  Jun 29 13:27:27.830: INFO: waiting for watch events with expected annotations in namespace
  Jun 29 13:27:27.830: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 06/29/24 13:27:27.83
  STEP: deleting a collection @ 06/29/24 13:27:27.841
  Jun 29 13:27:27.857: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-2487" for this suite. @ 06/29/24 13:27:27.86
â€¢ [0.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:234
  STEP: Creating a kubernetes client @ 06/29/24 13:27:27.869
  Jun 29 13:27:27.869: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename resourcequota @ 06/29/24 13:27:27.87
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:27:27.931
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:27:27.934
  STEP: Counting existing ResourceQuota @ 06/29/24 13:27:27.937
  STEP: Creating a ResourceQuota @ 06/29/24 13:27:32.95
  STEP: Ensuring resource quota status is calculated @ 06/29/24 13:27:32.958
  STEP: Creating a Pod that fits quota @ 06/29/24 13:27:34.963
  STEP: Ensuring ResourceQuota status captures the pod usage @ 06/29/24 13:27:34.979
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 06/29/24 13:27:36.984
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 06/29/24 13:27:36.986
  STEP: Ensuring a pod cannot update its resource requirements @ 06/29/24 13:27:36.988
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 06/29/24 13:27:36.992
  STEP: Deleting the pod @ 06/29/24 13:27:38.997
  STEP: Ensuring resource quota status released the pod usage @ 06/29/24 13:27:39.013
  Jun 29 13:27:41.017: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6356" for this suite. @ 06/29/24 13:27:41.02
â€¢ [13.159 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 06/29/24 13:27:41.029
  Jun 29 13:27:41.029: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename sched-preemption @ 06/29/24 13:27:41.029
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:27:41.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:27:41.047
  Jun 29 13:27:41.062: INFO: Waiting up to 1m0s for all nodes to be ready
  Jun 29 13:28:41.067: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 06/29/24 13:28:41.07
  Jun 29 13:28:41.088: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Jun 29 13:28:41.096: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Jun 29 13:28:41.117: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Jun 29 13:28:41.130: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Jun 29 13:28:41.146: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Jun 29 13:28:41.152: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 06/29/24 13:28:41.152
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 06/29/24 13:28:43.179
  Jun 29 13:28:47.291: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5229" for this suite. @ 06/29/24 13:28:47.295
â€¢ [66.273 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 06/29/24 13:28:47.302
  Jun 29 13:28:47.302: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename webhook @ 06/29/24 13:28:47.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:28:47.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:28:47.322
  STEP: Setting up server cert @ 06/29/24 13:28:47.347
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/29/24 13:28:47.607
  STEP: Deploying the webhook pod @ 06/29/24 13:28:47.612
  STEP: Wait for the deployment to be ready @ 06/29/24 13:28:47.626
  Jun 29 13:28:47.636: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/29/24 13:28:49.648
  STEP: Verifying the service has paired with the endpoint @ 06/29/24 13:28:49.662
  Jun 29 13:28:50.662: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 06/29/24 13:28:50.671
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/29/24 13:28:50.686
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 06/29/24 13:28:50.692
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/29/24 13:28:50.701
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 06/29/24 13:28:50.712
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/29/24 13:28:50.721
  Jun 29 13:28:50.770: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3117" for this suite. @ 06/29/24 13:28:50.776
  STEP: Destroying namespace "webhook-markers-3738" for this suite. @ 06/29/24 13:28:50.785
â€¢ [3.489 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 06/29/24 13:28:50.79
  Jun 29 13:28:50.790: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename discovery @ 06/29/24 13:28:50.791
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:28:50.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:28:50.805
  STEP: Setting up server cert @ 06/29/24 13:28:50.853
  Jun 29 13:28:51.095: INFO: Checking APIGroup: apiregistration.k8s.io
  Jun 29 13:28:51.096: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  Jun 29 13:28:51.096: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  Jun 29 13:28:51.096: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  Jun 29 13:28:51.096: INFO: Checking APIGroup: apps
  Jun 29 13:28:51.097: INFO: PreferredVersion.GroupVersion: apps/v1
  Jun 29 13:28:51.097: INFO: Versions found [{apps/v1 v1}]
  Jun 29 13:28:51.097: INFO: apps/v1 matches apps/v1
  Jun 29 13:28:51.097: INFO: Checking APIGroup: events.k8s.io
  Jun 29 13:28:51.098: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  Jun 29 13:28:51.098: INFO: Versions found [{events.k8s.io/v1 v1}]
  Jun 29 13:28:51.098: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  Jun 29 13:28:51.098: INFO: Checking APIGroup: authentication.k8s.io
  Jun 29 13:28:51.099: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  Jun 29 13:28:51.099: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  Jun 29 13:28:51.099: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  Jun 29 13:28:51.099: INFO: Checking APIGroup: authorization.k8s.io
  Jun 29 13:28:51.100: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  Jun 29 13:28:51.100: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  Jun 29 13:28:51.100: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  Jun 29 13:28:51.100: INFO: Checking APIGroup: autoscaling
  Jun 29 13:28:51.101: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  Jun 29 13:28:51.101: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  Jun 29 13:28:51.101: INFO: autoscaling/v2 matches autoscaling/v2
  Jun 29 13:28:51.101: INFO: Checking APIGroup: batch
  Jun 29 13:28:51.102: INFO: PreferredVersion.GroupVersion: batch/v1
  Jun 29 13:28:51.102: INFO: Versions found [{batch/v1 v1}]
  Jun 29 13:28:51.102: INFO: batch/v1 matches batch/v1
  Jun 29 13:28:51.102: INFO: Checking APIGroup: certificates.k8s.io
  Jun 29 13:28:51.103: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  Jun 29 13:28:51.103: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  Jun 29 13:28:51.103: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  Jun 29 13:28:51.103: INFO: Checking APIGroup: networking.k8s.io
  Jun 29 13:28:51.103: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  Jun 29 13:28:51.103: INFO: Versions found [{networking.k8s.io/v1 v1}]
  Jun 29 13:28:51.103: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  Jun 29 13:28:51.104: INFO: Checking APIGroup: policy
  Jun 29 13:28:51.104: INFO: PreferredVersion.GroupVersion: policy/v1
  Jun 29 13:28:51.104: INFO: Versions found [{policy/v1 v1}]
  Jun 29 13:28:51.104: INFO: policy/v1 matches policy/v1
  Jun 29 13:28:51.105: INFO: Checking APIGroup: rbac.authorization.k8s.io
  Jun 29 13:28:51.105: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  Jun 29 13:28:51.105: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  Jun 29 13:28:51.105: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  Jun 29 13:28:51.105: INFO: Checking APIGroup: storage.k8s.io
  Jun 29 13:28:51.106: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  Jun 29 13:28:51.106: INFO: Versions found [{storage.k8s.io/v1 v1}]
  Jun 29 13:28:51.106: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  Jun 29 13:28:51.106: INFO: Checking APIGroup: admissionregistration.k8s.io
  Jun 29 13:28:51.107: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  Jun 29 13:28:51.107: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  Jun 29 13:28:51.107: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  Jun 29 13:28:51.107: INFO: Checking APIGroup: apiextensions.k8s.io
  Jun 29 13:28:51.108: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  Jun 29 13:28:51.108: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  Jun 29 13:28:51.108: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  Jun 29 13:28:51.108: INFO: Checking APIGroup: scheduling.k8s.io
  Jun 29 13:28:51.109: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  Jun 29 13:28:51.109: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  Jun 29 13:28:51.109: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  Jun 29 13:28:51.109: INFO: Checking APIGroup: coordination.k8s.io
  Jun 29 13:28:51.111: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  Jun 29 13:28:51.111: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  Jun 29 13:28:51.111: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  Jun 29 13:28:51.111: INFO: Checking APIGroup: node.k8s.io
  Jun 29 13:28:51.112: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  Jun 29 13:28:51.112: INFO: Versions found [{node.k8s.io/v1 v1}]
  Jun 29 13:28:51.112: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  Jun 29 13:28:51.112: INFO: Checking APIGroup: discovery.k8s.io
  Jun 29 13:28:51.113: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  Jun 29 13:28:51.113: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  Jun 29 13:28:51.113: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  Jun 29 13:28:51.113: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  Jun 29 13:28:51.114: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  Jun 29 13:28:51.114: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  Jun 29 13:28:51.114: INFO: flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  Jun 29 13:28:51.114: INFO: Checking APIGroup: metrics.k8s.io
  Jun 29 13:28:51.114: INFO: PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  Jun 29 13:28:51.114: INFO: Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  Jun 29 13:28:51.114: INFO: metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  Jun 29 13:28:51.115: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-8258" for this suite. @ 06/29/24 13:28:51.12
â€¢ [0.337 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 06/29/24 13:28:51.127
  Jun 29 13:28:51.127: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename dns @ 06/29/24 13:28:51.128
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:28:51.147
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:28:51.15
  STEP: Creating a test headless service @ 06/29/24 13:28:51.153
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-648.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-648.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 06/29/24 13:28:51.159
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-648.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-648.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 06/29/24 13:28:51.159
  STEP: creating a pod to probe DNS @ 06/29/24 13:28:51.159
  STEP: submitting the pod to kubernetes @ 06/29/24 13:28:51.159
  STEP: retrieving the pod @ 06/29/24 13:28:53.184
  STEP: looking for the results for each expected name from probers @ 06/29/24 13:28:53.186
  Jun 29 13:28:53.202: INFO: DNS probes using dns-648/dns-test-0bbaa49d-1b44-4aeb-b298-1f64b838a7ab succeeded

  STEP: deleting the pod @ 06/29/24 13:28:53.202
  STEP: deleting the test headless service @ 06/29/24 13:28:53.22
  Jun 29 13:28:53.235: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-648" for this suite. @ 06/29/24 13:28:53.241
â€¢ [2.122 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 06/29/24 13:28:53.249
  Jun 29 13:28:53.249: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename configmap @ 06/29/24 13:28:53.25
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:28:53.265
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:28:53.27
  Jun 29 13:28:53.312: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-512" for this suite. @ 06/29/24 13:28:53.315
â€¢ [0.075 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:109
  STEP: Creating a kubernetes client @ 06/29/24 13:28:53.325
  Jun 29 13:28:53.325: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename kubelet-test @ 06/29/24 13:28:53.325
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:28:53.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:28:53.342
  Jun 29 13:28:57.369: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9995" for this suite. @ 06/29/24 13:28:57.372
â€¢ [4.056 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 06/29/24 13:28:57.38
  Jun 29 13:28:57.380: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename configmap @ 06/29/24 13:28:57.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:28:57.393
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:28:57.396
  STEP: Creating configMap with name configmap-test-upd-3ba46436-333b-4dc4-9e2d-36c2a1911b24 @ 06/29/24 13:28:57.404
  STEP: Creating the pod @ 06/29/24 13:28:57.408
  STEP: Waiting for pod with text data @ 06/29/24 13:28:59.423
  STEP: Waiting for pod with binary data @ 06/29/24 13:28:59.44
  Jun 29 13:28:59.449: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8320" for this suite. @ 06/29/24 13:28:59.455
â€¢ [2.085 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 06/29/24 13:28:59.466
  Jun 29 13:28:59.466: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename replication-controller @ 06/29/24 13:28:59.467
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:28:59.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:28:59.496
  STEP: creating a ReplicationController @ 06/29/24 13:28:59.503
  STEP: waiting for RC to be added @ 06/29/24 13:28:59.52
  STEP: waiting for available Replicas @ 06/29/24 13:28:59.52
  STEP: patching ReplicationController @ 06/29/24 13:29:00.682
  STEP: waiting for RC to be modified @ 06/29/24 13:29:00.689
  STEP: patching ReplicationController status @ 06/29/24 13:29:00.689
  STEP: waiting for RC to be modified @ 06/29/24 13:29:00.695
  STEP: waiting for available Replicas @ 06/29/24 13:29:00.696
  STEP: fetching ReplicationController status @ 06/29/24 13:29:00.701
  STEP: patching ReplicationController scale @ 06/29/24 13:29:00.705
  STEP: waiting for RC to be modified @ 06/29/24 13:29:00.71
  STEP: waiting for ReplicationController's scale to be the max amount @ 06/29/24 13:29:00.71
  STEP: fetching ReplicationController; ensuring that it's patched @ 06/29/24 13:29:01.838
  STEP: updating ReplicationController status @ 06/29/24 13:29:01.842
  STEP: waiting for RC to be modified @ 06/29/24 13:29:01.849
  STEP: listing all ReplicationControllers @ 06/29/24 13:29:01.849
  STEP: checking that ReplicationController has expected values @ 06/29/24 13:29:01.854
  STEP: deleting ReplicationControllers by collection @ 06/29/24 13:29:01.854
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 06/29/24 13:29:01.866
  Jun 29 13:29:01.920: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0629 13:29:01.920772      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-7924" for this suite. @ 06/29/24 13:29:01.924
â€¢ [2.464 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 06/29/24 13:29:01.931
  Jun 29 13:29:01.931: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename secrets @ 06/29/24 13:29:01.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:29:01.943
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:29:01.946
  STEP: Creating secret with name secret-test-b1b8dae7-cf0d-4024-888d-3f6e07cab8d8 @ 06/29/24 13:29:01.969
  STEP: Creating a pod to test consume secrets @ 06/29/24 13:29:01.972
  E0629 13:29:02.920893      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:29:03.921096      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:29:04.921573      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:29:05.921756      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/29/24 13:29:05.997
  Jun 29 13:29:06.001: INFO: Trying to get logs from node ip-172-31-10-28 pod pod-secrets-bba834f9-6009-45d5-b668-13ea911e8beb container secret-volume-test: <nil>
  STEP: delete the pod @ 06/29/24 13:29:06.016
  Jun 29 13:29:06.031: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9083" for this suite. @ 06/29/24 13:29:06.036
  STEP: Destroying namespace "secret-namespace-7573" for this suite. @ 06/29/24 13:29:06.042
â€¢ [4.122 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1764
  STEP: Creating a kubernetes client @ 06/29/24 13:29:06.052
  Jun 29 13:29:06.052: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename kubectl @ 06/29/24 13:29:06.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:29:06.066
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:29:06.071
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 06/29/24 13:29:06.074
  Jun 29 13:29:06.074: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-8643 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  Jun 29 13:29:06.125: INFO: stderr: ""
  Jun 29 13:29:06.125: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 06/29/24 13:29:06.125
  Jun 29 13:29:06.130: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-8643 delete pods e2e-test-httpd-pod'
  E0629 13:29:06.922624      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:29:07.906: INFO: stderr: ""
  Jun 29 13:29:07.906: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Jun 29 13:29:07.906: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8643" for this suite. @ 06/29/24 13:29:07.91
â€¢ [1.864 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 06/29/24 13:29:07.917
  Jun 29 13:29:07.917: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/29/24 13:29:07.918
  E0629 13:29:07.923444      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:29:07.932
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:29:07.935
  STEP: fetching the /apis discovery document @ 06/29/24 13:29:07.938
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 06/29/24 13:29:07.939
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 06/29/24 13:29:07.939
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 06/29/24 13:29:07.939
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 06/29/24 13:29:07.94
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 06/29/24 13:29:07.94
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 06/29/24 13:29:07.941
  Jun 29 13:29:07.941: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7199" for this suite. @ 06/29/24 13:29:07.945
â€¢ [0.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 06/29/24 13:29:07.952
  Jun 29 13:29:07.952: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename hostport @ 06/29/24 13:29:07.953
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:29:07.967
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:29:07.972
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 06/29/24 13:29:07.977
  E0629 13:29:08.923698      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:29:09.923773      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.37.211 on the node which pod1 resides and expect scheduled @ 06/29/24 13:29:09.992
  E0629 13:29:10.924777      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:29:11.925407      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:29:12.925554      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:29:13.925906      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:29:14.926137      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:29:15.926337      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:29:16.926496      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:29:17.926564      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:29:18.926687      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:29:19.926934      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:29:20.927676      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:29:21.927749      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.37.211 but use UDP protocol on the node which pod2 resides @ 06/29/24 13:29:22.036
  E0629 13:29:22.928750      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:29:23.928847      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:29:24.928951      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:29:25.929056      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 06/29/24 13:29:26.07
  Jun 29 13:29:26.070: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.37.211 http://127.0.0.1:54323/hostname] Namespace:hostport-9098 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 29 13:29:26.070: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  Jun 29 13:29:26.071: INFO: ExecWithOptions: Clientset creation
  Jun 29 13:29:26.071: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-9098/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.37.211+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.37.211, port: 54323 @ 06/29/24 13:29:26.13
  Jun 29 13:29:26.130: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.37.211:54323/hostname] Namespace:hostport-9098 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 29 13:29:26.130: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  Jun 29 13:29:26.130: INFO: ExecWithOptions: Clientset creation
  Jun 29 13:29:26.130: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-9098/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.37.211%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.37.211, port: 54323 UDP @ 06/29/24 13:29:26.189
  Jun 29 13:29:26.189: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.37.211 54323] Namespace:hostport-9098 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 29 13:29:26.189: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  Jun 29 13:29:26.190: INFO: ExecWithOptions: Clientset creation
  Jun 29 13:29:26.190: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-9098/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.37.211+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  E0629 13:29:26.929105      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:29:27.929379      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:29:28.929478      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:29:29.929560      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:29:30.929755      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:29:31.240: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-9098" for this suite. @ 06/29/24 13:29:31.244
â€¢ [23.300 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 06/29/24 13:29:31.253
  Jun 29 13:29:31.253: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename configmap @ 06/29/24 13:29:31.253
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:29:31.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:29:31.274
  STEP: Creating configMap with name configmap-test-volume-map-37f58e39-bd44-4d9b-815f-5683345d7fb5 @ 06/29/24 13:29:31.277
  STEP: Creating a pod to test consume configMaps @ 06/29/24 13:29:31.281
  E0629 13:29:31.929995      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:29:32.930095      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:29:33.930167      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:29:34.930265      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/29/24 13:29:35.308
  Jun 29 13:29:35.313: INFO: Trying to get logs from node ip-172-31-94-98 pod pod-configmaps-7f95d6cd-6d07-4787-b4aa-12be8cfb80a3 container agnhost-container: <nil>
  STEP: delete the pod @ 06/29/24 13:29:35.319
  Jun 29 13:29:35.334: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4862" for this suite. @ 06/29/24 13:29:35.337
â€¢ [4.091 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 06/29/24 13:29:35.343
  Jun 29 13:29:35.343: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename pods @ 06/29/24 13:29:35.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:29:35.361
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:29:35.365
  STEP: creating pod @ 06/29/24 13:29:35.367
  E0629 13:29:35.930314      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:29:36.930409      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:29:37.394: INFO: Pod pod-hostip-c81ef400-c5ae-4b58-ab4a-60b9f33b1c82 has hostIP: 172.31.94.98
  Jun 29 13:29:37.394: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9769" for this suite. @ 06/29/24 13:29:37.397
â€¢ [2.060 seconds]
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 06/29/24 13:29:37.404
  Jun 29 13:29:37.404: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename projected @ 06/29/24 13:29:37.404
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:29:37.42
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:29:37.423
  STEP: Creating secret with name projected-secret-test-9d9ed527-7dcf-4031-bf4b-272058425a3b @ 06/29/24 13:29:37.426
  STEP: Creating a pod to test consume secrets @ 06/29/24 13:29:37.432
  E0629 13:29:37.930495      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:29:38.930596      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:29:39.931373      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:29:40.931471      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/29/24 13:29:41.458
  Jun 29 13:29:41.461: INFO: Trying to get logs from node ip-172-31-10-28 pod pod-projected-secrets-15e9aba9-1b90-4f8c-8260-4bfcacc060a1 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/29/24 13:29:41.468
  Jun 29 13:29:41.487: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4306" for this suite. @ 06/29/24 13:29:41.49
â€¢ [4.095 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:887
  STEP: Creating a kubernetes client @ 06/29/24 13:29:41.502
  Jun 29 13:29:41.502: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename kubectl @ 06/29/24 13:29:41.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:29:41.515
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:29:41.519
  STEP: validating api versions @ 06/29/24 13:29:41.522
  Jun 29 13:29:41.522: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-1307 api-versions'
  Jun 29 13:29:41.563: INFO: stderr: ""
  Jun 29 13:29:41.563: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  Jun 29 13:29:41.563: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1307" for this suite. @ 06/29/24 13:29:41.569
â€¢ [0.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:78
  STEP: Creating a kubernetes client @ 06/29/24 13:29:41.577
  Jun 29 13:29:41.577: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename resourcequota @ 06/29/24 13:29:41.577
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:29:41.598
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:29:41.601
  STEP: Counting existing ResourceQuota @ 06/29/24 13:29:41.604
  E0629 13:29:41.931575      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:29:42.932129      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:29:43.933145      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:29:44.933663      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:29:45.934186      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 06/29/24 13:29:46.607
  STEP: Ensuring resource quota status is calculated @ 06/29/24 13:29:46.615
  E0629 13:29:46.934707      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:29:47.935227      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:29:48.620: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2649" for this suite. @ 06/29/24 13:29:48.625
â€¢ [7.056 seconds]
------------------------------
SSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 06/29/24 13:29:48.633
  Jun 29 13:29:48.633: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename runtimeclass @ 06/29/24 13:29:48.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:29:48.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:29:48.653
  Jun 29 13:29:48.683: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1956" for this suite. @ 06/29/24 13:29:48.686
â€¢ [0.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:655
  STEP: Creating a kubernetes client @ 06/29/24 13:29:48.696
  Jun 29 13:29:48.696: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename job @ 06/29/24 13:29:48.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:29:48.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:29:48.717
  STEP: Creating a job @ 06/29/24 13:29:48.719
  STEP: Ensuring active pods == parallelism @ 06/29/24 13:29:48.727
  E0629 13:29:48.935902      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:29:49.936049      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 06/29/24 13:29:50.731
  E0629 13:29:50.936742      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:29:51.247: INFO: Successfully updated pod "adopt-release-hgh5d"
  STEP: Checking that the Job readopts the Pod @ 06/29/24 13:29:51.248
  E0629 13:29:51.937076      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:29:52.937298      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 06/29/24 13:29:53.257
  Jun 29 13:29:53.772: INFO: Successfully updated pod "adopt-release-hgh5d"
  STEP: Checking that the Job releases the Pod @ 06/29/24 13:29:53.772
  E0629 13:29:53.937608      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:29:54.937637      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:29:55.785: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6593" for this suite. @ 06/29/24 13:29:55.79
â€¢ [7.102 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 06/29/24 13:29:55.798
  Jun 29 13:29:55.798: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename emptydir @ 06/29/24 13:29:55.798
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:29:55.815
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:29:55.818
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 06/29/24 13:29:55.821
  E0629 13:29:55.938257      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:29:56.938291      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:29:57.939136      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:29:58.939208      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/29/24 13:29:59.843
  Jun 29 13:29:59.846: INFO: Trying to get logs from node ip-172-31-10-28 pod pod-cb61c2c7-5a45-4455-9d03-da56e49acd9b container test-container: <nil>
  STEP: delete the pod @ 06/29/24 13:29:59.853
  Jun 29 13:29:59.866: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8375" for this suite. @ 06/29/24 13:29:59.871
â€¢ [4.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 06/29/24 13:29:59.877
  Jun 29 13:29:59.877: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename pods @ 06/29/24 13:29:59.878
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:29:59.895
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:29:59.899
  Jun 29 13:29:59.902: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: creating the pod @ 06/29/24 13:29:59.902
  STEP: submitting the pod to kubernetes @ 06/29/24 13:29:59.903
  E0629 13:29:59.939259      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:30:00.939418      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:30:01.939799      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:30:01.939: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7803" for this suite. @ 06/29/24 13:30:01.943
â€¢ [2.073 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 06/29/24 13:30:01.95
  Jun 29 13:30:01.950: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename projected @ 06/29/24 13:30:01.951
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:30:01.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:30:01.974
  STEP: Creating a pod to test downward API volume plugin @ 06/29/24 13:30:01.982
  E0629 13:30:02.940753      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:30:03.940902      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:30:04.941017      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:30:05.941092      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/29/24 13:30:06.007
  Jun 29 13:30:06.012: INFO: Trying to get logs from node ip-172-31-94-98 pod downwardapi-volume-565f47b2-f3a2-4f2e-a0ee-4cbeb7d6ced0 container client-container: <nil>
  STEP: delete the pod @ 06/29/24 13:30:06.017
  Jun 29 13:30:06.031: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4168" for this suite. @ 06/29/24 13:30:06.036
â€¢ [4.091 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 06/29/24 13:30:06.042
  Jun 29 13:30:06.042: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename emptydir @ 06/29/24 13:30:06.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:30:06.054
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:30:06.057
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 06/29/24 13:30:06.059
  E0629 13:30:06.941175      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:30:07.941309      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:30:08.941682      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:30:09.941802      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/29/24 13:30:10.083
  Jun 29 13:30:10.088: INFO: Trying to get logs from node ip-172-31-94-98 pod pod-d5164e4e-738b-4387-93e4-e0718a087acf container test-container: <nil>
  STEP: delete the pod @ 06/29/24 13:30:10.094
  Jun 29 13:30:10.112: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2961" for this suite. @ 06/29/24 13:30:10.117
â€¢ [4.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 06/29/24 13:30:10.125
  Jun 29 13:30:10.125: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename csi-storageclass @ 06/29/24 13:30:10.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:30:10.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:30:10.143
  STEP: Creating a StorageClass @ 06/29/24 13:30:10.146
  STEP: Get StorageClass "e2e-n6r95" @ 06/29/24 13:30:10.15
  STEP: Patching the StorageClass "e2e-n6r95" @ 06/29/24 13:30:10.154
  STEP: Delete StorageClass "e2e-n6r95" @ 06/29/24 13:30:10.159
  STEP: Confirm deletion of StorageClass "e2e-n6r95" @ 06/29/24 13:30:10.166
  STEP: Create a replacement StorageClass @ 06/29/24 13:30:10.169
  STEP: Updating StorageClass "e2e-v2-gzrrs" @ 06/29/24 13:30:10.175
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-gzrrs=updated" @ 06/29/24 13:30:10.184
  STEP: Deleting StorageClass "e2e-v2-gzrrs" via DeleteCollection @ 06/29/24 13:30:10.186
  STEP: Confirm deletion of StorageClass "e2e-v2-gzrrs" @ 06/29/24 13:30:10.195
  Jun 29 13:30:10.199: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-3631" for this suite. @ 06/29/24 13:30:10.201
â€¢ [0.083 seconds]
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 06/29/24 13:30:10.208
  Jun 29 13:30:10.208: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename svcaccounts @ 06/29/24 13:30:10.209
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:30:10.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:30:10.224
  Jun 29 13:30:10.242: INFO: created pod
  E0629 13:30:10.941899      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:30:11.942342      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/29/24 13:30:12.253
  E0629 13:30:12.942475      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:30:13.942912      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:30:14.943036      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:30:15.943298      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:30:16.943516      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:30:17.944040      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:30:18.944153      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:30:19.944577      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:30:20.944791      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:30:21.944977      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:30:22.946013      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:30:23.946107      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:30:24.946208      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:30:25.946407      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:30:26.947221      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:30:27.947310      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:30:28.948344      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:30:29.949201      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:30:30.949302      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:30:31.949922      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:30:32.950035      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:30:33.950196      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:30:34.950450      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:30:35.950526      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:30:36.950691      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:30:37.950789      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:30:38.950973      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:30:39.951101      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:30:40.951209      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:30:41.951367      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:30:42.253: INFO: polling logs
  Jun 29 13:30:42.260: INFO: Pod logs: 
  I0629 13:30:10.811829       1 log.go:245] OK: Got token
  I0629 13:30:10.811872       1 log.go:245] validating with in-cluster discovery
  I0629 13:30:10.812092       1 log.go:245] OK: got issuer https://kubernetes.default.svc
  I0629 13:30:10.812111       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-4909:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0002b3ad0), NotBefore:(*jwt.NumericDate)(0xc0002b3bb8), IssuedAt:(*jwt.NumericDate)(0xc0002b3ae0), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-4909", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"a0b6fdac-9251-40cf-acc9-7f11d84e7290"}}}
  I0629 13:30:10.819517       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I0629 13:30:10.822917       1 log.go:245] OK: Validated signature on JWT
  I0629 13:30:10.822973       1 log.go:245] OK: Got valid claims from token!
  I0629 13:30:10.822991       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-4909:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0000131e0), NotBefore:(*jwt.NumericDate)(0xc000013208), IssuedAt:(*jwt.NumericDate)(0xc0000131e8), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-4909", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"a0b6fdac-9251-40cf-acc9-7f11d84e7290"}}}

  Jun 29 13:30:42.261: INFO: completed pod
  Jun 29 13:30:42.267: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4909" for this suite. @ 06/29/24 13:30:42.272
â€¢ [32.072 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:344
  STEP: Creating a kubernetes client @ 06/29/24 13:30:42.28
  Jun 29 13:30:42.280: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename kubectl @ 06/29/24 13:30:42.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:30:42.297
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:30:42.299
  STEP: creating a replication controller @ 06/29/24 13:30:42.302
  Jun 29 13:30:42.302: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-9107 create -f -'
  Jun 29 13:30:42.386: INFO: stderr: ""
  Jun 29 13:30:42.386: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 06/29/24 13:30:42.386
  Jun 29 13:30:42.386: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-9107 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun 29 13:30:42.432: INFO: stderr: ""
  Jun 29 13:30:42.432: INFO: stdout: "update-demo-nautilus-6z54m update-demo-nautilus-wb7qf "
  Jun 29 13:30:42.432: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-9107 get pods update-demo-nautilus-6z54m -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 29 13:30:42.477: INFO: stderr: ""
  Jun 29 13:30:42.477: INFO: stdout: ""
  Jun 29 13:30:42.477: INFO: update-demo-nautilus-6z54m is created but not running
  E0629 13:30:42.953062      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:30:43.953539      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:30:44.953877      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:30:45.954046      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:30:46.954106      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:30:47.478: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-9107 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun 29 13:30:47.530: INFO: stderr: ""
  Jun 29 13:30:47.530: INFO: stdout: "update-demo-nautilus-6z54m update-demo-nautilus-wb7qf "
  Jun 29 13:30:47.530: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-9107 get pods update-demo-nautilus-6z54m -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 29 13:30:47.572: INFO: stderr: ""
  Jun 29 13:30:47.572: INFO: stdout: "true"
  Jun 29 13:30:47.572: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-9107 get pods update-demo-nautilus-6z54m -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun 29 13:30:47.615: INFO: stderr: ""
  Jun 29 13:30:47.615: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun 29 13:30:47.615: INFO: validating pod update-demo-nautilus-6z54m
  Jun 29 13:30:47.620: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun 29 13:30:47.620: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun 29 13:30:47.620: INFO: update-demo-nautilus-6z54m is verified up and running
  Jun 29 13:30:47.620: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-9107 get pods update-demo-nautilus-wb7qf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 29 13:30:47.663: INFO: stderr: ""
  Jun 29 13:30:47.663: INFO: stdout: "true"
  Jun 29 13:30:47.663: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-9107 get pods update-demo-nautilus-wb7qf -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun 29 13:30:47.705: INFO: stderr: ""
  Jun 29 13:30:47.705: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun 29 13:30:47.705: INFO: validating pod update-demo-nautilus-wb7qf
  Jun 29 13:30:47.711: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun 29 13:30:47.711: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun 29 13:30:47.711: INFO: update-demo-nautilus-wb7qf is verified up and running
  STEP: using delete to clean up resources @ 06/29/24 13:30:47.711
  Jun 29 13:30:47.711: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-9107 delete --grace-period=0 --force -f -'
  Jun 29 13:30:47.758: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun 29 13:30:47.758: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Jun 29 13:30:47.758: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-9107 get rc,svc -l name=update-demo --no-headers'
  Jun 29 13:30:47.822: INFO: stderr: "No resources found in kubectl-9107 namespace.\n"
  Jun 29 13:30:47.822: INFO: stdout: ""
  Jun 29 13:30:47.822: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-9107 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Jun 29 13:30:47.884: INFO: stderr: ""
  Jun 29 13:30:47.884: INFO: stdout: ""
  Jun 29 13:30:47.884: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9107" for this suite. @ 06/29/24 13:30:47.888
â€¢ [5.615 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 06/29/24 13:30:47.896
  Jun 29 13:30:47.896: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename field-validation @ 06/29/24 13:30:47.896
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:30:47.916
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:30:47.918
  Jun 29 13:30:47.921: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  E0629 13:30:47.954472      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:30:48.954958      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:30:49.955155      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0629 13:30:50.455687      18 warnings.go:70] unknown field "alpha"
  W0629 13:30:50.455707      18 warnings.go:70] unknown field "beta"
  W0629 13:30:50.455711      18 warnings.go:70] unknown field "delta"
  W0629 13:30:50.455714      18 warnings.go:70] unknown field "epsilon"
  W0629 13:30:50.455717      18 warnings.go:70] unknown field "gamma"
  E0629 13:30:50.956027      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:30:51.001: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7419" for this suite. @ 06/29/24 13:30:51.005
â€¢ [3.117 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 06/29/24 13:30:51.012
  Jun 29 13:30:51.013: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename services @ 06/29/24 13:30:51.013
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:30:51.025
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:30:51.029
  STEP: creating service multi-endpoint-test in namespace services-6027 @ 06/29/24 13:30:51.032
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-6027 to expose endpoints map[] @ 06/29/24 13:30:51.051
  Jun 29 13:30:51.061: INFO: successfully validated that service multi-endpoint-test in namespace services-6027 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-6027 @ 06/29/24 13:30:51.061
  E0629 13:30:51.956752      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:30:52.956929      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-6027 to expose endpoints map[pod1:[100]] @ 06/29/24 13:30:53.079
  Jun 29 13:30:53.093: INFO: successfully validated that service multi-endpoint-test in namespace services-6027 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-6027 @ 06/29/24 13:30:53.093
  E0629 13:30:53.957044      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:30:54.957244      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-6027 to expose endpoints map[pod1:[100] pod2:[101]] @ 06/29/24 13:30:55.114
  Jun 29 13:30:55.128: INFO: successfully validated that service multi-endpoint-test in namespace services-6027 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 06/29/24 13:30:55.128
  Jun 29 13:30:55.128: INFO: Creating new exec pod
  E0629 13:30:55.957436      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:30:56.958314      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:30:57.958572      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:30:58.142: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-6027 exec execpod2jmsw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  Jun 29 13:30:58.245: INFO: stderr: "+ nc -v -t -w 2 multi-endpoint-test 80\n+ echo hostName\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  Jun 29 13:30:58.245: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 29 13:30:58.246: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-6027 exec execpod2jmsw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.152 80'
  Jun 29 13:30:58.332: INFO: stderr: "+ nc -v -t -w 2 10.152.183.152 80\nConnection to 10.152.183.152 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Jun 29 13:30:58.332: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 29 13:30:58.332: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-6027 exec execpod2jmsw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  Jun 29 13:30:58.422: INFO: stderr: "+ nc -v -t -w 2 multi-endpoint-test 81\n+ echo hostName\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  Jun 29 13:30:58.422: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 29 13:30:58.422: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-6027 exec execpod2jmsw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.152 81'
  Jun 29 13:30:58.512: INFO: stderr: "+ nc -v -t -w 2 10.152.183.152 81\n+ echo hostName\nConnection to 10.152.183.152 81 port [tcp/*] succeeded!\n"
  Jun 29 13:30:58.512: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-6027 @ 06/29/24 13:30:58.512
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-6027 to expose endpoints map[pod2:[101]] @ 06/29/24 13:30:58.534
  Jun 29 13:30:58.545: INFO: successfully validated that service multi-endpoint-test in namespace services-6027 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-6027 @ 06/29/24 13:30:58.545
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-6027 to expose endpoints map[] @ 06/29/24 13:30:58.558
  Jun 29 13:30:58.566: INFO: successfully validated that service multi-endpoint-test in namespace services-6027 exposes endpoints map[]
  Jun 29 13:30:58.584: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6027" for this suite. @ 06/29/24 13:30:58.588
â€¢ [7.582 seconds]
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 06/29/24 13:30:58.594
  Jun 29 13:30:58.594: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename downward-api @ 06/29/24 13:30:58.595
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:30:58.608
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:30:58.61
  STEP: Creating a pod to test downward api env vars @ 06/29/24 13:30:58.613
  E0629 13:30:58.959001      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:30:59.959115      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:31:00.959157      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:31:01.959639      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/29/24 13:31:02.637
  Jun 29 13:31:02.644: INFO: Trying to get logs from node ip-172-31-10-28 pod downward-api-5e10ad51-6bce-4980-b2fb-164918b60798 container dapi-container: <nil>
  STEP: delete the pod @ 06/29/24 13:31:02.651
  Jun 29 13:31:02.670: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5983" for this suite. @ 06/29/24 13:31:02.675
â€¢ [4.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:183
  STEP: Creating a kubernetes client @ 06/29/24 13:31:02.683
  Jun 29 13:31:02.683: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename kubelet-test @ 06/29/24 13:31:02.683
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:31:02.699
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:31:02.701
  E0629 13:31:02.959724      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:31:03.960778      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:31:04.732: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4973" for this suite. @ 06/29/24 13:31:04.736
â€¢ [2.059 seconds]
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 06/29/24 13:31:04.742
  Jun 29 13:31:04.742: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename secrets @ 06/29/24 13:31:04.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:31:04.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:31:04.759
  STEP: Creating secret with name secret-test-62238338-968e-4690-9a0c-e77e6a9273b0 @ 06/29/24 13:31:04.762
  STEP: Creating a pod to test consume secrets @ 06/29/24 13:31:04.766
  E0629 13:31:04.961431      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:31:05.961559      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:31:06.962107      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:31:07.962198      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/29/24 13:31:08.793
  Jun 29 13:31:08.796: INFO: Trying to get logs from node ip-172-31-94-98 pod pod-secrets-38b20b41-c723-44f6-9ae2-f3db76431489 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/29/24 13:31:08.801
  Jun 29 13:31:08.819: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9542" for this suite. @ 06/29/24 13:31:08.823
â€¢ [4.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 06/29/24 13:31:08.832
  Jun 29 13:31:08.832: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename downward-api @ 06/29/24 13:31:08.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:31:08.848
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:31:08.851
  STEP: Creating a pod to test downward API volume plugin @ 06/29/24 13:31:08.854
  E0629 13:31:08.962751      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:31:09.962907      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:31:10.963615      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:31:11.963718      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/29/24 13:31:12.877
  Jun 29 13:31:12.882: INFO: Trying to get logs from node ip-172-31-94-98 pod downwardapi-volume-6365bb0f-e5bd-4bcf-abc3-2b9df143edec container client-container: <nil>
  STEP: delete the pod @ 06/29/24 13:31:12.887
  Jun 29 13:31:12.901: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9765" for this suite. @ 06/29/24 13:31:12.906
â€¢ [4.081 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 06/29/24 13:31:12.913
  Jun 29 13:31:12.913: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename namespaces @ 06/29/24 13:31:12.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:31:12.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:31:12.93
  STEP: Updating Namespace "namespaces-4510" @ 06/29/24 13:31:12.933
  Jun 29 13:31:12.942: INFO: Namespace "namespaces-4510" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"464b4305-f763-4b0b-9fc5-b79df71c36aa", "kubernetes.io/metadata.name":"namespaces-4510", "namespaces-4510":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  Jun 29 13:31:12.942: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4510" for this suite. @ 06/29/24 13:31:12.945
â€¢ [0.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 06/29/24 13:31:12.951
  Jun 29 13:31:12.951: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename namespaces @ 06/29/24 13:31:12.952
  E0629 13:31:12.963692      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:31:12.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:31:12.971
  STEP: Creating a test namespace @ 06/29/24 13:31:12.974
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:31:12.992
  STEP: Creating a service in the namespace @ 06/29/24 13:31:12.995
  STEP: Deleting the namespace @ 06/29/24 13:31:13.004
  STEP: Waiting for the namespace to be removed. @ 06/29/24 13:31:13.015
  E0629 13:31:13.963826      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:31:14.963947      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:31:15.964684      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:31:16.964843      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:31:17.965735      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:31:18.965847      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 06/29/24 13:31:19.02
  STEP: Verifying there is no service in the namespace @ 06/29/24 13:31:19.033
  Jun 29 13:31:19.037: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2428" for this suite. @ 06/29/24 13:31:19.042
  STEP: Destroying namespace "nsdeletetest-2983" for this suite. @ 06/29/24 13:31:19.051
  Jun 29 13:31:19.054: INFO: Namespace nsdeletetest-2983 was already deleted
  STEP: Destroying namespace "nsdeletetest-9519" for this suite. @ 06/29/24 13:31:19.054
â€¢ [6.109 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:142
  STEP: Creating a kubernetes client @ 06/29/24 13:31:19.06
  Jun 29 13:31:19.060: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename crd-webhook @ 06/29/24 13:31:19.061
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:31:19.075
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:31:19.078
  STEP: Setting up server cert @ 06/29/24 13:31:19.081
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 06/29/24 13:31:19.226
  STEP: Deploying the custom resource conversion webhook pod @ 06/29/24 13:31:19.233
  STEP: Wait for the deployment to be ready @ 06/29/24 13:31:19.248
  Jun 29 13:31:19.256: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0629 13:31:19.966243      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:31:20.966781      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/29/24 13:31:21.267
  STEP: Verifying the service has paired with the endpoint @ 06/29/24 13:31:21.284
  E0629 13:31:21.966985      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:31:22.284: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Jun 29 13:31:22.291: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  E0629 13:31:22.967686      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:31:23.968549      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 06/29/24 13:31:24.845
  STEP: v2 custom resource should be converted @ 06/29/24 13:31:24.853
  E0629 13:31:24.969081      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:31:25.413: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-1643" for this suite. @ 06/29/24 13:31:25.42
â€¢ [6.370 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1731
  STEP: Creating a kubernetes client @ 06/29/24 13:31:25.431
  Jun 29 13:31:25.431: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename kubectl @ 06/29/24 13:31:25.431
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:31:25.445
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:31:25.451
  Jun 29 13:31:25.454: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-7381 version'
  Jun 29 13:31:25.490: INFO: stderr: ""
  Jun 29 13:31:25.490: INFO: stdout: "Client Version: v1.29.6\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.29.6\n"
  Jun 29 13:31:25.490: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7381" for this suite. @ 06/29/24 13:31:25.494
â€¢ [0.071 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 06/29/24 13:31:25.501
  Jun 29 13:31:25.501: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/29/24 13:31:25.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:31:25.515
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:31:25.518
  Jun 29 13:31:25.521: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  E0629 13:31:25.970068      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 06/29/24 13:31:26.81
  Jun 29 13:31:26.810: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=crd-publish-openapi-7711 --namespace=crd-publish-openapi-7711 create -f -'
  E0629 13:31:26.970896      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:31:27.971251      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:31:28.885: INFO: stderr: ""
  Jun 29 13:31:28.885: INFO: stdout: "e2e-test-crd-publish-openapi-883-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Jun 29 13:31:28.885: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=crd-publish-openapi-7711 --namespace=crd-publish-openapi-7711 delete e2e-test-crd-publish-openapi-883-crds test-cr'
  Jun 29 13:31:28.936: INFO: stderr: ""
  Jun 29 13:31:28.936: INFO: stdout: "e2e-test-crd-publish-openapi-883-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  Jun 29 13:31:28.936: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=crd-publish-openapi-7711 --namespace=crd-publish-openapi-7711 apply -f -'
  E0629 13:31:28.972097      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:31:28.999: INFO: stderr: ""
  Jun 29 13:31:28.999: INFO: stdout: "e2e-test-crd-publish-openapi-883-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Jun 29 13:31:28.999: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=crd-publish-openapi-7711 --namespace=crd-publish-openapi-7711 delete e2e-test-crd-publish-openapi-883-crds test-cr'
  Jun 29 13:31:29.048: INFO: stderr: ""
  Jun 29 13:31:29.048: INFO: stdout: "e2e-test-crd-publish-openapi-883-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 06/29/24 13:31:29.048
  Jun 29 13:31:29.048: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=crd-publish-openapi-7711 explain e2e-test-crd-publish-openapi-883-crds'
  Jun 29 13:31:29.091: INFO: stderr: ""
  Jun 29 13:31:29.091: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-883-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0629 13:31:29.972225      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:31:30.291: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7711" for this suite. @ 06/29/24 13:31:30.297
â€¢ [4.802 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:153
  STEP: Creating a kubernetes client @ 06/29/24 13:31:30.304
  Jun 29 13:31:30.304: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 06/29/24 13:31:30.304
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:31:30.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:31:30.322
  STEP: create the container to handle the HTTPGet hook request. @ 06/29/24 13:31:30.327
  E0629 13:31:30.972766      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:31:31.973001      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 06/29/24 13:31:32.346
  E0629 13:31:32.973124      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:31:33.973184      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 06/29/24 13:31:34.363
  E0629 13:31:34.973297      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:31:35.973615      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:31:36.974382      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:31:37.974486      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 06/29/24 13:31:38.382
  Jun 29 13:31:38.394: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4587" for this suite. @ 06/29/24 13:31:38.398
â€¢ [8.100 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 06/29/24 13:31:38.404
  Jun 29 13:31:38.404: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename webhook @ 06/29/24 13:31:38.404
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:31:38.42
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:31:38.422
  STEP: Setting up server cert @ 06/29/24 13:31:38.448
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/29/24 13:31:38.698
  STEP: Deploying the webhook pod @ 06/29/24 13:31:38.703
  STEP: Wait for the deployment to be ready @ 06/29/24 13:31:38.714
  Jun 29 13:31:38.719: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0629 13:31:38.975057      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:31:39.975096      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/29/24 13:31:40.731
  STEP: Verifying the service has paired with the endpoint @ 06/29/24 13:31:40.741
  E0629 13:31:40.975221      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:31:41.741: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 06/29/24 13:31:41.747
  STEP: create a configmap that should be updated by the webhook @ 06/29/24 13:31:41.759
  Jun 29 13:31:41.808: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6636" for this suite. @ 06/29/24 13:31:41.815
  STEP: Destroying namespace "webhook-markers-7840" for this suite. @ 06/29/24 13:31:41.824
â€¢ [3.428 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 06/29/24 13:31:41.832
  Jun 29 13:31:41.832: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename emptydir @ 06/29/24 13:31:41.833
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:31:41.851
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:31:41.856
  STEP: Creating Pod @ 06/29/24 13:31:41.859
  E0629 13:31:41.975686      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:31:42.975861      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 06/29/24 13:31:43.879
  Jun 29 13:31:43.879: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-6070 PodName:pod-sharedvolume-e5e49360-857e-40b4-88d5-f2684078f017 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 29 13:31:43.879: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  Jun 29 13:31:43.880: INFO: ExecWithOptions: Clientset creation
  Jun 29 13:31:43.880: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/emptydir-6070/pods/pod-sharedvolume-e5e49360-857e-40b4-88d5-f2684078f017/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  Jun 29 13:31:43.929: INFO: Exec stderr: ""
  Jun 29 13:31:43.929: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6070" for this suite. @ 06/29/24 13:31:43.933
â€¢ [2.107 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 06/29/24 13:31:43.939
  Jun 29 13:31:43.939: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename sched-preemption @ 06/29/24 13:31:43.94
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:31:43.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:31:43.961
  E0629 13:31:43.976846      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:31:43.982: INFO: Waiting up to 1m0s for all nodes to be ready
  E0629 13:31:44.977306      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:31:45.977397      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:31:46.977434      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:31:47.977537      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:31:48.977717      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:31:49.977813      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:31:50.977930      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:31:51.978365      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:31:52.978398      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:31:53.978712      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:31:54.978802      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:31:55.979798      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:31:56.980353      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:31:57.980751      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:31:58.981037      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:31:59.981113      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:32:00.981699      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:32:01.982570      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:32:02.982885      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:32:03.983182      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:32:04.983285      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:32:05.983323      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:32:06.983478      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:32:07.983892      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:32:08.984798      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:32:09.985558      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:32:10.986666      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:32:11.987124      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:32:12.987667      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:32:13.987975      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:32:14.988252      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:32:15.988680      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:32:16.988822      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:32:17.989183      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:32:18.989364      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:32:19.990000      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:32:20.990889      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:32:21.991338      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:32:22.991495      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:32:23.991829      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:32:24.991967      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:32:25.992628      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:32:26.992764      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:32:27.993190      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:32:28.993934      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:32:29.994815      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:32:30.995101      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:32:31.995683      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:32:32.996763      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:32:33.997794      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:32:34.997914      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:32:35.998511      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:32:36.998618      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:32:37.998797      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:32:38.999844      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:32:40.000029      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:32:41.000121      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:32:42.001171      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:32:43.001340      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:32:43.987: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 06/29/24 13:32:43.991
  Jun 29 13:32:43.991: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename sched-preemption-path @ 06/29/24 13:32:43.992
  E0629 13:32:44.001910      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:32:44.009
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:32:44.01
  STEP: Finding an available node @ 06/29/24 13:32:44.012
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 06/29/24 13:32:44.012
  E0629 13:32:45.002503      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:32:46.002601      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 06/29/24 13:32:46.032
  Jun 29 13:32:46.047: INFO: found a healthy node: ip-172-31-94-98
  E0629 13:32:47.002695      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:32:48.002842      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:32:49.003698      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:32:50.003804      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:32:51.003906      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:32:52.004725      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:32:52.106: INFO: pods created so far: [1 1 1]
  Jun 29 13:32:52.106: INFO: length of pods created so far: 3
  E0629 13:32:53.004869      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:32:54.004950      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:32:54.118: INFO: pods created so far: [2 2 1]
  E0629 13:32:55.005042      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:32:56.005146      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:32:57.005319      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:32:58.005458      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:32:59.005894      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:33:00.006520      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:33:01.006681      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:33:01.180: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-6803" for this suite. @ 06/29/24 13:33:01.184
  Jun 29 13:33:01.190: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-129" for this suite. @ 06/29/24 13:33:01.193
â€¢ [77.262 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 06/29/24 13:33:01.201
  Jun 29 13:33:01.201: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename dns @ 06/29/24 13:33:01.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:33:01.217
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:33:01.219
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-1213.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-1213.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 06/29/24 13:33:01.221
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-1213.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-1213.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 06/29/24 13:33:01.221
  STEP: creating a pod to probe /etc/hosts @ 06/29/24 13:33:01.221
  STEP: submitting the pod to kubernetes @ 06/29/24 13:33:01.221
  E0629 13:33:02.006809      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:33:03.007655      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 06/29/24 13:33:03.24
  STEP: looking for the results for each expected name from probers @ 06/29/24 13:33:03.244
  Jun 29 13:33:03.258: INFO: DNS probes using dns-1213/dns-test-f618c389-eb1c-47ef-825d-4fc39367ca40 succeeded

  STEP: deleting the pod @ 06/29/24 13:33:03.258
  Jun 29 13:33:03.271: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1213" for this suite. @ 06/29/24 13:33:03.275
â€¢ [2.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 06/29/24 13:33:03.284
  Jun 29 13:33:03.284: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename container-probe @ 06/29/24 13:33:03.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:33:03.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:33:03.303
  STEP: Creating pod test-grpc-5c68e1eb-7b0e-4038-9a96-4f1b799e746f in namespace container-probe-454 @ 06/29/24 13:33:03.305
  E0629 13:33:04.008387      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:33:05.008461      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/29/24 13:33:05.322
  Jun 29 13:33:05.325: INFO: Initial restart count of pod test-grpc-5c68e1eb-7b0e-4038-9a96-4f1b799e746f is 0
  Jun 29 13:33:05.328: INFO: Get pod test-grpc-5c68e1eb-7b0e-4038-9a96-4f1b799e746f in namespace container-probe-454
  E0629 13:33:06.008562      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:33:07.008961      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:33:07.334: INFO: Get pod test-grpc-5c68e1eb-7b0e-4038-9a96-4f1b799e746f in namespace container-probe-454
  E0629 13:33:08.009862      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:33:09.010190      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:33:09.339: INFO: Get pod test-grpc-5c68e1eb-7b0e-4038-9a96-4f1b799e746f in namespace container-probe-454
  E0629 13:33:10.010724      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:33:11.011067      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:33:11.344: INFO: Get pod test-grpc-5c68e1eb-7b0e-4038-9a96-4f1b799e746f in namespace container-probe-454
  E0629 13:33:12.012050      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:33:13.012763      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:33:13.349: INFO: Get pod test-grpc-5c68e1eb-7b0e-4038-9a96-4f1b799e746f in namespace container-probe-454
  E0629 13:33:14.013659      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:33:15.013831      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:33:15.355: INFO: Get pod test-grpc-5c68e1eb-7b0e-4038-9a96-4f1b799e746f in namespace container-probe-454
  E0629 13:33:16.014298      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:33:17.014493      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:33:17.359: INFO: Get pod test-grpc-5c68e1eb-7b0e-4038-9a96-4f1b799e746f in namespace container-probe-454
  E0629 13:33:18.014597      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:33:19.014789      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:33:19.364: INFO: Get pod test-grpc-5c68e1eb-7b0e-4038-9a96-4f1b799e746f in namespace container-probe-454
  E0629 13:33:20.015808      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:33:21.016744      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:33:21.370: INFO: Get pod test-grpc-5c68e1eb-7b0e-4038-9a96-4f1b799e746f in namespace container-probe-454
  E0629 13:33:22.016946      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:33:23.017043      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:33:23.374: INFO: Get pod test-grpc-5c68e1eb-7b0e-4038-9a96-4f1b799e746f in namespace container-probe-454
  E0629 13:33:24.018020      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:33:25.018149      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:33:25.378: INFO: Get pod test-grpc-5c68e1eb-7b0e-4038-9a96-4f1b799e746f in namespace container-probe-454
  E0629 13:33:26.018506      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:33:27.018589      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:33:27.383: INFO: Get pod test-grpc-5c68e1eb-7b0e-4038-9a96-4f1b799e746f in namespace container-probe-454
  E0629 13:33:28.019636      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:33:29.019697      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:33:29.387: INFO: Get pod test-grpc-5c68e1eb-7b0e-4038-9a96-4f1b799e746f in namespace container-probe-454
  E0629 13:33:30.019791      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:33:31.019880      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:33:31.392: INFO: Get pod test-grpc-5c68e1eb-7b0e-4038-9a96-4f1b799e746f in namespace container-probe-454
  E0629 13:33:32.019972      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:33:33.020829      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:33:33.398: INFO: Get pod test-grpc-5c68e1eb-7b0e-4038-9a96-4f1b799e746f in namespace container-probe-454
  E0629 13:33:34.020906      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:33:35.020992      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:33:35.402: INFO: Get pod test-grpc-5c68e1eb-7b0e-4038-9a96-4f1b799e746f in namespace container-probe-454
  E0629 13:33:36.021078      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:33:37.021923      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:33:37.407: INFO: Get pod test-grpc-5c68e1eb-7b0e-4038-9a96-4f1b799e746f in namespace container-probe-454
  E0629 13:33:38.022809      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:33:39.022979      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:33:39.412: INFO: Get pod test-grpc-5c68e1eb-7b0e-4038-9a96-4f1b799e746f in namespace container-probe-454
  E0629 13:33:40.023159      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:33:41.023263      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:33:41.416: INFO: Get pod test-grpc-5c68e1eb-7b0e-4038-9a96-4f1b799e746f in namespace container-probe-454
  E0629 13:33:42.024231      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:33:43.024312      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:33:43.421: INFO: Get pod test-grpc-5c68e1eb-7b0e-4038-9a96-4f1b799e746f in namespace container-probe-454
  E0629 13:33:44.024337      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:33:45.024420      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:33:45.426: INFO: Get pod test-grpc-5c68e1eb-7b0e-4038-9a96-4f1b799e746f in namespace container-probe-454
  E0629 13:33:46.024876      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:33:47.025211      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:33:47.429: INFO: Get pod test-grpc-5c68e1eb-7b0e-4038-9a96-4f1b799e746f in namespace container-probe-454
  E0629 13:33:48.025342      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:33:49.025425      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:33:49.433: INFO: Get pod test-grpc-5c68e1eb-7b0e-4038-9a96-4f1b799e746f in namespace container-probe-454
  E0629 13:33:50.025799      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:33:51.025909      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:33:51.437: INFO: Get pod test-grpc-5c68e1eb-7b0e-4038-9a96-4f1b799e746f in namespace container-probe-454
  E0629 13:33:52.026063      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:33:53.026189      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:33:53.441: INFO: Get pod test-grpc-5c68e1eb-7b0e-4038-9a96-4f1b799e746f in namespace container-probe-454
  E0629 13:33:54.026307      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:33:55.026385      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:33:55.447: INFO: Get pod test-grpc-5c68e1eb-7b0e-4038-9a96-4f1b799e746f in namespace container-probe-454
  E0629 13:33:56.027243      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:33:57.027391      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:33:57.452: INFO: Get pod test-grpc-5c68e1eb-7b0e-4038-9a96-4f1b799e746f in namespace container-probe-454
  E0629 13:33:58.027499      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:33:59.027688      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:33:59.456: INFO: Get pod test-grpc-5c68e1eb-7b0e-4038-9a96-4f1b799e746f in namespace container-probe-454
  E0629 13:34:00.027788      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:34:01.027878      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:34:01.460: INFO: Get pod test-grpc-5c68e1eb-7b0e-4038-9a96-4f1b799e746f in namespace container-probe-454
  E0629 13:34:02.028903      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:34:03.029074      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:34:03.464: INFO: Get pod test-grpc-5c68e1eb-7b0e-4038-9a96-4f1b799e746f in namespace container-probe-454
  E0629 13:34:04.029159      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:34:05.029242      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:34:05.470: INFO: Get pod test-grpc-5c68e1eb-7b0e-4038-9a96-4f1b799e746f in namespace container-probe-454
  E0629 13:34:06.029412      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:34:07.029511      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:34:07.474: INFO: Get pod test-grpc-5c68e1eb-7b0e-4038-9a96-4f1b799e746f in namespace container-probe-454
  E0629 13:34:08.029930      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:34:09.030536      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:34:09.480: INFO: Get pod test-grpc-5c68e1eb-7b0e-4038-9a96-4f1b799e746f in namespace container-probe-454
  Jun 29 13:34:09.480: INFO: Restart count of pod container-probe-454/test-grpc-5c68e1eb-7b0e-4038-9a96-4f1b799e746f is now 1 (1m4.155451985s elapsed)
  STEP: deleting the pod @ 06/29/24 13:34:09.48
  Jun 29 13:34:09.493: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-454" for this suite. @ 06/29/24 13:34:09.496
â€¢ [66.219 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2236
  STEP: Creating a kubernetes client @ 06/29/24 13:34:09.503
  Jun 29 13:34:09.503: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename services @ 06/29/24 13:34:09.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:34:09.523
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:34:09.525
  STEP: creating service in namespace services-9950 @ 06/29/24 13:34:09.527
  STEP: creating service affinity-nodeport-transition in namespace services-9950 @ 06/29/24 13:34:09.527
  STEP: creating replication controller affinity-nodeport-transition in namespace services-9950 @ 06/29/24 13:34:09.547
  I0629 13:34:09.555732      18 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-9950, replica count: 3
  E0629 13:34:10.031738      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:34:11.031781      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:34:12.031908      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0629 13:34:12.610986      18 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun 29 13:34:12.627: INFO: Creating new exec pod
  E0629 13:34:13.032372      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:34:14.032683      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:34:15.033713      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:34:15.649: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-9950 exec execpod-affinityf66dk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  Jun 29 13:34:15.742: INFO: stderr: "+ nc -v -t -w 2 affinity-nodeport-transition 80\n+ echo hostName\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  Jun 29 13:34:15.742: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 29 13:34:15.743: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-9950 exec execpod-affinityf66dk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.125 80'
  Jun 29 13:34:15.829: INFO: stderr: "+ nc -v -t -w 2 10.152.183.125 80\n+ echo hostName\nConnection to 10.152.183.125 80 port [tcp/http] succeeded!\n"
  Jun 29 13:34:15.829: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 29 13:34:15.829: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-9950 exec execpod-affinityf66dk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.94.98 32488'
  Jun 29 13:34:15.917: INFO: stderr: "+ nc -v -t -w 2 172.31.94.98 32488\n+ echo hostName\nConnection to 172.31.94.98 32488 port [tcp/*] succeeded!\n"
  Jun 29 13:34:15.917: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 29 13:34:15.917: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-9950 exec execpod-affinityf66dk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.10.28 32488'
  Jun 29 13:34:16.001: INFO: stderr: "+ nc -v -t -w 2 172.31.10.28 32488\n+ echo hostName\nConnection to 172.31.10.28 32488 port [tcp/*] succeeded!\n"
  Jun 29 13:34:16.001: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 29 13:34:16.010: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-9950 exec execpod-affinityf66dk -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.10.28:32488/ ; done'
  E0629 13:34:16.034511      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:34:16.173: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.28:32488/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.28:32488/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.28:32488/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.28:32488/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.28:32488/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.28:32488/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.28:32488/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.28:32488/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.28:32488/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.28:32488/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.28:32488/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.28:32488/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.28:32488/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.28:32488/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.28:32488/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.28:32488/\n"
  Jun 29 13:34:16.173: INFO: stdout: "\naffinity-nodeport-transition-zzs7k\naffinity-nodeport-transition-2vqf2\naffinity-nodeport-transition-zzs7k\naffinity-nodeport-transition-b2mvm\naffinity-nodeport-transition-zzs7k\naffinity-nodeport-transition-zzs7k\naffinity-nodeport-transition-zzs7k\naffinity-nodeport-transition-zzs7k\naffinity-nodeport-transition-zzs7k\naffinity-nodeport-transition-2vqf2\naffinity-nodeport-transition-zzs7k\naffinity-nodeport-transition-2vqf2\naffinity-nodeport-transition-b2mvm\naffinity-nodeport-transition-b2mvm\naffinity-nodeport-transition-zzs7k\naffinity-nodeport-transition-2vqf2"
  Jun 29 13:34:16.173: INFO: Received response from host: affinity-nodeport-transition-zzs7k
  Jun 29 13:34:16.173: INFO: Received response from host: affinity-nodeport-transition-2vqf2
  Jun 29 13:34:16.173: INFO: Received response from host: affinity-nodeport-transition-zzs7k
  Jun 29 13:34:16.173: INFO: Received response from host: affinity-nodeport-transition-b2mvm
  Jun 29 13:34:16.173: INFO: Received response from host: affinity-nodeport-transition-zzs7k
  Jun 29 13:34:16.173: INFO: Received response from host: affinity-nodeport-transition-zzs7k
  Jun 29 13:34:16.173: INFO: Received response from host: affinity-nodeport-transition-zzs7k
  Jun 29 13:34:16.173: INFO: Received response from host: affinity-nodeport-transition-zzs7k
  Jun 29 13:34:16.173: INFO: Received response from host: affinity-nodeport-transition-zzs7k
  Jun 29 13:34:16.173: INFO: Received response from host: affinity-nodeport-transition-2vqf2
  Jun 29 13:34:16.173: INFO: Received response from host: affinity-nodeport-transition-zzs7k
  Jun 29 13:34:16.173: INFO: Received response from host: affinity-nodeport-transition-2vqf2
  Jun 29 13:34:16.173: INFO: Received response from host: affinity-nodeport-transition-b2mvm
  Jun 29 13:34:16.173: INFO: Received response from host: affinity-nodeport-transition-b2mvm
  Jun 29 13:34:16.173: INFO: Received response from host: affinity-nodeport-transition-zzs7k
  Jun 29 13:34:16.173: INFO: Received response from host: affinity-nodeport-transition-2vqf2
  Jun 29 13:34:16.183: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-9950 exec execpod-affinityf66dk -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.10.28:32488/ ; done'
  Jun 29 13:34:16.339: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.28:32488/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.28:32488/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.28:32488/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.28:32488/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.28:32488/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.28:32488/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.28:32488/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.28:32488/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.28:32488/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.28:32488/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.28:32488/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.28:32488/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.28:32488/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.28:32488/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.28:32488/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.28:32488/\n"
  Jun 29 13:34:16.339: INFO: stdout: "\naffinity-nodeport-transition-zzs7k\naffinity-nodeport-transition-zzs7k\naffinity-nodeport-transition-zzs7k\naffinity-nodeport-transition-zzs7k\naffinity-nodeport-transition-zzs7k\naffinity-nodeport-transition-zzs7k\naffinity-nodeport-transition-zzs7k\naffinity-nodeport-transition-zzs7k\naffinity-nodeport-transition-zzs7k\naffinity-nodeport-transition-zzs7k\naffinity-nodeport-transition-zzs7k\naffinity-nodeport-transition-zzs7k\naffinity-nodeport-transition-zzs7k\naffinity-nodeport-transition-zzs7k\naffinity-nodeport-transition-zzs7k\naffinity-nodeport-transition-zzs7k"
  Jun 29 13:34:16.340: INFO: Received response from host: affinity-nodeport-transition-zzs7k
  Jun 29 13:34:16.340: INFO: Received response from host: affinity-nodeport-transition-zzs7k
  Jun 29 13:34:16.340: INFO: Received response from host: affinity-nodeport-transition-zzs7k
  Jun 29 13:34:16.340: INFO: Received response from host: affinity-nodeport-transition-zzs7k
  Jun 29 13:34:16.340: INFO: Received response from host: affinity-nodeport-transition-zzs7k
  Jun 29 13:34:16.340: INFO: Received response from host: affinity-nodeport-transition-zzs7k
  Jun 29 13:34:16.340: INFO: Received response from host: affinity-nodeport-transition-zzs7k
  Jun 29 13:34:16.340: INFO: Received response from host: affinity-nodeport-transition-zzs7k
  Jun 29 13:34:16.340: INFO: Received response from host: affinity-nodeport-transition-zzs7k
  Jun 29 13:34:16.340: INFO: Received response from host: affinity-nodeport-transition-zzs7k
  Jun 29 13:34:16.340: INFO: Received response from host: affinity-nodeport-transition-zzs7k
  Jun 29 13:34:16.340: INFO: Received response from host: affinity-nodeport-transition-zzs7k
  Jun 29 13:34:16.340: INFO: Received response from host: affinity-nodeport-transition-zzs7k
  Jun 29 13:34:16.340: INFO: Received response from host: affinity-nodeport-transition-zzs7k
  Jun 29 13:34:16.340: INFO: Received response from host: affinity-nodeport-transition-zzs7k
  Jun 29 13:34:16.340: INFO: Received response from host: affinity-nodeport-transition-zzs7k
  Jun 29 13:34:16.340: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-9950, will wait for the garbage collector to delete the pods @ 06/29/24 13:34:16.353
  Jun 29 13:34:16.414: INFO: Deleting ReplicationController affinity-nodeport-transition took: 7.651868ms
  Jun 29 13:34:16.515: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.212303ms
  E0629 13:34:17.035493      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:34:18.035904      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:34:19.036835      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:34:19.436: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9950" for this suite. @ 06/29/24 13:34:19.44
â€¢ [9.943 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 06/29/24 13:34:19.446
  Jun 29 13:34:19.446: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename services @ 06/29/24 13:34:19.447
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:34:19.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:34:19.464
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-1319 @ 06/29/24 13:34:19.466
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 06/29/24 13:34:19.475
  STEP: creating service externalsvc in namespace services-1319 @ 06/29/24 13:34:19.475
  STEP: creating replication controller externalsvc in namespace services-1319 @ 06/29/24 13:34:19.486
  I0629 13:34:19.492889      18 runners.go:197] Created replication controller with name: externalsvc, namespace: services-1319, replica count: 2
  E0629 13:34:20.037911      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:34:21.038105      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:34:22.038173      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0629 13:34:22.544161      18 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 06/29/24 13:34:22.548
  Jun 29 13:34:22.561: INFO: Creating new exec pod
  E0629 13:34:23.038861      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:34:24.038991      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:34:24.579: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-1319 exec execpodmgbtg -- /bin/sh -x -c nslookup clusterip-service.services-1319.svc.cluster.local'
  Jun 29 13:34:24.690: INFO: stderr: "+ nslookup clusterip-service.services-1319.svc.cluster.local\n"
  Jun 29 13:34:24.690: INFO: stdout: "Server:\t\t10.152.183.165\nAddress:\t10.152.183.165#53\n\nclusterip-service.services-1319.svc.cluster.local\tcanonical name = externalsvc.services-1319.svc.cluster.local.\nName:\texternalsvc.services-1319.svc.cluster.local\nAddress: 10.152.183.160\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-1319, will wait for the garbage collector to delete the pods @ 06/29/24 13:34:24.69
  Jun 29 13:34:24.749: INFO: Deleting ReplicationController externalsvc took: 5.555127ms
  Jun 29 13:34:24.850: INFO: Terminating ReplicationController externalsvc pods took: 100.257821ms
  E0629 13:34:25.039631      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:34:26.040257      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:34:27.040952      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:34:27.470: INFO: Cleaning up the ClusterIP to ExternalName test service
  Jun 29 13:34:27.480: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1319" for this suite. @ 06/29/24 13:34:27.483
â€¢ [8.045 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 06/29/24 13:34:27.491
  Jun 29 13:34:27.491: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename cronjob @ 06/29/24 13:34:27.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:34:27.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:34:27.509
  STEP: Creating a ForbidConcurrent cronjob @ 06/29/24 13:34:27.51
  STEP: Ensuring a job is scheduled @ 06/29/24 13:34:27.516
  E0629 13:34:28.041403      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:34:29.041445      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:34:30.041541      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:34:31.041640      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:34:32.042326      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:34:33.042436      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:34:34.043326      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:34:35.043689      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:34:36.043789      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:34:37.043883      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:34:38.044697      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:34:39.044999      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:34:40.045108      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:34:41.045210      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:34:42.045336      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:34:43.045422      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:34:44.045960      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:34:45.046053      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:34:46.046154      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:34:47.046204      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:34:48.046945      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:34:49.047171      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:34:50.047267      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:34:51.047362      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:34:52.047680      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:34:53.047872      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:34:54.048795      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:34:55.048862      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:34:56.049810      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:34:57.049907      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:34:58.050436      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:34:59.050615      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:00.051670      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:01.051773      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 06/29/24 13:35:01.52
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 06/29/24 13:35:01.523
  STEP: Ensuring no more jobs are scheduled @ 06/29/24 13:35:01.525
  E0629 13:35:02.052537      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:03.052747      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:04.053659      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:05.053806      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:06.054779      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:07.054891      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:08.055272      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:09.055386      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:10.055602      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:11.055669      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:12.055761      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:13.056732      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:14.056839      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:15.057114      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:16.058167      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:17.058361      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:18.059001      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:19.059067      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:20.060082      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:21.060724      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:22.060988      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:23.061971      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:24.062741      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:25.062852      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:26.063057      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:27.063310      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:28.063683      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:29.063767      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:30.063867      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:31.064734      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:32.065373      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:33.065509      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:34.066368      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:35.066580      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:36.066688      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:37.066903      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:38.067857      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:39.068728      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:40.069152      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:41.069263      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:42.069355      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:43.069461      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:44.070180      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:45.070275      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:46.070534      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:47.070636      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:48.070727      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:49.071687      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:50.072646      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:51.072904      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:52.072999      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:53.073197      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:54.073830      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:55.073925      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:56.074953      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:57.075063      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:58.075081      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:35:59.075305      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:00.075664      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:01.075757      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:02.076515      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:03.077454      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:04.078284      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:05.078825      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:06.079907      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:07.080728      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:08.081581      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:09.081784      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:10.081944      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:11.082042      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:12.082856      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:13.083099      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:14.083937      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:15.084037      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:16.084792      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:17.084965      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:18.085061      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:19.085777      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:20.086574      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:21.086754      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:22.086845      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:23.086954      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:24.087227      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:25.088118      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:26.088734      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:27.089265      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:28.089363      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:29.090033      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:30.090136      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:31.090227      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:32.090974      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:33.091088      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:34.091190      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:35.091293      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:36.091663      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:37.092744      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:38.092929      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:39.093030      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:40.093405      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:41.093586      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:42.094483      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:43.094622      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:44.094740      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:45.094908      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:46.095016      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:47.095199      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:48.096146      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:49.096733      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:50.097737      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:51.098376      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:52.098769      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:53.098978      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:54.099282      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:55.099659      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:56.100725      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:57.100915      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:58.101042      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:36:59.101235      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:00.101328      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:01.101511      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:02.102243      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:03.103015      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:04.104027      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:05.104130      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:06.104750      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:07.104943      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:08.106036      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:09.106128      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:10.106220      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:11.106310      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:12.106401      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:13.107265      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:14.107663      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:15.108741      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:16.109070      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:17.109251      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:18.109346      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:19.109518      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:20.110305      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:21.110493      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:22.110950      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:23.111143      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:24.111250      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:25.111338      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:26.112284      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:27.112747      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:28.112845      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:29.113027      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:30.113492      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:31.113703      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:32.113971      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:33.114139      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:34.115046      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:35.115140      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:36.115979      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:37.116075      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:38.116740      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:39.116853      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:40.116986      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:41.117229      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:42.117944      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:43.118046      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:44.118610      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:45.119579      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:46.119949      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:47.120844      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:48.120935      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:49.121127      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:50.121230      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:51.121443      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:52.121976      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:53.122086      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:54.122882      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:55.123200      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:56.123681      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:57.124737      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:58.125830      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:37:59.126072      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:00.126693      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:01.126808      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:02.126952      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:03.127190      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:04.127302      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:05.127677      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:06.127728      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:07.127914      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:08.128844      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:09.128915      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:10.128948      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:11.129663      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:12.129759      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:13.130535      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:14.131388      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:15.131664      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:16.132572      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:17.132783      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:18.132836      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:19.133014      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:20.133998      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:21.134197      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:22.134497      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:23.134704      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:24.134810      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:25.135094      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:26.135348      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:27.135582      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:28.136426      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:29.136542      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:30.137122      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:31.137313      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:32.137876      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:33.138058      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:34.139069      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:35.139254      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:36.140118      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:37.140206      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:38.140316      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:39.140428      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:40.141399      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:41.141615      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:42.142634      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:43.142852      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:44.143707      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:45.144822      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:46.144918      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:47.145090      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:48.145189      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:49.145814      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:50.146255      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:51.146377      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:52.146564      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:53.146933      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:54.147090      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:55.147190      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:56.148131      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:57.148737      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:58.148833      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:38:59.149669      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:00.150657      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:01.150821      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:02.150921      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:03.151125      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:04.152038      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:05.152224      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:06.152351      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:07.152763      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:08.152849      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:09.152987      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:10.153035      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:11.153977      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:12.154204      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:13.154304      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:14.154413      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:15.154721      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:16.155451      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:17.155659      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:18.156740      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:19.157076      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:20.158084      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:21.158179      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:22.159162      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:23.159249      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:24.159995      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:25.160079      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:26.160735      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:27.160834      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:28.161052      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:29.162120      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:30.162264      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:31.162380      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:32.162660      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:33.162847      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:34.163466      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:35.163662      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:36.164736      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:37.164914      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:38.165016      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:39.165153      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:40.166060      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:41.166161      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:42.166326      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:43.166428      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:44.167002      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:45.167109      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:46.167669      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:47.168741      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:48.168839      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:49.168869      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:50.169466      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:51.169660      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:52.169748      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:53.169980      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:54.170507      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:55.171349      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:56.172369      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:57.173021      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:58.173986      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:39:59.174168      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:40:00.174389      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:40:01.174572      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 06/29/24 13:40:01.534
  Jun 29 13:40:01.541: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5959" for this suite. @ 06/29/24 13:40:01.543
â€¢ [334.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 06/29/24 13:40:01.552
  Jun 29 13:40:01.552: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename lease-test @ 06/29/24 13:40:01.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:40:01.574
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:40:01.576
  Jun 29 13:40:01.625: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-100" for this suite. @ 06/29/24 13:40:01.629
â€¢ [0.083 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 06/29/24 13:40:01.635
  Jun 29 13:40:01.635: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename svcaccounts @ 06/29/24 13:40:01.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:40:01.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:40:01.653
  STEP: creating a ServiceAccount @ 06/29/24 13:40:01.654
  STEP: watching for the ServiceAccount to be added @ 06/29/24 13:40:01.661
  STEP: patching the ServiceAccount @ 06/29/24 13:40:01.662
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 06/29/24 13:40:01.666
  STEP: deleting the ServiceAccount @ 06/29/24 13:40:01.669
  Jun 29 13:40:01.683: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4557" for this suite. @ 06/29/24 13:40:01.687
â€¢ [0.058 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 06/29/24 13:40:01.693
  Jun 29 13:40:01.693: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename configmap @ 06/29/24 13:40:01.693
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:40:01.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:40:01.713
  STEP: Creating configMap with name configmap-test-volume-73a62b81-be54-4d85-a061-4c3d13e56981 @ 06/29/24 13:40:01.715
  STEP: Creating a pod to test consume configMaps @ 06/29/24 13:40:01.719
  E0629 13:40:02.175418      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:40:03.175567      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:40:04.175685      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:40:05.175791      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/29/24 13:40:05.739
  Jun 29 13:40:05.744: INFO: Trying to get logs from node ip-172-31-94-98 pod pod-configmaps-19fb10c4-bdc3-41aa-b455-a8e034670139 container agnhost-container: <nil>
  STEP: delete the pod @ 06/29/24 13:40:05.759
  Jun 29 13:40:05.776: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8059" for this suite. @ 06/29/24 13:40:05.78
â€¢ [4.093 seconds]
------------------------------
SSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 06/29/24 13:40:05.786
  Jun 29 13:40:05.786: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename endpointslice @ 06/29/24 13:40:05.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:40:05.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:40:05.805
  E0629 13:40:06.176495      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:40:07.176601      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:40:08.177444      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:40:09.177525      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:40:10.177648      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 06/29/24 13:40:10.868
  E0629 13:40:11.178503      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:40:12.178603      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:40:13.178793      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:40:14.178879      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:40:15.178970      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing matching pods with named port @ 06/29/24 13:40:15.877
  E0629 13:40:16.179420      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:40:17.179687      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:40:18.179796      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:40:19.179866      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:40:20.180803      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 06/29/24 13:40:20.884
  E0629 13:40:21.180883      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:40:22.181401      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:40:23.181486      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:40:24.181603      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:40:25.182070      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: recreating EndpointSlices after they've been deleted @ 06/29/24 13:40:25.892
  Jun 29 13:40:25.912: INFO: EndpointSlice for Service endpointslice-1523/example-named-port not found
  E0629 13:40:26.182787      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:40:27.182879      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:40:28.182972      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:40:29.183082      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:40:30.183263      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:40:31.183356      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:40:32.183685      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:40:33.183783      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:40:34.183902      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:40:35.184758      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:40:35.920: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-1523" for this suite. @ 06/29/24 13:40:35.922
â€¢ [30.141 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:177
  STEP: Creating a kubernetes client @ 06/29/24 13:40:35.928
  Jun 29 13:40:35.928: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename crd-webhook @ 06/29/24 13:40:35.928
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:40:35.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:40:35.948
  STEP: Setting up server cert @ 06/29/24 13:40:35.949
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 06/29/24 13:40:36.056
  STEP: Deploying the custom resource conversion webhook pod @ 06/29/24 13:40:36.065
  STEP: Wait for the deployment to be ready @ 06/29/24 13:40:36.074
  Jun 29 13:40:36.080: INFO: new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  E0629 13:40:36.185224      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:40:37.185467      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/29/24 13:40:38.092
  STEP: Verifying the service has paired with the endpoint @ 06/29/24 13:40:38.101
  E0629 13:40:38.186134      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:40:39.102: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Jun 29 13:40:39.111: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  E0629 13:40:39.187011      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:40:40.187249      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:40:41.187939      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 06/29/24 13:40:41.658
  STEP: Create a v2 custom resource @ 06/29/24 13:40:41.674
  STEP: List CRs in v1 @ 06/29/24 13:40:41.703
  STEP: List CRs in v2 @ 06/29/24 13:40:41.708
  E0629 13:40:42.188257      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:40:42.262: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-3213" for this suite. @ 06/29/24 13:40:42.268
â€¢ [6.349 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 06/29/24 13:40:42.277
  Jun 29 13:40:42.277: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename disruption @ 06/29/24 13:40:42.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:40:42.291
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:40:42.293
  STEP: Waiting for the pdb to be processed @ 06/29/24 13:40:42.298
  E0629 13:40:43.189036      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:40:44.189288      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 06/29/24 13:40:44.324
  Jun 29 13:40:44.328: INFO: running pods: 0 < 3
  E0629 13:40:45.189621      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:40:46.189740      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:40:46.327: INFO: running pods: 2 < 3
  E0629 13:40:47.190474      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:40:48.190659      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:40:48.332: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9124" for this suite. @ 06/29/24 13:40:48.336
â€¢ [6.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 06/29/24 13:40:48.345
  Jun 29 13:40:48.345: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename webhook @ 06/29/24 13:40:48.346
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:40:48.362
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:40:48.363
  STEP: Setting up server cert @ 06/29/24 13:40:48.387
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/29/24 13:40:48.614
  STEP: Deploying the webhook pod @ 06/29/24 13:40:48.619
  STEP: Wait for the deployment to be ready @ 06/29/24 13:40:48.628
  Jun 29 13:40:48.636: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0629 13:40:49.190854      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:40:50.190950      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/29/24 13:40:50.646
  STEP: Verifying the service has paired with the endpoint @ 06/29/24 13:40:50.662
  E0629 13:40:51.190999      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:40:51.663: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 06/29/24 13:40:51.67
  STEP: Creating a custom resource definition that should be denied by the webhook @ 06/29/24 13:40:51.681
  Jun 29 13:40:51.681: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  Jun 29 13:40:51.734: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9302" for this suite. @ 06/29/24 13:40:51.737
  STEP: Destroying namespace "webhook-markers-7188" for this suite. @ 06/29/24 13:40:51.743
â€¢ [3.403 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 06/29/24 13:40:51.749
  Jun 29 13:40:51.749: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename emptydir @ 06/29/24 13:40:51.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:40:51.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:40:51.768
  STEP: Creating a pod to test emptydir volume type on node default medium @ 06/29/24 13:40:51.769
  E0629 13:40:52.191518      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:40:53.191803      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:40:54.192478      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:40:55.193019      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/29/24 13:40:55.796
  Jun 29 13:40:55.801: INFO: Trying to get logs from node ip-172-31-10-28 pod pod-021b8e91-66a0-477f-8256-8ca89681cd4a container test-container: <nil>
  STEP: delete the pod @ 06/29/24 13:40:55.813
  Jun 29 13:40:55.830: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1353" for this suite. @ 06/29/24 13:40:55.834
â€¢ [4.091 seconds]
------------------------------
SSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 06/29/24 13:40:55.84
  Jun 29 13:40:55.840: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 06/29/24 13:40:55.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:40:55.857
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:40:55.859
  STEP: Setting up the test @ 06/29/24 13:40:55.861
  STEP: Creating hostNetwork=false pod @ 06/29/24 13:40:55.861
  E0629 13:40:56.193085      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:40:57.193357      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 06/29/24 13:40:57.88
  E0629 13:40:58.193444      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:40:59.193688      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Running the test @ 06/29/24 13:40:59.9
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 06/29/24 13:40:59.9
  Jun 29 13:40:59.900: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7496 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 29 13:40:59.900: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  Jun 29 13:40:59.900: INFO: ExecWithOptions: Clientset creation
  Jun 29 13:40:59.900: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7496/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jun 29 13:40:59.950: INFO: Exec stderr: ""
  Jun 29 13:40:59.951: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7496 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 29 13:40:59.951: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  Jun 29 13:40:59.951: INFO: ExecWithOptions: Clientset creation
  Jun 29 13:40:59.951: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7496/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jun 29 13:41:00.002: INFO: Exec stderr: ""
  Jun 29 13:41:00.002: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7496 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 29 13:41:00.002: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  Jun 29 13:41:00.002: INFO: ExecWithOptions: Clientset creation
  Jun 29 13:41:00.003: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7496/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jun 29 13:41:00.054: INFO: Exec stderr: ""
  Jun 29 13:41:00.054: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7496 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 29 13:41:00.054: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  Jun 29 13:41:00.055: INFO: ExecWithOptions: Clientset creation
  Jun 29 13:41:00.055: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7496/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jun 29 13:41:00.094: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 06/29/24 13:41:00.094
  Jun 29 13:41:00.094: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7496 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 29 13:41:00.094: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  Jun 29 13:41:00.095: INFO: ExecWithOptions: Clientset creation
  Jun 29 13:41:00.095: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7496/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Jun 29 13:41:00.142: INFO: Exec stderr: ""
  Jun 29 13:41:00.142: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7496 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 29 13:41:00.142: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  Jun 29 13:41:00.143: INFO: ExecWithOptions: Clientset creation
  Jun 29 13:41:00.143: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7496/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Jun 29 13:41:00.185: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 06/29/24 13:41:00.186
  Jun 29 13:41:00.186: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7496 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 29 13:41:00.186: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  Jun 29 13:41:00.186: INFO: ExecWithOptions: Clientset creation
  Jun 29 13:41:00.186: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7496/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  E0629 13:41:00.193951      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:41:00.240: INFO: Exec stderr: ""
  Jun 29 13:41:00.240: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7496 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 29 13:41:00.240: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  Jun 29 13:41:00.240: INFO: ExecWithOptions: Clientset creation
  Jun 29 13:41:00.240: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7496/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jun 29 13:41:00.284: INFO: Exec stderr: ""
  Jun 29 13:41:00.284: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7496 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 29 13:41:00.284: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  Jun 29 13:41:00.284: INFO: ExecWithOptions: Clientset creation
  Jun 29 13:41:00.284: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7496/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jun 29 13:41:00.328: INFO: Exec stderr: ""
  Jun 29 13:41:00.328: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7496 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 29 13:41:00.328: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  Jun 29 13:41:00.328: INFO: ExecWithOptions: Clientset creation
  Jun 29 13:41:00.328: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7496/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jun 29 13:41:00.367: INFO: Exec stderr: ""
  Jun 29 13:41:00.368: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-7496" for this suite. @ 06/29/24 13:41:00.371
â€¢ [4.537 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:447
  STEP: Creating a kubernetes client @ 06/29/24 13:41:00.377
  Jun 29 13:41:00.377: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename sched-pred @ 06/29/24 13:41:00.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:41:00.398
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:41:00.401
  Jun 29 13:41:00.402: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jun 29 13:41:00.409: INFO: Waiting for terminating namespaces to be deleted...
  Jun 29 13:41:00.411: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-10-28 before test
  Jun 29 13:41:00.416: INFO: test-host-network-pod from e2e-kubelet-etc-hosts-7496 started at 2024-06-29 13:40:57 +0000 UTC (2 container statuses recorded)
  Jun 29 13:41:00.416: INFO: 	Container busybox-1 ready: true, restart count 0
  Jun 29 13:41:00.416: INFO: 	Container busybox-2 ready: true, restart count 0
  Jun 29 13:41:00.416: INFO: nginx-ingress-controller-kubernetes-worker-zddqx from ingress-nginx-kubernetes-worker started at 2024-06-29 12:12:20 +0000 UTC (1 container statuses recorded)
  Jun 29 13:41:00.416: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jun 29 13:41:00.416: INFO: calico-node-99b9n from kube-system started at 2024-06-29 12:16:42 +0000 UTC (1 container statuses recorded)
  Jun 29 13:41:00.416: INFO: 	Container calico-node ready: true, restart count 0
  Jun 29 13:41:00.416: INFO: sonobuoy-e2e-job-7574a47ae2364127 from sonobuoy started at 2024-06-29 12:21:33 +0000 UTC (2 container statuses recorded)
  Jun 29 13:41:00.416: INFO: 	Container e2e ready: true, restart count 0
  Jun 29 13:41:00.416: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 29 13:41:00.416: INFO: sonobuoy-systemd-logs-daemon-set-6e9f3632248049cc-bfvm8 from sonobuoy started at 2024-06-29 12:21:33 +0000 UTC (2 container statuses recorded)
  Jun 29 13:41:00.416: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 29 13:41:00.416: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun 29 13:41:00.416: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-37-211 before test
  Jun 29 13:41:00.422: INFO: nginx-ingress-controller-kubernetes-worker-fcsv7 from ingress-nginx-kubernetes-worker started at 2024-06-29 12:06:30 +0000 UTC (1 container statuses recorded)
  Jun 29 13:41:00.422: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 1
  Jun 29 13:41:00.422: INFO: calico-node-kxdrr from kube-system started at 2024-06-29 12:18:33 +0000 UTC (1 container statuses recorded)
  Jun 29 13:41:00.422: INFO: 	Container calico-node ready: true, restart count 0
  Jun 29 13:41:00.422: INFO: coredns-bddfd76d7-xvgzd from kube-system started at 2024-06-29 12:06:30 +0000 UTC (1 container statuses recorded)
  Jun 29 13:41:00.422: INFO: 	Container coredns ready: true, restart count 0
  Jun 29 13:41:00.422: INFO: kube-state-metrics-6f48cdd76-svwlz from kube-system started at 2024-06-29 12:06:30 +0000 UTC (1 container statuses recorded)
  Jun 29 13:41:00.422: INFO: 	Container kube-state-metrics ready: true, restart count 5
  Jun 29 13:41:00.422: INFO: metrics-server-v0.6.3-69d7fbfdf8-xpcsj from kube-system started at 2024-06-29 12:06:30 +0000 UTC (2 container statuses recorded)
  Jun 29 13:41:00.422: INFO: 	Container metrics-server ready: true, restart count 6
  Jun 29 13:41:00.422: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Jun 29 13:41:00.422: INFO: dashboard-metrics-scraper-5dd7cb5fc-7nkfs from kubernetes-dashboard started at 2024-06-29 12:06:30 +0000 UTC (1 container statuses recorded)
  Jun 29 13:41:00.422: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Jun 29 13:41:00.422: INFO: kubernetes-dashboard-7b899cb9d9-2tg9x from kubernetes-dashboard started at 2024-06-29 12:06:30 +0000 UTC (1 container statuses recorded)
  Jun 29 13:41:00.422: INFO: 	Container kubernetes-dashboard ready: true, restart count 6
  Jun 29 13:41:00.422: INFO: sonobuoy-systemd-logs-daemon-set-6e9f3632248049cc-cpb7h from sonobuoy started at 2024-06-29 12:21:33 +0000 UTC (2 container statuses recorded)
  Jun 29 13:41:00.422: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 29 13:41:00.422: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun 29 13:41:00.422: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-94-98 before test
  Jun 29 13:41:00.426: INFO: test-pod from e2e-kubelet-etc-hosts-7496 started at 2024-06-29 13:40:55 +0000 UTC (3 container statuses recorded)
  Jun 29 13:41:00.426: INFO: 	Container busybox-1 ready: true, restart count 0
  Jun 29 13:41:00.426: INFO: 	Container busybox-2 ready: true, restart count 0
  Jun 29 13:41:00.426: INFO: 	Container busybox-3 ready: true, restart count 0
  Jun 29 13:41:00.426: INFO: nginx-ingress-controller-kubernetes-worker-dpg9h from ingress-nginx-kubernetes-worker started at 2024-06-29 12:16:13 +0000 UTC (1 container statuses recorded)
  Jun 29 13:41:00.426: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jun 29 13:41:00.426: INFO: calico-node-mvhgx from kube-system started at 2024-06-29 12:16:01 +0000 UTC (1 container statuses recorded)
  Jun 29 13:41:00.426: INFO: 	Container calico-node ready: true, restart count 0
  Jun 29 13:41:00.426: INFO: sonobuoy from sonobuoy started at 2024-06-29 12:21:31 +0000 UTC (1 container statuses recorded)
  Jun 29 13:41:00.426: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jun 29 13:41:00.426: INFO: sonobuoy-systemd-logs-daemon-set-6e9f3632248049cc-485lm from sonobuoy started at 2024-06-29 12:21:33 +0000 UTC (2 container statuses recorded)
  Jun 29 13:41:00.426: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 29 13:41:00.426: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 06/29/24 13:41:00.426
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17dd7d5a84581de8], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/5 nodes are available: 5 Preemption is not helpful for scheduling.] @ 06/29/24 13:41:00.45
  E0629 13:41:01.194080      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:41:01.451: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3417" for this suite. @ 06/29/24 13:41:01.454
â€¢ [1.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:611
  STEP: Creating a kubernetes client @ 06/29/24 13:41:01.462
  Jun 29 13:41:01.462: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename security-context-test @ 06/29/24 13:41:01.462
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:41:01.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:41:01.48
  E0629 13:41:02.194164      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:41:03.194269      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:41:04.194378      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:41:05.194452      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:41:05.518: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-9411" for this suite. @ 06/29/24 13:41:05.522
â€¢ [4.066 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1798
  STEP: Creating a kubernetes client @ 06/29/24 13:41:05.528
  Jun 29 13:41:05.528: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename kubectl @ 06/29/24 13:41:05.528
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:41:05.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:41:05.548
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 06/29/24 13:41:05.55
  Jun 29 13:41:05.550: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-7150 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Jun 29 13:41:05.603: INFO: stderr: ""
  Jun 29 13:41:05.603: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 06/29/24 13:41:05.603
  E0629 13:41:06.195352      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:41:07.196237      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:41:08.196342      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:41:09.197286      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:41:10.197656      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 06/29/24 13:41:10.654
  Jun 29 13:41:10.654: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-7150 get pod e2e-test-httpd-pod -o json'
  Jun 29 13:41:10.700: INFO: stderr: ""
  Jun 29 13:41:10.700: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2024-06-29T13:41:05Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-7150\",\n        \"resourceVersion\": \"36634\",\n        \"uid\": \"eba6bf4b-47ce-40e0-9785-f6903dc6b12f\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-b8q6d\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-10-28\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-b8q6d\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-06-29T13:41:06Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-06-29T13:41:05Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-06-29T13:41:06Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-06-29T13:41:06Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-06-29T13:41:05Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://e7c44564dd023b9b789644ccea24560a2976c50b1aec61b20a7febf5575722c7\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-06-29T13:41:06Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"172.31.10.28\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.31.10.28\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"192.168.41.101\",\n        \"podIPs\": [\n            {\n                \"ip\": \"192.168.41.101\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-06-29T13:41:05Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 06/29/24 13:41:10.7
  Jun 29 13:41:10.700: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-7150 replace -f -'
  Jun 29 13:41:10.785: INFO: stderr: ""
  Jun 29 13:41:10.785: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 06/29/24 13:41:10.785
  Jun 29 13:41:10.788: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=kubectl-7150 delete pods e2e-test-httpd-pod'
  E0629 13:41:11.198282      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:41:12.198367      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:41:12.921: INFO: stderr: ""
  Jun 29 13:41:12.921: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Jun 29 13:41:12.921: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7150" for this suite. @ 06/29/24 13:41:12.925
â€¢ [7.403 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 06/29/24 13:41:12.93
  Jun 29 13:41:12.930: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename runtimeclass @ 06/29/24 13:41:12.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:41:12.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:41:12.95
  STEP: getting /apis @ 06/29/24 13:41:12.951
  STEP: getting /apis/node.k8s.io @ 06/29/24 13:41:12.954
  STEP: getting /apis/node.k8s.io/v1 @ 06/29/24 13:41:12.955
  STEP: creating @ 06/29/24 13:41:12.955
  STEP: watching @ 06/29/24 13:41:12.969
  Jun 29 13:41:12.969: INFO: starting watch
  STEP: getting @ 06/29/24 13:41:12.972
  STEP: listing @ 06/29/24 13:41:12.975
  STEP: patching @ 06/29/24 13:41:12.978
  STEP: updating @ 06/29/24 13:41:12.981
  Jun 29 13:41:12.986: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 06/29/24 13:41:12.986
  STEP: deleting a collection @ 06/29/24 13:41:12.998
  Jun 29 13:41:13.012: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1647" for this suite. @ 06/29/24 13:41:13.015
â€¢ [0.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 06/29/24 13:41:13.021
  Jun 29 13:41:13.021: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename projected @ 06/29/24 13:41:13.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:41:13.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:41:13.039
  STEP: Creating projection with secret that has name projected-secret-test-4d253fb0-f37c-45fe-b7f9-e4d763f54998 @ 06/29/24 13:41:13.04
  STEP: Creating a pod to test consume secrets @ 06/29/24 13:41:13.043
  E0629 13:41:13.198683      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:41:14.199027      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:41:15.199605      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:41:16.199678      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/29/24 13:41:17.062
  Jun 29 13:41:17.067: INFO: Trying to get logs from node ip-172-31-94-98 pod pod-projected-secrets-b7161e7f-31f9-4c98-8930-37274f6828c6 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/29/24 13:41:17.073
  Jun 29 13:41:17.089: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4786" for this suite. @ 06/29/24 13:41:17.091
â€¢ [4.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 06/29/24 13:41:17.098
  Jun 29 13:41:17.098: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename configmap @ 06/29/24 13:41:17.099
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:41:17.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:41:17.117
  STEP: Creating configMap with name cm-test-opt-del-8cca88ba-e558-42cf-aff0-2d99b6b70a75 @ 06/29/24 13:41:17.121
  STEP: Creating configMap with name cm-test-opt-upd-9b3f8a9e-51c2-47ab-a090-574742b12d07 @ 06/29/24 13:41:17.124
  STEP: Creating the pod @ 06/29/24 13:41:17.127
  E0629 13:41:17.200022      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:41:18.200750      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-8cca88ba-e558-42cf-aff0-2d99b6b70a75 @ 06/29/24 13:41:19.161
  STEP: Updating configmap cm-test-opt-upd-9b3f8a9e-51c2-47ab-a090-574742b12d07 @ 06/29/24 13:41:19.167
  STEP: Creating configMap with name cm-test-opt-create-d008202e-88e0-432c-9837-186d63ba003d @ 06/29/24 13:41:19.173
  STEP: waiting to observe update in volume @ 06/29/24 13:41:19.178
  E0629 13:41:19.201691      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:41:20.201851      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:41:21.202262      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:41:22.202410      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:41:23.202393      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:41:24.202959      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:41:25.203630      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:41:26.203771      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:41:27.203874      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:41:28.203966      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:41:29.204263      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:41:30.204957      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:41:31.205057      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:41:32.205852      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:41:33.206016      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:41:34.206661      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:41:35.206782      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:41:36.207658      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:41:37.208734      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:41:38.209666      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:41:39.209817      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:41:40.210186      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:41:41.210394      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:41:42.210597      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:41:43.210843      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:41:44.211126      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:41:45.211461      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:41:46.211654      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:41:47.211757      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:41:48.212766      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:41:49.212784      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:41:50.212874      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:41:51.213120      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:41:52.213682      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:41:53.214147      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:41:54.214327      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:41:55.215106      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:41:56.215457      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:41:57.215658      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:41:58.216732      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:41:59.216794      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:42:00.216983      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:42:01.217173      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:42:02.218179      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:42:03.218458      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:42:04.219250      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:42:05.219505      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:42:06.219938      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:42:07.220030      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:42:08.220136      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:42:09.220528      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:42:10.220736      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:42:11.221000      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:42:12.221098      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:42:13.221282      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:42:14.221374      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:42:15.221572      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:42:16.221684      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:42:17.221873      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:42:18.222814      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:42:19.223837      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:42:20.223945      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:42:21.224040      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:42:22.224124      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:42:23.224763      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:42:24.225279      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:42:25.225451      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:42:26.226461      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:42:27.226564      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:42:28.227651      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:42:29.227972      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:42:30.228580      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:42:31.229413      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:42:32.229509      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:42:33.229613      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:42:34.229781      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:42:35.229972      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:42:36.230119      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:42:37.230288      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:42:38.230388      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:42:39.230718      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:42:40.230842      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:42:41.231105      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:42:42.232011      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:42:43.232847      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:42:44.233265      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:42:45.233409      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:42:46.233793      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:42:47.234008      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:42:47.555: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1893" for this suite. @ 06/29/24 13:42:47.559
â€¢ [90.467 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 06/29/24 13:42:47.565
  Jun 29 13:42:47.565: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename security-context @ 06/29/24 13:42:47.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:42:47.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:42:47.587
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 06/29/24 13:42:47.589
  E0629 13:42:48.234794      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:42:49.234813      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:42:50.234898      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:42:51.235137      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/29/24 13:42:51.61
  Jun 29 13:42:51.613: INFO: Trying to get logs from node ip-172-31-10-28 pod security-context-74720d76-1223-4e21-87ea-c09ecc19eb04 container test-container: <nil>
  STEP: delete the pod @ 06/29/24 13:42:51.623
  Jun 29 13:42:51.639: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-4221" for this suite. @ 06/29/24 13:42:51.643
â€¢ [4.083 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 06/29/24 13:42:51.649
  Jun 29 13:42:51.649: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename webhook @ 06/29/24 13:42:51.649
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:42:51.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:42:51.672
  STEP: Setting up server cert @ 06/29/24 13:42:51.702
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/29/24 13:42:51.984
  STEP: Deploying the webhook pod @ 06/29/24 13:42:51.994
  STEP: Wait for the deployment to be ready @ 06/29/24 13:42:52.005
  Jun 29 13:42:52.013: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0629 13:42:52.235242      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:42:53.235469      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/29/24 13:42:54.022
  STEP: Verifying the service has paired with the endpoint @ 06/29/24 13:42:54.031
  E0629 13:42:54.236495      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:42:55.032: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 06/29/24 13:42:55.04
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 06/29/24 13:42:55.041
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 06/29/24 13:42:55.041
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 06/29/24 13:42:55.041
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 06/29/24 13:42:55.042
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 06/29/24 13:42:55.042
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 06/29/24 13:42:55.043
  Jun 29 13:42:55.077: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5130" for this suite. @ 06/29/24 13:42:55.08
  STEP: Destroying namespace "webhook-markers-6696" for this suite. @ 06/29/24 13:42:55.087
â€¢ [3.444 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 06/29/24 13:42:55.093
  Jun 29 13:42:55.093: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename secrets @ 06/29/24 13:42:55.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:42:55.114
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:42:55.115
  STEP: Creating secret with name secret-test-map-3b310936-491f-4003-9803-84f426440460 @ 06/29/24 13:42:55.117
  STEP: Creating a pod to test consume secrets @ 06/29/24 13:42:55.122
  E0629 13:42:55.237019      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:42:56.237426      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:42:57.237745      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:42:58.238103      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/29/24 13:42:59.137
  Jun 29 13:42:59.140: INFO: Trying to get logs from node ip-172-31-94-98 pod pod-secrets-90ca84d9-6215-4eaf-89e3-3e2dd58095df container secret-volume-test: <nil>
  STEP: delete the pod @ 06/29/24 13:42:59.147
  Jun 29 13:42:59.164: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8134" for this suite. @ 06/29/24 13:42:59.168
â€¢ [4.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 06/29/24 13:42:59.175
  Jun 29 13:42:59.175: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename dns @ 06/29/24 13:42:59.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:42:59.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:42:59.196
  STEP: Creating a test headless service @ 06/29/24 13:42:59.197
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8278 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-8278;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8278 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-8278;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8278.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-8278.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8278.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-8278.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8278.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-8278.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8278.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-8278.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8278.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-8278.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8278.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-8278.svc;check="$$(dig +notcp +noall +answer +search 196.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.196_udp@PTR;check="$$(dig +tcp +noall +answer +search 196.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.196_tcp@PTR;sleep 1; done
   @ 06/29/24 13:42:59.215
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8278 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8278;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8278 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8278;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8278.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8278.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8278.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8278.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8278.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-8278.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8278.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-8278.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8278.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-8278.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8278.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-8278.svc;check="$$(dig +notcp +noall +answer +search 196.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.196_udp@PTR;check="$$(dig +tcp +noall +answer +search 196.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.196_tcp@PTR;sleep 1; done
   @ 06/29/24 13:42:59.215
  STEP: creating a pod to probe DNS @ 06/29/24 13:42:59.215
  STEP: submitting the pod to kubernetes @ 06/29/24 13:42:59.216
  E0629 13:42:59.238977      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:43:00.239301      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 06/29/24 13:43:01.233
  STEP: looking for the results for each expected name from probers @ 06/29/24 13:43:01.237
  E0629 13:43:01.239249      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:43:01.241: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-8278/dns-test-98f3f6d8-eb91-47f7-a34e-0a985036efa9: the server could not find the requested resource (get pods dns-test-98f3f6d8-eb91-47f7-a34e-0a985036efa9)
  Jun 29 13:43:01.244: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-8278/dns-test-98f3f6d8-eb91-47f7-a34e-0a985036efa9: the server could not find the requested resource (get pods dns-test-98f3f6d8-eb91-47f7-a34e-0a985036efa9)
  Jun 29 13:43:01.248: INFO: Unable to read wheezy_udp@dns-test-service.dns-8278 from pod dns-8278/dns-test-98f3f6d8-eb91-47f7-a34e-0a985036efa9: the server could not find the requested resource (get pods dns-test-98f3f6d8-eb91-47f7-a34e-0a985036efa9)
  Jun 29 13:43:01.251: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8278 from pod dns-8278/dns-test-98f3f6d8-eb91-47f7-a34e-0a985036efa9: the server could not find the requested resource (get pods dns-test-98f3f6d8-eb91-47f7-a34e-0a985036efa9)
  Jun 29 13:43:01.254: INFO: Unable to read wheezy_udp@dns-test-service.dns-8278.svc from pod dns-8278/dns-test-98f3f6d8-eb91-47f7-a34e-0a985036efa9: the server could not find the requested resource (get pods dns-test-98f3f6d8-eb91-47f7-a34e-0a985036efa9)
  Jun 29 13:43:01.258: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8278.svc from pod dns-8278/dns-test-98f3f6d8-eb91-47f7-a34e-0a985036efa9: the server could not find the requested resource (get pods dns-test-98f3f6d8-eb91-47f7-a34e-0a985036efa9)
  Jun 29 13:43:01.261: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8278.svc from pod dns-8278/dns-test-98f3f6d8-eb91-47f7-a34e-0a985036efa9: the server could not find the requested resource (get pods dns-test-98f3f6d8-eb91-47f7-a34e-0a985036efa9)
  Jun 29 13:43:01.264: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8278.svc from pod dns-8278/dns-test-98f3f6d8-eb91-47f7-a34e-0a985036efa9: the server could not find the requested resource (get pods dns-test-98f3f6d8-eb91-47f7-a34e-0a985036efa9)
  Jun 29 13:43:01.280: INFO: Unable to read jessie_udp@dns-test-service from pod dns-8278/dns-test-98f3f6d8-eb91-47f7-a34e-0a985036efa9: the server could not find the requested resource (get pods dns-test-98f3f6d8-eb91-47f7-a34e-0a985036efa9)
  Jun 29 13:43:01.283: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-8278/dns-test-98f3f6d8-eb91-47f7-a34e-0a985036efa9: the server could not find the requested resource (get pods dns-test-98f3f6d8-eb91-47f7-a34e-0a985036efa9)
  Jun 29 13:43:01.287: INFO: Unable to read jessie_udp@dns-test-service.dns-8278 from pod dns-8278/dns-test-98f3f6d8-eb91-47f7-a34e-0a985036efa9: the server could not find the requested resource (get pods dns-test-98f3f6d8-eb91-47f7-a34e-0a985036efa9)
  Jun 29 13:43:01.289: INFO: Unable to read jessie_tcp@dns-test-service.dns-8278 from pod dns-8278/dns-test-98f3f6d8-eb91-47f7-a34e-0a985036efa9: the server could not find the requested resource (get pods dns-test-98f3f6d8-eb91-47f7-a34e-0a985036efa9)
  Jun 29 13:43:01.293: INFO: Unable to read jessie_udp@dns-test-service.dns-8278.svc from pod dns-8278/dns-test-98f3f6d8-eb91-47f7-a34e-0a985036efa9: the server could not find the requested resource (get pods dns-test-98f3f6d8-eb91-47f7-a34e-0a985036efa9)
  Jun 29 13:43:01.296: INFO: Unable to read jessie_tcp@dns-test-service.dns-8278.svc from pod dns-8278/dns-test-98f3f6d8-eb91-47f7-a34e-0a985036efa9: the server could not find the requested resource (get pods dns-test-98f3f6d8-eb91-47f7-a34e-0a985036efa9)
  Jun 29 13:43:01.299: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8278.svc from pod dns-8278/dns-test-98f3f6d8-eb91-47f7-a34e-0a985036efa9: the server could not find the requested resource (get pods dns-test-98f3f6d8-eb91-47f7-a34e-0a985036efa9)
  Jun 29 13:43:01.302: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8278.svc from pod dns-8278/dns-test-98f3f6d8-eb91-47f7-a34e-0a985036efa9: the server could not find the requested resource (get pods dns-test-98f3f6d8-eb91-47f7-a34e-0a985036efa9)
  Jun 29 13:43:01.316: INFO: Lookups using dns-8278/dns-test-98f3f6d8-eb91-47f7-a34e-0a985036efa9 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-8278 wheezy_tcp@dns-test-service.dns-8278 wheezy_udp@dns-test-service.dns-8278.svc wheezy_tcp@dns-test-service.dns-8278.svc wheezy_udp@_http._tcp.dns-test-service.dns-8278.svc wheezy_tcp@_http._tcp.dns-test-service.dns-8278.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-8278 jessie_tcp@dns-test-service.dns-8278 jessie_udp@dns-test-service.dns-8278.svc jessie_tcp@dns-test-service.dns-8278.svc jessie_udp@_http._tcp.dns-test-service.dns-8278.svc jessie_tcp@_http._tcp.dns-test-service.dns-8278.svc]

  Jun 29 13:43:01.320: INFO: Pod client logs for webserver: 
  Jun 29 13:43:01.326: INFO: Pod client logs for querier: 
  Jun 29 13:43:01.333: INFO: Pod client logs for jessie-querier: 
  E0629 13:43:02.239675      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:43:03.239771      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:43:04.240601      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:43:05.240678      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:43:06.241173      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:43:06.322: INFO: DNS probes using dns-8278/dns-test-98f3f6d8-eb91-47f7-a34e-0a985036efa9 succeeded

  STEP: deleting the pod @ 06/29/24 13:43:06.323
  STEP: deleting the test service @ 06/29/24 13:43:06.34
  STEP: deleting the test headless service @ 06/29/24 13:43:06.358
  Jun 29 13:43:06.368: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8278" for this suite. @ 06/29/24 13:43:06.371
â€¢ [7.202 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 06/29/24 13:43:06.377
  Jun 29 13:43:06.377: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename container-probe @ 06/29/24 13:43:06.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:43:06.395
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:43:06.396
  STEP: Creating pod busybox-20c0dbc0-d5b6-4983-8588-5eb83ef2afaf in namespace container-probe-7570 @ 06/29/24 13:43:06.398
  E0629 13:43:07.241504      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:43:08.241594      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/29/24 13:43:08.418
  Jun 29 13:43:08.422: INFO: Initial restart count of pod busybox-20c0dbc0-d5b6-4983-8588-5eb83ef2afaf is 0
  Jun 29 13:43:08.424: INFO: Get pod busybox-20c0dbc0-d5b6-4983-8588-5eb83ef2afaf in namespace container-probe-7570
  E0629 13:43:09.242286      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:43:10.242375      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:43:10.428: INFO: Get pod busybox-20c0dbc0-d5b6-4983-8588-5eb83ef2afaf in namespace container-probe-7570
  E0629 13:43:11.242690      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:43:12.242798      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:43:12.432: INFO: Get pod busybox-20c0dbc0-d5b6-4983-8588-5eb83ef2afaf in namespace container-probe-7570
  E0629 13:43:13.243462      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:43:14.243813      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:43:14.437: INFO: Get pod busybox-20c0dbc0-d5b6-4983-8588-5eb83ef2afaf in namespace container-probe-7570
  E0629 13:43:15.244762      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:43:16.244984      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:43:16.442: INFO: Get pod busybox-20c0dbc0-d5b6-4983-8588-5eb83ef2afaf in namespace container-probe-7570
  E0629 13:43:17.245264      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:43:18.245373      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:43:18.446: INFO: Get pod busybox-20c0dbc0-d5b6-4983-8588-5eb83ef2afaf in namespace container-probe-7570
  E0629 13:43:19.246258      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:43:20.246368      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:43:20.450: INFO: Get pod busybox-20c0dbc0-d5b6-4983-8588-5eb83ef2afaf in namespace container-probe-7570
  E0629 13:43:21.246527      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:43:22.246720      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:43:22.456: INFO: Get pod busybox-20c0dbc0-d5b6-4983-8588-5eb83ef2afaf in namespace container-probe-7570
  E0629 13:43:23.247259      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:43:24.247510      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:43:24.460: INFO: Get pod busybox-20c0dbc0-d5b6-4983-8588-5eb83ef2afaf in namespace container-probe-7570
  E0629 13:43:25.247686      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:43:26.247771      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:43:26.465: INFO: Get pod busybox-20c0dbc0-d5b6-4983-8588-5eb83ef2afaf in namespace container-probe-7570
  E0629 13:43:27.247945      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:43:28.248048      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:43:28.468: INFO: Get pod busybox-20c0dbc0-d5b6-4983-8588-5eb83ef2afaf in namespace container-probe-7570
  E0629 13:43:29.248830      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:43:30.248912      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:43:30.473: INFO: Get pod busybox-20c0dbc0-d5b6-4983-8588-5eb83ef2afaf in namespace container-probe-7570
  E0629 13:43:31.249156      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:43:32.249187      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:43:32.477: INFO: Get pod busybox-20c0dbc0-d5b6-4983-8588-5eb83ef2afaf in namespace container-probe-7570
  E0629 13:43:33.249379      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:43:34.250348      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:43:34.482: INFO: Get pod busybox-20c0dbc0-d5b6-4983-8588-5eb83ef2afaf in namespace container-probe-7570
  E0629 13:43:35.250846      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:43:36.251096      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:43:36.487: INFO: Get pod busybox-20c0dbc0-d5b6-4983-8588-5eb83ef2afaf in namespace container-probe-7570
  E0629 13:43:37.251645      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:43:38.251687      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:43:38.491: INFO: Get pod busybox-20c0dbc0-d5b6-4983-8588-5eb83ef2afaf in namespace container-probe-7570
  E0629 13:43:39.252282      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:43:40.252370      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:43:40.496: INFO: Get pod busybox-20c0dbc0-d5b6-4983-8588-5eb83ef2afaf in namespace container-probe-7570
  E0629 13:43:41.252865      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:43:42.252965      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:43:42.501: INFO: Get pod busybox-20c0dbc0-d5b6-4983-8588-5eb83ef2afaf in namespace container-probe-7570
  E0629 13:43:43.253229      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:43:44.253358      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:43:44.506: INFO: Get pod busybox-20c0dbc0-d5b6-4983-8588-5eb83ef2afaf in namespace container-probe-7570
  E0629 13:43:45.253629      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:43:46.253856      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:43:46.512: INFO: Get pod busybox-20c0dbc0-d5b6-4983-8588-5eb83ef2afaf in namespace container-probe-7570
  E0629 13:43:47.254330      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:43:48.254509      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:43:48.518: INFO: Get pod busybox-20c0dbc0-d5b6-4983-8588-5eb83ef2afaf in namespace container-probe-7570
  E0629 13:43:49.254824      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:43:50.255009      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:43:50.522: INFO: Get pod busybox-20c0dbc0-d5b6-4983-8588-5eb83ef2afaf in namespace container-probe-7570
  E0629 13:43:51.255978      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:43:52.256053      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:43:52.527: INFO: Get pod busybox-20c0dbc0-d5b6-4983-8588-5eb83ef2afaf in namespace container-probe-7570
  E0629 13:43:53.256754      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:43:54.257267      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:43:54.531: INFO: Get pod busybox-20c0dbc0-d5b6-4983-8588-5eb83ef2afaf in namespace container-probe-7570
  E0629 13:43:55.257358      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:43:56.258436      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:43:56.536: INFO: Get pod busybox-20c0dbc0-d5b6-4983-8588-5eb83ef2afaf in namespace container-probe-7570
  E0629 13:43:57.258518      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:43:58.258635      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:43:58.540: INFO: Get pod busybox-20c0dbc0-d5b6-4983-8588-5eb83ef2afaf in namespace container-probe-7570
  Jun 29 13:43:58.540: INFO: Restart count of pod container-probe-7570/busybox-20c0dbc0-d5b6-4983-8588-5eb83ef2afaf is now 1 (50.118132572s elapsed)
  STEP: deleting the pod @ 06/29/24 13:43:58.54
  Jun 29 13:43:58.554: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7570" for this suite. @ 06/29/24 13:43:58.56
â€¢ [52.187 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 06/29/24 13:43:58.565
  Jun 29 13:43:58.565: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename pods @ 06/29/24 13:43:58.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:43:58.584
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:43:58.586
  Jun 29 13:43:58.588: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: creating the pod @ 06/29/24 13:43:58.588
  STEP: submitting the pod to kubernetes @ 06/29/24 13:43:58.588
  E0629 13:43:59.259413      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:44:00.259499      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:44:00.662: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1674" for this suite. @ 06/29/24 13:44:00.666
â€¢ [2.106 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 06/29/24 13:44:00.671
  Jun 29 13:44:00.671: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename replicaset @ 06/29/24 13:44:00.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:44:00.689
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:44:00.691
  Jun 29 13:44:00.703: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0629 13:44:01.260198      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:44:02.260315      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:44:03.260387      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:44:04.261077      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:44:05.261167      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:44:05.707: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/29/24 13:44:05.707
  STEP: Scaling up "test-rs" replicaset @ 06/29/24 13:44:05.707
  Jun 29 13:44:05.715: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 06/29/24 13:44:05.715
  Jun 29 13:44:05.723: INFO: observed ReplicaSet test-rs in namespace replicaset-3365 with ReadyReplicas 1, AvailableReplicas 1
  Jun 29 13:44:05.738: INFO: observed ReplicaSet test-rs in namespace replicaset-3365 with ReadyReplicas 1, AvailableReplicas 1
  Jun 29 13:44:05.755: INFO: observed ReplicaSet test-rs in namespace replicaset-3365 with ReadyReplicas 1, AvailableReplicas 1
  Jun 29 13:44:05.759: INFO: observed ReplicaSet test-rs in namespace replicaset-3365 with ReadyReplicas 1, AvailableReplicas 1
  E0629 13:44:06.261290      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:44:06.967: INFO: observed ReplicaSet test-rs in namespace replicaset-3365 with ReadyReplicas 2, AvailableReplicas 2
  Jun 29 13:44:07.243: INFO: observed Replicaset test-rs in namespace replicaset-3365 with ReadyReplicas 3 found true
  Jun 29 13:44:07.243: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3365" for this suite. @ 06/29/24 13:44:07.248
â€¢ [6.584 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 06/29/24 13:44:07.256
  Jun 29 13:44:07.256: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename services @ 06/29/24 13:44:07.257
  E0629 13:44:07.261808      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:44:07.276
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:44:07.277
  STEP: creating service nodeport-test with type=NodePort in namespace services-8252 @ 06/29/24 13:44:07.279
  STEP: creating replication controller nodeport-test in namespace services-8252 @ 06/29/24 13:44:07.295
  I0629 13:44:07.302055      18 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-8252, replica count: 2
  E0629 13:44:08.262618      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:44:09.262923      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:44:10.263061      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0629 13:44:10.353436      18 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun 29 13:44:10.353: INFO: Creating new exec pod
  E0629 13:44:11.263289      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:44:12.263416      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:44:13.263731      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:44:13.373: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-8252 exec execpodpgkfh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Jun 29 13:44:13.460: INFO: stderr: "+ nc -v -t -w 2 nodeport-test 80\n+ echo hostName\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Jun 29 13:44:13.460: INFO: stdout: "nodeport-test-vp9qd"
  Jun 29 13:44:13.460: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-8252 exec execpodpgkfh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.190 80'
  Jun 29 13:44:13.558: INFO: stderr: "+ nc -v -t -w 2 10.152.183.190 80\nConnection to 10.152.183.190 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Jun 29 13:44:13.558: INFO: stdout: ""
  E0629 13:44:14.264436      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:44:14.460: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-8252 exec execpodpgkfh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.190 80'
  Jun 29 13:44:14.551: INFO: stderr: "+ nc -v -t -w 2 10.152.183.190 80\n+ echo hostName\nConnection to 10.152.183.190 80 port [tcp/http] succeeded!\n"
  Jun 29 13:44:14.551: INFO: stdout: "nodeport-test-vp9qd"
  Jun 29 13:44:14.551: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-8252 exec execpodpgkfh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.10.28 31061'
  Jun 29 13:44:14.642: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.10.28 31061\nConnection to 172.31.10.28 31061 port [tcp/*] succeeded!\n"
  Jun 29 13:44:14.642: INFO: stdout: ""
  E0629 13:44:15.264762      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:44:15.551: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-8252 exec execpodpgkfh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.10.28 31061'
  Jun 29 13:44:15.638: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.10.28 31061\nConnection to 172.31.10.28 31061 port [tcp/*] succeeded!\n"
  Jun 29 13:44:15.638: INFO: stdout: ""
  E0629 13:44:16.264874      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:44:16.551: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-8252 exec execpodpgkfh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.10.28 31061'
  Jun 29 13:44:16.643: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.10.28 31061\nConnection to 172.31.10.28 31061 port [tcp/*] succeeded!\n"
  Jun 29 13:44:16.643: INFO: stdout: "nodeport-test-vp9qd"
  Jun 29 13:44:16.643: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-8252 exec execpodpgkfh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.94.98 31061'
  Jun 29 13:44:16.731: INFO: stderr: "+ + ncecho -v hostName -t\n -w 2 172.31.94.98 31061\nConnection to 172.31.94.98 31061 port [tcp/*] succeeded!\n"
  Jun 29 13:44:16.731: INFO: stdout: "nodeport-test-75kmz"
  Jun 29 13:44:16.731: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8252" for this suite. @ 06/29/24 13:44:16.736
â€¢ [9.486 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:669
  STEP: Creating a kubernetes client @ 06/29/24 13:44:16.743
  Jun 29 13:44:16.743: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename pv @ 06/29/24 13:44:16.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:44:16.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:44:16.763
  STEP: Creating initial PV and PVC @ 06/29/24 13:44:16.764
  Jun 29 13:44:16.764: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-8257" @ 06/29/24 13:44:16.778
  STEP: Listing PVCs in namespace "pv-8257" @ 06/29/24 13:44:16.78
  STEP: Reading "pvc-h9jqx" Status @ 06/29/24 13:44:16.785
  STEP: Reading "pv-8257-wz7b7" Status @ 06/29/24 13:44:16.788
  STEP: Patching "pvc-h9jqx" Status @ 06/29/24 13:44:16.792
  STEP: Patching "pv-8257-wz7b7" Status @ 06/29/24 13:44:16.796
  STEP: Updating "pvc-h9jqx" Status @ 06/29/24 13:44:16.813
  STEP: Updating "pv-8257-wz7b7" Status @ 06/29/24 13:44:16.844
  Jun 29 13:44:16.854: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  Jun 29 13:44:16.854: INFO: Deleting PersistentVolumeClaim "pvc-h9jqx"
  Jun 29 13:44:16.860: INFO: Deleting PersistentVolume "pv-8257-wz7b7"
  Jun 29 13:44:16.867: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-8257" for this suite. @ 06/29/24 13:44:16.87
â€¢ [0.135 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:103
  STEP: Creating a kubernetes client @ 06/29/24 13:44:16.878
  Jun 29 13:44:16.878: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename resourcequota @ 06/29/24 13:44:16.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:44:16.899
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:44:16.901
  STEP: Counting existing ResourceQuota @ 06/29/24 13:44:16.903
  E0629 13:44:17.265690      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:44:18.266381      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:44:19.267296      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:44:20.267370      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:44:21.267571      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 06/29/24 13:44:21.906
  STEP: Ensuring resource quota status is calculated @ 06/29/24 13:44:21.911
  E0629 13:44:22.268464      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:44:23.268545      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 06/29/24 13:44:23.916
  STEP: Creating a NodePort Service @ 06/29/24 13:44:23.931
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 06/29/24 13:44:23.955
  STEP: Ensuring resource quota status captures service creation @ 06/29/24 13:44:23.974
  E0629 13:44:24.268721      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:44:25.268806      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 06/29/24 13:44:25.979
  STEP: Ensuring resource quota status released usage @ 06/29/24 13:44:26.017
  E0629 13:44:26.269792      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:44:27.269863      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:44:28.021: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4351" for this suite. @ 06/29/24 13:44:28.025
â€¢ [11.154 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 06/29/24 13:44:28.032
  Jun 29 13:44:28.032: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/29/24 13:44:28.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:44:28.05
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:44:28.051
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 06/29/24 13:44:28.053
  Jun 29 13:44:28.053: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  E0629 13:44:28.270289      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:44:29.271077      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:44:29.302: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  E0629 13:44:30.271492      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:44:31.271855      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:44:32.272824      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:44:33.272942      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:44:34.270: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0629 13:44:34.273379      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "crd-publish-openapi-9812" for this suite. @ 06/29/24 13:44:34.278
â€¢ [6.254 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 06/29/24 13:44:34.287
  Jun 29 13:44:34.287: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename replicaset @ 06/29/24 13:44:34.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:44:34.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:44:34.304
  STEP: Create a ReplicaSet @ 06/29/24 13:44:34.307
  STEP: Verify that the required pods have come up @ 06/29/24 13:44:34.314
  Jun 29 13:44:34.317: INFO: Pod name sample-pod: Found 0 pods out of 3
  E0629 13:44:35.274463      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:44:36.274675      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:44:37.274757      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:44:38.274959      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:44:39.275671      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:44:39.321: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 06/29/24 13:44:39.321
  Jun 29 13:44:39.325: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 06/29/24 13:44:39.325
  STEP: DeleteCollection of the ReplicaSets @ 06/29/24 13:44:39.328
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 06/29/24 13:44:39.336
  Jun 29 13:44:39.342: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7299" for this suite. @ 06/29/24 13:44:39.351
â€¢ [5.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 06/29/24 13:44:39.362
  Jun 29 13:44:39.362: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename pods @ 06/29/24 13:44:39.362
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:44:39.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:44:39.381
  STEP: creating the pod @ 06/29/24 13:44:39.385
  STEP: submitting the pod to kubernetes @ 06/29/24 13:44:39.385
  STEP: verifying QOS class is set on the pod @ 06/29/24 13:44:39.395
  Jun 29 13:44:39.402: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1449" for this suite. @ 06/29/24 13:44:39.405
â€¢ [0.052 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 06/29/24 13:44:39.414
  Jun 29 13:44:39.414: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename podtemplate @ 06/29/24 13:44:39.415
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:44:39.432
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:44:39.435
  STEP: Create a pod template @ 06/29/24 13:44:39.439
  STEP: Replace a pod template @ 06/29/24 13:44:39.443
  Jun 29 13:44:39.454: INFO: Found updated podtemplate annotation: "true"

  Jun 29 13:44:39.454: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-9767" for this suite. @ 06/29/24 13:44:39.457
â€¢ [0.049 seconds]
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 06/29/24 13:44:39.463
  Jun 29 13:44:39.463: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename container-probe @ 06/29/24 13:44:39.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:44:39.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:44:39.48
  E0629 13:44:40.275761      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:44:41.275857      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:44:42.275945      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:44:43.276751      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:44:44.277425      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:44:45.277551      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:44:46.278408      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:44:47.278910      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:44:48.279008      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:44:49.279273      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:44:50.279402      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:44:51.279434      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:44:52.280377      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:44:53.280736      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:44:54.281542      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:44:55.281649      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:44:56.281921      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:44:57.282104      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:44:58.283092      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:44:59.283906      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:45:00.284018      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:45:01.284697      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:45:02.285037      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:45:03.285332      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:45:04.285875      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:45:05.286102      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:45:06.287313      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:45:07.287660      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:45:08.288052      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:45:09.288223      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:45:10.289251      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:45:11.289886      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:45:12.290909      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:45:13.291470      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:45:14.292111      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:45:15.292658      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:45:16.293567      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:45:17.294296      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:45:18.294521      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:45:19.295263      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:45:20.295360      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:45:21.295660      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:45:22.296737      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:45:23.296818      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:45:24.297530      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:45:25.297776      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:45:26.298043      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:45:27.298148      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:45:28.298244      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:45:29.298482      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:45:30.299438      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:45:31.300435      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:45:32.301076      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:45:33.301160      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:45:34.301848      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:45:35.302827      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:45:36.302933      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:45:37.303762      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:45:38.304687      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:45:39.305400      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:45:39.497: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1814" for this suite. @ 06/29/24 13:45:39.5
â€¢ [60.047 seconds]
------------------------------
SSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 06/29/24 13:45:39.511
  Jun 29 13:45:39.511: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename dns @ 06/29/24 13:45:39.511
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:45:39.525
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:45:39.528
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 06/29/24 13:45:39.531
  Jun 29 13:45:39.540: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-7024  f2cdd8d7-33b2-4421-9fe0-7792f95bb993 38051 0 2024-06-29 13:45:39 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-06-29 13:45:39 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-ncg2t,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.47,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-ncg2t,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  E0629 13:45:40.306267      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:45:41.306378      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 06/29/24 13:45:41.552
  Jun 29 13:45:41.552: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-7024 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 29 13:45:41.552: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  Jun 29 13:45:41.552: INFO: ExecWithOptions: Clientset creation
  Jun 29 13:45:41.553: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-7024/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 06/29/24 13:45:41.616
  Jun 29 13:45:41.616: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-7024 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 29 13:45:41.616: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  Jun 29 13:45:41.616: INFO: ExecWithOptions: Clientset creation
  Jun 29 13:45:41.616: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-7024/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jun 29 13:45:41.673: INFO: Deleting pod test-dns-nameservers...
  Jun 29 13:45:41.685: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7024" for this suite. @ 06/29/24 13:45:41.691
â€¢ [2.187 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 06/29/24 13:45:41.698
  Jun 29 13:45:41.698: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename projected @ 06/29/24 13:45:41.699
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:45:41.715
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:45:41.718
  STEP: Creating configMap with name projected-configmap-test-volume-map-73defa85-e916-49da-886a-5f0aff9b0d29 @ 06/29/24 13:45:41.723
  STEP: Creating a pod to test consume configMaps @ 06/29/24 13:45:41.729
  E0629 13:45:42.306492      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:45:43.306691      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:45:44.307409      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:45:45.307585      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/29/24 13:45:45.753
  Jun 29 13:45:45.758: INFO: Trying to get logs from node ip-172-31-94-98 pod pod-projected-configmaps-f043f35a-7dd8-49da-a73f-fbe6bd1fa1ee container agnhost-container: <nil>
  STEP: delete the pod @ 06/29/24 13:45:45.775
  Jun 29 13:45:45.790: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3874" for this suite. @ 06/29/24 13:45:45.793
â€¢ [4.102 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:572
  STEP: Creating a kubernetes client @ 06/29/24 13:45:45.8
  Jun 29 13:45:45.800: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename job @ 06/29/24 13:45:45.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:45:45.816
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:45:45.82
  STEP: Creating a job @ 06/29/24 13:45:45.823
  STEP: Ensuring job reaches completions @ 06/29/24 13:45:45.827
  E0629 13:45:46.309051      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:45:47.309119      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:45:48.309212      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:45:49.309275      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:45:50.309978      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:45:51.310112      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:45:52.310177      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:45:53.310388      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:45:54.311361      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:45:55.311479      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:45:55.833: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-292" for this suite. @ 06/29/24 13:45:55.836
â€¢ [10.044 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 06/29/24 13:45:55.844
  Jun 29 13:45:55.844: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename watch @ 06/29/24 13:45:55.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:45:55.86
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:45:55.863
  STEP: getting a starting resourceVersion @ 06/29/24 13:45:55.868
  STEP: starting a background goroutine to produce watch events @ 06/29/24 13:45:55.87
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 06/29/24 13:45:55.87
  E0629 13:45:56.312166      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:45:57.312392      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:45:58.312652      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:45:58.653: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4386" for this suite. @ 06/29/24 13:45:58.701
â€¢ [2.909 seconds]
------------------------------
SSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 06/29/24 13:45:58.754
  Jun 29 13:45:58.754: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename taint-single-pod @ 06/29/24 13:45:58.754
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:45:58.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:45:58.77
  Jun 29 13:45:58.773: INFO: Waiting up to 1m0s for all nodes to be ready
  E0629 13:45:59.313447      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:00.314497      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:01.314608      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:02.314916      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:03.315022      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:04.315372      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:05.315866      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:06.316660      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:07.317026      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:08.317713      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:09.317827      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:10.317930      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:11.318411      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:12.319206      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:13.320106      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:14.320333      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:15.320735      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:16.321041      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:17.322118      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:18.322263      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:19.323278      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:20.323343      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:21.324057      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:22.324137      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:23.324726      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:24.325212      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:25.325409      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:26.325475      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:27.325796      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:28.325982      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:29.326609      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:30.326747      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:31.327759      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:32.328764      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:33.329599      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:34.330270      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:35.330444      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:36.330657      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:37.331720      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:38.331746      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:39.332775      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:40.332883      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:41.332962      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:42.333166      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:43.333476      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:44.333907      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:45.334553      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:46.334653      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:47.334762      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:48.335218      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:49.335363      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:50.335500      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:51.335661      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:52.335756      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:53.336723      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:54.337141      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:55.337206      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:56.337389      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:57.338439      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:46:58.338532      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:46:58.773: INFO: Waiting for terminating namespaces to be deleted...
  Jun 29 13:46:58.778: INFO: Starting informer...
  STEP: Starting pod... @ 06/29/24 13:46:58.778
  Jun 29 13:46:58.993: INFO: Pod is running on ip-172-31-94-98. Tainting Node
  STEP: Trying to apply a taint on the Node @ 06/29/24 13:46:58.993
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 06/29/24 13:46:59.005
  STEP: Waiting short time to make sure Pod is queued for deletion @ 06/29/24 13:46:59.009
  Jun 29 13:46:59.009: INFO: Pod wasn't evicted. Proceeding
  Jun 29 13:46:59.009: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 06/29/24 13:46:59.023
  STEP: Waiting some time to make sure that toleration time passed. @ 06/29/24 13:46:59.035
  E0629 13:46:59.339162      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:00.339237      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:01.339439      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:02.339516      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:03.339690      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:04.340753      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:05.340830      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:06.341014      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:07.341116      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:08.341222      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:09.341497      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:10.341610      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:11.341813      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:12.342024      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:13.342814      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:14.343333      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:15.343588      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:16.343692      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:17.344744      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:18.344945      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:19.345293      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:20.345500      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:21.345722      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:22.345928      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:23.346027      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:24.346427      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:25.346530      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:26.346717      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:27.346818      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:28.347013      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:29.347656      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:30.347735      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:31.347835      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:32.347940      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:33.348038      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:34.348916      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:35.349031      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:36.350090      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:37.350236      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:38.350332      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:39.350714      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:40.350956      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:41.351141      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:42.351329      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:43.351512      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:44.351919      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:45.352831      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:46.352926      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:47.353220      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:48.353372      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:49.353694      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:50.353786      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:51.353882      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:52.354459      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:53.355252      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:54.355317      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:55.355451      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:56.355665      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:57.355708      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:58.355995      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:47:59.356651      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:48:00.356762      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:48:01.356932      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:48:02.357124      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:48:03.357184      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:48:04.357887      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:48:05.357955      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:48:06.358147      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:48:07.358236      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:48:08.358326      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:48:09.358711      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:48:10.358812      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:48:11.359385      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:48:12.359479      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:48:13.359659      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:48:14.036: INFO: Pod wasn't evicted. Test successful
  Jun 29 13:48:14.036: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-7596" for this suite. @ 06/29/24 13:48:14.041
â€¢ [135.293 seconds]
------------------------------
S
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 06/29/24 13:48:14.047
  Jun 29 13:48:14.047: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename downward-api @ 06/29/24 13:48:14.048
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:48:14.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:48:14.065
  STEP: Creating a pod to test downward api env vars @ 06/29/24 13:48:14.068
  E0629 13:48:14.360230      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:48:15.360313      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:48:16.360415      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:48:17.360780      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/29/24 13:48:18.096
  Jun 29 13:48:18.101: INFO: Trying to get logs from node ip-172-31-94-98 pod downward-api-302af424-2878-4854-938d-1b96a102f126 container dapi-container: <nil>
  STEP: delete the pod @ 06/29/24 13:48:18.11
  Jun 29 13:48:18.124: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9940" for this suite. @ 06/29/24 13:48:18.127
â€¢ [4.088 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 06/29/24 13:48:18.135
  Jun 29 13:48:18.135: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename tables @ 06/29/24 13:48:18.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:48:18.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:48:18.153
  Jun 29 13:48:18.160: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-90" for this suite. @ 06/29/24 13:48:18.164
â€¢ [0.037 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 06/29/24 13:48:18.173
  Jun 29 13:48:18.173: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename csiinlinevolumes @ 06/29/24 13:48:18.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:48:18.185
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:48:18.189
  STEP: Creating two CSIDrivers @ 06/29/24 13:48:18.192
  STEP: Getting "inline-driver-f5bf38b6-49b0-4b16-91ce-e25d9719b90a" & "inline-driver-94fd849a-5aa9-4163-9147-bca8a60e2ece" @ 06/29/24 13:48:18.208
  STEP: Patching the CSIDriver "inline-driver-94fd849a-5aa9-4163-9147-bca8a60e2ece" @ 06/29/24 13:48:18.214
  STEP: Updating the CSIDriver "inline-driver-94fd849a-5aa9-4163-9147-bca8a60e2ece" @ 06/29/24 13:48:18.22
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-4761" @ 06/29/24 13:48:18.231
  STEP: Deleting CSIDriver "inline-driver-f5bf38b6-49b0-4b16-91ce-e25d9719b90a" @ 06/29/24 13:48:18.234
  STEP: Confirm deletion of CSIDriver "inline-driver-f5bf38b6-49b0-4b16-91ce-e25d9719b90a" @ 06/29/24 13:48:18.24
  STEP: Deleting CSIDriver "inline-driver-94fd849a-5aa9-4163-9147-bca8a60e2ece" via DeleteCollection @ 06/29/24 13:48:18.243
  STEP: Confirm deletion of CSIDriver "inline-driver-94fd849a-5aa9-4163-9147-bca8a60e2ece" @ 06/29/24 13:48:18.251
  Jun 29 13:48:18.255: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-4761" for this suite. @ 06/29/24 13:48:18.258
â€¢ [0.093 seconds]
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 06/29/24 13:48:18.266
  Jun 29 13:48:18.266: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename downward-api @ 06/29/24 13:48:18.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:48:18.278
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:48:18.281
  STEP: Creating a pod to test downward API volume plugin @ 06/29/24 13:48:18.284
  E0629 13:48:18.361372      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:48:19.361825      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:48:20.362073      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:48:21.362172      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/29/24 13:48:22.308
  Jun 29 13:48:22.312: INFO: Trying to get logs from node ip-172-31-94-98 pod downwardapi-volume-7d6bc824-3158-4d16-8e6a-7ffeea082901 container client-container: <nil>
  STEP: delete the pod @ 06/29/24 13:48:22.317
  Jun 29 13:48:22.334: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2000" for this suite. @ 06/29/24 13:48:22.338
â€¢ [4.080 seconds]
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 06/29/24 13:48:22.346
  Jun 29 13:48:22.346: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename taint-multiple-pods @ 06/29/24 13:48:22.346
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:48:22.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:48:22.362
  E0629 13:48:22.362145      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:48:22.367: INFO: Waiting up to 1m0s for all nodes to be ready
  E0629 13:48:23.362276      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:48:24.362351      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:48:25.362652      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:48:26.363658      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:48:27.363661      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:48:28.364753      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:48:29.365369      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:48:30.365478      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:48:31.365541      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:48:32.366396      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:48:33.367326      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:48:34.367329      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:48:35.367659      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:48:36.367751      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:48:37.368294      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:48:38.368558      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:48:39.369422      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:48:40.369507      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:48:41.370046      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:48:42.370009      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:48:43.370148      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:48:44.370392      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:48:45.371281      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:48:46.373407      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:48:47.373515      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:48:48.374423      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:48:49.374564      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:48:50.374546      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:48:51.374820      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:48:52.375613      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:48:53.375745      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:48:54.375996      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:48:55.376125      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:48:56.376874      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:48:57.377010      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:48:58.377505      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:48:59.377852      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:49:00.378408      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:49:01.378517      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:49:02.378815      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:49:03.378944      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:49:04.379908      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:49:05.380726      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:49:06.385791      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:49:07.385882      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:49:08.386432      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:49:09.386632      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:49:10.387638      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:49:11.387693      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:49:12.388491      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:49:13.388664      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:49:14.389280      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:49:15.389715      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:49:16.390648      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:49:17.391731      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:49:18.392618      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:49:19.392954      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:49:20.393680      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:49:21.393818      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:49:22.367: INFO: Waiting for terminating namespaces to be deleted...
  Jun 29 13:49:22.372: INFO: Starting informer...
  STEP: Starting pods... @ 06/29/24 13:49:22.372
  E0629 13:49:22.394441      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:49:22.591: INFO: Pod1 is running on ip-172-31-94-98. Tainting Node
  E0629 13:49:23.395297      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:49:24.395389      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:49:24.817: INFO: Pod2 is running on ip-172-31-94-98. Tainting Node
  STEP: Trying to apply a taint on the Node @ 06/29/24 13:49:24.817
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 06/29/24 13:49:24.826
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 06/29/24 13:49:24.833
  E0629 13:49:25.396362      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:49:26.396452      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:49:27.396537      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:49:28.396650      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:49:29.397384      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:49:30.398053      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:49:30.776: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  E0629 13:49:31.399050      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:49:32.399175      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:49:33.399228      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:49:34.399320      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:49:35.399510      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:49:36.399688      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:49:37.399785      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:49:38.400741      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:49:39.400819      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:49:40.401030      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:49:41.401262      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:49:42.401454      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:49:43.401657      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:49:44.402105      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:49:45.402340      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:49:46.402955      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:49:47.403100      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:49:48.403267      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:49:49.403404      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:49:50.404007      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:49:50.807: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 06/29/24 13:49:50.818
  Jun 29 13:49:50.823: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-5254" for this suite. @ 06/29/24 13:49:50.826
â€¢ [88.495 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 06/29/24 13:49:50.841
  Jun 29 13:49:50.841: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename emptydir @ 06/29/24 13:49:50.841
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:49:50.86
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:49:50.862
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 06/29/24 13:49:50.866
  E0629 13:49:51.404660      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:49:52.404767      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:49:53.404866      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:49:54.404940      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/29/24 13:49:54.891
  Jun 29 13:49:54.895: INFO: Trying to get logs from node ip-172-31-94-98 pod pod-f0ad433e-af4c-4d9d-bfb8-33ea599a8ed5 container test-container: <nil>
  STEP: delete the pod @ 06/29/24 13:49:54.907
  Jun 29 13:49:54.921: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-70" for this suite. @ 06/29/24 13:49:54.925
â€¢ [4.092 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 06/29/24 13:49:54.933
  Jun 29 13:49:54.933: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename sysctl @ 06/29/24 13:49:54.934
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:49:54.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:49:54.95
  STEP: Creating a pod with one valid and two invalid sysctls @ 06/29/24 13:49:54.953
  Jun 29 13:49:54.958: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-5588" for this suite. @ 06/29/24 13:49:54.962
â€¢ [0.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 06/29/24 13:49:54.969
  Jun 29 13:49:54.969: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename downward-api @ 06/29/24 13:49:54.969
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:49:54.983
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:49:54.986
  STEP: Creating the pod @ 06/29/24 13:49:54.989
  E0629 13:49:55.405070      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:49:56.405156      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:49:57.405245      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:49:57.536: INFO: Successfully updated pod "labelsupdatecbfb8b64-1d32-4097-9a0c-d1127c44758f"
  E0629 13:49:58.406117      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:49:59.406234      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:50:00.406237      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:50:01.406351      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:50:01.559: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9324" for this suite. @ 06/29/24 13:50:01.564
â€¢ [6.604 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 06/29/24 13:50:01.577
  Jun 29 13:50:01.577: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename sysctl @ 06/29/24 13:50:01.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:50:01.594
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:50:01.597
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 06/29/24 13:50:01.6
  STEP: Watching for error events or started pod @ 06/29/24 13:50:01.607
  E0629 13:50:02.406563      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:50:03.406671      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 06/29/24 13:50:03.613
  E0629 13:50:04.407634      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:50:05.407707      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Checking that the pod succeeded @ 06/29/24 13:50:05.626
  STEP: Getting logs from the pod @ 06/29/24 13:50:05.626
  STEP: Checking that the sysctl is actually updated @ 06/29/24 13:50:05.639
  Jun 29 13:50:05.639: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-3869" for this suite. @ 06/29/24 13:50:05.644
â€¢ [4.074 seconds]
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 06/29/24 13:50:05.651
  Jun 29 13:50:05.651: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename replicaset @ 06/29/24 13:50:05.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:50:05.668
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:50:05.67
  STEP: Create a Replicaset @ 06/29/24 13:50:05.678
  STEP: Verify that the required pods have come up. @ 06/29/24 13:50:05.684
  Jun 29 13:50:05.686: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0629 13:50:06.408750      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:50:07.409257      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:50:08.409360      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:50:09.410427      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:50:10.410615      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:50:10.692: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/29/24 13:50:10.692
  STEP: Getting /status @ 06/29/24 13:50:10.692
  Jun 29 13:50:10.695: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 06/29/24 13:50:10.695
  Jun 29 13:50:10.705: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 06/29/24 13:50:10.705
  Jun 29 13:50:10.707: INFO: Observed &ReplicaSet event: ADDED
  Jun 29 13:50:10.707: INFO: Observed &ReplicaSet event: MODIFIED
  Jun 29 13:50:10.708: INFO: Observed &ReplicaSet event: MODIFIED
  Jun 29 13:50:10.708: INFO: Observed &ReplicaSet event: MODIFIED
  Jun 29 13:50:10.708: INFO: Found replicaset test-rs in namespace replicaset-182 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jun 29 13:50:10.708: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 06/29/24 13:50:10.708
  Jun 29 13:50:10.708: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Jun 29 13:50:10.714: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 06/29/24 13:50:10.714
  Jun 29 13:50:10.716: INFO: Observed &ReplicaSet event: ADDED
  Jun 29 13:50:10.716: INFO: Observed &ReplicaSet event: MODIFIED
  Jun 29 13:50:10.716: INFO: Observed &ReplicaSet event: MODIFIED
  Jun 29 13:50:10.716: INFO: Observed &ReplicaSet event: MODIFIED
  Jun 29 13:50:10.716: INFO: Observed replicaset test-rs in namespace replicaset-182 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun 29 13:50:10.717: INFO: Observed &ReplicaSet event: MODIFIED
  Jun 29 13:50:10.717: INFO: Found replicaset test-rs in namespace replicaset-182 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Jun 29 13:50:10.717: INFO: Replicaset test-rs has a patched status
  Jun 29 13:50:10.717: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-182" for this suite. @ 06/29/24 13:50:10.72
â€¢ [5.074 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 06/29/24 13:50:10.726
  Jun 29 13:50:10.726: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename secrets @ 06/29/24 13:50:10.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:50:10.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:50:10.751
  STEP: Creating secret with name secret-test-map-3f422fdc-ac9e-4f70-bb59-7b18f056b995 @ 06/29/24 13:50:10.754
  STEP: Creating a pod to test consume secrets @ 06/29/24 13:50:10.759
  E0629 13:50:11.411093      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:50:12.411194      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:50:13.411282      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:50:14.411730      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/29/24 13:50:14.781
  Jun 29 13:50:14.784: INFO: Trying to get logs from node ip-172-31-94-98 pod pod-secrets-fdb16bcf-0722-49a2-bdef-75c2b43b87d4 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/29/24 13:50:14.791
  Jun 29 13:50:14.805: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2256" for this suite. @ 06/29/24 13:50:14.808
â€¢ [4.088 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 06/29/24 13:50:14.814
  Jun 29 13:50:14.814: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename downward-api @ 06/29/24 13:50:14.815
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:50:14.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:50:14.832
  STEP: Creating a pod to test downward API volume plugin @ 06/29/24 13:50:14.834
  E0629 13:50:15.412752      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:50:16.412859      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:50:17.412957      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:50:18.413053      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/29/24 13:50:18.857
  Jun 29 13:50:18.861: INFO: Trying to get logs from node ip-172-31-94-98 pod downwardapi-volume-1b250146-c929-47bc-86ea-e627415553e0 container client-container: <nil>
  STEP: delete the pod @ 06/29/24 13:50:18.869
  Jun 29 13:50:18.884: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3349" for this suite. @ 06/29/24 13:50:18.887
â€¢ [4.079 seconds]
------------------------------
S
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 06/29/24 13:50:18.894
  Jun 29 13:50:18.894: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename var-expansion @ 06/29/24 13:50:18.894
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:50:18.906
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:50:18.91
  STEP: creating the pod with failed condition @ 06/29/24 13:50:18.916
  E0629 13:50:19.413941      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:50:20.414621      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:50:21.415595      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:50:22.415740      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:50:23.415830      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:50:24.416298      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:50:25.416393      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:50:26.416510      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:50:27.417328      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:50:28.417526      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:50:29.418217      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:50:30.419274      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:50:31.419701      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:50:32.419776      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:50:33.420728      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:50:34.421724      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:50:35.421806      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:50:36.422035      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:50:37.422190      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:50:38.422300      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:50:39.423064      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:50:40.423353      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:50:41.423570      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:50:42.423689      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:50:43.424682      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:50:44.424789      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:50:45.424892      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:50:46.424938      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:50:47.425648      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:50:48.425771      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:50:49.426154      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:50:50.426394      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:50:51.426573      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:50:52.426711      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:50:53.427658      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:50:54.428187      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:50:55.428786      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:50:56.428887      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:50:57.428961      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:50:58.429167      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:50:59.429629      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:00.429922      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:01.430008      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:02.430212      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:03.431184      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:04.431394      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:05.432365      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:06.432816      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:07.433146      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:08.433361      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:09.434266      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:10.434371      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:11.434516      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:12.434710      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:13.434810      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:14.435274      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:15.435441      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:16.435665      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:17.436326      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:18.436753      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:19.437445      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:20.437560      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:21.438126      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:22.438380      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:23.438705      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:24.439301      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:25.439646      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:26.439674      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:27.439922      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:28.440018      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:29.441094      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:30.441179      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:31.441278      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:32.441466      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:33.442535      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:34.443511      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:35.443713      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:36.444775      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:37.445526      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:38.445638      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:39.445767      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:40.445994      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:41.446080      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:42.446173      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:43.446513      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:44.446942      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:45.446988      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:46.447131      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:47.447997      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:48.448159      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:49.448754      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:50.448850      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:51.449143      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:52.449583      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:53.449749      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:54.450389      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:55.450988      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:56.451120      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:57.451734      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:58.452859      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:51:59.453277      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:52:00.453422      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:52:01.453534      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:52:02.454138      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:52:03.454265      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:52:04.454787      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:52:05.455733      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:52:06.455825      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:52:07.456433      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:52:08.456718      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:52:09.457451      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:52:10.457635      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:52:11.458582      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:52:12.458896      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:52:13.458991      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:52:14.459098      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:52:15.460117      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:52:16.460728      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:52:17.460943      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:52:18.461497      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pod @ 06/29/24 13:52:18.924
  Jun 29 13:52:19.438: INFO: Successfully updated pod "var-expansion-17c97dc6-fcf5-48d1-8179-15a35edb9677"
  STEP: waiting for pod running @ 06/29/24 13:52:19.438
  E0629 13:52:19.462187      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:52:20.462395      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 06/29/24 13:52:21.446
  Jun 29 13:52:21.446: INFO: Deleting pod "var-expansion-17c97dc6-fcf5-48d1-8179-15a35edb9677" in namespace "var-expansion-7488"
  Jun 29 13:52:21.456: INFO: Wait up to 5m0s for pod "var-expansion-17c97dc6-fcf5-48d1-8179-15a35edb9677" to be fully deleted
  E0629 13:52:21.463307      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:52:22.463632      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:52:23.463866      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:52:24.464323      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:52:25.464362      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:52:26.464767      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:52:27.464866      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:52:28.464972      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:52:29.465424      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:52:30.465550      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:52:31.465689      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:52:32.465797      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:52:33.465911      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:52:34.466448      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:52:35.466719      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:52:36.466844      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:52:37.467001      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:52:38.467124      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:52:39.467516      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:52:40.467701      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:52:41.468759      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:52:42.468852      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:52:43.468951      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:52:44.469459      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:52:45.469749      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:52:46.469880      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:52:47.470191      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:52:48.470284      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:52:49.470391      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:52:50.470491      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:52:51.470686      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:52:52.470888      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:52:53.471197      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:52:53.543: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7488" for this suite. @ 06/29/24 13:52:53.548
â€¢ [154.661 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 06/29/24 13:52:53.555
  Jun 29 13:52:53.555: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename var-expansion @ 06/29/24 13:52:53.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:52:53.566
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:52:53.569
  E0629 13:52:54.472240      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:52:55.472282      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:52:55.592: INFO: Deleting pod "var-expansion-c3f3acf3-bcfb-4ee9-a758-05b1f43d2c05" in namespace "var-expansion-8476"
  Jun 29 13:52:55.600: INFO: Wait up to 5m0s for pod "var-expansion-c3f3acf3-bcfb-4ee9-a758-05b1f43d2c05" to be fully deleted
  E0629 13:52:56.473146      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:52:57.473361      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:52:57.611: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8476" for this suite. @ 06/29/24 13:52:57.616
â€¢ [4.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 06/29/24 13:52:57.624
  Jun 29 13:52:57.624: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/29/24 13:52:57.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:52:57.639
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:52:57.643
  Jun 29 13:52:57.646: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  E0629 13:52:58.473885      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:52:59.474328      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:53:00.475189      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:53:01.475232      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:53:02.475966      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:53:03.469: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4652" for this suite. @ 06/29/24 13:53:03.473
  E0629 13:53:03.476665      18 retrywatcher.go:129] "Watch failed" err="context canceled"
â€¢ [5.856 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 06/29/24 13:53:03.481
  Jun 29 13:53:03.481: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename pods @ 06/29/24 13:53:03.481
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:53:03.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:53:03.498
  STEP: creating the pod @ 06/29/24 13:53:03.5
  STEP: submitting the pod to kubernetes @ 06/29/24 13:53:03.501
  E0629 13:53:04.476813      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:53:05.476913      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 06/29/24 13:53:05.52
  STEP: updating the pod @ 06/29/24 13:53:05.523
  Jun 29 13:53:06.036: INFO: Successfully updated pod "pod-update-dd399b30-a1a1-45a7-8de1-772f10bd8664"
  STEP: verifying the updated pod is in kubernetes @ 06/29/24 13:53:06.04
  Jun 29 13:53:06.046: INFO: Pod update OK
  Jun 29 13:53:06.046: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3563" for this suite. @ 06/29/24 13:53:06.049
â€¢ [2.574 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 06/29/24 13:53:06.055
  Jun 29 13:53:06.055: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename webhook @ 06/29/24 13:53:06.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:53:06.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:53:06.075
  STEP: Setting up server cert @ 06/29/24 13:53:06.096
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/29/24 13:53:06.171
  STEP: Deploying the webhook pod @ 06/29/24 13:53:06.178
  STEP: Wait for the deployment to be ready @ 06/29/24 13:53:06.19
  Jun 29 13:53:06.208: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0629 13:53:06.477288      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:53:07.477232      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/29/24 13:53:08.218
  STEP: Verifying the service has paired with the endpoint @ 06/29/24 13:53:08.234
  E0629 13:53:08.477374      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:53:09.234: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 06/29/24 13:53:09.24
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 06/29/24 13:53:09.255
  STEP: Creating a configMap that should not be mutated @ 06/29/24 13:53:09.263
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 06/29/24 13:53:09.275
  STEP: Creating a configMap that should be mutated @ 06/29/24 13:53:09.281
  Jun 29 13:53:09.340: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9733" for this suite. @ 06/29/24 13:53:09.343
  STEP: Destroying namespace "webhook-markers-5838" for this suite. @ 06/29/24 13:53:09.351
â€¢ [3.304 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 06/29/24 13:53:09.359
  Jun 29 13:53:09.359: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename deployment @ 06/29/24 13:53:09.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:53:09.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:53:09.382
  Jun 29 13:53:09.394: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  E0629 13:53:09.477819      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:53:10.477909      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:53:11.477986      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:53:12.478095      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:53:13.478265      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:53:14.398: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/29/24 13:53:14.398
  Jun 29 13:53:14.398: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 06/29/24 13:53:14.408
  Jun 29 13:53:14.420: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1060",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9888ebb5-4ac7-4444-afad-61fbd1fbc429",
      ResourceVersion: (string) (len=5) "40047",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855265994,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855265994,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun 29 13:53:14.429: INFO: New ReplicaSet "test-cleanup-deployment-7bc75bbdf6" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-7bc75bbdf6",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1060",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9f9a934b-4fa5-4639-b3e5-3f8324cc71ac",
      ResourceVersion: (string) (len=5) "40050",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855265994,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "9888ebb5-4ac7-4444-afad-61fbd1fbc429",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855265994,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 38 38 38 65 62  62 35 2d 34 61 63 37 2d  |\"9888ebb5-4ac7-|
              00000120  34 34 34 34 2d 61 66 61  64 2d 36 31 66 62 64 31  |4444-afad-61fbd1|
              00000130  66 62 63 34 32 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |fbc429\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 0,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 29 13:53:14.432: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
  Jun 29 13:53:14.432: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1060",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c9b64825-f695-4c34-9ba1-d6fe4634e686",
      ResourceVersion: (string) (len=5) "40048",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855265989,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "9888ebb5-4ac7-4444-afad-61fbd1fbc429",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855265989,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855265990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855265994,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 39 38 38 38 65 62 62  |"uid\":\"9888ebb|
              00000040  35 2d 34 61 63 37 2d 34  34 34 34 2d 61 66 61 64  |5-4ac7-4444-afad|
              00000050  2d 36 31 66 62 64 31 66  62 63 34 32 39 5c 22 7d  |-61fbd1fbc429\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 29 13:53:14.437: INFO: Pod "test-cleanup-controller-8htw6" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-8htw6",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-1060",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "53e97c44-6d24-48a2-b8aa-fa1084273943",
      ResourceVersion: (string) (len=5) "40017",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855265989,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "c9b64825-f695-4c34-9ba1-d6fe4634e686",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855265989,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  63 39 62 36 34 38 32 35  |uid\":\"c9b64825|
              00000080  2d 66 36 39 35 2d 34 63  33 34 2d 39 62 61 31 2d  |-f695-4c34-9ba1-|
              00000090  64 36 66 65 34 36 33 34  65 36 38 36 5c 22 7d 22  |d6fe4634e686\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855265990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 34 31  2e 38 35 5c 22 7d 22 3a  |2.168.41.85\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xc4d6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xc4d6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-10-28",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855265990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855265989,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855265990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855265990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855265989,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.10.28",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.10.28"
        }
      },
      PodIP: (string) (len=13) "192.168.41.85",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.41.85"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855265989,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855265989,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://67a7e37389471fc3b7c8c6ea09818448a9521b0f3ba84c0ef6b2893d1c214be2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 29 13:53:14.439: INFO: Pod "test-cleanup-deployment-7bc75bbdf6-jl9bf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-7bc75bbdf6-jl9bf",
      GenerateName: (string) (len=35) "test-cleanup-deployment-7bc75bbdf6-",
      Namespace: (string) (len=15) "deployment-1060",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "647a5d6f-45c7-4a68-87c5-fdd77b459f7a",
      ResourceVersion: (string) (len=5) "40054",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855265994,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-7bc75bbdf6",
          UID: (types.UID) (len=36) "9f9a934b-4fa5-4639-b3e5-3f8324cc71ac",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855265994,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 66  39 61 39 33 34 62 2d 34  |d\":\"9f9a934b-4|
              00000090  66 61 35 2d 34 36 33 39  2d 62 33 65 35 2d 33 66  |fa5-4639-b3e5-3f|
              000000a0  38 33 32 34 63 63 37 31  61 63 5c 22 7d 22 3a 7b  |8324cc71ac\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-d5xf7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-d5xf7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 29 13:53:14.439: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1060" for this suite. @ 06/29/24 13:53:14.449
â€¢ [5.102 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:453
  STEP: Creating a kubernetes client @ 06/29/24 13:53:14.462
  Jun 29 13:53:14.462: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename resourcequota @ 06/29/24 13:53:14.462
  E0629 13:53:14.478227      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:53:14.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:53:14.481
  STEP: Counting existing ResourceQuota @ 06/29/24 13:53:14.484
  E0629 13:53:15.478377      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:53:16.479341      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:53:17.479419      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:53:18.479855      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:53:19.480655      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 06/29/24 13:53:19.488
  STEP: Ensuring resource quota status is calculated @ 06/29/24 13:53:19.493
  E0629 13:53:20.480881      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:53:21.480981      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 06/29/24 13:53:21.499
  STEP: Ensuring resource quota status captures replicaset creation @ 06/29/24 13:53:21.51
  E0629 13:53:22.481905      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:53:23.482006      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 06/29/24 13:53:23.515
  STEP: Ensuring resource quota status released usage @ 06/29/24 13:53:23.522
  E0629 13:53:24.482526      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:53:25.482742      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:53:25.527: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4071" for this suite. @ 06/29/24 13:53:25.53
â€¢ [11.077 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1015
  STEP: Creating a kubernetes client @ 06/29/24 13:53:25.539
  Jun 29 13:53:25.539: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename resourcequota @ 06/29/24 13:53:25.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:53:25.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:53:25.556
  STEP: Creating resourceQuota "e2e-rq-status-xp7wl" @ 06/29/24 13:53:25.563
  Jun 29 13:53:25.569: INFO: Resource quota "e2e-rq-status-xp7wl" reports spec: hard cpu limit of 500m
  Jun 29 13:53:25.569: INFO: Resource quota "e2e-rq-status-xp7wl" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-xp7wl" /status @ 06/29/24 13:53:25.569
  STEP: Confirm /status for "e2e-rq-status-xp7wl" resourceQuota via watch @ 06/29/24 13:53:25.577
  Jun 29 13:53:25.579: INFO: observed resourceQuota "e2e-rq-status-xp7wl" in namespace "resourcequota-1269" with hard status: v1.ResourceList(nil)
  Jun 29 13:53:25.579: INFO: Found resourceQuota "e2e-rq-status-xp7wl" in namespace "resourcequota-1269" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Jun 29 13:53:25.579: INFO: ResourceQuota "e2e-rq-status-xp7wl" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 06/29/24 13:53:25.583
  Jun 29 13:53:25.588: INFO: Resource quota "e2e-rq-status-xp7wl" reports spec: hard cpu limit of 1
  Jun 29 13:53:25.588: INFO: Resource quota "e2e-rq-status-xp7wl" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-xp7wl" /status @ 06/29/24 13:53:25.588
  STEP: Confirm /status for "e2e-rq-status-xp7wl" resourceQuota via watch @ 06/29/24 13:53:25.596
  Jun 29 13:53:25.597: INFO: observed resourceQuota "e2e-rq-status-xp7wl" in namespace "resourcequota-1269" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Jun 29 13:53:25.597: INFO: Found resourceQuota "e2e-rq-status-xp7wl" in namespace "resourcequota-1269" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Jun 29 13:53:25.597: INFO: ResourceQuota "e2e-rq-status-xp7wl" /status was patched
  STEP: Get "e2e-rq-status-xp7wl" /status @ 06/29/24 13:53:25.597
  Jun 29 13:53:25.600: INFO: Resourcequota "e2e-rq-status-xp7wl" reports status: hard cpu of 1
  Jun 29 13:53:25.600: INFO: Resourcequota "e2e-rq-status-xp7wl" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-xp7wl" /status before checking Spec is unchanged @ 06/29/24 13:53:25.605
  Jun 29 13:53:25.611: INFO: Resourcequota "e2e-rq-status-xp7wl" reports status: hard cpu of 2
  Jun 29 13:53:25.611: INFO: Resourcequota "e2e-rq-status-xp7wl" reports status: hard memory of 2Gi
  Jun 29 13:53:25.612: INFO: Found resourceQuota "e2e-rq-status-xp7wl" in namespace "resourcequota-1269" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  Jun 29 13:53:25.615: INFO: ResourceQuota "e2e-rq-status-xp7wl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xp7wl", GenerateName:"", Namespace:"resourcequota-1269", SelfLink:"", UID:"a4e1ce44-f8b4-495f-a8c3-fdd7fdf40e8b", ResourceVersion:"40154", Generation:0, CreationTimestamp:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xp7wl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045d6d08), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045d6d80), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045d6db0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0629 13:53:26.482879      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:53:27.482982      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:53:28.483252      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:53:29.483352      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:53:30.483469      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:53:30.617: INFO: ResourceQuota "e2e-rq-status-xp7wl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xp7wl", GenerateName:"", Namespace:"resourcequota-1269", SelfLink:"", UID:"a4e1ce44-f8b4-495f-a8c3-fdd7fdf40e8b", ResourceVersion:"40154", Generation:0, CreationTimestamp:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xp7wl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045d72c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045d72f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045d7338), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0629 13:53:31.483785      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:53:32.484778      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:53:33.484977      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:53:34.485092      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:53:35.485157      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:53:35.617: INFO: ResourceQuota "e2e-rq-status-xp7wl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xp7wl", GenerateName:"", Namespace:"resourcequota-1269", SelfLink:"", UID:"a4e1ce44-f8b4-495f-a8c3-fdd7fdf40e8b", ResourceVersion:"40154", Generation:0, CreationTimestamp:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xp7wl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005ca0ba0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005ca0c00), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005ca0c48), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0629 13:53:36.485288      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:53:37.485547      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:53:38.485731      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:53:39.486129      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:53:40.486253      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:53:40.617: INFO: ResourceQuota "e2e-rq-status-xp7wl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xp7wl", GenerateName:"", Namespace:"resourcequota-1269", SelfLink:"", UID:"a4e1ce44-f8b4-495f-a8c3-fdd7fdf40e8b", ResourceVersion:"40154", Generation:0, CreationTimestamp:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xp7wl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005ca1710), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005ca1758), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005ca17a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0629 13:53:41.486630      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:53:42.486702      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:53:43.486940      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:53:44.487467      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:53:45.487701      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:53:45.619: INFO: ResourceQuota "e2e-rq-status-xp7wl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xp7wl", GenerateName:"", Namespace:"resourcequota-1269", SelfLink:"", UID:"a4e1ce44-f8b4-495f-a8c3-fdd7fdf40e8b", ResourceVersion:"40154", Generation:0, CreationTimestamp:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xp7wl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045d7a40), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045d7aa0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045d7ad0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0629 13:53:46.487718      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:53:47.487818      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:53:48.487991      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:53:49.488448      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:53:50.488549      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:53:50.617: INFO: ResourceQuota "e2e-rq-status-xp7wl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xp7wl", GenerateName:"", Namespace:"resourcequota-1269", SelfLink:"", UID:"a4e1ce44-f8b4-495f-a8c3-fdd7fdf40e8b", ResourceVersion:"40154", Generation:0, CreationTimestamp:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xp7wl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012b83d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012b8438), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012b8498), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0629 13:53:51.488655      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:53:52.488745      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:53:53.488808      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:53:54.489288      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:53:55.489380      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:53:55.617: INFO: ResourceQuota "e2e-rq-status-xp7wl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xp7wl", GenerateName:"", Namespace:"resourcequota-1269", SelfLink:"", UID:"a4e1ce44-f8b4-495f-a8c3-fdd7fdf40e8b", ResourceVersion:"40154", Generation:0, CreationTimestamp:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xp7wl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045d7f80), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045d7fb0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045d7fe0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0629 13:53:56.489489      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:53:57.489701      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:53:58.489775      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:53:59.489901      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:54:00.490592      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:54:00.618: INFO: ResourceQuota "e2e-rq-status-xp7wl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xp7wl", GenerateName:"", Namespace:"resourcequota-1269", SelfLink:"", UID:"a4e1ce44-f8b4-495f-a8c3-fdd7fdf40e8b", ResourceVersion:"40154", Generation:0, CreationTimestamp:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xp7wl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00429c558), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00429c588), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00429c5e8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0629 13:54:01.490732      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:54:02.491723      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:54:03.491858      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:54:04.492560      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:54:05.492706      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:54:05.617: INFO: ResourceQuota "e2e-rq-status-xp7wl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xp7wl", GenerateName:"", Namespace:"resourcequota-1269", SelfLink:"", UID:"a4e1ce44-f8b4-495f-a8c3-fdd7fdf40e8b", ResourceVersion:"40154", Generation:0, CreationTimestamp:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xp7wl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00429caf8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00429cb58), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00429cb88), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0629 13:54:06.492841      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:54:07.493072      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:54:08.493265      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:54:09.493350      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:54:10.493554      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:54:10.618: INFO: ResourceQuota "e2e-rq-status-xp7wl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xp7wl", GenerateName:"", Namespace:"resourcequota-1269", SelfLink:"", UID:"a4e1ce44-f8b4-495f-a8c3-fdd7fdf40e8b", ResourceVersion:"40154", Generation:0, CreationTimestamp:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xp7wl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012b8b88), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012b8c00), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012b8c48), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0629 13:54:11.494126      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:54:12.494243      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:54:13.494454      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:54:14.494634      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:54:15.494761      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:54:15.618: INFO: ResourceQuota "e2e-rq-status-xp7wl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xp7wl", GenerateName:"", Namespace:"resourcequota-1269", SelfLink:"", UID:"a4e1ce44-f8b4-495f-a8c3-fdd7fdf40e8b", ResourceVersion:"40154", Generation:0, CreationTimestamp:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xp7wl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00429d4e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00429d518), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00429d578), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0629 13:54:16.494995      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:54:17.495071      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:54:18.495189      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:54:19.495681      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:54:20.495703      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:54:20.617: INFO: ResourceQuota "e2e-rq-status-xp7wl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xp7wl", GenerateName:"", Namespace:"resourcequota-1269", SelfLink:"", UID:"a4e1ce44-f8b4-495f-a8c3-fdd7fdf40e8b", ResourceVersion:"40154", Generation:0, CreationTimestamp:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xp7wl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00429dab8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00429dae8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00429dc50), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0629 13:54:21.496759      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:54:22.496876      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:54:23.497301      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:54:24.497443      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:54:25.497538      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:54:25.619: INFO: ResourceQuota "e2e-rq-status-xp7wl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xp7wl", GenerateName:"", Namespace:"resourcequota-1269", SelfLink:"", UID:"a4e1ce44-f8b4-495f-a8c3-fdd7fdf40e8b", ResourceVersion:"40154", Generation:0, CreationTimestamp:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xp7wl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004034150), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004034198), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004034240), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0629 13:54:26.497776      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:54:27.497848      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:54:28.497940      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:54:29.498859      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:54:30.498940      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:54:30.617: INFO: ResourceQuota "e2e-rq-status-xp7wl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xp7wl", GenerateName:"", Namespace:"resourcequota-1269", SelfLink:"", UID:"a4e1ce44-f8b4-495f-a8c3-fdd7fdf40e8b", ResourceVersion:"40154", Generation:0, CreationTimestamp:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xp7wl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004034a20), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004034a98), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004034ae0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0629 13:54:31.499124      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:54:32.499341      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:54:33.499933      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:54:34.500475      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:54:35.500974      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:54:35.617: INFO: ResourceQuota "e2e-rq-status-xp7wl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xp7wl", GenerateName:"", Namespace:"resourcequota-1269", SelfLink:"", UID:"a4e1ce44-f8b4-495f-a8c3-fdd7fdf40e8b", ResourceVersion:"40154", Generation:0, CreationTimestamp:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xp7wl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040350e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004035260), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040352c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0629 13:54:36.501036      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:54:37.501129      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:54:38.501221      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:54:39.501312      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:54:40.501388      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:54:40.618: INFO: ResourceQuota "e2e-rq-status-xp7wl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xp7wl", GenerateName:"", Namespace:"resourcequota-1269", SelfLink:"", UID:"a4e1ce44-f8b4-495f-a8c3-fdd7fdf40e8b", ResourceVersion:"40154", Generation:0, CreationTimestamp:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xp7wl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012b9878), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012b98c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012b9938), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0629 13:54:41.501500      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:54:42.501770      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:54:43.502520      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:54:44.502638      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:54:45.502883      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:54:45.616: INFO: ResourceQuota "e2e-rq-status-xp7wl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xp7wl", GenerateName:"", Namespace:"resourcequota-1269", SelfLink:"", UID:"a4e1ce44-f8b4-495f-a8c3-fdd7fdf40e8b", ResourceVersion:"40154", Generation:0, CreationTimestamp:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xp7wl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012b9d70), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012b9db8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012b9e18), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0629 13:54:46.503355      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:54:47.504217      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:54:48.504290      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:54:49.504434      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:54:50.504716      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:54:50.617: INFO: ResourceQuota "e2e-rq-status-xp7wl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xp7wl", GenerateName:"", Namespace:"resourcequota-1269", SelfLink:"", UID:"a4e1ce44-f8b4-495f-a8c3-fdd7fdf40e8b", ResourceVersion:"40154", Generation:0, CreationTimestamp:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xp7wl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e4e1c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e4e1f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e4e270), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0629 13:54:51.504815      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:54:52.504916      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:54:53.504985      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:54:54.505559      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:54:55.506479      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:54:55.618: INFO: ResourceQuota "e2e-rq-status-xp7wl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xp7wl", GenerateName:"", Namespace:"resourcequota-1269", SelfLink:"", UID:"a4e1ce44-f8b4-495f-a8c3-fdd7fdf40e8b", ResourceVersion:"40154", Generation:0, CreationTimestamp:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xp7wl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e4e678), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e4e6c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e4e720), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0629 13:54:56.506927      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:54:57.507126      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:54:58.507348      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:54:59.507498      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:55:00.507687      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:55:00.618: INFO: ResourceQuota "e2e-rq-status-xp7wl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xp7wl", GenerateName:"", Namespace:"resourcequota-1269", SelfLink:"", UID:"a4e1ce44-f8b4-495f-a8c3-fdd7fdf40e8b", ResourceVersion:"40154", Generation:0, CreationTimestamp:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xp7wl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e4ea80), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e4eae0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e4eb10), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0629 13:55:01.508090      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:55:02.508295      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:55:03.508356      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:55:04.508726      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:55:05.508822      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:55:05.617: INFO: ResourceQuota "e2e-rq-status-xp7wl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xp7wl", GenerateName:"", Namespace:"resourcequota-1269", SelfLink:"", UID:"a4e1ce44-f8b4-495f-a8c3-fdd7fdf40e8b", ResourceVersion:"40154", Generation:0, CreationTimestamp:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xp7wl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c9a090), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c9a0c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c9a0f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0629 13:55:06.509034      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:55:07.509222      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:55:08.509200      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:55:09.509320      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:55:10.509492      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:55:10.619: INFO: ResourceQuota "e2e-rq-status-xp7wl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xp7wl", GenerateName:"", Namespace:"resourcequota-1269", SelfLink:"", UID:"a4e1ce44-f8b4-495f-a8c3-fdd7fdf40e8b", ResourceVersion:"40154", Generation:0, CreationTimestamp:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xp7wl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e4e198), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e4e1c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e4e1f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0629 13:55:11.510102      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:55:12.510192      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:55:13.510403      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:55:14.510992      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:55:15.511154      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:55:15.617: INFO: ResourceQuota "e2e-rq-status-xp7wl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xp7wl", GenerateName:"", Namespace:"resourcequota-1269", SelfLink:"", UID:"a4e1ce44-f8b4-495f-a8c3-fdd7fdf40e8b", ResourceVersion:"40154", Generation:0, CreationTimestamp:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xp7wl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c9a270), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c9a2a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c9a2d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0629 13:55:16.511236      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:55:17.511421      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:55:18.511665      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:55:19.512734      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:55:20.512939      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:55:20.617: INFO: ResourceQuota "e2e-rq-status-xp7wl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xp7wl", GenerateName:"", Namespace:"resourcequota-1269", SelfLink:"", UID:"a4e1ce44-f8b4-495f-a8c3-fdd7fdf40e8b", ResourceVersion:"40154", Generation:0, CreationTimestamp:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xp7wl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c9a480), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c9a4b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c9a4e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0629 13:55:21.513033      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:55:22.513183      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:55:23.513429      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:55:24.513854      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:55:25.514013      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:55:25.619: INFO: ResourceQuota "e2e-rq-status-xp7wl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xp7wl", GenerateName:"", Namespace:"resourcequota-1269", SelfLink:"", UID:"a4e1ce44-f8b4-495f-a8c3-fdd7fdf40e8b", ResourceVersion:"40154", Generation:0, CreationTimestamp:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xp7wl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e4eaf8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e4eb40), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e4eba0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0629 13:55:26.514126      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:55:27.514358      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:55:28.514544      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:55:29.515040      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:55:30.515248      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:55:30.617: INFO: ResourceQuota "e2e-rq-status-xp7wl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xp7wl", GenerateName:"", Namespace:"resourcequota-1269", SelfLink:"", UID:"a4e1ce44-f8b4-495f-a8c3-fdd7fdf40e8b", ResourceVersion:"40154", Generation:0, CreationTimestamp:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xp7wl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c9a720), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c9a750), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c9a780), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0629 13:55:31.515371      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:55:32.515576      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:55:33.515659      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:55:34.515766      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:55:35.516749      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:55:35.618: INFO: ResourceQuota "e2e-rq-status-xp7wl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xp7wl", GenerateName:"", Namespace:"resourcequota-1269", SelfLink:"", UID:"a4e1ce44-f8b4-495f-a8c3-fdd7fdf40e8b", ResourceVersion:"40154", Generation:0, CreationTimestamp:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xp7wl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c9a9f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c9aa20), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c9aa50), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0629 13:55:36.517394      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:55:37.517617      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:55:38.517849      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:55:39.517937      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:55:40.518180      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:55:40.618: INFO: ResourceQuota "e2e-rq-status-xp7wl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xp7wl", GenerateName:"", Namespace:"resourcequota-1269", SelfLink:"", UID:"a4e1ce44-f8b4-495f-a8c3-fdd7fdf40e8b", ResourceVersion:"40154", Generation:0, CreationTimestamp:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xp7wl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c9ac30), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c9ac60), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c9ac90), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0629 13:55:41.519206      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:55:42.519891      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:55:43.520750      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:55:44.521381      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:55:45.521540      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:55:45.617: INFO: ResourceQuota "e2e-rq-status-xp7wl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xp7wl", GenerateName:"", Namespace:"resourcequota-1269", SelfLink:"", UID:"a4e1ce44-f8b4-495f-a8c3-fdd7fdf40e8b", ResourceVersion:"40154", Generation:0, CreationTimestamp:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xp7wl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e4f320), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e4f350), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e4f398), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0629 13:55:46.521929      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:55:47.522124      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:55:48.522387      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:55:49.523489      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:55:50.523669      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:55:50.617: INFO: ResourceQuota "e2e-rq-status-xp7wl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xp7wl", GenerateName:"", Namespace:"resourcequota-1269", SelfLink:"", UID:"a4e1ce44-f8b4-495f-a8c3-fdd7fdf40e8b", ResourceVersion:"40154", Generation:0, CreationTimestamp:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xp7wl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c9b050), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c9b080), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c9b0b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0629 13:55:51.523700      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:55:52.524720      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:55:53.524828      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:55:54.525852      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:55:55.526021      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:55:55.618: INFO: ResourceQuota "e2e-rq-status-xp7wl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xp7wl", GenerateName:"", Namespace:"resourcequota-1269", SelfLink:"", UID:"a4e1ce44-f8b4-495f-a8c3-fdd7fdf40e8b", ResourceVersion:"40154", Generation:0, CreationTimestamp:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xp7wl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c9b290), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c9b2c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c9b2f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0629 13:55:56.526127      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:55:57.526270      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:55:58.526435      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:55:59.527352      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:56:00.527444      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:56:00.617: INFO: ResourceQuota "e2e-rq-status-xp7wl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xp7wl", GenerateName:"", Namespace:"resourcequota-1269", SelfLink:"", UID:"a4e1ce44-f8b4-495f-a8c3-fdd7fdf40e8b", ResourceVersion:"40154", Generation:0, CreationTimestamp:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xp7wl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e4f9f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e4fa40), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e4fa70), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0629 13:56:01.527667      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:56:02.527755      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:56:03.528691      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:56:04.528783      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:56:05.529241      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:56:05.619: INFO: ResourceQuota "e2e-rq-status-xp7wl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xp7wl", GenerateName:"", Namespace:"resourcequota-1269", SelfLink:"", UID:"a4e1ce44-f8b4-495f-a8c3-fdd7fdf40e8b", ResourceVersion:"40154", Generation:0, CreationTimestamp:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xp7wl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c9b608), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c9b638), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c9b668), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0629 13:56:06.529478      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:56:07.529572      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:56:08.529781      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:56:09.529866      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:56:10.529957      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:56:10.616: INFO: ResourceQuota "e2e-rq-status-xp7wl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xp7wl", GenerateName:"", Namespace:"resourcequota-1269", SelfLink:"", UID:"a4e1ce44-f8b4-495f-a8c3-fdd7fdf40e8b", ResourceVersion:"40154", Generation:0, CreationTimestamp:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xp7wl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e4fde8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e4fe48), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e4fed8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0629 13:56:11.530057      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:56:12.530963      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:56:13.531054      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:56:14.531503      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:56:15.531663      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:56:15.618: INFO: ResourceQuota "e2e-rq-status-xp7wl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xp7wl", GenerateName:"", Namespace:"resourcequota-1269", SelfLink:"", UID:"a4e1ce44-f8b4-495f-a8c3-fdd7fdf40e8b", ResourceVersion:"40154", Generation:0, CreationTimestamp:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xp7wl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c9b9e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c9ba10), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c9ba40), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0629 13:56:16.532735      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:56:17.532878      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:56:18.533076      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:56:19.533149      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:56:20.533339      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:56:20.619: INFO: ResourceQuota "e2e-rq-status-xp7wl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xp7wl", GenerateName:"", Namespace:"resourcequota-1269", SelfLink:"", UID:"a4e1ce44-f8b4-495f-a8c3-fdd7fdf40e8b", ResourceVersion:"40154", Generation:0, CreationTimestamp:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xp7wl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004660330), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046603a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046603d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0629 13:56:21.534119      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:56:22.534309      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:56:23.534432      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:56:24.534872      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:56:25.535959      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:56:25.617: INFO: ResourceQuota "e2e-rq-status-xp7wl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xp7wl", GenerateName:"", Namespace:"resourcequota-1269", SelfLink:"", UID:"a4e1ce44-f8b4-495f-a8c3-fdd7fdf40e8b", ResourceVersion:"40154", Generation:0, CreationTimestamp:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xp7wl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004660840), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004660870), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046608b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0629 13:56:26.536740      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:56:27.536862      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:56:28.536937      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:56:29.537044      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:56:30.537866      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:56:30.617: INFO: ResourceQuota "e2e-rq-status-xp7wl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xp7wl", GenerateName:"", Namespace:"resourcequota-1269", SelfLink:"", UID:"a4e1ce44-f8b4-495f-a8c3-fdd7fdf40e8b", ResourceVersion:"40154", Generation:0, CreationTimestamp:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xp7wl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c9bd28), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c9bd58), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c9bd88), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0629 13:56:31.538313      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:56:32.539177      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:56:33.539270      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:56:34.539365      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:56:35.539579      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:56:35.619: INFO: ResourceQuota "e2e-rq-status-xp7wl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xp7wl", GenerateName:"", Namespace:"resourcequota-1269", SelfLink:"", UID:"a4e1ce44-f8b4-495f-a8c3-fdd7fdf40e8b", ResourceVersion:"40154", Generation:0, CreationTimestamp:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xp7wl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004132090), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041320d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004132120), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0629 13:56:36.539728      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:56:37.539762      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:56:38.540722      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:56:39.541582      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:56:40.541793      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:56:40.617: INFO: ResourceQuota "e2e-rq-status-xp7wl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xp7wl", GenerateName:"", Namespace:"resourcequota-1269", SelfLink:"", UID:"a4e1ce44-f8b4-495f-a8c3-fdd7fdf40e8b", ResourceVersion:"40154", Generation:0, CreationTimestamp:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xp7wl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004132510), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004132570), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041325b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0629 13:56:41.541900      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:56:42.541999      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:56:43.542124      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:56:44.542257      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:56:45.542446      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:56:45.617: INFO: ResourceQuota "e2e-rq-status-xp7wl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xp7wl", GenerateName:"", Namespace:"resourcequota-1269", SelfLink:"", UID:"a4e1ce44-f8b4-495f-a8c3-fdd7fdf40e8b", ResourceVersion:"40154", Generation:0, CreationTimestamp:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xp7wl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004132918), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004132960), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041329d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0629 13:56:46.542858      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:56:47.543804      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:56:48.543898      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:56:49.544764      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:56:50.544887      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:56:50.618: INFO: ResourceQuota "e2e-rq-status-xp7wl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xp7wl", GenerateName:"", Namespace:"resourcequota-1269", SelfLink:"", UID:"a4e1ce44-f8b4-495f-a8c3-fdd7fdf40e8b", ResourceVersion:"40154", Generation:0, CreationTimestamp:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xp7wl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046613f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004661440), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046614a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0629 13:56:51.544993      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:56:52.546078      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:56:53.546948      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:56:54.547047      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:56:55.547251      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:56:55.617: INFO: ResourceQuota "e2e-rq-status-xp7wl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xp7wl", GenerateName:"", Namespace:"resourcequota-1269", SelfLink:"", UID:"a4e1ce44-f8b4-495f-a8c3-fdd7fdf40e8b", ResourceVersion:"40154", Generation:0, CreationTimestamp:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xp7wl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004661860), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004661890), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 29, 13, 53, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046618c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0629 13:56:56.547516      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:56:57.547670      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:56:58.548731      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:56:59.549733      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:57:00.549940      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:57:00.618: INFO: ResourceQuota "e2e-rq-status-xp7wl" Spec was unchanged and /status reset
  Jun 29 13:57:00.619: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1269" for this suite. @ 06/29/24 13:57:00.622
â€¢ [215.090 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 06/29/24 13:57:00.629
  Jun 29 13:57:00.629: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename projected @ 06/29/24 13:57:00.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:57:00.644
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:57:00.648
  STEP: Creating a pod to test downward API volume plugin @ 06/29/24 13:57:00.651
  E0629 13:57:01.550055      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:57:02.550178      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/29/24 13:57:02.67
  Jun 29 13:57:02.673: INFO: Trying to get logs from node ip-172-31-94-98 pod downwardapi-volume-f9f54069-4b61-4c04-ab82-2289da36b355 container client-container: <nil>
  STEP: delete the pod @ 06/29/24 13:57:02.691
  Jun 29 13:57:02.707: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4981" for this suite. @ 06/29/24 13:57:02.711
â€¢ [2.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 06/29/24 13:57:02.718
  Jun 29 13:57:02.718: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename watch @ 06/29/24 13:57:02.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:57:02.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:57:02.736
  STEP: creating a watch on configmaps with a certain label @ 06/29/24 13:57:02.739
  STEP: creating a new configmap @ 06/29/24 13:57:02.74
  STEP: modifying the configmap once @ 06/29/24 13:57:02.744
  STEP: changing the label value of the configmap @ 06/29/24 13:57:02.752
  STEP: Expecting to observe a delete notification for the watched object @ 06/29/24 13:57:02.759
  Jun 29 13:57:02.759: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1661  14d9ffcd-52ea-46b3-87df-d4a1fb0acc74 40606 0 2024-06-29 13:57:02 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-29 13:57:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 29 13:57:02.760: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1661  14d9ffcd-52ea-46b3-87df-d4a1fb0acc74 40607 0 2024-06-29 13:57:02 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-29 13:57:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 29 13:57:02.760: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1661  14d9ffcd-52ea-46b3-87df-d4a1fb0acc74 40608 0 2024-06-29 13:57:02 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-29 13:57:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 06/29/24 13:57:02.76
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 06/29/24 13:57:02.766
  E0629 13:57:03.550837      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:57:04.551090      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:57:05.551296      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:57:06.551503      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:57:07.551557      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:57:08.551690      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:57:09.552149      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:57:10.552720      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:57:11.552820      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:57:12.553730      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 06/29/24 13:57:12.767
  STEP: modifying the configmap a third time @ 06/29/24 13:57:12.776
  STEP: deleting the configmap @ 06/29/24 13:57:12.783
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 06/29/24 13:57:12.789
  Jun 29 13:57:12.789: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1661  14d9ffcd-52ea-46b3-87df-d4a1fb0acc74 40646 0 2024-06-29 13:57:02 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-29 13:57:12 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 29 13:57:12.790: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1661  14d9ffcd-52ea-46b3-87df-d4a1fb0acc74 40647 0 2024-06-29 13:57:02 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-29 13:57:12 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 29 13:57:12.790: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1661  14d9ffcd-52ea-46b3-87df-d4a1fb0acc74 40648 0 2024-06-29 13:57:02 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-29 13:57:12 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 29 13:57:12.790: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1661" for this suite. @ 06/29/24 13:57:12.794
â€¢ [10.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 06/29/24 13:57:12.803
  Jun 29 13:57:12.803: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename projected @ 06/29/24 13:57:12.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:57:12.821
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:57:12.824
  STEP: Creating projection with secret that has name projected-secret-test-ccfc031b-5543-4f2c-96b3-15e6cff8551d @ 06/29/24 13:57:12.826
  STEP: Creating a pod to test consume secrets @ 06/29/24 13:57:12.83
  E0629 13:57:13.554559      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:57:14.555655      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:57:15.556059      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:57:16.556786      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/29/24 13:57:16.854
  Jun 29 13:57:16.858: INFO: Trying to get logs from node ip-172-31-94-98 pod pod-projected-secrets-fd79e3e9-64fd-4873-ac94-15d8b13f3b67 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/29/24 13:57:16.864
  Jun 29 13:57:16.881: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4174" for this suite. @ 06/29/24 13:57:16.887
â€¢ [4.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 06/29/24 13:57:16.895
  Jun 29 13:57:16.895: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename services @ 06/29/24 13:57:16.896
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:57:16.909
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:57:16.912
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-8568 @ 06/29/24 13:57:16.916
  STEP: changing the ExternalName service to type=NodePort @ 06/29/24 13:57:16.923
  STEP: creating replication controller externalname-service in namespace services-8568 @ 06/29/24 13:57:16.945
  I0629 13:57:16.951518      18 runners.go:197] Created replication controller with name: externalname-service, namespace: services-8568, replica count: 2
  E0629 13:57:17.557916      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:57:18.558393      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:57:19.558497      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0629 13:57:20.003119      18 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun 29 13:57:20.003: INFO: Creating new exec pod
  E0629 13:57:20.558596      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:57:21.559618      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:57:22.560339      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:57:23.022: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-8568 exec execpodz5v76 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Jun 29 13:57:23.117: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jun 29 13:57:23.117: INFO: stdout: ""
  E0629 13:57:23.560583      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:57:24.022: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-8568 exec execpodz5v76 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Jun 29 13:57:24.110: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jun 29 13:57:24.110: INFO: stdout: "externalname-service-wmq7b"
  Jun 29 13:57:24.110: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-8568 exec execpodz5v76 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.208 80'
  Jun 29 13:57:24.197: INFO: stderr: "+ nc -v -t -w 2 10.152.183.208 80\n+ echo hostName\nConnection to 10.152.183.208 80 port [tcp/http] succeeded!\n"
  Jun 29 13:57:24.197: INFO: stdout: "externalname-service-wmq7b"
  Jun 29 13:57:24.197: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-8568 exec execpodz5v76 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.94.98 30350'
  Jun 29 13:57:24.288: INFO: stderr: "+ nc -v -t -w 2 172.31.94.98 30350\n+ echo hostName\nConnection to 172.31.94.98 30350 port [tcp/*] succeeded!\n"
  Jun 29 13:57:24.288: INFO: stdout: "externalname-service-8pvnr"
  Jun 29 13:57:24.288: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-8568 exec execpodz5v76 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.10.28 30350'
  Jun 29 13:57:24.381: INFO: stderr: "+ nc -v -t -w 2 172.31.10.28 30350\n+ echo hostName\nConnection to 172.31.10.28 30350 port [tcp/*] succeeded!\n"
  Jun 29 13:57:24.381: INFO: stdout: ""
  E0629 13:57:24.561196      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:57:25.289: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-8568 exec execpodz5v76 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.10.28 30350'
  Jun 29 13:57:25.385: INFO: stderr: "+ nc -v -t -w 2 172.31.10.28 30350\n+ echo hostName\nConnection to 172.31.10.28 30350 port [tcp/*] succeeded!\n"
  Jun 29 13:57:25.385: INFO: stdout: ""
  E0629 13:57:25.561307      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:57:26.288: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-8568 exec execpodz5v76 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.10.28 30350'
  Jun 29 13:57:26.378: INFO: stderr: "+ nc -v -t -w 2 172.31.10.28 30350\n+ echo hostName\nConnection to 172.31.10.28 30350 port [tcp/*] succeeded!\n"
  Jun 29 13:57:26.378: INFO: stdout: "externalname-service-8pvnr"
  Jun 29 13:57:26.378: INFO: Cleaning up the ExternalName to NodePort test service
  Jun 29 13:57:26.400: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8568" for this suite. @ 06/29/24 13:57:26.404
â€¢ [9.516 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:793
  STEP: Creating a kubernetes client @ 06/29/24 13:57:26.412
  Jun 29 13:57:26.412: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename statefulset @ 06/29/24 13:57:26.412
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:57:26.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:57:26.434
  STEP: Creating service test in namespace statefulset-1071 @ 06/29/24 13:57:26.437
  STEP: Looking for a node to schedule stateful set and pod @ 06/29/24 13:57:26.443
  STEP: Creating pod with conflicting port in namespace statefulset-1071 @ 06/29/24 13:57:26.449
  STEP: Waiting until pod test-pod will start running in namespace statefulset-1071 @ 06/29/24 13:57:26.458
  E0629 13:57:26.561657      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:57:27.561950      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-1071 @ 06/29/24 13:57:28.466
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-1071 @ 06/29/24 13:57:28.473
  Jun 29 13:57:28.485: INFO: Observed stateful pod in namespace: statefulset-1071, name: ss-0, uid: b95e3438-8a03-45a3-9305-8492979e719c, status phase: Pending. Waiting for statefulset controller to delete.
  Jun 29 13:57:28.500: INFO: Observed stateful pod in namespace: statefulset-1071, name: ss-0, uid: b95e3438-8a03-45a3-9305-8492979e719c, status phase: Failed. Waiting for statefulset controller to delete.
  Jun 29 13:57:28.508: INFO: Observed stateful pod in namespace: statefulset-1071, name: ss-0, uid: b95e3438-8a03-45a3-9305-8492979e719c, status phase: Failed. Waiting for statefulset controller to delete.
  Jun 29 13:57:28.513: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-1071
  STEP: Removing pod with conflicting port in namespace statefulset-1071 @ 06/29/24 13:57:28.513
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-1071 and will be in running state @ 06/29/24 13:57:28.527
  E0629 13:57:28.562567      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:57:29.563598      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:57:30.539: INFO: Deleting all statefulset in ns statefulset-1071
  Jun 29 13:57:30.544: INFO: Scaling statefulset ss to 0
  E0629 13:57:30.563893      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:57:31.564035      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:57:32.564963      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:57:33.565922      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:57:34.566233      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:57:35.566339      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:57:36.566917      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:57:37.567125      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:57:38.567231      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:57:39.567387      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:57:40.559: INFO: Waiting for statefulset status.replicas updated to 0
  Jun 29 13:57:40.562: INFO: Deleting statefulset ss
  E0629 13:57:40.567927      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:57:40.576: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1071" for this suite. @ 06/29/24 13:57:40.579
â€¢ [14.174 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 06/29/24 13:57:40.586
  Jun 29 13:57:40.586: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename events @ 06/29/24 13:57:40.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:57:40.609
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:57:40.611
  STEP: Create set of events @ 06/29/24 13:57:40.614
  STEP: get a list of Events with a label in the current namespace @ 06/29/24 13:57:40.626
  STEP: delete a list of events @ 06/29/24 13:57:40.631
  Jun 29 13:57:40.631: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 06/29/24 13:57:40.651
  Jun 29 13:57:40.654: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8345" for this suite. @ 06/29/24 13:57:40.658
â€¢ [0.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 06/29/24 13:57:40.667
  Jun 29 13:57:40.667: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename var-expansion @ 06/29/24 13:57:40.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:57:40.68
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:57:40.684
  E0629 13:57:41.568101      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:57:42.568265      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:57:42.706: INFO: Deleting pod "var-expansion-3e2e682e-7866-474c-ae7d-d3ee12cec753" in namespace "var-expansion-789"
  Jun 29 13:57:42.716: INFO: Wait up to 5m0s for pod "var-expansion-3e2e682e-7866-474c-ae7d-d3ee12cec753" to be fully deleted
  E0629 13:57:43.568492      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:57:44.569450      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 13:57:44.723: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-789" for this suite. @ 06/29/24 13:57:44.726
â€¢ [4.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 06/29/24 13:57:44.733
  Jun 29 13:57:44.733: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename containers @ 06/29/24 13:57:44.734
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:57:44.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:57:44.751
  STEP: Creating a pod to test override all @ 06/29/24 13:57:44.754
  E0629 13:57:45.569559      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:57:46.569658      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/29/24 13:57:46.777
  Jun 29 13:57:46.780: INFO: Trying to get logs from node ip-172-31-94-98 pod client-containers-c38817e1-2c3b-4546-b945-6bd2a3b77c9a container agnhost-container: <nil>
  STEP: delete the pod @ 06/29/24 13:57:46.786
  Jun 29 13:57:46.803: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8146" for this suite. @ 06/29/24 13:57:46.807
â€¢ [2.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 06/29/24 13:57:46.813
  Jun 29 13:57:46.813: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename cronjob @ 06/29/24 13:57:46.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 13:57:46.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 13:57:46.829
  STEP: Creating a suspended cronjob @ 06/29/24 13:57:46.832
  STEP: Ensuring no jobs are scheduled @ 06/29/24 13:57:46.836
  E0629 13:57:47.570530      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:57:48.570673      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:57:49.571197      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:57:50.571317      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:57:51.571694      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:57:52.571926      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:57:53.571951      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:57:54.572059      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:57:55.572165      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:57:56.572786      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:57:57.573785      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:57:58.573879      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:57:59.574737      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:00.574838      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:01.575113      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:02.575310      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:03.575719      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:04.576615      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:05.576806      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:06.577152      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:07.577386      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:08.577613      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:09.577930      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:10.578029      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:11.578276      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:12.578384      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:13.578916      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:14.579017      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:15.579719      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:16.579871      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:17.580728      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:18.580832      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:19.581653      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:20.582544      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:21.583291      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:22.583380      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:23.583839      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:24.583937      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:25.584040      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:26.584747      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:27.584868      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:28.584961      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:29.585743      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:30.585863      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:31.585947      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:32.586063      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:33.586457      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:34.586552      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:35.586657      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:36.586871      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:37.587013      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:38.587139      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:39.587256      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:40.587513      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:41.587696      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:42.588047      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:43.588430      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:44.588583      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:45.589501      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:46.589607      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:47.590555      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:48.590748      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:49.591295      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:50.591566      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:51.591671      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:52.595726      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:53.596601      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:54.596800      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:55.596877      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:56.596971      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:57.597076      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:58.597180      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:58:59.597601      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:00.597694      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:01.598166      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:02.599672      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:03.600642      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:04.601640      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:05.601745      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:06.602125      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:07.602936      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:08.603199      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:09.603297      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:10.603477      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:11.604434      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:12.609126      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:13.609836      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:14.609930      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:15.610013      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:16.610151      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:17.610756      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:18.611034      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:19.611735      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:20.612778      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:21.612918      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:22.614624      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:23.615620      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:24.615648      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:25.615705      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:26.615790      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:27.616731      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:28.617272      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:29.617526      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:30.618148      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:31.618332      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:32.622197      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:33.622961      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:34.623354      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:35.623594      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:36.623673      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:37.623763      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:38.624737      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:39.624891      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:40.624994      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:41.625105      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:42.625501      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:43.625863      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:44.626145      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:45.626277      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:46.627206      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:47.627990      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:48.628074      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:49.628744      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:50.628843      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:51.629031      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:52.630339      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:53.630694      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:54.631650      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:55.631787      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:56.632756      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:57.633551      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:58.633669      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 13:59:59.633786      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:00.634879      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:01.635030      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:02.636274      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:03.636752      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:04.636857      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:05.636951      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:06.637950      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:07.639017      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:08.639102      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:09.640034      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:10.640131      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:11.640234      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:12.641645      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:13.641880      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:14.641987      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:15.642144      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:16.642330      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:17.642784      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:18.642899      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:19.643352      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:20.643550      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:21.643639      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:22.644680      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:23.644900      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:24.644991      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:25.645787      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:26.645920      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:27.646024      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:28.646196      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:29.646345      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:30.646583      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:31.646844      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:32.648901      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:33.649684      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:34.649780      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:35.650423      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:36.650631      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:37.650718      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:38.650819      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:39.651058      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:40.651242      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:41.651382      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:42.651485      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:43.651626      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:44.652576      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:45.652856      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:46.653064      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:47.653170      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:48.654152      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:49.654709      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:50.654811      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:51.654919      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:52.655004      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:53.655880      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:54.655964      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:55.656083      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:56.656181      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:57.656736      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:58.656866      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:00:59.656972      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:00.657090      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:01.658067      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:02.658153      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:03.658889      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:04.658968      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:05.659042      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:06.659255      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:07.659452      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:08.659663      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:09.660746      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:10.661013      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:11.661104      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:12.661925      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:13.662909      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:14.663000      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:15.663661      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:16.663764      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:17.664722      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:18.664912      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:19.665023      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:20.665122      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:21.665660      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:22.665851      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:23.665955      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:24.666076      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:25.667259      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:26.667387      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:27.667491      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:28.667658      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:29.667750      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:30.668045      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:31.668745      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:32.668840      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:33.669878      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:34.670086      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:35.670175      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:36.670352      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:37.670685      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:38.670786      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:39.671591      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:40.671722      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:41.671820      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:42.671911      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:43.672508      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:44.672607      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:45.672705      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:46.673446      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:47.673571      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:48.673788      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:49.674663      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:50.674755      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:51.675422      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:52.675857      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:53.676906      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:54.676955      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:55.677965      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:56.678070      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:57.678392      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:58.678503      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:01:59.678657      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:00.679509      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:01.679659      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:02.680726      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:03.681534      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:04.681629      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:05.682719      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:06.682837      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:07.682936      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:08.683159      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:09.683604      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:10.683671      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:11.683765      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:12.683857      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:13.684367      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:14.684593      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:15.684700      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:16.684879      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:17.684981      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:18.685189      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:19.685429      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:20.685488      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:21.685525      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:22.685653      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:23.685759      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:24.686008      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:25.686194      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:26.686986      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:27.687666      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:28.687762      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:29.688196      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:30.689163      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:31.689667      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:32.689859      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:33.690911      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:34.691016      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:35.691506      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:36.691672      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:37.691769      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:38.692837      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:39.693539      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:40.693625      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:41.693698      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:42.694578      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:43.694667      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:44.694759      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:45.695464      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:46.695639      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 06/29/24 14:02:46.844
  STEP: Removing cronjob @ 06/29/24 14:02:46.847
  Jun 29 14:02:46.853: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7709" for this suite. @ 06/29/24 14:02:46.856
â€¢ [300.049 seconds]
------------------------------
SS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 06/29/24 14:02:46.862
  Jun 29 14:02:46.862: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename pod-network-test @ 06/29/24 14:02:46.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:02:46.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:02:46.886
  STEP: Performing setup for networking test in namespace pod-network-test-2601 @ 06/29/24 14:02:46.89
  STEP: creating a selector @ 06/29/24 14:02:46.89
  STEP: Creating the service pods in kubernetes @ 06/29/24 14:02:46.89
  Jun 29 14:02:46.890: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0629 14:02:47.695735      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:48.695832      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:49.696745      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:50.696841      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:51.696915      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:52.697005      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:53.697924      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:54.698001      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:55.698385      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:56.698509      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:57.698577      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:02:58.698645      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 06/29/24 14:02:58.985
  E0629 14:02:59.699212      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:03:00.699295      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:03:01.006: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Jun 29 14:03:01.006: INFO: Breadth first check of 192.168.41.110 on host 172.31.10.28...
  Jun 29 14:03:01.009: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.183.124:9080/dial?request=hostname&protocol=http&host=192.168.41.110&port=8083&tries=1'] Namespace:pod-network-test-2601 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 29 14:03:01.009: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  Jun 29 14:03:01.009: INFO: ExecWithOptions: Clientset creation
  Jun 29 14:03:01.009: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2601/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.183.124%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.41.110%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jun 29 14:03:01.063: INFO: Waiting for responses: map[]
  Jun 29 14:03:01.063: INFO: reached 192.168.41.110 after 0/1 tries
  Jun 29 14:03:01.063: INFO: Breadth first check of 192.168.109.48 on host 172.31.37.211...
  Jun 29 14:03:01.067: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.183.124:9080/dial?request=hostname&protocol=http&host=192.168.109.48&port=8083&tries=1'] Namespace:pod-network-test-2601 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 29 14:03:01.067: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  Jun 29 14:03:01.067: INFO: ExecWithOptions: Clientset creation
  Jun 29 14:03:01.067: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2601/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.183.124%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.109.48%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jun 29 14:03:01.118: INFO: Waiting for responses: map[]
  Jun 29 14:03:01.118: INFO: reached 192.168.109.48 after 0/1 tries
  Jun 29 14:03:01.118: INFO: Breadth first check of 192.168.183.122 on host 172.31.94.98...
  Jun 29 14:03:01.123: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.183.124:9080/dial?request=hostname&protocol=http&host=192.168.183.122&port=8083&tries=1'] Namespace:pod-network-test-2601 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 29 14:03:01.123: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  Jun 29 14:03:01.124: INFO: ExecWithOptions: Clientset creation
  Jun 29 14:03:01.124: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2601/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.183.124%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.183.122%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jun 29 14:03:01.168: INFO: Waiting for responses: map[]
  Jun 29 14:03:01.168: INFO: reached 192.168.183.122 after 0/1 tries
  Jun 29 14:03:01.168: INFO: Going to retry 0 out of 3 pods....
  Jun 29 14:03:01.168: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-2601" for this suite. @ 06/29/24 14:03:01.175
â€¢ [14.320 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 06/29/24 14:03:01.183
  Jun 29 14:03:01.183: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename container-runtime @ 06/29/24 14:03:01.183
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:03:01.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:03:01.2
  STEP: create the container @ 06/29/24 14:03:01.205
  W0629 14:03:01.216219      18 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 06/29/24 14:03:01.216
  E0629 14:03:01.700137      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:03:02.700231      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 06/29/24 14:03:03.232
  STEP: the container should be terminated @ 06/29/24 14:03:03.236
  STEP: the termination message should be set @ 06/29/24 14:03:03.236
  Jun 29 14:03:03.236: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 06/29/24 14:03:03.236
  Jun 29 14:03:03.250: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5905" for this suite. @ 06/29/24 14:03:03.254
â€¢ [2.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 06/29/24 14:03:03.262
  Jun 29 14:03:03.262: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename deployment @ 06/29/24 14:03:03.262
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:03:03.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:03:03.28
  Jun 29 14:03:03.283: INFO: Creating simple deployment test-new-deployment
  Jun 29 14:03:03.295: INFO: deployment "test-new-deployment" doesn't have the required revision set
  E0629 14:03:03.700676      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:03:04.701515      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 06/29/24 14:03:05.309
  STEP: updating a scale subresource @ 06/29/24 14:03:05.312
  STEP: verifying the deployment Spec.Replicas was modified @ 06/29/24 14:03:05.318
  STEP: Patch a scale subresource @ 06/29/24 14:03:05.322
  Jun 29 14:03:05.346: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5404",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "306687fc-7b49-432d-a5b3-903bc0723b3e",
      ResourceVersion: (string) (len=5) "41774",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855266583,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855266583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855266583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855266583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855266583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855266583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855266583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun 29 14:03:05.354: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5404",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "baf51a00-8b70-42e3-88dc-fb0bfad2bfba",
      ResourceVersion: (string) (len=5) "41781",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855266583,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "4",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "5",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "306687fc-7b49-432d-a5b3-903bc0723b3e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855266585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 33 30 36 36 38 37  66 63 2d 37 62 34 39 2d  |\"306687fc-7b49-|
              00000120  34 33 32 64 2d 61 35 62  33 2d 39 30 33 62 63 30  |432d-a5b3-903bc0|
              00000130  37 32 33 62 33 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |723b3e\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855266585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(4),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 29 14:03:05.363: INFO: Pod "test-new-deployment-557759b7c7-dscv4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-dscv4",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5404",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "159f2952-25dc-4cf8-a85b-221fa2eb28d3",
      ResourceVersion: (string) (len=5) "41782",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855266585,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "baf51a00-8b70-42e3-88dc-fb0bfad2bfba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855266585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 61  66 35 31 61 30 30 2d 38  |d\":\"baf51a00-8|
              00000090  62 37 30 2d 34 32 65 33  2d 38 38 64 63 2d 66 62  |b70-42e3-88dc-fb|
              000000a0  30 62 66 61 64 32 62 66  62 61 5c 22 7d 22 3a 7b  |0bfad2bfba\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855266585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lbmf5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lbmf5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-10-28",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855266585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855266585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855266585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855266585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855266585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.10.28",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.10.28"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855266585,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 29 14:03:05.364: INFO: Pod "test-new-deployment-557759b7c7-fpssh" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-fpssh",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5404",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "545d0b60-c85e-45fe-9b93-ff7ffea707f3",
      ResourceVersion: (string) (len=5) "41766",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855266583,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "baf51a00-8b70-42e3-88dc-fb0bfad2bfba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855266583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 61  66 35 31 61 30 30 2d 38  |d\":\"baf51a00-8|
              00000090  62 37 30 2d 34 32 65 33  2d 38 38 64 63 2d 66 62  |b70-42e3-88dc-fb|
              000000a0  30 62 66 61 64 32 62 66  62 61 5c 22 7d 22 3a 7b  |0bfad2bfba\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855266583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 38  33 2e 31 31 36 5c 22 7d  |2.168.183.116\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fnd24",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fnd24",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-94-98",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855266583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855266583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855266583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855266583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855266583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.94.98",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.94.98"
        }
      },
      PodIP: (string) (len=15) "192.168.183.116",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.183.116"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855266583,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855266583,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c454bd9ee34c83e53cf9df9451e915f9d3fc227c925b1ae02e95a2603ab0acb1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 29 14:03:05.365: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5404" for this suite. @ 06/29/24 14:03:05.375
â€¢ [2.125 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 06/29/24 14:03:05.387
  Jun 29 14:03:05.387: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename daemonsets @ 06/29/24 14:03:05.388
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:03:05.402
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:03:05.405
  STEP: Creating simple DaemonSet "daemon-set" @ 06/29/24 14:03:05.438
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/29/24 14:03:05.442
  Jun 29 14:03:05.445: INFO: DaemonSet pods can't tolerate node ip-172-31-15-151 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 14:03:05.445: INFO: DaemonSet pods can't tolerate node ip-172-31-22-17 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 14:03:05.451: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 29 14:03:05.451: INFO: Node ip-172-31-10-28 is running 0 daemon pod, expected 1
  E0629 14:03:05.702603      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:03:06.447: INFO: DaemonSet pods can't tolerate node ip-172-31-15-151 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 14:03:06.447: INFO: DaemonSet pods can't tolerate node ip-172-31-22-17 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 14:03:06.450: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 29 14:03:06.450: INFO: Node ip-172-31-10-28 is running 0 daemon pod, expected 1
  E0629 14:03:06.702838      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:03:07.446: INFO: DaemonSet pods can't tolerate node ip-172-31-15-151 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 14:03:07.446: INFO: DaemonSet pods can't tolerate node ip-172-31-22-17 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 14:03:07.449: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun 29 14:03:07.449: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 06/29/24 14:03:07.452
  Jun 29 14:03:07.457: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 06/29/24 14:03:07.457
  Jun 29 14:03:07.467: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 06/29/24 14:03:07.467
  Jun 29 14:03:07.468: INFO: Observed &DaemonSet event: ADDED
  Jun 29 14:03:07.468: INFO: Observed &DaemonSet event: MODIFIED
  Jun 29 14:03:07.469: INFO: Observed &DaemonSet event: MODIFIED
  Jun 29 14:03:07.469: INFO: Observed &DaemonSet event: MODIFIED
  Jun 29 14:03:07.469: INFO: Observed &DaemonSet event: MODIFIED
  Jun 29 14:03:07.469: INFO: Found daemon set daemon-set in namespace daemonsets-1022 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jun 29 14:03:07.469: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 06/29/24 14:03:07.469
  STEP: watching for the daemon set status to be patched @ 06/29/24 14:03:07.497
  Jun 29 14:03:07.500: INFO: Observed &DaemonSet event: ADDED
  Jun 29 14:03:07.500: INFO: Observed &DaemonSet event: MODIFIED
  Jun 29 14:03:07.500: INFO: Observed &DaemonSet event: MODIFIED
  Jun 29 14:03:07.500: INFO: Observed &DaemonSet event: MODIFIED
  Jun 29 14:03:07.500: INFO: Observed &DaemonSet event: MODIFIED
  Jun 29 14:03:07.500: INFO: Observed daemon set daemon-set in namespace daemonsets-1022 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jun 29 14:03:07.500: INFO: Observed &DaemonSet event: MODIFIED
  Jun 29 14:03:07.500: INFO: Found daemon set daemon-set in namespace daemonsets-1022 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  Jun 29 14:03:07.500: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 06/29/24 14:03:07.504
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1022, will wait for the garbage collector to delete the pods @ 06/29/24 14:03:07.504
  Jun 29 14:03:07.565: INFO: Deleting DaemonSet.extensions daemon-set took: 6.121472ms
  Jun 29 14:03:07.666: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.674805ms
  E0629 14:03:07.703689      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:03:08.704218      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:03:09.071: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 29 14:03:09.071: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jun 29 14:03:09.074: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"41947"},"items":null}

  Jun 29 14:03:09.076: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"41947"},"items":null}

  Jun 29 14:03:09.091: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1022" for this suite. @ 06/29/24 14:03:09.094
â€¢ [3.715 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3565
  STEP: Creating a kubernetes client @ 06/29/24 14:03:09.102
  Jun 29 14:03:09.102: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename services @ 06/29/24 14:03:09.103
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:03:09.116
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:03:09.119
  STEP: creating a collection of services @ 06/29/24 14:03:09.122
  Jun 29 14:03:09.122: INFO: Creating e2e-svc-a-frm4f
  Jun 29 14:03:09.132: INFO: Creating e2e-svc-b-vhghd
  Jun 29 14:03:09.141: INFO: Creating e2e-svc-c-msgkk
  STEP: deleting service collection @ 06/29/24 14:03:09.155
  Jun 29 14:03:09.182: INFO: Collection of services has been deleted
  Jun 29 14:03:09.182: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2217" for this suite. @ 06/29/24 14:03:09.185
â€¢ [0.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 06/29/24 14:03:09.192
  Jun 29 14:03:09.192: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename containers @ 06/29/24 14:03:09.192
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:03:09.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:03:09.21
  STEP: Creating a pod to test override command @ 06/29/24 14:03:09.213
  E0629 14:03:09.704752      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:03:10.704857      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/29/24 14:03:11.231
  Jun 29 14:03:11.234: INFO: Trying to get logs from node ip-172-31-94-98 pod client-containers-07e04d0d-ff3f-4604-b7d8-5a2e30cf85a2 container agnhost-container: <nil>
  STEP: delete the pod @ 06/29/24 14:03:11.251
  Jun 29 14:03:11.266: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-6714" for this suite. @ 06/29/24 14:03:11.271
â€¢ [2.086 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 06/29/24 14:03:11.278
  Jun 29 14:03:11.278: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/29/24 14:03:11.279
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:03:11.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:03:11.297
  Jun 29 14:03:11.299: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  E0629 14:03:11.704973      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:03:12.706027      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:03:13.706942      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:03:14.385: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7111" for this suite. @ 06/29/24 14:03:14.39
â€¢ [3.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 06/29/24 14:03:14.399
  Jun 29 14:03:14.399: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename replication-controller @ 06/29/24 14:03:14.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:03:14.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:03:14.415
  Jun 29 14:03:14.421: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 06/29/24 14:03:14.432
  STEP: Checking rc "condition-test" has the desired failure condition set @ 06/29/24 14:03:14.436
  E0629 14:03:14.707940      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 06/29/24 14:03:15.444
  Jun 29 14:03:15.455: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 06/29/24 14:03:15.455
  E0629 14:03:15.708329      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:03:16.469: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-635" for this suite. @ 06/29/24 14:03:16.472
â€¢ [2.081 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3154
  STEP: Creating a kubernetes client @ 06/29/24 14:03:16.481
  Jun 29 14:03:16.481: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename services @ 06/29/24 14:03:16.481
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:03:16.496
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:03:16.499
  STEP: creating an Endpoint @ 06/29/24 14:03:16.506
  STEP: waiting for available Endpoint @ 06/29/24 14:03:16.511
  STEP: listing all Endpoints @ 06/29/24 14:03:16.512
  STEP: updating the Endpoint @ 06/29/24 14:03:16.515
  STEP: fetching the Endpoint @ 06/29/24 14:03:16.522
  STEP: patching the Endpoint @ 06/29/24 14:03:16.524
  STEP: fetching the Endpoint @ 06/29/24 14:03:16.532
  STEP: deleting the Endpoint by Collection @ 06/29/24 14:03:16.536
  STEP: waiting for Endpoint deletion @ 06/29/24 14:03:16.543
  STEP: fetching the Endpoint @ 06/29/24 14:03:16.544
  Jun 29 14:03:16.547: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-751" for this suite. @ 06/29/24 14:03:16.551
â€¢ [0.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 06/29/24 14:03:16.557
  Jun 29 14:03:16.557: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename replication-controller @ 06/29/24 14:03:16.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:03:16.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:03:16.575
  STEP: Given a ReplicationController is created @ 06/29/24 14:03:16.578
  STEP: When the matched label of one of its pods change @ 06/29/24 14:03:16.585
  Jun 29 14:03:16.588: INFO: Pod name pod-release: Found 0 pods out of 1
  E0629 14:03:16.708427      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:03:17.708526      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:03:18.708597      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:03:19.708704      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:03:20.708911      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:03:21.592: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 06/29/24 14:03:21.603
  E0629 14:03:21.709216      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:03:22.628: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2309" for this suite. @ 06/29/24 14:03:22.635
â€¢ [6.089 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 06/29/24 14:03:22.651
  Jun 29 14:03:22.651: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename subpath @ 06/29/24 14:03:22.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:03:22.667
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:03:22.67
  STEP: Setting up data @ 06/29/24 14:03:22.673
  STEP: Creating pod pod-subpath-test-secret-lbs9 @ 06/29/24 14:03:22.681
  STEP: Creating a pod to test atomic-volume-subpath @ 06/29/24 14:03:22.681
  E0629 14:03:22.709916      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:03:23.710977      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:03:24.711995      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:03:25.712149      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:03:26.712613      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:03:27.712690      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:03:28.712989      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:03:29.713151      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:03:30.713137      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:03:31.713957      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:03:32.714065      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:03:33.714698      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:03:34.715763      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:03:35.716772      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:03:36.717107      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:03:37.717197      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:03:38.717383      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:03:39.717458      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:03:40.717529      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:03:41.717647      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:03:42.717936      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:03:43.717959      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:03:44.718317      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:03:45.718414      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:03:46.719089      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/29/24 14:03:46.755
  Jun 29 14:03:46.759: INFO: Trying to get logs from node ip-172-31-10-28 pod pod-subpath-test-secret-lbs9 container test-container-subpath-secret-lbs9: <nil>
  STEP: delete the pod @ 06/29/24 14:03:46.773
  STEP: Deleting pod pod-subpath-test-secret-lbs9 @ 06/29/24 14:03:46.787
  Jun 29 14:03:46.787: INFO: Deleting pod "pod-subpath-test-secret-lbs9" in namespace "subpath-3209"
  Jun 29 14:03:46.791: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3209" for this suite. @ 06/29/24 14:03:46.795
â€¢ [24.152 seconds]
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 06/29/24 14:03:46.802
  Jun 29 14:03:46.802: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename container-probe @ 06/29/24 14:03:46.803
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:03:46.817
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:03:46.821
  STEP: Creating pod liveness-b0bc210d-7a71-4559-a646-e95522b74b51 in namespace container-probe-1410 @ 06/29/24 14:03:46.824
  E0629 14:03:47.719239      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:03:48.719295      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/29/24 14:03:48.841
  Jun 29 14:03:48.844: INFO: Initial restart count of pod liveness-b0bc210d-7a71-4559-a646-e95522b74b51 is 0
  Jun 29 14:03:48.848: INFO: Get pod liveness-b0bc210d-7a71-4559-a646-e95522b74b51 in namespace container-probe-1410
  E0629 14:03:49.719426      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:03:50.719544      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:03:50.852: INFO: Get pod liveness-b0bc210d-7a71-4559-a646-e95522b74b51 in namespace container-probe-1410
  E0629 14:03:51.720351      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:03:52.720468      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:03:52.856: INFO: Get pod liveness-b0bc210d-7a71-4559-a646-e95522b74b51 in namespace container-probe-1410
  E0629 14:03:53.720548      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:03:54.720680      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:03:54.861: INFO: Get pod liveness-b0bc210d-7a71-4559-a646-e95522b74b51 in namespace container-probe-1410
  E0629 14:03:55.720736      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:03:56.720859      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:03:56.867: INFO: Get pod liveness-b0bc210d-7a71-4559-a646-e95522b74b51 in namespace container-probe-1410
  E0629 14:03:57.721705      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:03:58.721800      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:03:58.872: INFO: Get pod liveness-b0bc210d-7a71-4559-a646-e95522b74b51 in namespace container-probe-1410
  E0629 14:03:59.722537      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:04:00.722639      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:04:00.876: INFO: Get pod liveness-b0bc210d-7a71-4559-a646-e95522b74b51 in namespace container-probe-1410
  E0629 14:04:01.722741      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:04:02.722880      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:04:02.881: INFO: Get pod liveness-b0bc210d-7a71-4559-a646-e95522b74b51 in namespace container-probe-1410
  E0629 14:04:03.723728      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:04:04.724735      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:04:04.887: INFO: Get pod liveness-b0bc210d-7a71-4559-a646-e95522b74b51 in namespace container-probe-1410
  E0629 14:04:05.725387      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:04:06.725461      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:04:06.891: INFO: Get pod liveness-b0bc210d-7a71-4559-a646-e95522b74b51 in namespace container-probe-1410
  E0629 14:04:07.726143      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:04:08.726762      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:04:08.895: INFO: Get pod liveness-b0bc210d-7a71-4559-a646-e95522b74b51 in namespace container-probe-1410
  Jun 29 14:04:08.895: INFO: Restart count of pod container-probe-1410/liveness-b0bc210d-7a71-4559-a646-e95522b74b51 is now 1 (20.051354517s elapsed)
  STEP: deleting the pod @ 06/29/24 14:04:08.895
  Jun 29 14:04:08.909: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1410" for this suite. @ 06/29/24 14:04:08.913
â€¢ [22.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 06/29/24 14:04:08.92
  Jun 29 14:04:08.920: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename webhook @ 06/29/24 14:04:08.921
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:04:08.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:04:08.94
  STEP: Setting up server cert @ 06/29/24 14:04:08.963
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/29/24 14:04:09.2
  STEP: Deploying the webhook pod @ 06/29/24 14:04:09.21
  STEP: Wait for the deployment to be ready @ 06/29/24 14:04:09.222
  Jun 29 14:04:09.233: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0629 14:04:09.727663      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:04:10.727696      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/29/24 14:04:11.244
  STEP: Verifying the service has paired with the endpoint @ 06/29/24 14:04:11.254
  E0629 14:04:11.728763      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:04:12.255: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jun 29 14:04:12.264: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  E0629 14:04:12.729156      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-595-crds.webhook.example.com via the AdmissionRegistration API @ 06/29/24 14:04:12.776
  STEP: Creating a custom resource that should be mutated by the webhook @ 06/29/24 14:04:12.789
  E0629 14:04:13.729512      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:04:14.729716      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:04:15.378: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5767" for this suite. @ 06/29/24 14:04:15.382
  STEP: Destroying namespace "webhook-markers-9989" for this suite. @ 06/29/24 14:04:15.391
â€¢ [6.479 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:214
  STEP: Creating a kubernetes client @ 06/29/24 14:04:15.4
  Jun 29 14:04:15.400: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 06/29/24 14:04:15.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:04:15.413
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:04:15.417
  STEP: create the container to handle the HTTPGet hook request. @ 06/29/24 14:04:15.425
  E0629 14:04:15.730438      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:04:16.730630      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 06/29/24 14:04:17.449
  E0629 14:04:17.731426      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:04:18.731568      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 06/29/24 14:04:19.466
  E0629 14:04:19.731699      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:04:20.731787      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 06/29/24 14:04:21.482
  Jun 29 14:04:21.490: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-2967" for this suite. @ 06/29/24 14:04:21.493
â€¢ [6.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 06/29/24 14:04:21.5
  Jun 29 14:04:21.500: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename deployment @ 06/29/24 14:04:21.501
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:04:21.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:04:21.52
  Jun 29 14:04:21.523: INFO: Creating deployment "test-recreate-deployment"
  Jun 29 14:04:21.528: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  Jun 29 14:04:21.533: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
  E0629 14:04:21.731890      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:04:22.732000      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:04:23.540: INFO: Waiting deployment "test-recreate-deployment" to complete
  Jun 29 14:04:23.544: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  Jun 29 14:04:23.552: INFO: Updating deployment test-recreate-deployment
  Jun 29 14:04:23.552: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  Jun 29 14:04:23.627: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9657",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "40423e6b-33d5-40b1-9d22-189575b1d3e7",
      ResourceVersion: (string) (len=5) "42668",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855266661,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855266663,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855266663,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855266663,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855266663,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855266663,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855266661,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun 29 14:04:23.630: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9657",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bb67fc87-3b87-4031-a735-df93e95ba82d",
      ResourceVersion: (string) (len=5) "42666",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855266663,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "40423e6b-33d5-40b1-9d22-189575b1d3e7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855266663,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 30 34 32 33 65  36 62 2d 33 33 64 35 2d  |\"40423e6b-33d5-|
              00000120  34 30 62 31 2d 39 64 32  32 2d 31 38 39 35 37 35  |40b1-9d22-189575|
              00000130  62 31 64 33 65 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |b1d3e7\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855266663,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 29 14:04:23.631: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  Jun 29 14:04:23.631: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-5cf87b5b86",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9657",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0fa32caa-1377-4f26-92bf-382ab2c30aa5",
      ResourceVersion: (string) (len=5) "42657",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855266661,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "40423e6b-33d5-40b1-9d22-189575b1d3e7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855266663,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 30 34 32 33 65  36 62 2d 33 33 64 35 2d  |\"40423e6b-33d5-|
              00000120  34 30 62 31 2d 39 64 32  32 2d 31 38 39 35 37 35  |40b1-9d22-189575|
              00000130  62 31 64 33 65 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |b1d3e7\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855266663,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 29 14:04:23.635: INFO: Pod "test-recreate-deployment-76fb77d45-5vg6p" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-5vg6p",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=15) "deployment-9657",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "369329bd-04de-4152-8143-a7f4e72e2ef4",
      ResourceVersion: (string) (len=5) "42669",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855266663,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "bb67fc87-3b87-4031-a735-df93e95ba82d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855266663,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 62  36 37 66 63 38 37 2d 33  |d\":\"bb67fc87-3|
              00000090  62 38 37 2d 34 30 33 31  2d 61 37 33 35 2d 64 66  |b87-4031-a735-df|
              000000a0  39 33 65 39 35 62 61 38  32 64 5c 22 7d 22 3a 7b  |93e95ba82d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855266663,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bzs49",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bzs49",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-10-28",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855266663,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855266663,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855266663,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855266663,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855266663,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.10.28",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.10.28"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855266663,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 29 14:04:23.638: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9657" for this suite. @ 06/29/24 14:04:23.641
â€¢ [2.147 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 06/29/24 14:04:23.647
  Jun 29 14:04:23.648: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename podtemplate @ 06/29/24 14:04:23.648
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:04:23.662
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:04:23.665
  STEP: Create set of pod templates @ 06/29/24 14:04:23.667
  Jun 29 14:04:23.672: INFO: created test-podtemplate-1
  Jun 29 14:04:23.679: INFO: created test-podtemplate-2
  Jun 29 14:04:23.683: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 06/29/24 14:04:23.683
  STEP: delete collection of pod templates @ 06/29/24 14:04:23.686
  Jun 29 14:04:23.686: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 06/29/24 14:04:23.704
  Jun 29 14:04:23.704: INFO: requesting list of pod templates to confirm quantity
  Jun 29 14:04:23.706: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-7202" for this suite. @ 06/29/24 14:04:23.709
â€¢ [0.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 06/29/24 14:04:23.715
  Jun 29 14:04:23.715: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename webhook @ 06/29/24 14:04:23.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:04:23.73
  E0629 14:04:23.732206      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:04:23.734
  STEP: Setting up server cert @ 06/29/24 14:04:23.757
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/29/24 14:04:23.954
  STEP: Deploying the webhook pod @ 06/29/24 14:04:23.961
  STEP: Wait for the deployment to be ready @ 06/29/24 14:04:23.975
  Jun 29 14:04:23.997: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0629 14:04:24.732456      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:04:25.732560      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/29/24 14:04:26.012
  STEP: Verifying the service has paired with the endpoint @ 06/29/24 14:04:26.025
  E0629 14:04:26.732700      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:04:27.026: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jun 29 14:04:27.032: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 06/29/24 14:04:27.541
  STEP: Creating a custom resource that should be denied by the webhook @ 06/29/24 14:04:27.555
  E0629 14:04:27.733709      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:04:28.733810      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 06/29/24 14:04:29.571
  STEP: Updating the custom resource with disallowed data should be denied @ 06/29/24 14:04:29.577
  STEP: Deleting the custom resource should be denied @ 06/29/24 14:04:29.586
  STEP: Remove the offending key and value from the custom resource data @ 06/29/24 14:04:29.592
  STEP: Deleting the updated custom resource should be successful @ 06/29/24 14:04:29.601
  E0629 14:04:29.734048      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:04:30.173: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8170" for this suite. @ 06/29/24 14:04:30.177
  STEP: Destroying namespace "webhook-markers-5182" for this suite. @ 06/29/24 14:04:30.184
â€¢ [6.477 seconds]
------------------------------
SS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:430
  STEP: Creating a kubernetes client @ 06/29/24 14:04:30.192
  Jun 29 14:04:30.192: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename pv @ 06/29/24 14:04:30.193
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:04:30.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:04:30.211
  STEP: Creating initial PV and PVC @ 06/29/24 14:04:30.213
  Jun 29 14:04:30.213: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-3943" @ 06/29/24 14:04:30.229
  STEP: Listing PVCs in namespace "pv-3943" @ 06/29/24 14:04:30.233
  STEP: Patching the PV "pv-3943-b2slf" @ 06/29/24 14:04:30.236
  STEP: Patching the PVC "pvc-b7gsf" @ 06/29/24 14:04:30.249
  STEP: Getting PV "pv-3943-b2slf" @ 06/29/24 14:04:30.257
  STEP: Getting PVC "pvc-b7gsf" @ 06/29/24 14:04:30.259
  STEP: Deleting PVC "pvc-b7gsf" @ 06/29/24 14:04:30.262
  STEP: Confirm deletion of PVC "pvc-b7gsf" @ 06/29/24 14:04:30.269
  E0629 14:04:30.734133      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:04:31.734264      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-3943-b2slf" @ 06/29/24 14:04:32.279
  STEP: Confirm deletion of PV "pv-3943-b2slf" @ 06/29/24 14:04:32.287
  E0629 14:04:32.735157      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:04:33.735679      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating another PV & PVC @ 06/29/24 14:04:34.296
  Jun 29 14:04:34.296: INFO: Creating a PV followed by a PVC
  STEP: Updating the PV "pv-3943-sxrn5" @ 06/29/24 14:04:34.308
  STEP: Updating the PVC "pvc-qnv6p" @ 06/29/24 14:04:34.338
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-qnv6p=updated" @ 06/29/24 14:04:34.345
  STEP: Deleting PVC "pvc-qnv6p" via DeleteCollection @ 06/29/24 14:04:34.349
  STEP: Confirm deletion of PVC "pvc-qnv6p" @ 06/29/24 14:04:34.357
  E0629 14:04:34.735733      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:04:35.735842      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-3943-sxrn5" via DeleteCollection @ 06/29/24 14:04:36.365
  STEP: Confirm deletion of PV "pv-3943-sxrn5" @ 06/29/24 14:04:36.374
  E0629 14:04:36.736742      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:04:37.736849      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:04:38.381: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  Jun 29 14:04:38.381: INFO: Deleting PersistentVolumeClaim "pvc-qnv6p"
  Jun 29 14:04:38.384: INFO: Deleting PersistentVolume "pv-3943-sxrn5"
  Jun 29 14:04:38.387: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-3943" for this suite. @ 06/29/24 14:04:38.392
â€¢ [8.207 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 06/29/24 14:04:38.4
  Jun 29 14:04:38.400: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename webhook @ 06/29/24 14:04:38.401
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:04:38.417
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:04:38.419
  STEP: Setting up server cert @ 06/29/24 14:04:38.439
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/29/24 14:04:38.564
  STEP: Deploying the webhook pod @ 06/29/24 14:04:38.569
  STEP: Wait for the deployment to be ready @ 06/29/24 14:04:38.581
  Jun 29 14:04:38.587: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0629 14:04:38.737701      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:04:39.738417      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/29/24 14:04:40.601
  STEP: Verifying the service has paired with the endpoint @ 06/29/24 14:04:40.61
  E0629 14:04:40.739376      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:04:41.611: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 06/29/24 14:04:41.62
  STEP: Registering slow webhook via the AdmissionRegistration API @ 06/29/24 14:04:41.62
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 06/29/24 14:04:41.634
  E0629 14:04:41.739688      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 06/29/24 14:04:42.646
  STEP: Registering slow webhook via the AdmissionRegistration API @ 06/29/24 14:04:42.646
  E0629 14:04:42.740619      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 06/29/24 14:04:43.676
  STEP: Registering slow webhook via the AdmissionRegistration API @ 06/29/24 14:04:43.676
  E0629 14:04:43.741393      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:04:44.741521      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:04:45.741808      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:04:46.741923      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:04:47.742023      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 06/29/24 14:04:48.707
  STEP: Registering slow webhook via the AdmissionRegistration API @ 06/29/24 14:04:48.707
  E0629 14:04:48.742235      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:04:49.742357      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:04:50.742546      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:04:51.743615      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:04:52.743708      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:04:53.743993      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:04:53.789: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3269" for this suite. @ 06/29/24 14:04:53.793
  STEP: Destroying namespace "webhook-markers-9327" for this suite. @ 06/29/24 14:04:53.8
â€¢ [15.405 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 06/29/24 14:04:53.805
  Jun 29 14:04:53.805: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename container-probe @ 06/29/24 14:04:53.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:04:53.818
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:04:53.825
  E0629 14:04:54.744140      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:04:55.744249      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:04:56.744341      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:04:57.744412      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:04:58.744499      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:04:59.744767      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:05:00.744916      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:05:01.745099      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:05:02.745199      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:05:03.745624      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:05:04.745810      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:05:05.745999      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:05:06.746210      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:05:07.746344      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:05:08.746549      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:05:09.746651      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:05:10.746743      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:05:11.746845      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:05:12.746947      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:05:13.747991      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:05:14.748723      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:05:15.748832      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:05:15.905: INFO: Container started at 2024-06-29 14:04:54 +0000 UTC, pod became ready at 2024-06-29 14:05:14 +0000 UTC
  Jun 29 14:05:15.905: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9434" for this suite. @ 06/29/24 14:05:15.91
â€¢ [22.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:96
  STEP: Creating a kubernetes client @ 06/29/24 14:05:15.918
  Jun 29 14:05:15.918: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename secrets @ 06/29/24 14:05:15.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:05:15.932
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:05:15.935
  STEP: creating secret secrets-9366/secret-test-cdecbcef-12c2-4564-9793-ea55a143a814 @ 06/29/24 14:05:15.937
  STEP: Creating a pod to test consume secrets @ 06/29/24 14:05:15.942
  E0629 14:05:16.748981      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:05:17.749074      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:05:18.749632      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:05:19.749803      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/29/24 14:05:19.968
  Jun 29 14:05:19.971: INFO: Trying to get logs from node ip-172-31-94-98 pod pod-configmaps-a60869a7-b1aa-4c6e-8a66-d39f037df9b6 container env-test: <nil>
  STEP: delete the pod @ 06/29/24 14:05:19.977
  Jun 29 14:05:19.995: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9366" for this suite. @ 06/29/24 14:05:20
â€¢ [4.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 06/29/24 14:05:20.008
  Jun 29 14:05:20.008: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename downward-api @ 06/29/24 14:05:20.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:05:20.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:05:20.028
  STEP: Creating a pod to test downward API volume plugin @ 06/29/24 14:05:20.031
  E0629 14:05:20.749942      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:05:21.750119      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:05:22.750482      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:05:23.750834      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/29/24 14:05:24.054
  Jun 29 14:05:24.057: INFO: Trying to get logs from node ip-172-31-94-98 pod downwardapi-volume-21c9497a-8a20-4c58-8754-27b326092ef7 container client-container: <nil>
  STEP: delete the pod @ 06/29/24 14:05:24.064
  Jun 29 14:05:24.081: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2560" for this suite. @ 06/29/24 14:05:24.084
â€¢ [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 06/29/24 14:05:24.092
  Jun 29 14:05:24.092: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename apf @ 06/29/24 14:05:24.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:05:24.107
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:05:24.11
  STEP: getting /apis @ 06/29/24 14:05:24.113
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 06/29/24 14:05:24.118
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 06/29/24 14:05:24.119
  STEP: creating @ 06/29/24 14:05:24.12
  STEP: getting @ 06/29/24 14:05:24.136
  STEP: listing @ 06/29/24 14:05:24.248
  STEP: watching @ 06/29/24 14:05:24.253
  Jun 29 14:05:24.253: INFO: starting watch
  STEP: patching @ 06/29/24 14:05:24.254
  STEP: updating @ 06/29/24 14:05:24.259
  Jun 29 14:05:24.268: INFO: waiting for watch events with expected annotations
  STEP: getting /status @ 06/29/24 14:05:24.268
  STEP: patching /status @ 06/29/24 14:05:24.27
  STEP: updating /status @ 06/29/24 14:05:24.275
  STEP: deleting @ 06/29/24 14:05:24.307
  STEP: deleting a collection @ 06/29/24 14:05:24.319
  Jun 29 14:05:24.340: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-7862" for this suite. @ 06/29/24 14:05:24.344
â€¢ [0.260 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 06/29/24 14:05:24.352
  Jun 29 14:05:24.352: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename gc @ 06/29/24 14:05:24.353
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:05:24.365
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:05:24.369
  STEP: create the rc @ 06/29/24 14:05:24.374
  W0629 14:05:24.379058      18 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0629 14:05:24.751309      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:05:25.751729      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:05:26.773360      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:05:27.774300      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:05:28.774406      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:05:29.775451      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 06/29/24 14:05:30.384
  STEP: wait for the rc to be deleted @ 06/29/24 14:05:30.395
  E0629 14:05:30.776403      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:05:31.406: INFO: 80 pods remaining
  Jun 29 14:05:31.406: INFO: 80 pods has nil DeletionTimestamp
  Jun 29 14:05:31.406: INFO: 
  E0629 14:05:31.776516      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:05:32.404: INFO: 71 pods remaining
  Jun 29 14:05:32.404: INFO: 71 pods has nil DeletionTimestamp
  Jun 29 14:05:32.404: INFO: 
  E0629 14:05:32.777258      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:05:33.426: INFO: 60 pods remaining
  Jun 29 14:05:33.426: INFO: 60 pods has nil DeletionTimestamp
  Jun 29 14:05:33.426: INFO: 
  E0629 14:05:33.777481      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:05:34.408: INFO: 40 pods remaining
  Jun 29 14:05:34.408: INFO: 40 pods has nil DeletionTimestamp
  Jun 29 14:05:34.408: INFO: 
  E0629 14:05:34.777975      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:05:35.404: INFO: 31 pods remaining
  Jun 29 14:05:35.404: INFO: 31 pods has nil DeletionTimestamp
  Jun 29 14:05:35.404: INFO: 
  E0629 14:05:35.778123      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:05:36.404: INFO: 20 pods remaining
  Jun 29 14:05:36.404: INFO: 20 pods has nil DeletionTimestamp
  Jun 29 14:05:36.404: INFO: 
  E0629 14:05:36.778137      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 06/29/24 14:05:37.415
  W0629 14:05:37.423715      18 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jun 29 14:05:37.423: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jun 29 14:05:37.424: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5327" for this suite. @ 06/29/24 14:05:37.431
â€¢ [13.087 seconds]
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 06/29/24 14:05:37.439
  Jun 29 14:05:37.439: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename containers @ 06/29/24 14:05:37.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:05:37.456
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:05:37.462
  E0629 14:05:37.779218      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:05:38.779213      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:05:39.491: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-4215" for this suite. @ 06/29/24 14:05:39.496
â€¢ [2.064 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 06/29/24 14:05:39.503
  Jun 29 14:05:39.503: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename disruption @ 06/29/24 14:05:39.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:05:39.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:05:39.52
  STEP: Creating a kubernetes client @ 06/29/24 14:05:39.523
  Jun 29 14:05:39.523: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename disruption-2 @ 06/29/24 14:05:39.524
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:05:39.54
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:05:39.544
  STEP: Waiting for the pdb to be processed @ 06/29/24 14:05:39.553
  E0629 14:05:39.779247      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:05:40.779355      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 06/29/24 14:05:41.563
  STEP: Waiting for the pdb to be processed @ 06/29/24 14:05:41.575
  STEP: listing a collection of PDBs across all namespaces @ 06/29/24 14:05:41.58
  STEP: listing a collection of PDBs in namespace disruption-5065 @ 06/29/24 14:05:41.584
  STEP: deleting a collection of PDBs @ 06/29/24 14:05:41.586
  STEP: Waiting for the PDB collection to be deleted @ 06/29/24 14:05:41.601
  Jun 29 14:05:41.604: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-5540" for this suite. @ 06/29/24 14:05:41.608
  Jun 29 14:05:41.613: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5065" for this suite. @ 06/29/24 14:05:41.616
â€¢ [2.119 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 06/29/24 14:05:41.622
  Jun 29 14:05:41.623: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename replication-controller @ 06/29/24 14:05:41.623
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:05:41.635
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:05:41.639
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 06/29/24 14:05:41.642
  E0629 14:05:41.779831      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:05:42.780611      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 06/29/24 14:05:43.661
  STEP: Then the orphan pod is adopted @ 06/29/24 14:05:43.665
  E0629 14:05:43.781241      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:05:44.672: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6326" for this suite. @ 06/29/24 14:05:44.677
â€¢ [3.065 seconds]
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 06/29/24 14:05:44.688
  Jun 29 14:05:44.688: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename configmap @ 06/29/24 14:05:44.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:05:44.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:05:44.706
  STEP: Creating configMap with name configmap-test-upd-9f861a5b-5ac7-485d-84cb-2c4db29f8ae5 @ 06/29/24 14:05:44.712
  STEP: Creating the pod @ 06/29/24 14:05:44.716
  E0629 14:05:44.782071      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:05:45.782188      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-9f861a5b-5ac7-485d-84cb-2c4db29f8ae5 @ 06/29/24 14:05:46.75
  STEP: waiting to observe update in volume @ 06/29/24 14:05:46.757
  E0629 14:05:46.782467      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:05:47.782623      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:05:48.782742      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:05:49.783805      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:05:50.784282      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:05:51.784786      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:05:52.785090      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:05:53.785764      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:05:54.785854      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:05:55.786110      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:05:56.786379      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:05:57.786482      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:05:58.786721      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:05:59.787785      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:06:00.788746      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:06:01.789578      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:06:02.789670      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:06:03.790655      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:06:04.790774      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:06:05.791317      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:06:06.791436      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:06:07.791671      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:06:08.791782      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:06:09.791874      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:06:10.791964      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:06:11.792654      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:06:12.792763      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:06:13.793201      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:06:14.793332      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:06:15.793433      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:06:16.793523      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:06:17.793640      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:06:18.793786      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:06:19.794560      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:06:20.794786      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:06:21.794892      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:06:22.795180      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:06:23.795286      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:06:24.795795      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:06:25.795746      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:06:26.796813      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:06:27.796906      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:06:28.797027      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:06:29.797796      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:06:30.798167      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:06:31.798292      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:06:32.798364      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:06:33.798463      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:06:34.798557      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:06:35.798669      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:06:36.799289      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:06:37.799380      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:06:38.799481      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:06:39.799698      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:06:40.800739      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:06:41.800845      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:06:42.800934      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:06:43.801762      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:06:44.802841      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:06:45.803170      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:06:46.804242      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:06:47.804335      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:06:48.804588      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:06:49.040: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-571" for this suite. @ 06/29/24 14:06:49.043
â€¢ [64.362 seconds]
------------------------------
S
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 06/29/24 14:06:49.05
  Jun 29 14:06:49.050: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename services @ 06/29/24 14:06:49.051
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:06:49.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:06:49.068
  Jun 29 14:06:49.074: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9040" for this suite. @ 06/29/24 14:06:49.079
â€¢ [0.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:155
  STEP: Creating a kubernetes client @ 06/29/24 14:06:49.086
  Jun 29 14:06:49.086: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename secrets @ 06/29/24 14:06:49.086
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:06:49.099
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:06:49.102
  STEP: creating a secret @ 06/29/24 14:06:49.105
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 06/29/24 14:06:49.11
  STEP: patching the secret @ 06/29/24 14:06:49.113
  STEP: deleting the secret using a LabelSelector @ 06/29/24 14:06:49.121
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 06/29/24 14:06:49.129
  Jun 29 14:06:49.132: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7297" for this suite. @ 06/29/24 14:06:49.135
â€¢ [0.057 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 06/29/24 14:06:49.143
  Jun 29 14:06:49.143: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename projected @ 06/29/24 14:06:49.144
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:06:49.156
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:06:49.159
  STEP: Creating configMap with name projected-configmap-test-volume-79730b4d-ea79-478b-b3fe-99bcbe24fd45 @ 06/29/24 14:06:49.161
  STEP: Creating a pod to test consume configMaps @ 06/29/24 14:06:49.165
  E0629 14:06:49.804695      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:06:50.804787      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:06:51.804919      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:06:52.804987      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/29/24 14:06:53.189
  Jun 29 14:06:53.192: INFO: Trying to get logs from node ip-172-31-94-98 pod pod-projected-configmaps-7cd1f76b-e096-4c3e-a780-f08772a1e465 container agnhost-container: <nil>
  STEP: delete the pod @ 06/29/24 14:06:53.199
  Jun 29 14:06:53.218: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6713" for this suite. @ 06/29/24 14:06:53.221
â€¢ [4.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 06/29/24 14:06:53.228
  Jun 29 14:06:53.228: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename watch @ 06/29/24 14:06:53.229
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:06:53.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:06:53.244
  STEP: creating a new configmap @ 06/29/24 14:06:53.247
  STEP: modifying the configmap once @ 06/29/24 14:06:53.25
  STEP: modifying the configmap a second time @ 06/29/24 14:06:53.258
  STEP: deleting the configmap @ 06/29/24 14:06:53.265
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 06/29/24 14:06:53.272
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 06/29/24 14:06:53.273
  Jun 29 14:06:53.273: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-7647  5911d23d-c8fb-48aa-b9a0-e0371e0708e9 45921 0 2024-06-29 14:06:53 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-06-29 14:06:53 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 29 14:06:53.273: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-7647  5911d23d-c8fb-48aa-b9a0-e0371e0708e9 45922 0 2024-06-29 14:06:53 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-06-29 14:06:53 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 29 14:06:53.273: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7647" for this suite. @ 06/29/24 14:06:53.279
â€¢ [0.056 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 06/29/24 14:06:53.284
  Jun 29 14:06:53.284: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename configmap @ 06/29/24 14:06:53.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:06:53.297
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:06:53.301
  STEP: Creating configMap with name configmap-test-volume-07be300b-1324-4517-9842-4b3fcf73239f @ 06/29/24 14:06:53.304
  STEP: Creating a pod to test consume configMaps @ 06/29/24 14:06:53.309
  E0629 14:06:53.805837      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:06:54.806006      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:06:55.806246      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:06:56.806353      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/29/24 14:06:57.331
  Jun 29 14:06:57.334: INFO: Trying to get logs from node ip-172-31-94-98 pod pod-configmaps-eb00a45f-9015-491c-9b34-73dfce4043fd container agnhost-container: <nil>
  STEP: delete the pod @ 06/29/24 14:06:57.341
  Jun 29 14:06:57.359: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9547" for this suite. @ 06/29/24 14:06:57.362
â€¢ [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 06/29/24 14:06:57.369
  Jun 29 14:06:57.369: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename dns @ 06/29/24 14:06:57.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:06:57.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:06:57.473
  STEP: Creating a test headless service @ 06/29/24 14:06:57.476
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2608.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-2608.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2608.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-2608.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-2608.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-2608.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-2608.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-2608.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-2608.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-2608.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-2608.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-2608.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 88.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.88_udp@PTR;check="$$(dig +tcp +noall +answer +search 88.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.88_tcp@PTR;sleep 1; done
   @ 06/29/24 14:06:57.491
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2608.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-2608.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2608.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-2608.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-2608.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-2608.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-2608.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-2608.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-2608.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-2608.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-2608.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-2608.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 88.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.88_udp@PTR;check="$$(dig +tcp +noall +answer +search 88.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.88_tcp@PTR;sleep 1; done
   @ 06/29/24 14:06:57.491
  STEP: creating a pod to probe DNS @ 06/29/24 14:06:57.491
  STEP: submitting the pod to kubernetes @ 06/29/24 14:06:57.491
  E0629 14:06:57.807107      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:06:58.807212      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 06/29/24 14:06:59.516
  STEP: looking for the results for each expected name from probers @ 06/29/24 14:06:59.52
  Jun 29 14:06:59.524: INFO: Unable to read wheezy_udp@dns-test-service.dns-2608.svc.cluster.local from pod dns-2608/dns-test-f78b6553-62a1-427b-ad78-93a2fdd66a92: the server could not find the requested resource (get pods dns-test-f78b6553-62a1-427b-ad78-93a2fdd66a92)
  Jun 29 14:06:59.529: INFO: Unable to read wheezy_tcp@dns-test-service.dns-2608.svc.cluster.local from pod dns-2608/dns-test-f78b6553-62a1-427b-ad78-93a2fdd66a92: the server could not find the requested resource (get pods dns-test-f78b6553-62a1-427b-ad78-93a2fdd66a92)
  Jun 29 14:06:59.532: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-2608.svc.cluster.local from pod dns-2608/dns-test-f78b6553-62a1-427b-ad78-93a2fdd66a92: the server could not find the requested resource (get pods dns-test-f78b6553-62a1-427b-ad78-93a2fdd66a92)
  Jun 29 14:06:59.536: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-2608.svc.cluster.local from pod dns-2608/dns-test-f78b6553-62a1-427b-ad78-93a2fdd66a92: the server could not find the requested resource (get pods dns-test-f78b6553-62a1-427b-ad78-93a2fdd66a92)
  Jun 29 14:06:59.555: INFO: Unable to read jessie_udp@dns-test-service.dns-2608.svc.cluster.local from pod dns-2608/dns-test-f78b6553-62a1-427b-ad78-93a2fdd66a92: the server could not find the requested resource (get pods dns-test-f78b6553-62a1-427b-ad78-93a2fdd66a92)
  Jun 29 14:06:59.558: INFO: Unable to read jessie_tcp@dns-test-service.dns-2608.svc.cluster.local from pod dns-2608/dns-test-f78b6553-62a1-427b-ad78-93a2fdd66a92: the server could not find the requested resource (get pods dns-test-f78b6553-62a1-427b-ad78-93a2fdd66a92)
  Jun 29 14:06:59.563: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2608.svc.cluster.local from pod dns-2608/dns-test-f78b6553-62a1-427b-ad78-93a2fdd66a92: the server could not find the requested resource (get pods dns-test-f78b6553-62a1-427b-ad78-93a2fdd66a92)
  Jun 29 14:06:59.566: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2608.svc.cluster.local from pod dns-2608/dns-test-f78b6553-62a1-427b-ad78-93a2fdd66a92: the server could not find the requested resource (get pods dns-test-f78b6553-62a1-427b-ad78-93a2fdd66a92)
  Jun 29 14:06:59.579: INFO: Lookups using dns-2608/dns-test-f78b6553-62a1-427b-ad78-93a2fdd66a92 failed for: [wheezy_udp@dns-test-service.dns-2608.svc.cluster.local wheezy_tcp@dns-test-service.dns-2608.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-2608.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-2608.svc.cluster.local jessie_udp@dns-test-service.dns-2608.svc.cluster.local jessie_tcp@dns-test-service.dns-2608.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2608.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2608.svc.cluster.local]

  Jun 29 14:06:59.585: INFO: Pod client logs for webserver: 
  Jun 29 14:06:59.590: INFO: Pod client logs for querier: 
  Jun 29 14:06:59.596: INFO: Pod client logs for jessie-querier: 
  E0629 14:06:59.807787      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:07:00.807922      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:07:01.808032      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:07:02.808180      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:07:03.808287      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:07:04.581: INFO: DNS probes using dns-2608/dns-test-f78b6553-62a1-427b-ad78-93a2fdd66a92 succeeded

  STEP: deleting the pod @ 06/29/24 14:07:04.581
  STEP: deleting the test service @ 06/29/24 14:07:04.591
  STEP: deleting the test headless service @ 06/29/24 14:07:04.621
  Jun 29 14:07:04.634: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2608" for this suite. @ 06/29/24 14:07:04.637
â€¢ [7.276 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 06/29/24 14:07:04.645
  Jun 29 14:07:04.645: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename replicaset @ 06/29/24 14:07:04.645
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:07:04.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:07:04.661
  Jun 29 14:07:04.664: INFO: Creating ReplicaSet my-hostname-basic-166c8bdd-b369-4b98-829d-6535a69da0a9
  Jun 29 14:07:04.674: INFO: Pod name my-hostname-basic-166c8bdd-b369-4b98-829d-6535a69da0a9: Found 0 pods out of 1
  E0629 14:07:04.808763      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:07:05.808852      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:07:06.809253      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:07:07.809466      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:07:08.809519      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:07:09.677: INFO: Pod name my-hostname-basic-166c8bdd-b369-4b98-829d-6535a69da0a9: Found 1 pods out of 1
  Jun 29 14:07:09.677: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-166c8bdd-b369-4b98-829d-6535a69da0a9" is running
  Jun 29 14:07:09.683: INFO: Pod "my-hostname-basic-166c8bdd-b369-4b98-829d-6535a69da0a9-kcsj5" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-29 14:07:05 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-29 14:07:04 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-29 14:07:05 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-29 14:07:05 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-29 14:07:04 +0000 UTC Reason: Message:}])
  Jun 29 14:07:09.683: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 06/29/24 14:07:09.683
  Jun 29 14:07:09.694: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-76" for this suite. @ 06/29/24 14:07:09.698
â€¢ [5.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 06/29/24 14:07:09.706
  Jun 29 14:07:09.706: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename emptydir @ 06/29/24 14:07:09.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:07:09.72
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:07:09.723
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 06/29/24 14:07:09.726
  E0629 14:07:09.810612      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:07:10.810644      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:07:11.810799      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:07:12.810893      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/29/24 14:07:13.746
  Jun 29 14:07:13.749: INFO: Trying to get logs from node ip-172-31-10-28 pod pod-cb717122-c010-4cda-a891-c6ffa5f00672 container test-container: <nil>
  STEP: delete the pod @ 06/29/24 14:07:13.754
  Jun 29 14:07:13.771: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5745" for this suite. @ 06/29/24 14:07:13.775
â€¢ [4.076 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 06/29/24 14:07:13.782
  Jun 29 14:07:13.782: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename limitrange @ 06/29/24 14:07:13.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:07:13.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:07:13.801
  STEP: Creating LimitRange "e2e-limitrange-sbth8" in namespace "limitrange-5392" @ 06/29/24 14:07:13.804
  STEP: Creating another limitRange in another namespace @ 06/29/24 14:07:13.808
  E0629 14:07:13.811794      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:07:13.819: INFO: Namespace "e2e-limitrange-sbth8-3989" created
  Jun 29 14:07:13.819: INFO: Creating LimitRange "e2e-limitrange-sbth8" in namespace "e2e-limitrange-sbth8-3989"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-sbth8" @ 06/29/24 14:07:13.827
  Jun 29 14:07:13.832: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-sbth8" in "limitrange-5392" namespace @ 06/29/24 14:07:13.832
  Jun 29 14:07:13.837: INFO: LimitRange "e2e-limitrange-sbth8" has been patched
  STEP: Delete LimitRange "e2e-limitrange-sbth8" by Collection with labelSelector: "e2e-limitrange-sbth8=patched" @ 06/29/24 14:07:13.837
  STEP: Confirm that the limitRange "e2e-limitrange-sbth8" has been deleted @ 06/29/24 14:07:13.845
  Jun 29 14:07:13.845: INFO: Requesting list of LimitRange to confirm quantity
  Jun 29 14:07:13.848: INFO: Found 0 LimitRange with label "e2e-limitrange-sbth8=patched"
  Jun 29 14:07:13.848: INFO: LimitRange "e2e-limitrange-sbth8" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-sbth8" @ 06/29/24 14:07:13.848
  Jun 29 14:07:13.852: INFO: Found 1 limitRange
  Jun 29 14:07:13.852: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-5392" for this suite. @ 06/29/24 14:07:13.856
  STEP: Destroying namespace "e2e-limitrange-sbth8-3989" for this suite. @ 06/29/24 14:07:13.861
â€¢ [0.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 06/29/24 14:07:13.868
  Jun 29 14:07:13.868: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename cronjob @ 06/29/24 14:07:13.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:07:13.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:07:13.884
  STEP: Creating a ReplaceConcurrent cronjob @ 06/29/24 14:07:13.887
  STEP: Ensuring a job is scheduled @ 06/29/24 14:07:13.893
  E0629 14:07:14.811954      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:07:15.812059      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:07:16.812147      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:07:17.812246      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:07:18.812337      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:07:19.812523      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:07:20.813219      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:07:21.814168      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:07:22.814283      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:07:23.815189      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:07:24.815684      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:07:25.815779      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:07:26.815880      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:07:27.816000      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:07:28.816189      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:07:29.816262      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:07:30.816378      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:07:31.816793      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:07:32.817688      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:07:33.817766      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:07:34.817852      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:07:35.817960      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:07:36.818199      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:07:37.818390      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:07:38.818480      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:07:39.818579      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:07:40.818659      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:07:41.818755      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:07:42.819151      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:07:43.819139      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:07:44.819241      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:07:45.819430      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:07:46.819684      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:07:47.820753      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:07:48.820845      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:07:49.821845      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:07:50.821960      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:07:51.822057      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:07:52.822163      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:07:53.822249      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:07:54.822388      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:07:55.822546      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:07:56.822663      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:07:57.822926      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:07:58.823043      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:07:59.823789      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:00.823889      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:01.824089      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 06/29/24 14:08:01.898
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 06/29/24 14:08:01.903
  STEP: Ensuring the job is replaced with a new one @ 06/29/24 14:08:01.907
  E0629 14:08:02.824195      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:03.824597      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:04.825553      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:05.825710      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:06.825817      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:07.825909      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:08.826117      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:09.826240      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:10.826331      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:11.826564      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:12.826970      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:13.828034      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:14.828737      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:15.828971      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:16.829055      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:17.829353      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:18.829463      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:19.829559      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:20.830382      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:21.830477      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:22.831107      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:23.832051      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:24.832723      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:25.832823      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:26.832946      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:27.833020      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:28.833671      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:29.833824      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:30.833909      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:31.834343      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:32.834393      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:33.835380      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:34.835512      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:35.835695      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:36.835952      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:37.836059      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:38.836148      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:39.836245      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:40.836338      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:41.836451      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:42.837273      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:43.837659      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:44.838626      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:45.838723      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:46.838817      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:47.838911      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:48.839007      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:49.839091      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:50.839197      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:51.839307      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:52.839412      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:53.839855      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:54.840751      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:55.841242      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:56.841345      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:57.842108      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:58.842374      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:08:59.842617      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:09:00.843679      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:09:01.843776      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 06/29/24 14:09:01.913
  Jun 29 14:09:01.920: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3808" for this suite. @ 06/29/24 14:09:01.924
â€¢ [108.063 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:332
  STEP: Creating a kubernetes client @ 06/29/24 14:09:01.931
  Jun 29 14:09:01.932: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename statefulset @ 06/29/24 14:09:01.932
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:09:01.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:09:01.951
  STEP: Creating service test in namespace statefulset-2207 @ 06/29/24 14:09:01.954
  STEP: Creating a new StatefulSet @ 06/29/24 14:09:01.963
  Jun 29 14:09:01.974: INFO: Found 0 stateful pods, waiting for 3
  E0629 14:09:02.844760      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:09:03.845036      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:09:04.845119      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:09:05.845290      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:09:06.845712      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:09:07.846278      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:09:08.846703      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:09:09.846822      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:09:10.846909      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:09:11.847271      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:09:11.974: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun 29 14:09:11.974: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Jun 29 14:09:11.974: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 06/29/24 14:09:11.984
  Jun 29 14:09:12.003: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 06/29/24 14:09:12.003
  E0629 14:09:12.848283      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:09:13.848746      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:09:14.848853      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:09:15.849731      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:09:16.849803      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:09:17.849993      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:09:18.850199      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:09:19.850275      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:09:20.850584      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:09:21.850784      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 06/29/24 14:09:22.015
  STEP: Performing a canary update @ 06/29/24 14:09:22.015
  Jun 29 14:09:22.035: INFO: Updating stateful set ss2
  Jun 29 14:09:22.046: INFO: Waiting for Pod statefulset-2207/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0629 14:09:22.851513      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:09:23.851678      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:09:24.851793      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:09:25.851894      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:09:26.852731      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:09:27.852845      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:09:28.852953      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:09:29.853067      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:09:30.853251      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:09:31.853982      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 06/29/24 14:09:32.045
  Jun 29 14:09:32.086: INFO: Found 2 stateful pods, waiting for 3
  E0629 14:09:32.854244      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:09:33.855179      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:09:34.855257      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:09:35.855788      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:09:36.855806      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:09:37.856868      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:09:38.856961      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:09:39.857057      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:09:40.857134      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:09:41.857325      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:09:42.084: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun 29 14:09:42.084: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Jun 29 14:09:42.084: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 06/29/24 14:09:42.092
  Jun 29 14:09:42.111: INFO: Updating stateful set ss2
  Jun 29 14:09:42.123: INFO: Waiting for Pod statefulset-2207/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0629 14:09:42.857539      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:09:43.857801      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:09:44.857917      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:09:45.858022      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:09:46.859032      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:09:47.859955      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:09:48.860729      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:09:49.860832      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:09:50.861904      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:09:51.862958      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:09:52.139: INFO: Updating stateful set ss2
  Jun 29 14:09:52.149: INFO: Waiting for StatefulSet statefulset-2207/ss2 to complete update
  Jun 29 14:09:52.149: INFO: Waiting for Pod statefulset-2207/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0629 14:09:52.863075      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:09:53.863645      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:09:54.863754      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:09:55.863843      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:09:56.864734      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:09:57.864985      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:09:58.865170      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:09:59.865262      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:10:00.866243      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:10:01.866333      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:10:02.148: INFO: Deleting all statefulset in ns statefulset-2207
  Jun 29 14:10:02.150: INFO: Scaling statefulset ss2 to 0
  E0629 14:10:02.866788      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:10:03.866925      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:10:04.867156      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:10:05.867253      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:10:06.867336      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:10:07.867449      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:10:08.867740      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:10:09.867819      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:10:10.868738      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:10:11.868851      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:10:12.165: INFO: Waiting for statefulset status.replicas updated to 0
  Jun 29 14:10:12.167: INFO: Deleting statefulset ss2
  Jun 29 14:10:12.181: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2207" for this suite. @ 06/29/24 14:10:12.183
â€¢ [70.260 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 06/29/24 14:10:12.192
  Jun 29 14:10:12.192: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename emptydir @ 06/29/24 14:10:12.192
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:10:12.21
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:10:12.212
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 06/29/24 14:10:12.215
  E0629 14:10:12.868961      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:10:13.869183      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:10:14.870081      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:10:15.870196      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/29/24 14:10:16.241
  Jun 29 14:10:16.244: INFO: Trying to get logs from node ip-172-31-94-98 pod pod-2fb9b813-84a3-4ae0-b39e-1e4d3cce4c6f container test-container: <nil>
  STEP: delete the pod @ 06/29/24 14:10:16.263
  Jun 29 14:10:16.277: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4334" for this suite. @ 06/29/24 14:10:16.28
â€¢ [4.093 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 06/29/24 14:10:16.285
  Jun 29 14:10:16.285: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename secrets @ 06/29/24 14:10:16.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:10:16.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:10:16.302
  Jun 29 14:10:16.339: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8854" for this suite. @ 06/29/24 14:10:16.342
â€¢ [0.062 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 06/29/24 14:10:16.347
  Jun 29 14:10:16.347: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename projected @ 06/29/24 14:10:16.348
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:10:16.361
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:10:16.365
  STEP: Creating a pod to test downward API volume plugin @ 06/29/24 14:10:16.37
  E0629 14:10:16.870485      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:10:17.870629      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/29/24 14:10:18.389
  Jun 29 14:10:18.391: INFO: Trying to get logs from node ip-172-31-94-98 pod downwardapi-volume-aa0a31d5-ace7-4fb9-abec-d9f6ea109652 container client-container: <nil>
  STEP: delete the pod @ 06/29/24 14:10:18.398
  Jun 29 14:10:18.412: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8537" for this suite. @ 06/29/24 14:10:18.415
â€¢ [2.074 seconds]
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 06/29/24 14:10:18.421
  Jun 29 14:10:18.421: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename daemonsets @ 06/29/24 14:10:18.422
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:10:18.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:10:18.44
  Jun 29 14:10:18.459: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/29/24 14:10:18.465
  Jun 29 14:10:18.468: INFO: DaemonSet pods can't tolerate node ip-172-31-15-151 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 14:10:18.468: INFO: DaemonSet pods can't tolerate node ip-172-31-22-17 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 14:10:18.473: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 29 14:10:18.473: INFO: Node ip-172-31-10-28 is running 0 daemon pod, expected 1
  E0629 14:10:18.871592      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:10:19.471: INFO: DaemonSet pods can't tolerate node ip-172-31-15-151 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 14:10:19.472: INFO: DaemonSet pods can't tolerate node ip-172-31-22-17 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 14:10:19.475: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun 29 14:10:19.475: INFO: Node ip-172-31-10-28 is running 0 daemon pod, expected 1
  E0629 14:10:19.872519      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:10:20.471: INFO: DaemonSet pods can't tolerate node ip-172-31-15-151 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 14:10:20.471: INFO: DaemonSet pods can't tolerate node ip-172-31-22-17 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 14:10:20.474: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun 29 14:10:20.474: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 06/29/24 14:10:20.489
  STEP: Check that daemon pods images are updated. @ 06/29/24 14:10:20.5
  Jun 29 14:10:20.503: INFO: Wrong image for pod: daemon-set-mbjrk. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun 29 14:10:20.503: INFO: Wrong image for pod: daemon-set-mlxf9. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun 29 14:10:20.503: INFO: Wrong image for pod: daemon-set-wqjxw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun 29 14:10:20.508: INFO: DaemonSet pods can't tolerate node ip-172-31-15-151 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 14:10:20.508: INFO: DaemonSet pods can't tolerate node ip-172-31-22-17 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0629 14:10:20.872854      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:10:21.505: INFO: Wrong image for pod: daemon-set-mbjrk. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun 29 14:10:21.505: INFO: Wrong image for pod: daemon-set-mlxf9. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun 29 14:10:21.505: INFO: Pod daemon-set-w9df8 is not available
  Jun 29 14:10:21.509: INFO: DaemonSet pods can't tolerate node ip-172-31-15-151 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 14:10:21.509: INFO: DaemonSet pods can't tolerate node ip-172-31-22-17 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0629 14:10:21.873095      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:10:22.505: INFO: Wrong image for pod: daemon-set-mlxf9. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun 29 14:10:22.505: INFO: Pod daemon-set-sxblp is not available
  Jun 29 14:10:22.513: INFO: DaemonSet pods can't tolerate node ip-172-31-15-151 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 14:10:22.513: INFO: DaemonSet pods can't tolerate node ip-172-31-22-17 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0629 14:10:22.873133      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:10:23.503: INFO: Wrong image for pod: daemon-set-mlxf9. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun 29 14:10:23.503: INFO: Pod daemon-set-sxblp is not available
  Jun 29 14:10:23.511: INFO: DaemonSet pods can't tolerate node ip-172-31-15-151 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 14:10:23.511: INFO: DaemonSet pods can't tolerate node ip-172-31-22-17 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0629 14:10:23.873710      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:10:24.505: INFO: Pod daemon-set-cf6tx is not available
  Jun 29 14:10:24.509: INFO: DaemonSet pods can't tolerate node ip-172-31-15-151 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 14:10:24.509: INFO: DaemonSet pods can't tolerate node ip-172-31-22-17 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 06/29/24 14:10:24.509
  Jun 29 14:10:24.512: INFO: DaemonSet pods can't tolerate node ip-172-31-15-151 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 14:10:24.512: INFO: DaemonSet pods can't tolerate node ip-172-31-22-17 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 14:10:24.515: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun 29 14:10:24.515: INFO: Node ip-172-31-94-98 is running 0 daemon pod, expected 1
  E0629 14:10:24.874562      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:10:25.515: INFO: DaemonSet pods can't tolerate node ip-172-31-15-151 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 14:10:25.515: INFO: DaemonSet pods can't tolerate node ip-172-31-22-17 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 14:10:25.518: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun 29 14:10:25.518: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 06/29/24 14:10:25.535
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5802, will wait for the garbage collector to delete the pods @ 06/29/24 14:10:25.535
  Jun 29 14:10:25.596: INFO: Deleting DaemonSet.extensions daemon-set took: 7.710342ms
  Jun 29 14:10:25.696: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.499938ms
  E0629 14:10:25.875141      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:10:26.876005      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:10:27.300: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 29 14:10:27.300: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jun 29 14:10:27.303: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"47260"},"items":null}

  Jun 29 14:10:27.306: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"47260"},"items":null}

  Jun 29 14:10:27.319: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5802" for this suite. @ 06/29/24 14:10:27.323
â€¢ [8.908 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 06/29/24 14:10:27.33
  Jun 29 14:10:27.330: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename downward-api @ 06/29/24 14:10:27.331
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:10:27.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:10:27.348
  STEP: Creating a pod to test downward API volume plugin @ 06/29/24 14:10:27.351
  E0629 14:10:27.876087      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:10:28.876175      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:10:29.876732      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:10:30.876855      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/29/24 14:10:31.37
  Jun 29 14:10:31.373: INFO: Trying to get logs from node ip-172-31-94-98 pod downwardapi-volume-78275062-9010-4258-a91b-5d47c079a36b container client-container: <nil>
  STEP: delete the pod @ 06/29/24 14:10:31.381
  Jun 29 14:10:31.395: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3498" for this suite. @ 06/29/24 14:10:31.398
â€¢ [4.075 seconds]
------------------------------
SS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:134
  STEP: Creating a kubernetes client @ 06/29/24 14:10:31.406
  Jun 29 14:10:31.406: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename kubelet-test @ 06/29/24 14:10:31.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:10:31.419
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:10:31.422
  Jun 29 14:10:31.443: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7877" for this suite. @ 06/29/24 14:10:31.448
â€¢ [0.051 seconds]
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2199
  STEP: Creating a kubernetes client @ 06/29/24 14:10:31.457
  Jun 29 14:10:31.457: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename services @ 06/29/24 14:10:31.457
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:10:31.474
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:10:31.476
  STEP: creating service in namespace services-7171 @ 06/29/24 14:10:31.479
  STEP: creating service affinity-clusterip-transition in namespace services-7171 @ 06/29/24 14:10:31.479
  STEP: creating replication controller affinity-clusterip-transition in namespace services-7171 @ 06/29/24 14:10:31.488
  I0629 14:10:31.496802      18 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-7171, replica count: 3
  E0629 14:10:31.877223      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:10:32.878023      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:10:33.878051      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0629 14:10:34.547054      18 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun 29 14:10:34.554: INFO: Creating new exec pod
  E0629 14:10:34.878266      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:10:35.878325      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:10:36.879105      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:10:37.567: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-7171 exec execpod-affinity55nnv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  Jun 29 14:10:37.659: INFO: stderr: "+ nc -v -t -w 2 affinity-clusterip-transition 80\n+ echo hostName\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  Jun 29 14:10:37.659: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 29 14:10:37.659: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-7171 exec execpod-affinity55nnv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.111 80'
  Jun 29 14:10:37.749: INFO: stderr: "+ nc -v -t -w 2 10.152.183.111 80\n+ echo hostName\nConnection to 10.152.183.111 80 port [tcp/http] succeeded!\n"
  Jun 29 14:10:37.749: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 29 14:10:37.758: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-7171 exec execpod-affinity55nnv -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.111:80/ ; done'
  E0629 14:10:37.879707      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:10:37.896: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.111:80/\n"
  Jun 29 14:10:37.896: INFO: stdout: "\naffinity-clusterip-transition-ddqzx\naffinity-clusterip-transition-t5hjf\naffinity-clusterip-transition-ddqzx\naffinity-clusterip-transition-t5hjf\naffinity-clusterip-transition-smw4r\naffinity-clusterip-transition-smw4r\naffinity-clusterip-transition-t5hjf\naffinity-clusterip-transition-smw4r\naffinity-clusterip-transition-smw4r\naffinity-clusterip-transition-ddqzx\naffinity-clusterip-transition-smw4r\naffinity-clusterip-transition-smw4r\naffinity-clusterip-transition-smw4r\naffinity-clusterip-transition-smw4r\naffinity-clusterip-transition-t5hjf\naffinity-clusterip-transition-t5hjf"
  Jun 29 14:10:37.896: INFO: Received response from host: affinity-clusterip-transition-ddqzx
  Jun 29 14:10:37.896: INFO: Received response from host: affinity-clusterip-transition-t5hjf
  Jun 29 14:10:37.896: INFO: Received response from host: affinity-clusterip-transition-ddqzx
  Jun 29 14:10:37.896: INFO: Received response from host: affinity-clusterip-transition-t5hjf
  Jun 29 14:10:37.896: INFO: Received response from host: affinity-clusterip-transition-smw4r
  Jun 29 14:10:37.896: INFO: Received response from host: affinity-clusterip-transition-smw4r
  Jun 29 14:10:37.896: INFO: Received response from host: affinity-clusterip-transition-t5hjf
  Jun 29 14:10:37.896: INFO: Received response from host: affinity-clusterip-transition-smw4r
  Jun 29 14:10:37.896: INFO: Received response from host: affinity-clusterip-transition-smw4r
  Jun 29 14:10:37.896: INFO: Received response from host: affinity-clusterip-transition-ddqzx
  Jun 29 14:10:37.896: INFO: Received response from host: affinity-clusterip-transition-smw4r
  Jun 29 14:10:37.896: INFO: Received response from host: affinity-clusterip-transition-smw4r
  Jun 29 14:10:37.896: INFO: Received response from host: affinity-clusterip-transition-smw4r
  Jun 29 14:10:37.896: INFO: Received response from host: affinity-clusterip-transition-smw4r
  Jun 29 14:10:37.896: INFO: Received response from host: affinity-clusterip-transition-t5hjf
  Jun 29 14:10:37.896: INFO: Received response from host: affinity-clusterip-transition-t5hjf
  Jun 29 14:10:37.908: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4284821169 --namespace=services-7171 exec execpod-affinity55nnv -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.111:80/ ; done'
  Jun 29 14:10:38.055: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.111:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.111:80/\n"
  Jun 29 14:10:38.055: INFO: stdout: "\naffinity-clusterip-transition-ddqzx\naffinity-clusterip-transition-ddqzx\naffinity-clusterip-transition-ddqzx\naffinity-clusterip-transition-ddqzx\naffinity-clusterip-transition-ddqzx\naffinity-clusterip-transition-ddqzx\naffinity-clusterip-transition-ddqzx\naffinity-clusterip-transition-ddqzx\naffinity-clusterip-transition-ddqzx\naffinity-clusterip-transition-ddqzx\naffinity-clusterip-transition-ddqzx\naffinity-clusterip-transition-ddqzx\naffinity-clusterip-transition-ddqzx\naffinity-clusterip-transition-ddqzx\naffinity-clusterip-transition-ddqzx\naffinity-clusterip-transition-ddqzx"
  Jun 29 14:10:38.055: INFO: Received response from host: affinity-clusterip-transition-ddqzx
  Jun 29 14:10:38.055: INFO: Received response from host: affinity-clusterip-transition-ddqzx
  Jun 29 14:10:38.055: INFO: Received response from host: affinity-clusterip-transition-ddqzx
  Jun 29 14:10:38.055: INFO: Received response from host: affinity-clusterip-transition-ddqzx
  Jun 29 14:10:38.055: INFO: Received response from host: affinity-clusterip-transition-ddqzx
  Jun 29 14:10:38.055: INFO: Received response from host: affinity-clusterip-transition-ddqzx
  Jun 29 14:10:38.055: INFO: Received response from host: affinity-clusterip-transition-ddqzx
  Jun 29 14:10:38.055: INFO: Received response from host: affinity-clusterip-transition-ddqzx
  Jun 29 14:10:38.055: INFO: Received response from host: affinity-clusterip-transition-ddqzx
  Jun 29 14:10:38.055: INFO: Received response from host: affinity-clusterip-transition-ddqzx
  Jun 29 14:10:38.055: INFO: Received response from host: affinity-clusterip-transition-ddqzx
  Jun 29 14:10:38.055: INFO: Received response from host: affinity-clusterip-transition-ddqzx
  Jun 29 14:10:38.055: INFO: Received response from host: affinity-clusterip-transition-ddqzx
  Jun 29 14:10:38.055: INFO: Received response from host: affinity-clusterip-transition-ddqzx
  Jun 29 14:10:38.055: INFO: Received response from host: affinity-clusterip-transition-ddqzx
  Jun 29 14:10:38.055: INFO: Received response from host: affinity-clusterip-transition-ddqzx
  Jun 29 14:10:38.055: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-7171, will wait for the garbage collector to delete the pods @ 06/29/24 14:10:38.067
  Jun 29 14:10:38.130: INFO: Deleting ReplicationController affinity-clusterip-transition took: 8.813222ms
  Jun 29 14:10:38.230: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.115362ms
  E0629 14:10:38.880195      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:10:39.880716      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:10:40.881257      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:10:41.356: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7171" for this suite. @ 06/29/24 14:10:41.36
â€¢ [9.909 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 06/29/24 14:10:41.366
  Jun 29 14:10:41.366: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename svcaccounts @ 06/29/24 14:10:41.366
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:10:41.379
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:10:41.382
  Jun 29 14:10:41.388: INFO: Got root ca configmap in namespace "svcaccounts-3237"
  Jun 29 14:10:41.394: INFO: Deleted root ca configmap in namespace "svcaccounts-3237"
  E0629 14:10:41.882064      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for a new root ca configmap created @ 06/29/24 14:10:41.895
  Jun 29 14:10:41.900: INFO: Recreated root ca configmap in namespace "svcaccounts-3237"
  Jun 29 14:10:41.906: INFO: Updated root ca configmap in namespace "svcaccounts-3237"
  STEP: waiting for the root ca configmap reconciled @ 06/29/24 14:10:42.407
  Jun 29 14:10:42.411: INFO: Reconciled root ca configmap in namespace "svcaccounts-3237"
  Jun 29 14:10:42.411: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3237" for this suite. @ 06/29/24 14:10:42.415
â€¢ [1.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 06/29/24 14:10:42.422
  Jun 29 14:10:42.422: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename projected @ 06/29/24 14:10:42.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:10:42.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:10:42.438
  STEP: Creating configMap with name projected-configmap-test-volume-bad9cd98-5d6f-4bd3-942d-3f40e3a34775 @ 06/29/24 14:10:42.441
  STEP: Creating a pod to test consume configMaps @ 06/29/24 14:10:42.445
  E0629 14:10:42.882928      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:10:43.883057      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/29/24 14:10:44.465
  Jun 29 14:10:44.468: INFO: Trying to get logs from node ip-172-31-94-98 pod pod-projected-configmaps-d21c478e-6937-4361-a9b2-0a8225251e56 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 06/29/24 14:10:44.473
  Jun 29 14:10:44.489: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2582" for this suite. @ 06/29/24 14:10:44.492
â€¢ [2.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:855
  STEP: Creating a kubernetes client @ 06/29/24 14:10:44.5
  Jun 29 14:10:44.500: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename job @ 06/29/24 14:10:44.501
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:10:44.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:10:44.521
  STEP: Creating a suspended job @ 06/29/24 14:10:44.528
  STEP: Patching the Job @ 06/29/24 14:10:44.532
  STEP: Watching for Job to be patched @ 06/29/24 14:10:44.549
  Jun 29 14:10:44.551: INFO: Event ADDED observed for Job e2e-4w72g in namespace job-1432 with labels: map[e2e-job-label:e2e-4w72g] and annotations: map[]
  Jun 29 14:10:44.551: INFO: Event MODIFIED observed for Job e2e-4w72g in namespace job-1432 with labels: map[e2e-job-label:e2e-4w72g] and annotations: map[]
  Jun 29 14:10:44.551: INFO: Event MODIFIED found for Job e2e-4w72g in namespace job-1432 with labels: map[e2e-4w72g:patched e2e-job-label:e2e-4w72g] and annotations: map[]
  STEP: Updating the job @ 06/29/24 14:10:44.551
  STEP: Watching for Job to be updated @ 06/29/24 14:10:44.56
  Jun 29 14:10:44.562: INFO: Event MODIFIED found for Job e2e-4w72g in namespace job-1432 with labels: map[e2e-4w72g:patched e2e-job-label:e2e-4w72g] and annotations: map[updated:true]
  Jun 29 14:10:44.562: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 06/29/24 14:10:44.562
  Jun 29 14:10:44.567: INFO: Job: e2e-4w72g as labels: map[e2e-4w72g:patched e2e-job-label:e2e-4w72g]
  STEP: Waiting for job to complete @ 06/29/24 14:10:44.567
  E0629 14:10:44.884047      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:10:45.884137      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:10:46.884220      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:10:47.884315      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:10:48.884434      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:10:49.884521      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:10:50.884771      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:10:51.884857      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 06/29/24 14:10:52.573
  STEP: Watching for Job to be deleted @ 06/29/24 14:10:52.582
  Jun 29 14:10:52.583: INFO: Event MODIFIED observed for Job e2e-4w72g in namespace job-1432 with labels: map[e2e-4w72g:patched e2e-job-label:e2e-4w72g] and annotations: map[updated:true]
  Jun 29 14:10:52.583: INFO: Event MODIFIED observed for Job e2e-4w72g in namespace job-1432 with labels: map[e2e-4w72g:patched e2e-job-label:e2e-4w72g] and annotations: map[updated:true]
  Jun 29 14:10:52.583: INFO: Event MODIFIED observed for Job e2e-4w72g in namespace job-1432 with labels: map[e2e-4w72g:patched e2e-job-label:e2e-4w72g] and annotations: map[updated:true]
  Jun 29 14:10:52.584: INFO: Event MODIFIED observed for Job e2e-4w72g in namespace job-1432 with labels: map[e2e-4w72g:patched e2e-job-label:e2e-4w72g] and annotations: map[updated:true]
  Jun 29 14:10:52.584: INFO: Event MODIFIED observed for Job e2e-4w72g in namespace job-1432 with labels: map[e2e-4w72g:patched e2e-job-label:e2e-4w72g] and annotations: map[updated:true]
  Jun 29 14:10:52.584: INFO: Event DELETED found for Job e2e-4w72g in namespace job-1432 with labels: map[e2e-4w72g:patched e2e-job-label:e2e-4w72g] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 06/29/24 14:10:52.584
  Jun 29 14:10:52.587: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1432" for this suite. @ 06/29/24 14:10:52.596
â€¢ [8.111 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 06/29/24 14:10:52.615
  Jun 29 14:10:52.615: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename gc @ 06/29/24 14:10:52.616
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:10:52.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:10:52.641
  STEP: create the deployment @ 06/29/24 14:10:52.644
  W0629 14:10:52.652421      18 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 06/29/24 14:10:52.652
  E0629 14:10:52.884988      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 06/29/24 14:10:53.161
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 06/29/24 14:10:53.168
  STEP: Gathering metrics @ 06/29/24 14:10:53.682
  W0629 14:10:53.686812      18 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jun 29 14:10:53.686: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jun 29 14:10:53.687: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3870" for this suite. @ 06/29/24 14:10:53.691
â€¢ [1.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 06/29/24 14:10:53.699
  Jun 29 14:10:53.699: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename disruption @ 06/29/24 14:10:53.699
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:10:53.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:10:53.727
  STEP: Creating a pdb that targets all three pods in a test replica set @ 06/29/24 14:10:53.732
  STEP: Waiting for the pdb to be processed @ 06/29/24 14:10:53.741
  E0629 14:10:53.885546      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:10:54.885882      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 06/29/24 14:10:55.753
  STEP: Waiting for all pods to be running @ 06/29/24 14:10:55.753
  Jun 29 14:10:55.757: INFO: pods: 0 < 3
  E0629 14:10:55.886376      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:10:56.886498      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 06/29/24 14:10:57.757
  STEP: Updating the pdb to allow a pod to be evicted @ 06/29/24 14:10:57.768
  STEP: Waiting for the pdb to be processed @ 06/29/24 14:10:57.775
  E0629 14:10:57.886542      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:10:58.886666      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 06/29/24 14:10:59.781
  STEP: Waiting for all pods to be running @ 06/29/24 14:10:59.781
  STEP: Waiting for the pdb to observed all healthy pods @ 06/29/24 14:10:59.785
  STEP: Patching the pdb to disallow a pod to be evicted @ 06/29/24 14:10:59.818
  STEP: Waiting for the pdb to be processed @ 06/29/24 14:10:59.843
  E0629 14:10:59.886987      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:11:00.887129      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 06/29/24 14:11:01.849
  STEP: locating a running pod @ 06/29/24 14:11:01.852
  STEP: Deleting the pdb to allow a pod to be evicted @ 06/29/24 14:11:01.862
  STEP: Waiting for the pdb to be deleted @ 06/29/24 14:11:01.868
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 06/29/24 14:11:01.87
  STEP: Waiting for all pods to be running @ 06/29/24 14:11:01.87
  E0629 14:11:01.887642      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:11:01.889: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2462" for this suite. @ 06/29/24 14:11:01.892
â€¢ [8.200 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 06/29/24 14:11:01.9
  Jun 29 14:11:01.900: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename namespaces @ 06/29/24 14:11:01.9
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:11:01.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:11:01.923
  STEP: Creating a test namespace @ 06/29/24 14:11:01.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:11:01.939
  STEP: Creating a pod in the namespace @ 06/29/24 14:11:01.944
  STEP: Waiting for the pod to have running status @ 06/29/24 14:11:01.953
  E0629 14:11:02.887793      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:11:03.888747      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 06/29/24 14:11:03.962
  STEP: Waiting for the namespace to be removed. @ 06/29/24 14:11:03.97
  E0629 14:11:04.889618      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:11:05.889674      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:11:06.890084      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:11:07.890143      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:11:08.890217      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:11:09.890974      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:11:10.891667      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:11:11.892721      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:11:12.892981      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:11:13.893080      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:11:14.893190      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 06/29/24 14:11:14.976
  STEP: Verifying there are no pods in the namespace @ 06/29/24 14:11:14.993
  Jun 29 14:11:14.996: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4394" for this suite. @ 06/29/24 14:11:15.002
  STEP: Destroying namespace "nsdeletetest-3607" for this suite. @ 06/29/24 14:11:15.008
  Jun 29 14:11:15.011: INFO: Namespace nsdeletetest-3607 was already deleted
  STEP: Destroying namespace "nsdeletetest-8719" for this suite. @ 06/29/24 14:11:15.011
â€¢ [13.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 06/29/24 14:11:15.024
  Jun 29 14:11:15.024: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename namespaces @ 06/29/24 14:11:15.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:11:15.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:11:15.04
  STEP: Creating namespace "e2e-ns-fzz22" @ 06/29/24 14:11:15.042
  Jun 29 14:11:15.054: INFO: Namespace "e2e-ns-fzz22-6108" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-fzz22-6108" @ 06/29/24 14:11:15.054
  Jun 29 14:11:15.065: INFO: Namespace "e2e-ns-fzz22-6108" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-fzz22-6108" @ 06/29/24 14:11:15.065
  Jun 29 14:11:15.073: INFO: Namespace "e2e-ns-fzz22-6108" has []v1.FinalizerName{"kubernetes"}
  Jun 29 14:11:15.073: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-348" for this suite. @ 06/29/24 14:11:15.076
  STEP: Destroying namespace "e2e-ns-fzz22-6108" for this suite. @ 06/29/24 14:11:15.082
â€¢ [0.065 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 06/29/24 14:11:15.089
  Jun 29 14:11:15.089: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename controllerrevisions @ 06/29/24 14:11:15.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:11:15.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:11:15.105
  STEP: Creating DaemonSet "e2e-6x5fs-daemon-set" @ 06/29/24 14:11:15.126
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/29/24 14:11:15.131
  Jun 29 14:11:15.138: INFO: DaemonSet pods can't tolerate node ip-172-31-15-151 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 14:11:15.138: INFO: DaemonSet pods can't tolerate node ip-172-31-22-17 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 14:11:15.143: INFO: Number of nodes with available pods controlled by daemonset e2e-6x5fs-daemon-set: 0
  Jun 29 14:11:15.143: INFO: Node ip-172-31-10-28 is running 0 daemon pod, expected 1
  E0629 14:11:15.894247      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:11:16.136: INFO: DaemonSet pods can't tolerate node ip-172-31-15-151 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 14:11:16.136: INFO: DaemonSet pods can't tolerate node ip-172-31-22-17 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 14:11:16.141: INFO: Number of nodes with available pods controlled by daemonset e2e-6x5fs-daemon-set: 0
  Jun 29 14:11:16.141: INFO: Node ip-172-31-10-28 is running 0 daemon pod, expected 1
  E0629 14:11:16.895155      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:11:17.137: INFO: DaemonSet pods can't tolerate node ip-172-31-15-151 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 14:11:17.137: INFO: DaemonSet pods can't tolerate node ip-172-31-22-17 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 29 14:11:17.140: INFO: Number of nodes with available pods controlled by daemonset e2e-6x5fs-daemon-set: 3
  Jun 29 14:11:17.140: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset e2e-6x5fs-daemon-set
  STEP: Confirm DaemonSet "e2e-6x5fs-daemon-set" successfully created with "daemonset-name=e2e-6x5fs-daemon-set" label @ 06/29/24 14:11:17.142
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-6x5fs-daemon-set" @ 06/29/24 14:11:17.15
  Jun 29 14:11:17.154: INFO: Located ControllerRevision: "e2e-6x5fs-daemon-set-77d586b965"
  STEP: Patching ControllerRevision "e2e-6x5fs-daemon-set-77d586b965" @ 06/29/24 14:11:17.157
  Jun 29 14:11:17.163: INFO: e2e-6x5fs-daemon-set-77d586b965 has been patched
  STEP: Create a new ControllerRevision @ 06/29/24 14:11:17.163
  Jun 29 14:11:17.170: INFO: Created ControllerRevision: e2e-6x5fs-daemon-set-8656f4fd5c
  STEP: Confirm that there are two ControllerRevisions @ 06/29/24 14:11:17.17
  Jun 29 14:11:17.170: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jun 29 14:11:17.173: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-6x5fs-daemon-set-77d586b965" @ 06/29/24 14:11:17.173
  STEP: Confirm that there is only one ControllerRevision @ 06/29/24 14:11:17.179
  Jun 29 14:11:17.179: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jun 29 14:11:17.182: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-6x5fs-daemon-set-8656f4fd5c" @ 06/29/24 14:11:17.184
  Jun 29 14:11:17.192: INFO: e2e-6x5fs-daemon-set-8656f4fd5c has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 06/29/24 14:11:17.192
  W0629 14:11:17.197922      18 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 06/29/24 14:11:17.198
  Jun 29 14:11:17.198: INFO: Requesting list of ControllerRevisions to confirm quantity
  E0629 14:11:17.895263      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:11:18.198: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jun 29 14:11:18.203: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-6x5fs-daemon-set-8656f4fd5c=updated" @ 06/29/24 14:11:18.203
  STEP: Confirm that there is only one ControllerRevision @ 06/29/24 14:11:18.212
  Jun 29 14:11:18.212: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jun 29 14:11:18.216: INFO: Found 1 ControllerRevisions
  Jun 29 14:11:18.220: INFO: ControllerRevision "e2e-6x5fs-daemon-set-5874c47b4d" has revision 3
  STEP: Deleting DaemonSet "e2e-6x5fs-daemon-set" @ 06/29/24 14:11:18.223
  STEP: deleting DaemonSet.extensions e2e-6x5fs-daemon-set in namespace controllerrevisions-6870, will wait for the garbage collector to delete the pods @ 06/29/24 14:11:18.223
  Jun 29 14:11:18.285: INFO: Deleting DaemonSet.extensions e2e-6x5fs-daemon-set took: 8.519923ms
  Jun 29 14:11:18.388: INFO: Terminating DaemonSet.extensions e2e-6x5fs-daemon-set pods took: 102.936247ms
  E0629 14:11:18.896232      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:11:19.793: INFO: Number of nodes with available pods controlled by daemonset e2e-6x5fs-daemon-set: 0
  Jun 29 14:11:19.793: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-6x5fs-daemon-set
  Jun 29 14:11:19.796: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"48183"},"items":null}

  Jun 29 14:11:19.801: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"48183"},"items":null}

  Jun 29 14:11:19.815: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-6870" for this suite. @ 06/29/24 14:11:19.819
â€¢ [4.735 seconds]
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 06/29/24 14:11:19.825
  Jun 29 14:11:19.825: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename watch @ 06/29/24 14:11:19.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:11:19.838
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:11:19.842
  STEP: creating a watch on configmaps @ 06/29/24 14:11:19.845
  STEP: creating a new configmap @ 06/29/24 14:11:19.846
  STEP: modifying the configmap once @ 06/29/24 14:11:19.849
  STEP: closing the watch once it receives two notifications @ 06/29/24 14:11:19.857
  Jun 29 14:11:19.857: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2797  a11cded9-9caa-4fd2-8a0c-c065979b544b 48190 0 2024-06-29 14:11:19 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-06-29 14:11:19 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 29 14:11:19.857: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2797  a11cded9-9caa-4fd2-8a0c-c065979b544b 48191 0 2024-06-29 14:11:19 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-06-29 14:11:19 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 06/29/24 14:11:19.857
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 06/29/24 14:11:19.865
  STEP: deleting the configmap @ 06/29/24 14:11:19.866
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 06/29/24 14:11:19.872
  Jun 29 14:11:19.879: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2797  a11cded9-9caa-4fd2-8a0c-c065979b544b 48192 0 2024-06-29 14:11:19 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-06-29 14:11:19 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 29 14:11:19.880: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2797  a11cded9-9caa-4fd2-8a0c-c065979b544b 48193 0 2024-06-29 14:11:19 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-06-29 14:11:19 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 29 14:11:19.880: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2797" for this suite. @ 06/29/24 14:11:19.883
â€¢ [0.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 06/29/24 14:11:19.889
  Jun 29 14:11:19.889: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename projected @ 06/29/24 14:11:19.89
  E0629 14:11:19.896337      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:11:19.903
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:11:19.906
  STEP: Creating configMap with name projected-configmap-test-volume-map-4107f32b-43a8-453a-9aab-a578f5af8623 @ 06/29/24 14:11:19.91
  STEP: Creating a pod to test consume configMaps @ 06/29/24 14:11:19.915
  E0629 14:11:20.897085      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:11:21.897326      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:11:22.897412      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:11:23.897527      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/29/24 14:11:23.937
  Jun 29 14:11:23.940: INFO: Trying to get logs from node ip-172-31-94-98 pod pod-projected-configmaps-b261a6c3-4139-4107-90ea-0634a9bb4122 container agnhost-container: <nil>
  STEP: delete the pod @ 06/29/24 14:11:23.946
  Jun 29 14:11:23.964: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5418" for this suite. @ 06/29/24 14:11:23.967
â€¢ [4.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 06/29/24 14:11:23.975
  Jun 29 14:11:23.975: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename events @ 06/29/24 14:11:23.976
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:11:23.989
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:11:23.992
  STEP: creating a test event @ 06/29/24 14:11:23.995
  STEP: listing all events in all namespaces @ 06/29/24 14:11:24.001
  STEP: patching the test event @ 06/29/24 14:11:24.005
  STEP: fetching the test event @ 06/29/24 14:11:24.012
  STEP: updating the test event @ 06/29/24 14:11:24.015
  STEP: getting the test event @ 06/29/24 14:11:24.023
  STEP: deleting the test event @ 06/29/24 14:11:24.026
  STEP: listing all events in all namespaces @ 06/29/24 14:11:24.033
  Jun 29 14:11:24.038: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5947" for this suite. @ 06/29/24 14:11:24.042
â€¢ [0.074 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 06/29/24 14:11:24.05
  Jun 29 14:11:24.050: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename gc @ 06/29/24 14:11:24.05
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:11:24.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:11:24.118
  STEP: create the rc @ 06/29/24 14:11:24.121
  W0629 14:11:24.126011      18 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0629 14:11:24.897867      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:11:25.898369      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:11:26.898466      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:11:27.898561      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:11:28.898719      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 06/29/24 14:11:29.132
  STEP: wait for all pods to be garbage collected @ 06/29/24 14:11:29.139
  E0629 14:11:29.899685      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:11:30.899769      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:11:31.899878      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:11:32.900042      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:11:33.900111      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 06/29/24 14:11:34.147
  W0629 14:11:34.154040      18 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jun 29 14:11:34.154: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jun 29 14:11:34.154: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6100" for this suite. @ 06/29/24 14:11:34.158
â€¢ [10.115 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 06/29/24 14:11:34.165
  Jun 29 14:11:34.165: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename deployment @ 06/29/24 14:11:34.166
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:11:34.181
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:11:34.187
  STEP: creating a Deployment @ 06/29/24 14:11:34.194
  STEP: waiting for Deployment to be created @ 06/29/24 14:11:34.202
  STEP: waiting for all Replicas to be Ready @ 06/29/24 14:11:34.203
  Jun 29 14:11:34.204: INFO: observed Deployment test-deployment in namespace deployment-1516 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun 29 14:11:34.204: INFO: observed Deployment test-deployment in namespace deployment-1516 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun 29 14:11:34.214: INFO: observed Deployment test-deployment in namespace deployment-1516 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun 29 14:11:34.214: INFO: observed Deployment test-deployment in namespace deployment-1516 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun 29 14:11:34.231: INFO: observed Deployment test-deployment in namespace deployment-1516 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun 29 14:11:34.231: INFO: observed Deployment test-deployment in namespace deployment-1516 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun 29 14:11:34.259: INFO: observed Deployment test-deployment in namespace deployment-1516 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun 29 14:11:34.259: INFO: observed Deployment test-deployment in namespace deployment-1516 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E0629 14:11:34.900644      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:11:35.362: INFO: observed Deployment test-deployment in namespace deployment-1516 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Jun 29 14:11:35.362: INFO: observed Deployment test-deployment in namespace deployment-1516 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Jun 29 14:11:35.750: INFO: observed Deployment test-deployment in namespace deployment-1516 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 06/29/24 14:11:35.751
  Jun 29 14:11:35.761: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 06/29/24 14:11:35.761
  Jun 29 14:11:35.762: INFO: observed Deployment test-deployment in namespace deployment-1516 with ReadyReplicas 0
  Jun 29 14:11:35.762: INFO: observed Deployment test-deployment in namespace deployment-1516 with ReadyReplicas 0
  Jun 29 14:11:35.762: INFO: observed Deployment test-deployment in namespace deployment-1516 with ReadyReplicas 0
  Jun 29 14:11:35.762: INFO: observed Deployment test-deployment in namespace deployment-1516 with ReadyReplicas 0
  Jun 29 14:11:35.762: INFO: observed Deployment test-deployment in namespace deployment-1516 with ReadyReplicas 0
  Jun 29 14:11:35.762: INFO: observed Deployment test-deployment in namespace deployment-1516 with ReadyReplicas 0
  Jun 29 14:11:35.762: INFO: observed Deployment test-deployment in namespace deployment-1516 with ReadyReplicas 0
  Jun 29 14:11:35.762: INFO: observed Deployment test-deployment in namespace deployment-1516 with ReadyReplicas 0
  Jun 29 14:11:35.762: INFO: observed Deployment test-deployment in namespace deployment-1516 with ReadyReplicas 1
  Jun 29 14:11:35.762: INFO: observed Deployment test-deployment in namespace deployment-1516 with ReadyReplicas 1
  Jun 29 14:11:35.762: INFO: observed Deployment test-deployment in namespace deployment-1516 with ReadyReplicas 2
  Jun 29 14:11:35.762: INFO: observed Deployment test-deployment in namespace deployment-1516 with ReadyReplicas 2
  Jun 29 14:11:35.762: INFO: observed Deployment test-deployment in namespace deployment-1516 with ReadyReplicas 2
  Jun 29 14:11:35.763: INFO: observed Deployment test-deployment in namespace deployment-1516 with ReadyReplicas 2
  Jun 29 14:11:35.771: INFO: observed Deployment test-deployment in namespace deployment-1516 with ReadyReplicas 2
  Jun 29 14:11:35.771: INFO: observed Deployment test-deployment in namespace deployment-1516 with ReadyReplicas 2
  Jun 29 14:11:35.797: INFO: observed Deployment test-deployment in namespace deployment-1516 with ReadyReplicas 2
  Jun 29 14:11:35.797: INFO: observed Deployment test-deployment in namespace deployment-1516 with ReadyReplicas 2
  Jun 29 14:11:35.805: INFO: observed Deployment test-deployment in namespace deployment-1516 with ReadyReplicas 1
  Jun 29 14:11:35.805: INFO: observed Deployment test-deployment in namespace deployment-1516 with ReadyReplicas 1
  Jun 29 14:11:35.813: INFO: observed Deployment test-deployment in namespace deployment-1516 with ReadyReplicas 1
  Jun 29 14:11:35.813: INFO: observed Deployment test-deployment in namespace deployment-1516 with ReadyReplicas 1
  E0629 14:11:35.901095      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:11:36.901736      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:11:37.397: INFO: observed Deployment test-deployment in namespace deployment-1516 with ReadyReplicas 2
  Jun 29 14:11:37.397: INFO: observed Deployment test-deployment in namespace deployment-1516 with ReadyReplicas 2
  Jun 29 14:11:37.419: INFO: observed Deployment test-deployment in namespace deployment-1516 with ReadyReplicas 1
  STEP: listing Deployments @ 06/29/24 14:11:37.419
  Jun 29 14:11:37.422: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 06/29/24 14:11:37.422
  Jun 29 14:11:37.435: INFO: observed Deployment test-deployment in namespace deployment-1516 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 06/29/24 14:11:37.435
  Jun 29 14:11:37.445: INFO: observed Deployment test-deployment in namespace deployment-1516 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jun 29 14:11:37.445: INFO: observed Deployment test-deployment in namespace deployment-1516 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jun 29 14:11:37.610: INFO: observed Deployment test-deployment in namespace deployment-1516 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jun 29 14:11:37.627: INFO: observed Deployment test-deployment in namespace deployment-1516 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jun 29 14:11:37.637: INFO: observed Deployment test-deployment in namespace deployment-1516 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E0629 14:11:37.902577      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:11:38.395: INFO: observed Deployment test-deployment in namespace deployment-1516 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Jun 29 14:11:38.417: INFO: observed Deployment test-deployment in namespace deployment-1516 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Jun 29 14:11:38.425: INFO: observed Deployment test-deployment in namespace deployment-1516 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0629 14:11:38.902651      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:11:39.799: INFO: observed Deployment test-deployment in namespace deployment-1516 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 06/29/24 14:11:39.82
  STEP: fetching the DeploymentStatus @ 06/29/24 14:11:39.83
  Jun 29 14:11:39.835: INFO: observed Deployment test-deployment in namespace deployment-1516 with ReadyReplicas 1
  Jun 29 14:11:39.835: INFO: observed Deployment test-deployment in namespace deployment-1516 with ReadyReplicas 1
  Jun 29 14:11:39.835: INFO: observed Deployment test-deployment in namespace deployment-1516 with ReadyReplicas 1
  Jun 29 14:11:39.835: INFO: observed Deployment test-deployment in namespace deployment-1516 with ReadyReplicas 1
  Jun 29 14:11:39.835: INFO: observed Deployment test-deployment in namespace deployment-1516 with ReadyReplicas 1
  Jun 29 14:11:39.835: INFO: observed Deployment test-deployment in namespace deployment-1516 with ReadyReplicas 2
  Jun 29 14:11:39.835: INFO: observed Deployment test-deployment in namespace deployment-1516 with ReadyReplicas 2
  Jun 29 14:11:39.835: INFO: observed Deployment test-deployment in namespace deployment-1516 with ReadyReplicas 2
  Jun 29 14:11:39.836: INFO: observed Deployment test-deployment in namespace deployment-1516 with ReadyReplicas 3
  STEP: deleting the Deployment @ 06/29/24 14:11:39.836
  Jun 29 14:11:39.845: INFO: observed event type MODIFIED
  Jun 29 14:11:39.845: INFO: observed event type MODIFIED
  Jun 29 14:11:39.845: INFO: observed event type MODIFIED
  Jun 29 14:11:39.845: INFO: observed event type MODIFIED
  Jun 29 14:11:39.845: INFO: observed event type MODIFIED
  Jun 29 14:11:39.845: INFO: observed event type MODIFIED
  Jun 29 14:11:39.845: INFO: observed event type MODIFIED
  Jun 29 14:11:39.845: INFO: observed event type MODIFIED
  Jun 29 14:11:39.846: INFO: observed event type MODIFIED
  Jun 29 14:11:39.846: INFO: observed event type MODIFIED
  Jun 29 14:11:39.846: INFO: observed event type MODIFIED
  Jun 29 14:11:39.846: INFO: observed event type MODIFIED
  Jun 29 14:11:39.850: INFO: Log out all the ReplicaSets if there is no deployment created
  Jun 29 14:11:39.853: INFO: ReplicaSet "test-deployment-64fd565c98":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-64fd565c98",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1516",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "84dd4bd8-7753-4cec-9b1f-bb1bb673d6d9",
      ResourceVersion: (string) (len=5) "48585",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855267095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "6f8c57ab-c21a-4c15-a3ee-4169ea32a9e9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855267099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 36 66 38 63  35 37 61 62 2d 63 32 31  |":\"6f8c57ab-c21|
              00000130  61 2d 34 63 31 35 2d 61  33 65 65 2d 34 31 36 39  |a-4c15-a3ee-4169|
              00000140  65 61 33 32 61 39 65 39  5c 22 7d 22 3a 7b 7d 7d  |ea32a9e9\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855267099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=25) "registry.k8s.io/pause:3.9",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Jun 29 14:11:39.862: INFO: pod: "test-deployment-64fd565c98-ln7hk":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-ln7hk",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-1516",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ead1f888-36e5-40e9-bd79-ef95c05748be",
      ResourceVersion: (string) (len=5) "48581",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855267095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855267101,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "84dd4bd8-7753-4cec-9b1f-bb1bb673d6d9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855267095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  38 34 64 64 34 62 64 38  |uid\":\"84dd4bd8|
              000000a0  2d 37 37 35 33 2d 34 63  65 63 2d 39 62 31 66 2d  |-7753-4cec-9b1f-|
              000000b0  62 62 31 62 62 36 37 33  64 36 64 39 5c 22 7d 22  |bb1bb673d6d9\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855267097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 38  33 2e 38 30 5c 22 7d 22  |2.168.183.80\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tf6vj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tf6vj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-94-98",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855267097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855267095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855267097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855267097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855267095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.94.98",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.94.98"
        }
      },
      PodIP: (string) (len=14) "192.168.183.80",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.183.80"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855267095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855267096,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=77) "containerd://9a3fec77ae43cd9b41eef3624b514d883212bb57ee73b10c560b923e2383e87a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Jun 29 14:11:39.864: INFO: ReplicaSet "test-deployment-79ff746c4":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-79ff746c4",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1516",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "baffaec5-e3f8-4d49-9651-7f3c9787457b",
      ResourceVersion: (string) (len=5) "48577",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855267097,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "6f8c57ab-c21a-4c15-a3ee-4169ea32a9e9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855267098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 36 66 38 63  35 37 61 62 2d 63 32 31  |":\"6f8c57ab-c21|
              00000130  61 2d 34 63 31 35 2d 61  33 65 65 2d 34 31 36 39  |a-4c15-a3ee-4169|
              00000140  65 61 33 32 61 39 65 39  5c 22 7d 22 3a 7b 7d 7d  |ea32a9e9\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855267099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=22) "test-deployment-static": (string) (len=4) "true",
            (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Jun 29 14:11:39.870: INFO: pod: "test-deployment-79ff746c4-7ttts":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-7ttts",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-1516",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "026c946f-5b01-4313-8703-24dae6573db7",
      ResourceVersion: (string) (len=5) "48576",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855267098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "baffaec5-e3f8-4d49-9651-7f3c9787457b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855267098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  62 61 66 66 61 65 63 35  |uid\":\"baffaec5|
              000000a0  2d 65 33 66 38 2d 34 64  34 39 2d 39 36 35 31 2d  |-e3f8-4d49-9651-|
              000000b0  37 66 33 63 39 37 38 37  34 35 37 62 5c 22 7d 22  |7f3c9787457b\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855267099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 34 31  2e 38 30 5c 22 7d 22 3a  |2.168.41.80\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9rkn8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9rkn8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-10-28",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855267099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855267098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855267099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855267099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855267098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.10.28",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.10.28"
        }
      },
      PodIP: (string) (len=13) "192.168.41.80",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.41.80"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855267098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855267099,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://001d997203653b31eb93cb9fd918da023ad1ada9f15f8c27b56bbbe72e942f3e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Jun 29 14:11:39.871: INFO: pod: "test-deployment-79ff746c4-tg8g9":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-tg8g9",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-1516",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cb64247d-98ae-460d-af24-292c76445d1f",
      ResourceVersion: (string) (len=5) "48593",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855267097,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855267100,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "baffaec5-e3f8-4d49-9651-7f3c9787457b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855267097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  62 61 66 66 61 65 63 35  |uid\":\"baffaec5|
              000000a0  2d 65 33 66 38 2d 34 64  34 39 2d 39 36 35 31 2d  |-e3f8-4d49-9651-|
              000000b0  37 66 33 63 39 37 38 37  34 35 37 62 5c 22 7d 22  |7f3c9787457b\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855267098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 38  33 2e 39 33 5c 22 7d 22  |2.168.183.93\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-md7f8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-md7f8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-94-98",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855267098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855267097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855267098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855267098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855267097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.94.98",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.94.98"
        }
      },
      PodIP: (string) (len=14) "192.168.183.93",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.183.93"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855267097,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855267098,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://1f6939260ad9497bff8d7563121efa3df295e05e39046df16823cfc9122d3b0d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Jun 29 14:11:39.873: INFO: ReplicaSet "test-deployment-7fcc79b8c7":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-7fcc79b8c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1516",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "377103b7-ebfd-4827-9eaf-67bb994c25f9",
      ResourceVersion: (string) (len=5) "48474",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855267094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "6f8c57ab-c21a-4c15-a3ee-4169ea32a9e9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855267097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 36 66 38 63  35 37 61 62 2d 63 32 31  |":\"6f8c57ab-c21|
              00000130  61 2d 34 63 31 35 2d 61  33 65 65 2d 34 31 36 39  |a-4c15-a3ee-4169|
              00000140  65 61 33 32 61 39 65 39  5c 22 7d 22 3a 7b 7d 7d  |ea32a9e9\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855267097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=22) "test-deployment-static": (string) (len=4) "true",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Jun 29 14:11:39.877: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1516" for this suite. @ 06/29/24 14:11:39.88
â€¢ [5.722 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 06/29/24 14:11:39.887
  Jun 29 14:11:39.887: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename sched-preemption @ 06/29/24 14:11:39.888
  E0629 14:11:39.902762      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:11:39.903
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:11:39.906
  Jun 29 14:11:39.920: INFO: Waiting up to 1m0s for all nodes to be ready
  E0629 14:11:40.903775      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:11:41.904756      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:11:42.904871      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:11:43.905867      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:11:44.906884      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:11:45.907067      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:11:46.907165      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:11:47.907258      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:11:48.908082      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:11:49.908148      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:11:50.908274      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:11:51.909470      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:11:52.909825      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:11:53.910309      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:11:54.910430      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:11:55.910632      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:11:56.910725      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:11:57.910939      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:11:58.911384      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:11:59.911696      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:12:00.911790      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:12:01.912720      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:12:02.912864      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:12:03.912922      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:12:04.913963      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:12:05.914124      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:12:06.914200      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:12:07.914277      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:12:08.914377      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:12:09.914675      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:12:10.914800      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:12:11.915068      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:12:12.915681      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:12:13.915809      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:12:14.916733      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:12:15.916885      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:12:16.917145      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:12:17.917330      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:12:18.917427      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:12:19.917612      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:12:20.918405      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:12:21.918606      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:12:22.919503      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:12:23.920137      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:12:24.920734      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:12:25.920936      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:12:26.921072      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:12:27.921280      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:12:28.921343      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:12:29.921759      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:12:30.921836      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:12:31.921922      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:12:32.922507      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:12:33.922769      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:12:34.922918      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:12:35.923002      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:12:36.923687      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:12:37.923685      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:12:38.923852      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:12:39.924259      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 29 14:12:39.927: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 06/29/24 14:12:39.932
  Jun 29 14:12:39.932: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename sched-preemption-path @ 06/29/24 14:12:39.932
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:12:39.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:12:39.95
  Jun 29 14:12:39.969: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  Jun 29 14:12:39.974: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  Jun 29 14:12:40.038: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-683" for this suite. @ 06/29/24 14:12:40.041
  Jun 29 14:12:40.049: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-4215" for this suite. @ 06/29/24 14:12:40.053
â€¢ [60.170 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:470
  STEP: Creating a kubernetes client @ 06/29/24 14:12:40.058
  Jun 29 14:12:40.058: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename sched-pred @ 06/29/24 14:12:40.058
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:12:40.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:12:40.075
  Jun 29 14:12:40.078: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jun 29 14:12:40.085: INFO: Waiting for terminating namespaces to be deleted...
  Jun 29 14:12:40.087: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-10-28 before test
  Jun 29 14:12:40.091: INFO: nginx-ingress-controller-kubernetes-worker-zddqx from ingress-nginx-kubernetes-worker started at 2024-06-29 12:12:20 +0000 UTC (1 container statuses recorded)
  Jun 29 14:12:40.091: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jun 29 14:12:40.091: INFO: calico-node-99b9n from kube-system started at 2024-06-29 12:16:42 +0000 UTC (1 container statuses recorded)
  Jun 29 14:12:40.091: INFO: 	Container calico-node ready: true, restart count 0
  Jun 29 14:12:40.091: INFO: sonobuoy-e2e-job-7574a47ae2364127 from sonobuoy started at 2024-06-29 12:21:33 +0000 UTC (2 container statuses recorded)
  Jun 29 14:12:40.091: INFO: 	Container e2e ready: true, restart count 0
  Jun 29 14:12:40.091: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 29 14:12:40.091: INFO: sonobuoy-systemd-logs-daemon-set-6e9f3632248049cc-bfvm8 from sonobuoy started at 2024-06-29 12:21:33 +0000 UTC (2 container statuses recorded)
  Jun 29 14:12:40.091: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 29 14:12:40.091: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun 29 14:12:40.091: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-37-211 before test
  Jun 29 14:12:40.098: INFO: nginx-ingress-controller-kubernetes-worker-fcsv7 from ingress-nginx-kubernetes-worker started at 2024-06-29 12:06:30 +0000 UTC (1 container statuses recorded)
  Jun 29 14:12:40.098: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 1
  Jun 29 14:12:40.098: INFO: calico-node-kxdrr from kube-system started at 2024-06-29 12:18:33 +0000 UTC (1 container statuses recorded)
  Jun 29 14:12:40.098: INFO: 	Container calico-node ready: true, restart count 0
  Jun 29 14:12:40.098: INFO: coredns-bddfd76d7-xvgzd from kube-system started at 2024-06-29 12:06:30 +0000 UTC (1 container statuses recorded)
  Jun 29 14:12:40.098: INFO: 	Container coredns ready: true, restart count 0
  Jun 29 14:12:40.098: INFO: kube-state-metrics-6f48cdd76-svwlz from kube-system started at 2024-06-29 12:06:30 +0000 UTC (1 container statuses recorded)
  Jun 29 14:12:40.098: INFO: 	Container kube-state-metrics ready: true, restart count 5
  Jun 29 14:12:40.098: INFO: metrics-server-v0.6.3-69d7fbfdf8-xpcsj from kube-system started at 2024-06-29 12:06:30 +0000 UTC (2 container statuses recorded)
  Jun 29 14:12:40.098: INFO: 	Container metrics-server ready: true, restart count 6
  Jun 29 14:12:40.098: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Jun 29 14:12:40.098: INFO: dashboard-metrics-scraper-5dd7cb5fc-7nkfs from kubernetes-dashboard started at 2024-06-29 12:06:30 +0000 UTC (1 container statuses recorded)
  Jun 29 14:12:40.098: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Jun 29 14:12:40.098: INFO: kubernetes-dashboard-7b899cb9d9-2tg9x from kubernetes-dashboard started at 2024-06-29 12:06:30 +0000 UTC (1 container statuses recorded)
  Jun 29 14:12:40.098: INFO: 	Container kubernetes-dashboard ready: true, restart count 6
  Jun 29 14:12:40.098: INFO: sonobuoy-systemd-logs-daemon-set-6e9f3632248049cc-cpb7h from sonobuoy started at 2024-06-29 12:21:33 +0000 UTC (2 container statuses recorded)
  Jun 29 14:12:40.098: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 29 14:12:40.098: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun 29 14:12:40.098: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-94-98 before test
  Jun 29 14:12:40.102: INFO: nginx-ingress-controller-kubernetes-worker-gbb94 from ingress-nginx-kubernetes-worker started at 2024-06-29 13:49:50 +0000 UTC (1 container statuses recorded)
  Jun 29 14:12:40.102: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jun 29 14:12:40.102: INFO: calico-node-mvhgx from kube-system started at 2024-06-29 12:16:01 +0000 UTC (1 container statuses recorded)
  Jun 29 14:12:40.102: INFO: 	Container calico-node ready: true, restart count 0
  Jun 29 14:12:40.102: INFO: sonobuoy from sonobuoy started at 2024-06-29 12:21:31 +0000 UTC (1 container statuses recorded)
  Jun 29 14:12:40.102: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jun 29 14:12:40.102: INFO: sonobuoy-systemd-logs-daemon-set-6e9f3632248049cc-485lm from sonobuoy started at 2024-06-29 12:21:33 +0000 UTC (2 container statuses recorded)
  Jun 29 14:12:40.102: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 29 14:12:40.102: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 06/29/24 14:12:40.102
  E0629 14:12:40.924785      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:12:41.924961      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 06/29/24 14:12:42.125
  STEP: Trying to apply a random label on the found node. @ 06/29/24 14:12:42.137
  STEP: verifying the node has the label kubernetes.io/e2e-178c4c17-a029-4142-bcab-389066c2b173 42 @ 06/29/24 14:12:42.145
  STEP: Trying to relaunch the pod, now with labels. @ 06/29/24 14:12:42.148
  E0629 14:12:42.925047      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:12:43.925127      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-178c4c17-a029-4142-bcab-389066c2b173 off the node ip-172-31-94-98 @ 06/29/24 14:12:44.171
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-178c4c17-a029-4142-bcab-389066c2b173 @ 06/29/24 14:12:44.184
  Jun 29 14:12:44.187: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-7669" for this suite. @ 06/29/24 14:12:44.193
â€¢ [4.142 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 06/29/24 14:12:44.2
  Jun 29 14:12:44.200: INFO: >>> kubeConfig: /tmp/kubeconfig-4284821169
  STEP: Building a namespace api object, basename emptydir @ 06/29/24 14:12:44.2
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/29/24 14:12:44.214
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/29/24 14:12:44.217
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 06/29/24 14:12:44.22
  E0629 14:12:44.926058      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:12:45.926252      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:12:46.926556      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0629 14:12:47.926673      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/29/24 14:12:48.239
  Jun 29 14:12:48.242: INFO: Trying to get logs from node ip-172-31-94-98 pod pod-008edaa3-8de2-4bdb-82b8-8a7a796ba392 container test-container: <nil>
  STEP: delete the pod @ 06/29/24 14:12:48.247
  Jun 29 14:12:48.265: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4416" for this suite. @ 06/29/24 14:12:48.268
â€¢ [4.074 seconds]
------------------------------
SSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:88
  Jun 29 14:12:48.275: INFO: Running AfterSuite actions on node 1
  Jun 29 14:12:48.275: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:161
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:621
[ReportAfterSuite] PASSED [0.041 seconds]
------------------------------

Ran 388 of 7408 Specs in 6663.775 seconds
SUCCESS! -- 388 Passed | 0 Failed | 0 Pending | 7020 Skipped
PASS

Ginkgo ran 1 suite in 1h51m4.802594194s
Test Suite Passed
