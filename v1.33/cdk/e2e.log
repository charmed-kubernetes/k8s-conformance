  I0719 12:13:53.992721      21 e2e.go:109] Starting e2e run "37f7b574-4ada-4c29-9631-0d21e665751f" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1752927233 - will randomize all specs

Will run 419 of 6731 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:153
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0719 12:13:54.219861 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  I0719 12:13:54.220949 21 helper.go:51] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0719 12:13:54.251912 21 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0719 12:13:54.257971 21 e2e.go:153] 5 / 5 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  I0719 12:13:54.258013 21 e2e.go:245] e2e test version: v1.33.3
  I0719 12:13:54.259231 21 e2e.go:254] kube-apiserver version: v1.33.3
  I0719 12:13:54.259535 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  I0719 12:13:54.264942 21 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.045 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 07/19/25 12:13:54.439
  I0719 12:13:54.439692 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename security-context @ 07/19/25 12:13:54.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:13:54.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:13:54.465
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 07/19/25 12:13:54.471
  STEP: Saw pod success @ 07/19/25 12:14:00.511
  I0719 12:14:00.515286 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod security-context-fbf3f959-3463-42cf-b7f0-5289a2a9b51f container test-container: <nil>
  STEP: delete the pod @ 07/19/25 12:14:00.533
  I0719 12:14:00.551697 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-1129" for this suite. @ 07/19/25 12:14:00.557
• [6.125 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 07/19/25 12:14:00.564
  I0719 12:14:00.564691 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename container-probe @ 07/19/25 12:14:00.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:14:00.577
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:14:00.58
  I0719 12:15:00.602518 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4135" for this suite. @ 07/19/25 12:15:00.607
• [60.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 07/19/25 12:15:00.617
  I0719 12:15:00.617495 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename replicaset @ 07/19/25 12:15:00.617
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:15:00.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:15:00.632
  I0719 12:15:00.650634 21 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  I0719 12:15:05.655648 21 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/19/25 12:15:05.655
  STEP: Scaling up "test-rs" replicaset @ 07/19/25 12:15:05.655
  I0719 12:15:05.668061 21 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 07/19/25 12:15:05.668
  I0719 12:15:05.678669 21 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-4887 with ReadyReplicas 1, AvailableReplicas 1
  I0719 12:15:05.695165 21 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-4887 with ReadyReplicas 1, AvailableReplicas 1
  I0719 12:15:05.713258 21 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-4887 with ReadyReplicas 1, AvailableReplicas 1
  I0719 12:15:05.721227 21 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-4887 with ReadyReplicas 1, AvailableReplicas 1
  I0719 12:15:08.257325 21 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-4887 with ReadyReplicas 2, AvailableReplicas 2
  I0719 12:15:09.055634 21 replica_set.go:547] observed Replicaset test-rs in namespace replicaset-4887 with ReadyReplicas 3 found true
  I0719 12:15:09.055770 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4887" for this suite. @ 07/19/25 12:15:09.061
• [8.453 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 07/19/25 12:15:09.071
  I0719 12:15:09.071364 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename daemonsets @ 07/19/25 12:15:09.071
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:15:09.084
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:15:09.086
  STEP: Creating simple DaemonSet "daemon-set" @ 07/19/25 12:15:09.174
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/19/25 12:15:09.182
  I0719 12:15:09.263134 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-3-129 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 12:15:09.263174 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-39-138 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 12:15:09.267136 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0719 12:15:09.267162 21 fixtures.go:131] Node ip-172-31-42-177 is running 0 daemon pod, expected 1
  I0719 12:15:10.189098 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-3-129 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 12:15:10.189139 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-39-138 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 12:15:10.193909 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0719 12:15:10.193933 21 fixtures.go:131] Node ip-172-31-6-59 is running 0 daemon pod, expected 1
  I0719 12:15:11.189280 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-3-129 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 12:15:11.189321 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-39-138 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 12:15:11.194400 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0719 12:15:11.194420 21 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 07/19/25 12:15:11.198
  I0719 12:15:11.290276 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-3-129 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 12:15:11.290327 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-39-138 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 12:15:11.298063 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0719 12:15:11.298287 21 fixtures.go:131] Node ip-172-31-6-59 is running 0 daemon pod, expected 1
  I0719 12:15:12.219254 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-3-129 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 12:15:12.219299 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-39-138 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 12:15:12.225634 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0719 12:15:12.225651 21 fixtures.go:131] Node ip-172-31-6-59 is running 0 daemon pod, expected 1
  I0719 12:15:13.218130 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-3-129 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 12:15:13.218171 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-39-138 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 12:15:13.223935 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0719 12:15:13.223954 21 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 07/19/25 12:15:13.229
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6910, will wait for the garbage collector to delete the pods @ 07/19/25 12:15:13.229
  I0719 12:15:13.293611 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 10.14179ms
  I0719 12:15:13.393721 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.105645ms
  I0719 12:15:14.397992 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0719 12:15:14.398021 21 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0719 12:15:14.403618 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"4704"},"items":null}

  I0719 12:15:14.407806 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"4704"},"items":null}

  I0719 12:15:14.425044 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6910" for this suite. @ 07/19/25 12:15:14.513
• [5.450 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 07/19/25 12:15:14.521
  I0719 12:15:14.521904 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename chunking @ 07/19/25 12:15:14.522
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:15:14.535
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:15:14.538
  STEP: creating a large number of resources @ 07/19/25 12:15:14.541
  STEP: retrieving the first page @ 07/19/25 12:15:32.231
  I0719 12:15:32.278140 21 chunking.go:163] Retrieved 40/40 results with rv 5208 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTIwOCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 07/19/25 12:15:32.278
  I0719 12:15:52.286689 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTIwOCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0719 12:16:12.286517 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTIwOCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0719 12:16:32.285699 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTIwOCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0719 12:16:52.286888 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTIwOCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0719 12:17:12.286076 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTIwOCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0719 12:17:32.286975 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTIwOCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0719 12:17:52.286809 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTIwOCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0719 12:18:12.285537 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTIwOCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0719 12:18:32.287234 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTIwOCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0719 12:18:52.286452 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTIwOCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0719 12:19:12.285778 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTIwOCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0719 12:19:32.287026 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTIwOCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0719 12:19:52.285605 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTIwOCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0719 12:20:12.287516 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTIwOCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0719 12:20:32.286323 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTIwOCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0719 12:20:52.286738 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTIwOCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0719 12:21:12.286500 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTIwOCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0719 12:21:32.285592 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTIwOCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0719 12:21:52.286931 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTIwOCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0719 12:22:12.284717 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTIwOCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0719 12:22:32.286897 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTIwOCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0719 12:22:52.287443 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTIwOCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0719 12:23:12.285604 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTIwOCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0719 12:23:32.286502 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTIwOCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0719 12:23:52.286014 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTIwOCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0719 12:24:12.288385 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTIwOCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0719 12:24:32.286816 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTIwOCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0719 12:24:52.285224 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTIwOCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0719 12:25:12.284651 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTIwOCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0719 12:25:32.285599 21 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0719 12:25:32.285632 21 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 07/19/25 12:25:32.285
  STEP: retrieving all remaining pages @ 07/19/25 12:25:32.291
  I0719 12:25:32.296743 21 chunking.go:221] Retrieved 40/40 results with rv 6431 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjQzMSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTE5XHUwMDAwIn0
  I0719 12:25:32.300880 21 chunking.go:221] Retrieved 40/40 results with rv 6431 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjQzMSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTU5XHUwMDAwIn0
  I0719 12:25:32.306304 21 chunking.go:221] Retrieved 40/40 results with rv 6431 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjQzMSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTk5XHUwMDAwIn0
  I0719 12:25:32.310866 21 chunking.go:221] Retrieved 40/40 results with rv 6431 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjQzMSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjM5XHUwMDAwIn0
  I0719 12:25:32.315126 21 chunking.go:221] Retrieved 40/40 results with rv 6431 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjQzMSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjc5XHUwMDAwIn0
  I0719 12:25:32.320222 21 chunking.go:221] Retrieved 40/40 results with rv 6431 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjQzMSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzE5XHUwMDAwIn0
  I0719 12:25:32.324701 21 chunking.go:221] Retrieved 40/40 results with rv 6431 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjQzMSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzU5XHUwMDAwIn0
  I0719 12:25:32.328879 21 chunking.go:221] Retrieved 40/40 results with rv 6431 and continue 
  I0719 12:25:32.329020 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-8996" for this suite. @ 07/19/25 12:25:32.334
• [617.821 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:89
  STEP: Creating a kubernetes client @ 07/19/25 12:25:32.343
  I0719 12:25:32.343263 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename configmap @ 07/19/25 12:25:32.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:25:32.356
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:25:32.358
  STEP: Creating configMap with name configmap-test-volume-map-4c3cf830-779a-4958-a4a9-2fd46ef43e16 @ 07/19/25 12:25:32.361
  STEP: Creating a pod to test consume configMaps @ 07/19/25 12:25:32.366
  STEP: Saw pod success @ 07/19/25 12:25:34.388
  I0719 12:25:34.393016 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod pod-configmaps-287e2b08-fc92-4dd2-9bac-e4b5bfe67221 container agnhost-container: <nil>
  STEP: delete the pod @ 07/19/25 12:25:34.411
  I0719 12:25:34.431127 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-16" for this suite. @ 07/19/25 12:25:34.436
• [2.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1794
  STEP: Creating a kubernetes client @ 07/19/25 12:25:34.445
  I0719 12:25:34.445986 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename kubectl @ 07/19/25 12:25:34.446
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:25:34.458
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:25:34.461
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 07/19/25 12:25:34.464
  I0719 12:25:34.465000 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-5099 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0719 12:25:34.525433 21 builder.go:146] stderr: ""
  I0719 12:25:34.525462 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 07/19/25 12:25:34.525
  STEP: verifying the pod e2e-test-httpd-pod was created @ 07/19/25 12:25:39.576
  I0719 12:25:39.576661 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-5099 get pod e2e-test-httpd-pod -o json'
  I0719 12:25:39.616386 21 builder.go:146] stderr: ""
  I0719 12:25:39.616484 21 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2025-07-19T12:25:34Z\",\n        \"generation\": 1,\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-5099\",\n        \"resourceVersion\": \"6478\",\n        \"uid\": \"503d7e5b-93b2-4987-a4b8-c23716ee1efd\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-wpwlm\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-6-59\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-wpwlm\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-07-19T12:25:35Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-07-19T12:25:34Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-07-19T12:25:35Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-07-19T12:25:35Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-07-19T12:25:34Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://b4ff800c4ff6cf8ae38e47107253d0b65355ab4bf0c0a321535bbd74d60f8fa6\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"resources\": {},\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2025-07-19T12:25:35Z\"\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-wpwlm\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"172.31.6.59\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.31.6.59\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"192.168.206.200\",\n        \"podIPs\": [\n            {\n                \"ip\": \"192.168.206.200\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2025-07-19T12:25:34Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 07/19/25 12:25:39.616
  I0719 12:25:39.616574 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-5099 replace -f -'
  I0719 12:25:39.699524 21 builder.go:146] stderr: ""
  I0719 12:25:39.699562 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 07/19/25 12:25:39.699
  I0719 12:25:39.703414 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-5099 delete pods e2e-test-httpd-pod'
  I0719 12:25:41.222844 21 builder.go:146] stderr: ""
  I0719 12:25:41.222925 21 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0719 12:25:41.223122 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5099" for this suite. @ 07/19/25 12:25:41.228
• [6.791 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:126
  STEP: Creating a kubernetes client @ 07/19/25 12:25:41.237
  I0719 12:25:41.237990 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename sched-preemption @ 07/19/25 12:25:41.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:25:41.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:25:41.261
  I0719 12:25:41.285759 21 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0719 12:26:41.292760 21 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 07/19/25 12:26:41.297
  STEP: Adding a custom resource @ 07/19/25 12:26:41.297
  I0719 12:26:41.319319 21 preemption.go:170] Created pod: pod0-0-sched-preemption-low-priority
  I0719 12:26:41.329809 21 preemption.go:170] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 07/19/25 12:26:41.329
  I0719 12:26:41.349049 21 preemption.go:170] Created pod: pod1-0-sched-preemption-medium-priority
  I0719 12:26:41.358011 21 preemption.go:170] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 07/19/25 12:26:41.358
  I0719 12:26:41.377860 21 preemption.go:170] Created pod: pod2-0-sched-preemption-medium-priority
  I0719 12:26:41.391770 21 preemption.go:170] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 07/19/25 12:26:41.391
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 07/19/25 12:26:43.421
  STEP: Removing a custom resource @ 07/19/25 12:26:45.493
  STEP: Removing a custom resource @ 07/19/25 12:26:45.506
  STEP: Removing a custom resource @ 07/19/25 12:26:45.518
  I0719 12:26:45.532175 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-4147" for this suite. @ 07/19/25 12:26:45.535
• [64.306 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Downward API should provide hostIPs as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:118
  STEP: Creating a kubernetes client @ 07/19/25 12:26:45.544
  I0719 12:26:45.544039 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename downward-api @ 07/19/25 12:26:45.544
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:26:45.559
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:26:45.562
  STEP: Creating a pod to test downward api env vars @ 07/19/25 12:26:45.565
  STEP: Saw pod success @ 07/19/25 12:26:47.589
  I0719 12:26:47.593616 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod downward-api-79616b18-fdd2-4766-b915-e2231369fe56 container dapi-container: <nil>
  STEP: delete the pod @ 07/19/25 12:26:47.603
  I0719 12:26:47.626607 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-523" for this suite. @ 07/19/25 12:26:47.632
• [2.096 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 07/19/25 12:26:47.64
  I0719 12:26:47.640514 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename secrets @ 07/19/25 12:26:47.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:26:47.653
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:26:47.655
  STEP: Creating secret with name secret-test-a7c405ae-a724-4297-a3d9-9fad1ff7a1a2 @ 07/19/25 12:26:47.658
  STEP: Creating a pod to test consume secrets @ 07/19/25 12:26:47.663
  STEP: Saw pod success @ 07/19/25 12:26:51.69
  I0719 12:26:51.694929 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod pod-secrets-4d12305b-8fb1-45d9-90c3-923dd63ef330 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/19/25 12:26:51.703
  I0719 12:26:51.719199 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2303" for this suite. @ 07/19/25 12:26:51.725
• [4.093 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:841
  STEP: Creating a kubernetes client @ 07/19/25 12:26:51.733
  I0719 12:26:51.733298 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename webhook @ 07/19/25 12:26:51.733
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:26:51.745
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:26:51.748
  STEP: Setting up server cert @ 07/19/25 12:26:51.767
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/19/25 12:26:52.218
  STEP: Deploying the webhook pod @ 07/19/25 12:26:52.226
  STEP: Wait for the deployment to be ready @ 07/19/25 12:26:52.239
  I0719 12:26:52.250520 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/19/25 12:26:54.268
  STEP: Verifying the service has paired with the endpoint @ 07/19/25 12:26:54.286
  I0719 12:26:55.287460 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 07/19/25 12:26:55.293
  I0719 12:26:55.357589 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6324" for this suite. @ 07/19/25 12:26:55.362
  STEP: Destroying namespace "webhook-markers-9074" for this suite. @ 07/19/25 12:26:55.373
• [3.649 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:647
  STEP: Creating a kubernetes client @ 07/19/25 12:26:55.382
  I0719 12:26:55.382859 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename gc @ 07/19/25 12:26:55.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:26:55.395
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:26:55.401
  STEP: create the rc @ 07/19/25 12:26:55.464
  I0719 12:26:55.471536      21 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: delete the rc @ 07/19/25 12:26:59.48
  STEP: wait for the rc to be deleted @ 07/19/25 12:26:59.489
  I0719 12:27:00.536555 21 garbage_collector.go:678] 80 pods remaining
  I0719 12:27:00.536598 21 garbage_collector.go:685] 80 pods has nil DeletionTimestamp
  I0719 12:27:00.536610 21 garbage_collector.go:686] 
  I0719 12:27:01.505695 21 garbage_collector.go:678] 71 pods remaining
  I0719 12:27:01.505743 21 garbage_collector.go:685] 70 pods has nil DeletionTimestamp
  I0719 12:27:01.505750 21 garbage_collector.go:686] 
  I0719 12:27:02.502520 21 garbage_collector.go:678] 60 pods remaining
  I0719 12:27:02.502567 21 garbage_collector.go:685] 60 pods has nil DeletionTimestamp
  I0719 12:27:02.502574 21 garbage_collector.go:686] 
  I0719 12:27:03.498944 21 garbage_collector.go:678] 40 pods remaining
  I0719 12:27:03.498972 21 garbage_collector.go:685] 40 pods has nil DeletionTimestamp
  I0719 12:27:03.498978 21 garbage_collector.go:686] 
  I0719 12:27:04.509464 21 garbage_collector.go:678] 31 pods remaining
  I0719 12:27:04.509501 21 garbage_collector.go:685] 30 pods has nil DeletionTimestamp
  I0719 12:27:04.509509 21 garbage_collector.go:686] 
  I0719 12:27:05.547499 21 garbage_collector.go:678] 20 pods remaining
  I0719 12:27:05.547842 21 garbage_collector.go:685] 20 pods has nil DeletionTimestamp
  I0719 12:27:05.547848 21 garbage_collector.go:686] 
  STEP: Gathering metrics @ 07/19/25 12:27:06.5
  W0719 12:27:06.604257      21 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0719 12:27:06.604315 21 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0719 12:27:06.604666 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4195" for this suite. @ 07/19/25 12:27:06.612
• [11.241 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 07/19/25 12:27:06.625
  I0719 12:27:06.625442 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename deployment @ 07/19/25 12:27:06.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:27:06.643
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:27:06.646
  STEP: creating a Deployment @ 07/19/25 12:27:06.66
  STEP: waiting for Deployment to be created @ 07/19/25 12:27:06.667
  STEP: waiting for all Replicas to be Ready @ 07/19/25 12:27:06.668
  I0719 12:27:06.669786 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0719 12:27:06.669878 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0719 12:27:06.682585 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0719 12:27:06.682651 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0719 12:27:06.692269 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0719 12:27:06.692290 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0719 12:27:06.734837 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0719 12:27:06.734873 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0719 12:27:08.322411 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0719 12:27:08.322455 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0719 12:27:09.201570 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 07/19/25 12:27:09.201
  I0719 12:27:09.213455 21 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 07/19/25 12:27:09.213
  I0719 12:27:09.215597 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 0
  I0719 12:27:09.215618 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 0
  I0719 12:27:09.215653 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 0
  I0719 12:27:09.215658 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 0
  I0719 12:27:09.215668 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 0
  I0719 12:27:09.215689 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 0
  I0719 12:27:09.215744 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 0
  I0719 12:27:09.215780 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 0
  I0719 12:27:09.215786 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 1
  I0719 12:27:09.215791 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 1
  I0719 12:27:09.215800 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 2
  I0719 12:27:09.215805 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 2
  I0719 12:27:09.215847 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 2
  I0719 12:27:09.215857 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 2
  I0719 12:27:09.230554 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 2
  I0719 12:27:09.230579 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 2
  I0719 12:27:09.243996 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 2
  I0719 12:27:09.244021 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 2
  I0719 12:27:09.280761 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 1
  I0719 12:27:09.280794 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 1
  I0719 12:27:10.654497 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 2
  I0719 12:27:10.654534 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 2
  I0719 12:27:10.691025 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 1
  STEP: listing Deployments @ 07/19/25 12:27:10.691
  I0719 12:27:10.695643 21 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 07/19/25 12:27:10.695
  I0719 12:27:10.706651 21 deployment.go:360] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 07/19/25 12:27:10.706
  I0719 12:27:10.713670 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0719 12:27:10.719022 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0719 12:27:10.738236 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0719 12:27:10.758445 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0719 12:27:10.770604 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0719 12:27:10.778478 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0719 12:27:11.663714 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0719 12:27:11.683185 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0719 12:27:11.699149 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0719 12:27:11.707128 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0719 12:27:11.721795 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0719 12:27:13.258727 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 07/19/25 12:27:13.3
  STEP: fetching the DeploymentStatus @ 07/19/25 12:27:13.311
  I0719 12:27:13.318623 21 deployment.go:448] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 1
  I0719 12:27:13.318708 21 deployment.go:448] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 1
  I0719 12:27:13.318734 21 deployment.go:448] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 1
  I0719 12:27:13.318742 21 deployment.go:448] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 1
  I0719 12:27:13.318794 21 deployment.go:448] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 1
  I0719 12:27:13.318869 21 deployment.go:448] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 1
  I0719 12:27:13.318923 21 deployment.go:448] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 2
  I0719 12:27:13.319029 21 deployment.go:448] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 2
  I0719 12:27:13.319085 21 deployment.go:448] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 2
  I0719 12:27:13.319092 21 deployment.go:448] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 2
  I0719 12:27:13.319100 21 deployment.go:448] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 2
  I0719 12:27:13.319173 21 deployment.go:448] observed Deployment test-deployment in namespace deployment-8093 with ReadyReplicas 3
  STEP: deleting the Deployment @ 07/19/25 12:27:13.319
  I0719 12:27:13.331163 21 deployment.go:474] observed event type MODIFIED
  I0719 12:27:13.331187 21 deployment.go:474] observed event type MODIFIED
  I0719 12:27:13.331230 21 deployment.go:474] observed event type MODIFIED
  I0719 12:27:13.331239 21 deployment.go:474] observed event type MODIFIED
  I0719 12:27:13.331247 21 deployment.go:474] observed event type MODIFIED
  I0719 12:27:13.331299 21 deployment.go:474] observed event type MODIFIED
  I0719 12:27:13.331309 21 deployment.go:474] observed event type MODIFIED
  I0719 12:27:13.331317 21 deployment.go:474] observed event type MODIFIED
  I0719 12:27:13.331456 21 deployment.go:474] observed event type MODIFIED
  I0719 12:27:13.331522 21 deployment.go:474] observed event type MODIFIED
  I0719 12:27:13.331535 21 deployment.go:474] observed event type MODIFIED
  I0719 12:27:13.331542 21 deployment.go:474] observed event type MODIFIED
  I0719 12:27:13.331597 21 deployment.go:474] observed event type MODIFIED
  I0719 12:27:13.331605 21 deployment.go:474] observed event type MODIFIED
  I0719 12:27:13.331613 21 deployment.go:474] observed event type MODIFIED
  I0719 12:27:13.424799 21 deployment.go:649] Log out all the ReplicaSets if there is no deployment created
  I0719 12:27:13.429260 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8093" for this suite. @ 07/19/25 12:27:13.435
• [6.818 seconds]
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 07/19/25 12:27:13.443
  I0719 12:27:13.443073 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename daemonsets @ 07/19/25 12:27:13.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:27:13.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:27:13.463
  I0719 12:27:13.636420 21 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0719 12:27:13.642087 21 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0719 12:27:13.737408 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-3-129 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 12:27:13.737450 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-39-138 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 12:27:13.744674 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0719 12:27:13.744697 21 fixtures.go:131] Node ip-172-31-42-177 is running 0 daemon pod, expected 1
  I0719 12:27:14.647672 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-3-129 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 12:27:14.647711 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-39-138 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 12:27:14.650786 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0719 12:27:14.650807 21 fixtures.go:131] Node ip-172-31-42-177 is running 0 daemon pod, expected 1
  I0719 12:27:15.648084 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-3-129 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 12:27:15.648125 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-39-138 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 12:27:15.652270 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0719 12:27:15.652294 21 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  I0719 12:27:15.652308 21 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0719 12:27:15.662671 21 daemon_set.go:102] Updating DaemonSet daemon-set
  I0719 12:27:16.678856 21 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0719 12:27:16.689464 21 daemon_set.go:102] Updating DaemonSet daemon-set
  I0719 12:27:16.689498 21 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I0719 12:27:16.780178 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-3-129 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 12:27:16.780217 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-39-138 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 12:27:17.700388 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-3-129 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 12:27:17.700426 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-39-138 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 12:27:18.698758 21 daemon_set.go:1198] Pod daemon-set-jhfqd is not available
  I0719 12:27:18.705404 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-3-129 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 12:27:18.705432 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-39-138 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 07/19/25 12:27:18.716
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4876, will wait for the garbage collector to delete the pods @ 07/19/25 12:27:18.716
  I0719 12:27:18.780649 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 10.32787ms
  I0719 12:27:18.881038 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.383715ms
  I0719 12:27:20.787987 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0719 12:27:20.788020 21 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0719 12:27:20.792878 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"10226"},"items":null}

  I0719 12:27:20.796367 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"10226"},"items":null}

  I0719 12:27:20.813545 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4876" for this suite. @ 07/19/25 12:27:20.902
• [7.470 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:709
  STEP: Creating a kubernetes client @ 07/19/25 12:27:20.913
  I0719 12:27:20.913559 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename webhook @ 07/19/25 12:27:20.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:27:20.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:27:20.929
  STEP: Setting up server cert @ 07/19/25 12:27:20.952
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/19/25 12:27:21.259
  STEP: Deploying the webhook pod @ 07/19/25 12:27:21.265
  STEP: Wait for the deployment to be ready @ 07/19/25 12:27:21.282
  I0719 12:27:21.292918 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/19/25 12:27:23.309
  STEP: Verifying the service has paired with the endpoint @ 07/19/25 12:27:23.328
  I0719 12:27:24.328209 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 07/19/25 12:27:24.335
  STEP: verifying the validating webhook match conditions @ 07/19/25 12:27:24.345
  STEP: updating the validating webhook match conditions @ 07/19/25 12:27:24.351
  STEP: verifying the validating webhook match conditions @ 07/19/25 12:27:24.364
  I0719 12:27:24.430791 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6283" for this suite. @ 07/19/25 12:27:24.438
  STEP: Destroying namespace "webhook-markers-3450" for this suite. @ 07/19/25 12:27:24.448
• [3.541 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:69
  STEP: Creating a kubernetes client @ 07/19/25 12:27:24.454
  I0719 12:27:24.454677 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename downward-api @ 07/19/25 12:27:24.455
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:27:24.469
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:27:24.472
  STEP: Creating a pod to test downward API volume plugin @ 07/19/25 12:27:24.474
  STEP: Saw pod success @ 07/19/25 12:27:28.504
  I0719 12:27:28.508810 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod downwardapi-volume-bc11c8ac-bf03-4ff4-a99a-8123fd3246fd container client-container: <nil>
  STEP: delete the pod @ 07/19/25 12:27:28.516
  I0719 12:27:28.537316 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5324" for this suite. @ 07/19/25 12:27:28.542
• [4.097 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:278
  STEP: Creating a kubernetes client @ 07/19/25 12:27:28.551
  I0719 12:27:28.551626 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/19/25 12:27:28.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:27:28.564
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:27:28.567
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 07/19/25 12:27:28.569
  I0719 12:27:28.570487 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  I0719 12:27:30.047747 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  I0719 12:27:34.953653 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2248" for this suite. @ 07/19/25 12:27:34.963
• [6.419 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:194
  STEP: Creating a kubernetes client @ 07/19/25 12:27:34.971
  I0719 12:27:34.971141 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename downward-api @ 07/19/25 12:27:34.971
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:27:34.986
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:27:34.989
  STEP: Creating a pod to test downward API volume plugin @ 07/19/25 12:27:34.994
  STEP: Saw pod success @ 07/19/25 12:27:37.018
  I0719 12:27:37.022529 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod downwardapi-volume-41f18949-2953-4aa9-8a64-4a1481fceaa1 container client-container: <nil>
  STEP: delete the pod @ 07/19/25 12:27:37.029
  I0719 12:27:37.049010 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7387" for this suite. @ 07/19/25 12:27:37.054
• [2.094 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 07/19/25 12:27:37.065
  I0719 12:27:37.065309 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename projected @ 07/19/25 12:27:37.066
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:27:37.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:27:37.081
  STEP: Creating projection with secret that has name projected-secret-test-map-15db3549-b7cd-47e1-a424-6eaa2df6b9a3 @ 07/19/25 12:27:37.085
  STEP: Creating a pod to test consume secrets @ 07/19/25 12:27:37.09
  STEP: Saw pod success @ 07/19/25 12:27:41.124
  I0719 12:27:41.127653 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod pod-projected-secrets-460f3ad1-2588-4d8d-bcd7-72065b0f378a container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/19/25 12:27:41.137
  I0719 12:27:41.158498 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4885" for this suite. @ 07/19/25 12:27:41.162
• [4.107 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:338
  STEP: Creating a kubernetes client @ 07/19/25 12:27:41.172
  I0719 12:27:41.172797 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename kubectl @ 07/19/25 12:27:41.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:27:41.185
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:27:41.187
  STEP: creating a replication controller @ 07/19/25 12:27:41.191
  I0719 12:27:41.191207 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-4754 create -f -'
  I0719 12:27:41.307547 21 builder.go:146] stderr: ""
  I0719 12:27:41.307584 21 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 07/19/25 12:27:41.307
  I0719 12:27:41.307703 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-4754 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0719 12:27:41.355106 21 builder.go:146] stderr: ""
  I0719 12:27:41.355144 21 builder.go:147] stdout: "update-demo-nautilus-jbxks update-demo-nautilus-pmg59 "
  I0719 12:27:41.355199 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-4754 get pods update-demo-nautilus-jbxks -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0719 12:27:41.394731 21 builder.go:146] stderr: ""
  I0719 12:27:41.394774 21 builder.go:147] stdout: ""
  I0719 12:27:41.394781 21 kubectl.go:2505] update-demo-nautilus-jbxks is created but not running
  I0719 12:27:46.396515 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-4754 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0719 12:27:46.440628 21 builder.go:146] stderr: ""
  I0719 12:27:46.440662 21 builder.go:147] stdout: "update-demo-nautilus-jbxks update-demo-nautilus-pmg59 "
  I0719 12:27:46.440705 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-4754 get pods update-demo-nautilus-jbxks -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0719 12:27:46.482857 21 builder.go:146] stderr: ""
  I0719 12:27:46.482903 21 builder.go:147] stdout: "true"
  I0719 12:27:46.482940 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-4754 get pods update-demo-nautilus-jbxks -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0719 12:27:46.525306 21 builder.go:146] stderr: ""
  I0719 12:27:46.525377 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0719 12:27:46.525391 21 kubectl.go:2396] validating pod update-demo-nautilus-jbxks
  I0719 12:27:46.531505 21 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0719 12:27:46.531557 21 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0719 12:27:46.531566 21 kubectl.go:2523] update-demo-nautilus-jbxks is verified up and running
  I0719 12:27:46.531594 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-4754 get pods update-demo-nautilus-pmg59 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0719 12:27:46.570936 21 builder.go:146] stderr: ""
  I0719 12:27:46.570961 21 builder.go:147] stdout: "true"
  I0719 12:27:46.571024 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-4754 get pods update-demo-nautilus-pmg59 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0719 12:27:46.611653 21 builder.go:146] stderr: ""
  I0719 12:27:46.611679 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0719 12:27:46.611689 21 kubectl.go:2396] validating pod update-demo-nautilus-pmg59
  I0719 12:27:46.619131 21 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0719 12:27:46.619169 21 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0719 12:27:46.619176 21 kubectl.go:2523] update-demo-nautilus-pmg59 is verified up and running
  STEP: using delete to clean up resources @ 07/19/25 12:27:46.619
  I0719 12:27:46.619230 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-4754 delete --grace-period=0 --force -f -'
  I0719 12:27:46.667442 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0719 12:27:46.667466 21 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0719 12:27:46.667502 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-4754 get rc,svc -l name=update-demo --no-headers'
  I0719 12:27:46.732238 21 builder.go:146] stderr: "No resources found in kubectl-4754 namespace.\n"
  I0719 12:27:46.732275 21 builder.go:147] stdout: ""
  I0719 12:27:46.732443 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-4754 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0719 12:27:46.780042 21 builder.go:146] stderr: ""
  I0719 12:27:46.780079 21 builder.go:147] stdout: ""
  I0719 12:27:46.780226 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4754" for this suite. @ 07/19/25 12:27:46.786
• [5.622 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 07/19/25 12:27:46.795
  I0719 12:27:46.795335 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename projected @ 07/19/25 12:27:46.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:27:46.808
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:27:46.81
  STEP: Creating secret with name s-test-opt-del-b5e6c451-0ff4-4f25-95a1-4a6b667a5982 @ 07/19/25 12:27:46.886
  STEP: Creating secret with name s-test-opt-upd-351419cd-f6e2-471c-ae88-4b347fb95350 @ 07/19/25 12:27:46.891
  STEP: Creating the pod @ 07/19/25 12:27:46.9
  STEP: Deleting secret s-test-opt-del-b5e6c451-0ff4-4f25-95a1-4a6b667a5982 @ 07/19/25 12:27:48.951
  STEP: Updating secret s-test-opt-upd-351419cd-f6e2-471c-ae88-4b347fb95350 @ 07/19/25 12:27:48.959
  STEP: Creating secret with name s-test-opt-create-b80dd5b7-19b8-40f3-a011-0478e35cadb0 @ 07/19/25 12:27:48.967
  STEP: waiting to observe update in volume @ 07/19/25 12:27:48.972
  I0719 12:28:59.365548 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6735" for this suite. @ 07/19/25 12:28:59.372
• [72.588 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 07/19/25 12:28:59.383
  I0719 12:28:59.383951 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename security-context @ 07/19/25 12:28:59.384
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:28:59.398
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:28:59.4
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 07/19/25 12:28:59.403
  STEP: Saw pod success @ 07/19/25 12:29:03.432
  I0719 12:29:03.436619 21 output.go:207] Trying to get logs from node ip-172-31-42-177 pod security-context-d85e2561-3742-44b6-8947-c91493982c1f container test-container: <nil>
  STEP: delete the pod @ 07/19/25 12:29:03.455
  I0719 12:29:03.475525 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-5291" for this suite. @ 07/19/25 12:29:03.48
• [4.104 seconds]
------------------------------
SS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:329
  STEP: Creating a kubernetes client @ 07/19/25 12:29:03.487
  I0719 12:29:03.487728 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename proxy @ 07/19/25 12:29:03.488
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:29:03.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:29:03.502
  I0719 12:29:03.505101 21 proxy.go:336] Creating pod...
  I0719 12:29:05.526178 21 proxy.go:360] Creating service...
  I0719 12:29:05.543894 21 proxy.go:397] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6018/pods/agnhost/proxy/some/path/with/DELETE
  I0719 12:29:05.549838 21 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0719 12:29:05.549874 21 proxy.go:397] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6018/pods/agnhost/proxy/some/path/with/GET
  I0719 12:29:05.554053 21 proxy.go:573] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0719 12:29:05.554082 21 proxy.go:397] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6018/pods/agnhost/proxy/some/path/with/HEAD
  I0719 12:29:05.558115 21 proxy.go:560] http.Client request:HEAD | StatusCode:200
  I0719 12:29:05.558306 21 proxy.go:397] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6018/pods/agnhost/proxy/some/path/with/OPTIONS
  I0719 12:29:05.562631 21 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0719 12:29:05.562657 21 proxy.go:397] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6018/pods/agnhost/proxy/some/path/with/PATCH
  I0719 12:29:05.566499 21 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0719 12:29:05.566524 21 proxy.go:397] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6018/pods/agnhost/proxy/some/path/with/POST
  I0719 12:29:05.571230 21 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0719 12:29:05.571251 21 proxy.go:397] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6018/pods/agnhost/proxy/some/path/with/PUT
  I0719 12:29:05.575320 21 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0719 12:29:05.575358 21 proxy.go:408] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6018/services/test-service/proxy/some/path/with/DELETE
  I0719 12:29:05.581844 21 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0719 12:29:05.581863 21 proxy.go:408] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6018/services/test-service/proxy/some/path/with/GET
  I0719 12:29:05.589763 21 proxy.go:573] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0719 12:29:05.589787 21 proxy.go:408] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6018/services/test-service/proxy/some/path/with/HEAD
  I0719 12:29:05.596242 21 proxy.go:560] http.Client request:HEAD | StatusCode:200
  I0719 12:29:05.596263 21 proxy.go:408] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6018/services/test-service/proxy/some/path/with/OPTIONS
  I0719 12:29:05.602314 21 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0719 12:29:05.602356 21 proxy.go:408] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6018/services/test-service/proxy/some/path/with/PATCH
  I0719 12:29:05.610333 21 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0719 12:29:05.610381 21 proxy.go:408] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6018/services/test-service/proxy/some/path/with/POST
  I0719 12:29:05.619046 21 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0719 12:29:05.619074 21 proxy.go:408] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6018/services/test-service/proxy/some/path/with/PUT
  I0719 12:29:05.624369 21 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0719 12:29:05.624517 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-6018" for this suite. @ 07/19/25 12:29:05.629
• [2.150 seconds]
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 07/19/25 12:29:05.637
  I0719 12:29:05.637595 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename deployment @ 07/19/25 12:29:05.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:29:05.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:29:05.653
  I0719 12:29:05.667559 21 resource.go:81] Pod name cleanup-pod: Found 0 pods out of 1
  I0719 12:29:10.673703 21 resource.go:81] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/19/25 12:29:10.673
  I0719 12:29:10.673778 21 deployment.go:854] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 07/19/25 12:29:10.686
  I0719 12:29:10.702129 21 deployment.go:632] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7338",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b8b8b5e7-c7a3-47e8-96d7-d8444232dce4",
      ResourceVersion: (string) (len=5) "10910",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888524950,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888524950,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0719 12:29:10.706887 21 deployment.go:40] New ReplicaSet "test-cleanup-deployment-69b989f764" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7338",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4ce0097d-7986-4854-a713-79594d367bc6",
      ResourceVersion: (string) (len=5) "10912",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888524950,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "b8b8b5e7-c7a3-47e8-96d7-d8444232dce4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888524950,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 38 62 38 62 35  65 37 2d 63 37 61 33 2d  |\"b8b8b5e7-c7a3-|
              00000120  34 37 65 38 2d 39 36 64  37 2d 64 38 34 34 34 32  |47e8-96d7-d84442|
              00000130  33 32 64 63 65 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |32dce4\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764",
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 0,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0719 12:29:10.707368 21 deployment.go:45] All old ReplicaSets of Deployment "test-cleanup-deployment":
  I0719 12:29:10.707552 21 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7338",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "48c59c76-b9eb-45e2-91f3-94c5fe3e530f",
      ResourceVersion: (string) (len=5) "10911",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888524945,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "b8b8b5e7-c7a3-47e8-96d7-d8444232dce4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888524945,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888524946,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888524950,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 62 38 62 38 62 35 65  |"uid\":\"b8b8b5e|
              00000040  37 2d 63 37 61 33 2d 34  37 65 38 2d 39 36 64 37  |7-c7a3-47e8-96d7|
              00000050  2d 64 38 34 34 34 32 33  32 64 63 65 34 5c 22 7d  |-d8444232dce4\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "pod": (string) (len=5) "httpd",
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0719 12:29:10.716590 21 deployment.go:68] Pod "test-cleanup-controller-hmmwl" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-hmmwl",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-7338",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ec3375b3-100d-4925-8c9c-9020741ccad7",
      ResourceVersion: (string) (len=5) "10869",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888524945,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "48c59c76-b9eb-45e2-91f3-94c5fe3e530f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888524945,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  34 38 63 35 39 63 37 36  |uid\":\"48c59c76|
              00000080  2d 62 39 65 62 2d 34 35  65 32 2d 39 31 66 33 2d  |-b9eb-45e2-91f3-|
              00000090  39 34 63 35 66 65 33 65  35 33 30 66 5c 22 7d 22  |94c5fe3e530f\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888524946,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 30  36 2e 32 35 30 5c 22 7d  |2.168.206.250\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7mjrc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7mjrc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-6-59",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888524946,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888524945,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888524946,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888524946,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888524945,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.6.59",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.6.59"
        }
      },
      PodIP: (string) (len=15) "192.168.206.250",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.206.250"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888524945,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63888524946,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ccecd04928c3728db2db2edd2e01501e167a07d774fe2ab2c43084e5a88171bf",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7mjrc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0719 12:29:10.721157 21 deployment.go:68] Pod "test-cleanup-deployment-69b989f764-wpprt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-69b989f764-wpprt",
      GenerateName: (string) (len=35) "test-cleanup-deployment-69b989f764-",
      Namespace: (string) (len=15) "deployment-7338",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "eba70d83-140c-44ff-8353-e53202eb725d",
      ResourceVersion: (string) (len=5) "10914",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888524950,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764",
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
          UID: (types.UID) (len=36) "4ce0097d-7986-4854-a713-79594d367bc6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888524950,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 63  65 30 30 39 37 64 2d 37  |d\":\"4ce0097d-7|
              00000090  39 38 36 2d 34 38 35 34  2d 61 37 31 33 2d 37 39  |986-4854-a713-79|
              000000a0  35 39 34 64 33 36 37 62  63 36 5c 22 7d 22 3a 7b  |594d367bc6\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wv8fl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wv8fl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0719 12:29:10.722579 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7338" for this suite. @ 07/19/25 12:29:10.734
• [5.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:124
  STEP: Creating a kubernetes client @ 07/19/25 12:29:10.746
  I0719 12:29:10.746822 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename projected @ 07/19/25 12:29:10.748
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:29:10.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:29:10.765
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-8c635f0e-3e05-4707-be83-bba0aeef54b7 @ 07/19/25 12:29:10.834
  STEP: Creating the pod @ 07/19/25 12:29:10.84
  STEP: Updating configmap projected-configmap-test-upd-8c635f0e-3e05-4707-be83-bba0aeef54b7 @ 07/19/25 12:29:12.876
  STEP: waiting to observe update in volume @ 07/19/25 12:29:12.884
  I0719 12:30:35.313012 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5062" for this suite. @ 07/19/25 12:30:35.319
• [84.582 seconds]
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 07/19/25 12:30:35.328
  I0719 12:30:35.328625 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename field-validation @ 07/19/25 12:30:35.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:30:35.34
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:30:35.343
  I0719 12:30:35.346261 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  W0719 12:30:35.346796      21 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc00120fc50 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  I0719 12:30:37.882814      21 warnings.go:110] "Warning: unknown field \"alpha\""
  I0719 12:30:37.882842      21 warnings.go:110] "Warning: unknown field \"beta\""
  I0719 12:30:37.882847      21 warnings.go:110] "Warning: unknown field \"delta\""
  I0719 12:30:37.882852      21 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0719 12:30:37.882864      21 warnings.go:110] "Warning: unknown field \"gamma\""
  I0719 12:30:38.433826 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9473" for this suite. @ 07/19/25 12:30:38.438
• [3.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 07/19/25 12:30:38.45
  I0719 12:30:38.450282 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename security-context-test @ 07/19/25 12:30:38.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:30:38.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:30:38.465
  I0719 12:30:42.521632 21 security_context.go:619] Got logs for pod "busybox-privileged-false-8165a45f-2605-45bf-a906-f0527d6fbb36": "ip: RTNETLINK answers: Operation not permitted\n"
  I0719 12:30:42.521797 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6472" for this suite. @ 07/19/25 12:30:42.527
• [4.084 seconds]
------------------------------
S
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 07/19/25 12:30:42.534
  I0719 12:30:42.534712 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename pod-network-test @ 07/19/25 12:30:42.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:30:42.551
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:30:42.554
  STEP: Performing setup for networking test in namespace pod-network-test-3404 @ 07/19/25 12:30:42.556
  STEP: creating a selector @ 07/19/25 12:30:42.556
  STEP: Creating the service pods in kubernetes @ 07/19/25 12:30:42.556
  I0719 12:30:42.556855 21 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 07/19/25 12:30:56.727
  I0719 12:30:58.766414 21 utils.go:802] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0719 12:30:58.766456 21 utils.go:495] Going to poll 192.168.156.240 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0719 12:30:58.770353 21 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.156.240:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-3404 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0719 12:30:58.770374 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0719 12:30:58.770419 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3404/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.156.240%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0719 12:30:58.820580 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0719 12:30:58.820620 21 utils.go:512] Found all 1 expected endpoints: [netserver-0]
  I0719 12:30:58.820631 21 utils.go:495] Going to poll 192.168.206.252 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0719 12:30:58.825924 21 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.206.252:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-3404 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0719 12:30:58.825939 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0719 12:30:58.825977 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3404/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.206.252%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0719 12:30:58.863845 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0719 12:30:58.863879 21 utils.go:512] Found all 1 expected endpoints: [netserver-1]
  I0719 12:30:58.863892 21 utils.go:495] Going to poll 192.168.103.173 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0719 12:30:58.869371 21 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.103.173:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-3404 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0719 12:30:58.869388 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0719 12:30:58.869428 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3404/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.103.173%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0719 12:30:58.911920 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0719 12:30:58.911958 21 utils.go:512] Found all 1 expected endpoints: [netserver-2]
  I0719 12:30:58.912052 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3404" for this suite. @ 07/19/25 12:30:58.918
• [16.393 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 07/19/25 12:30:58.927
  I0719 12:30:58.927712 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/19/25 12:30:58.928
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:30:58.943
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:30:58.946
  I0719 12:30:58.948986 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  I0719 12:30:59.493005 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7593" for this suite. @ 07/19/25 12:30:59.503
• [0.585 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:87
  STEP: Creating a kubernetes client @ 07/19/25 12:30:59.512
  I0719 12:30:59.512992 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename replication-controller @ 07/19/25 12:30:59.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:30:59.528
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:30:59.531
  I0719 12:30:59.533900 21 rc.go:546] Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 07/19/25 12:31:00.55
  STEP: Checking rc "condition-test" has the desired failure condition set @ 07/19/25 12:31:00.559
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 07/19/25 12:31:01.567
  I0719 12:31:01.581498 21 rc.go:733] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 07/19/25 12:31:01.581
  I0719 12:31:02.594833 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2797" for this suite. @ 07/19/25 12:31:02.601
• [3.096 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:863
  STEP: Creating a kubernetes client @ 07/19/25 12:31:02.609
  I0719 12:31:02.609539 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename resourcequota @ 07/19/25 12:31:02.61
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:31:02.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:31:02.627
  STEP: Creating a ResourceQuota with best effort scope @ 07/19/25 12:31:02.629
  STEP: Ensuring ResourceQuota status is calculated @ 07/19/25 12:31:02.635
  STEP: Creating a ResourceQuota with not best effort scope @ 07/19/25 12:31:04.64
  STEP: Ensuring ResourceQuota status is calculated @ 07/19/25 12:31:04.645
  STEP: Creating a best-effort pod @ 07/19/25 12:31:06.652
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 07/19/25 12:31:06.67
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 07/19/25 12:31:08.676
  STEP: Deleting the pod @ 07/19/25 12:31:10.682
  STEP: Ensuring resource quota status released the pod usage @ 07/19/25 12:31:10.696
  STEP: Creating a not best-effort pod @ 07/19/25 12:31:12.702
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 07/19/25 12:31:12.716
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 07/19/25 12:31:14.722
  STEP: Deleting the pod @ 07/19/25 12:31:16.729
  STEP: Ensuring resource quota status released the pod usage @ 07/19/25 12:31:16.745
  I0719 12:31:18.750410 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8516" for this suite. @ 07/19/25 12:31:18.756
• [16.157 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 07/19/25 12:31:18.767
  I0719 12:31:18.767142 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename secrets @ 07/19/25 12:31:18.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:31:18.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:31:18.782
  STEP: Creating secret with name secret-test-3163e68c-fd5e-45e3-8afa-906dea67ef9a @ 07/19/25 12:31:18.784
  STEP: Creating a pod to test consume secrets @ 07/19/25 12:31:18.789
  STEP: Saw pod success @ 07/19/25 12:31:22.82
  I0719 12:31:22.824382 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod pod-secrets-3028105f-e56f-4fd3-aeec-aca897e2e1f3 container secret-env-test: <nil>
  STEP: delete the pod @ 07/19/25 12:31:22.833
  I0719 12:31:22.854482 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8594" for this suite. @ 07/19/25 12:31:22.859
• [4.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:330
  STEP: Creating a kubernetes client @ 07/19/25 12:31:22.868
  I0719 12:31:22.868581 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename gc @ 07/19/25 12:31:22.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:31:22.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:31:22.885
  STEP: create the rc @ 07/19/25 12:31:22.888
  I0719 12:31:22.894601      21 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: delete the rc @ 07/19/25 12:31:27.9
  STEP: wait for all pods to be garbage collected @ 07/19/25 12:31:27.908
  STEP: Gathering metrics @ 07/19/25 12:31:32.922
  W0719 12:31:32.926986      21 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0719 12:31:32.927014 21 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0719 12:31:32.927218 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6478" for this suite. @ 07/19/25 12:31:32.932
• [10.073 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 07/19/25 12:31:32.941
  I0719 12:31:32.941381 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename certificates @ 07/19/25 12:31:32.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:31:32.954
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:31:32.957
  STEP: getting /apis @ 07/19/25 12:31:33.303
  STEP: getting /apis/certificates.k8s.io @ 07/19/25 12:31:33.307
  STEP: getting /apis/certificates.k8s.io/v1 @ 07/19/25 12:31:33.308
  STEP: creating @ 07/19/25 12:31:33.309
  STEP: getting @ 07/19/25 12:31:33.331
  STEP: listing @ 07/19/25 12:31:33.336
  STEP: watching @ 07/19/25 12:31:33.342
  I0719 12:31:33.342601 21 certificates.go:316] starting watch
  STEP: patching @ 07/19/25 12:31:33.343
  STEP: updating @ 07/19/25 12:31:33.358
  I0719 12:31:33.368789 21 certificates.go:332] waiting for watch events with expected annotations
  I0719 12:31:33.368823 21 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 07/19/25 12:31:33.368
  STEP: patching /approval @ 07/19/25 12:31:33.374
  STEP: updating /approval @ 07/19/25 12:31:33.383
  STEP: getting /status @ 07/19/25 12:31:33.391
  STEP: patching /status @ 07/19/25 12:31:33.396
  STEP: updating /status @ 07/19/25 12:31:33.404
  STEP: deleting @ 07/19/25 12:31:33.412
  STEP: deleting a collection @ 07/19/25 12:31:33.429
  I0719 12:31:33.452603 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-250" for this suite. @ 07/19/25 12:31:33.458
• [0.523 seconds]
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 07/19/25 12:31:33.464
  I0719 12:31:33.464774 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename events @ 07/19/25 12:31:33.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:31:33.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:31:33.48
  STEP: creating a test event @ 07/19/25 12:31:33.483
  STEP: listing events in all namespaces @ 07/19/25 12:31:33.491
  STEP: listing events in test namespace @ 07/19/25 12:31:33.505
  STEP: listing events with field selection filtering on source @ 07/19/25 12:31:33.509
  STEP: listing events with field selection filtering on reportingController @ 07/19/25 12:31:33.513
  STEP: getting the test event @ 07/19/25 12:31:33.518
  STEP: patching the test event @ 07/19/25 12:31:33.522
  STEP: getting the test event @ 07/19/25 12:31:33.532
  STEP: updating the test event @ 07/19/25 12:31:33.536
  STEP: getting the test event @ 07/19/25 12:31:33.545
  STEP: deleting the test event @ 07/19/25 12:31:33.549
  STEP: listing events in all namespaces @ 07/19/25 12:31:33.561
  STEP: listing events in test namespace @ 07/19/25 12:31:33.573
  I0719 12:31:33.578075 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5561" for this suite. @ 07/19/25 12:31:33.583
• [0.126 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:250
  STEP: Creating a kubernetes client @ 07/19/25 12:31:33.591
  I0719 12:31:33.591590 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename projected @ 07/19/25 12:31:33.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:31:33.606
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:31:33.609
  STEP: Creating a pod to test downward API volume plugin @ 07/19/25 12:31:33.611
  STEP: Saw pod success @ 07/19/25 12:31:37.641
  I0719 12:31:37.645652 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod downwardapi-volume-5547fb80-1637-41ed-a413-f97f8d1300de container client-container: <nil>
  STEP: delete the pod @ 07/19/25 12:31:37.652
  I0719 12:31:37.671535 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3536" for this suite. @ 07/19/25 12:31:37.677
• [4.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 07/19/25 12:31:37.685
  I0719 12:31:37.685315 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename csiinlinevolumes @ 07/19/25 12:31:37.685
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:31:37.7
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:31:37.703
  STEP: Creating two CSIDrivers @ 07/19/25 12:31:37.705
  STEP: Getting "inline-driver-3eed1a60-815b-4c53-a519-8646eaf6235c" & "inline-driver-e6768564-e29a-4a74-9c52-2a68871739ac" @ 07/19/25 12:31:37.726
  STEP: Patching the CSIDriver "inline-driver-e6768564-e29a-4a74-9c52-2a68871739ac" @ 07/19/25 12:31:37.732
  STEP: Updating the CSIDriver "inline-driver-e6768564-e29a-4a74-9c52-2a68871739ac" @ 07/19/25 12:31:37.738
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-6541" @ 07/19/25 12:31:37.747
  STEP: Deleting CSIDriver "inline-driver-3eed1a60-815b-4c53-a519-8646eaf6235c" @ 07/19/25 12:31:37.751
  STEP: Confirm deletion of CSIDriver "inline-driver-3eed1a60-815b-4c53-a519-8646eaf6235c" @ 07/19/25 12:31:37.759
  STEP: Deleting CSIDriver "inline-driver-e6768564-e29a-4a74-9c52-2a68871739ac" via DeleteCollection @ 07/19/25 12:31:37.763
  STEP: Confirm deletion of CSIDriver "inline-driver-e6768564-e29a-4a74-9c52-2a68871739ac" @ 07/19/25 12:31:37.773
  I0719 12:31:37.775786 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-6541" for this suite. @ 07/19/25 12:31:37.78
• [0.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 07/19/25 12:31:37.789
  I0719 12:31:37.789757 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename sysctl @ 07/19/25 12:31:37.79
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:31:37.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:31:37.805
  STEP: Creating a pod with one valid and two invalid sysctls @ 07/19/25 12:31:37.808
  I0719 12:31:37.815274 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-69" for this suite. @ 07/19/25 12:31:37.882
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1068
  STEP: Creating a kubernetes client @ 07/19/25 12:31:37.891
  I0719 12:31:37.891269 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename job @ 07/19/25 12:31:37.891
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:31:37.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:31:37.906
  STEP: Creating a job @ 07/19/25 12:31:37.909
  STEP: Ensure pods equal to parallelism count is attached to the job @ 07/19/25 12:31:37.916
  STEP: patching /status @ 07/19/25 12:31:39.928
  STEP: updating /status @ 07/19/25 12:31:39.936
  STEP: get /status @ 07/19/25 12:31:39.946
  I0719 12:31:39.950553 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5561" for this suite. @ 07/19/25 12:31:39.955
• [2.073 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:89
  STEP: Creating a kubernetes client @ 07/19/25 12:31:39.964
  I0719 12:31:39.964571 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename emptydir @ 07/19/25 12:31:39.965
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:31:39.978
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:31:39.98
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 07/19/25 12:31:39.983
  STEP: Saw pod success @ 07/19/25 12:31:44.012
  I0719 12:31:44.015920 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod pod-6898351d-5a23-44a3-9c5b-14c7a0f6dc5a container test-container: <nil>
  STEP: delete the pod @ 07/19/25 12:31:44.023
  I0719 12:31:44.042306 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-627" for this suite. @ 07/19/25 12:31:44.047
• [4.091 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1836
  STEP: Creating a kubernetes client @ 07/19/25 12:31:44.055
  I0719 12:31:44.055375 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename kubectl @ 07/19/25 12:31:44.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:31:44.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:31:44.072
  STEP: starting the proxy server @ 07/19/25 12:31:44.074
  I0719 12:31:44.074712 21 util.go:541] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-2783 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 07/19/25 12:31:44.103
  I0719 12:31:44.110700 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0719 12:31:44.111998 21 kubectl.go:2227] kubectl proxy stdout: Starting to serve on 127.0.0.1:33165

  I0719 12:31:44.112025 21 kubectl.go:2232] kubectl proxy stderr: W0719 12:31:44.103430     107 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  STEP: Destroying namespace "kubectl-2783" for this suite. @ 07/19/25 12:31:44.149
• [0.105 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:110
  STEP: Creating a kubernetes client @ 07/19/25 12:31:44.16
  I0719 12:31:44.160095 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename job @ 07/19/25 12:31:44.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:31:44.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:31:44.175
  STEP: Looking for a node to schedule job pod @ 07/19/25 12:31:44.178
  STEP: Creating a job @ 07/19/25 12:31:44.249
  STEP: Ensuring job fails @ 07/19/25 12:31:44.259
  I0719 12:31:48.275192 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9291" for this suite. @ 07/19/25 12:31:48.28
• [4.131 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3714
  STEP: Creating a kubernetes client @ 07/19/25 12:31:48.29
  I0719 12:31:48.290789 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename services @ 07/19/25 12:31:48.291
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:31:48.305
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:31:48.307
  STEP: creating service multiprotocol-test in namespace services-8920 @ 07/19/25 12:31:48.31
  STEP: creating pod pod1 in namespace services-8920 @ 07/19/25 12:31:48.332
  STEP: Creating pod pod1 in namespace services-8920 @ 07/19/25 12:31:48.332
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-8920 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 07/19/25 12:31:50.357
  I0719 12:31:50.364054      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0719 12:31:50.369716 21 service.go:4729] successfully validated that service multiprotocol-test in namespace services-8920 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 07/19/25 12:31:50.369
  I0719 12:31:50.369761 21 resource.go:361] Creating new exec pod
  I0719 12:31:52.391553 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-8920 exec execpodqmvpr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.189 80'
  I0719 12:31:52.480727 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.189 80\nConnection to 10.152.183.189 80 port [tcp/http] succeeded!\n"
  I0719 12:31:52.480765 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0719 12:31:52.480887 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-8920 exec execpodqmvpr -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.189 80'
  I0719 12:31:54.562941 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.189 80\n"
  I0719 12:31:54.562980 21 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 07/19/25 12:31:54.563
  I0719 12:31:54.574832 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-8920 exec execpodqmvpr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.189 80'
  I0719 12:31:54.666426 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.189 80\nConnection to 10.152.183.189 80 port [tcp/http] succeeded!\n"
  I0719 12:31:54.666487 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0719 12:31:54.666583 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-8920 exec execpodqmvpr -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.189 80'
  I0719 12:31:56.756477 21 builder.go:146] stderr: "+ echo+  hostNamenc\n -v -u -w 2 10.152.183.189 80\n"
  I0719 12:31:56.756522 21 builder.go:147] stdout: ""
  I0719 12:31:56.756619 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-8920 exec execpodqmvpr -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.189 80'
  I0719 12:31:58.842845 21 builder.go:146] stderr: "+ + ncecho -v hostName -u\n -w 2 10.152.183.189 80\n"
  I0719 12:31:58.842900 21 builder.go:147] stdout: ""
  I0719 12:31:58.842956 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-8920 exec execpodqmvpr -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.189 80'
  I0719 12:32:00.931611 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.189 80\n"
  I0719 12:32:00.931659 21 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 07/19/25 12:32:00.931
  I0719 12:32:00.945373 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-8920 exec execpodqmvpr -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.189 80'
  I0719 12:32:03.045686 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.189 80\n"
  I0719 12:32:03.045726 21 builder.go:147] stdout: "pod1"
  I0719 12:32:03.045814 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-8920 exec execpodqmvpr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.189 80'
  I0719 12:32:05.125060 21 builder.go:135] rc: 1
  I0719 12:32:05.125122 21 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-8920 exec execpodqmvpr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.189 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.189 80
  nc: connect to 10.152.183.189 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0719 12:32:05.125193 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-8920 exec execpodqmvpr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.189 80'
  I0719 12:32:07.209716 21 builder.go:135] rc: 1
  I0719 12:32:07.209772 21 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-8920 exec execpodqmvpr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.189 80:
  Command stdout:

  stderr:
  E0719 12:32:05.179084     148 websocket.go:297] Unknown stream id 1, discarding message
  + echo hostName
  + nc -v -t -w 2 10.152.183.189 80
  nc: connect to 10.152.183.189 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0719 12:32:07.209873 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-8920 exec execpodqmvpr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.189 80'
  I0719 12:32:09.292810 21 builder.go:135] rc: 1
  I0719 12:32:09.292882 21 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-8920 exec execpodqmvpr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.189 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.189 80
  nc: connect to 10.152.183.189 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0719 12:32:09.293101 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8920" for this suite. @ 07/19/25 12:32:09.299
• [21.018 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 07/19/25 12:32:09.308
  I0719 12:32:09.308640 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename field-validation @ 07/19/25 12:32:09.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:32:09.322
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:32:09.324
  I0719 12:32:09.327565 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  I0719 12:32:12.418885 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-375" for this suite. @ 07/19/25 12:32:12.429
• [3.130 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1368
  STEP: Creating a kubernetes client @ 07/19/25 12:32:12.438
  I0719 12:32:12.438800 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename kubectl @ 07/19/25 12:32:12.439
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:32:12.458
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:32:12.461
  STEP: validating cluster-info @ 07/19/25 12:32:12.464
  I0719 12:32:12.464249 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-8852 cluster-info'
  I0719 12:32:12.518985 21 builder.go:146] stderr: ""
  I0719 12:32:12.519011 21 builder.go:147] stdout: "Kubernetes control plane is running at https://10.152.183.1:443\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0719 12:32:12.519105 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8852" for this suite. @ 07/19/25 12:32:12.53
• [0.099 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 07/19/25 12:32:12.537
  I0719 12:32:12.537824 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename projected @ 07/19/25 12:32:12.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:32:12.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:32:12.556
  STEP: Creating projection with secret that has name projected-secret-test-map-612c12f1-d6fc-4b23-996a-d84ea1f709f2 @ 07/19/25 12:32:12.558
  STEP: Creating a pod to test consume secrets @ 07/19/25 12:32:12.565
  STEP: Saw pod success @ 07/19/25 12:32:14.591
  I0719 12:32:14.595379 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod pod-projected-secrets-dd5404bf-c2dd-40f6-8b3f-0f7ca8c00484 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/19/25 12:32:14.602
  I0719 12:32:14.617722 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8644" for this suite. @ 07/19/25 12:32:14.622
• [2.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:54
  STEP: Creating a kubernetes client @ 07/19/25 12:32:14.629
  I0719 12:32:14.629832 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename downward-api @ 07/19/25 12:32:14.63
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:32:14.644
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:32:14.647
  STEP: Creating a pod to test downward API volume plugin @ 07/19/25 12:32:14.65
  STEP: Saw pod success @ 07/19/25 12:32:18.679
  I0719 12:32:18.683552 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod downwardapi-volume-fa681d40-0aa6-4f1d-9096-1e219b127d94 container client-container: <nil>
  STEP: delete the pod @ 07/19/25 12:32:18.691
  I0719 12:32:18.709402 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8884" for this suite. @ 07/19/25 12:32:18.713
• [4.093 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:305
  STEP: Creating a kubernetes client @ 07/19/25 12:32:18.723
  I0719 12:32:18.723427 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename svcaccounts @ 07/19/25 12:32:18.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:32:18.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:32:18.739
  STEP: Creating a pod to test service account token:  @ 07/19/25 12:32:18.741
  STEP: Saw pod success @ 07/19/25 12:32:22.767
  I0719 12:32:22.772308 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod test-pod-c5030d99-0ab9-487a-910e-34a2df46d996 container agnhost-container: <nil>
  STEP: delete the pod @ 07/19/25 12:32:22.781
  I0719 12:32:22.800543 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-818" for this suite. @ 07/19/25 12:32:22.806
• [4.094 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:47
  STEP: Creating a kubernetes client @ 07/19/25 12:32:22.817
  I0719 12:32:22.817566 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename projected @ 07/19/25 12:32:22.818
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:32:22.83
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:32:22.833
  STEP: Creating configMap with name projected-configmap-test-volume-25af7864-70ef-49a8-8cb5-b437d34cfe26 @ 07/19/25 12:32:22.836
  STEP: Creating a pod to test consume configMaps @ 07/19/25 12:32:22.842
  STEP: Saw pod success @ 07/19/25 12:32:26.868
  I0719 12:32:26.871879 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod pod-projected-configmaps-f0e2c8fc-5540-4298-a2e0-a131288f0375 container agnhost-container: <nil>
  STEP: delete the pod @ 07/19/25 12:32:26.881
  I0719 12:32:26.903973 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8243" for this suite. @ 07/19/25 12:32:26.909
• [4.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:866
  STEP: Creating a kubernetes client @ 07/19/25 12:32:26.917
  I0719 12:32:26.917372 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename webhook @ 07/19/25 12:32:26.917
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:32:26.931
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:32:26.934
  STEP: Setting up server cert @ 07/19/25 12:32:26.954
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/19/25 12:32:27.023
  STEP: Deploying the webhook pod @ 07/19/25 12:32:27.03
  STEP: Wait for the deployment to be ready @ 07/19/25 12:32:27.044
  I0719 12:32:27.053166 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/19/25 12:32:29.066
  STEP: Verifying the service has paired with the endpoint @ 07/19/25 12:32:29.085
  I0719 12:32:30.086503 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 07/19/25 12:32:30.092
  STEP: create the configmap with a random name @ 07/19/25 12:32:30.111
  STEP: verify the configmap is mutated @ 07/19/25 12:32:30.125
  STEP: create the configmap with 'skip-me' name @ 07/19/25 12:32:30.125
  I0719 12:32:30.202552 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5340" for this suite. @ 07/19/25 12:32:30.209
  STEP: Destroying namespace "webhook-markers-8603" for this suite. @ 07/19/25 12:32:30.216
• [3.308 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:209
  STEP: Creating a kubernetes client @ 07/19/25 12:32:30.225
  I0719 12:32:30.225564 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename dns @ 07/19/25 12:32:30.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:32:30.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:32:30.239
  STEP: Creating a test headless service @ 07/19/25 12:32:30.241
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3238 A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-3238;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3238 A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-3238;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3238.svc A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-3238.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3238.svc A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-3238.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-3238.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-3238.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-3238.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-3238.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-3238.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-3238.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-3238.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-3238.svc;check="$$(dig +notcp +noall +answer +search 126.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.126_udp@PTR;check="$$(dig +tcp +noall +answer +search 126.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.126_tcp@PTR;sleep 1; done
   @ 07/19/25 12:32:30.267
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3238 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-3238;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3238 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-3238;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3238.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-3238.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3238.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-3238.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-3238.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-3238.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-3238.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-3238.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-3238.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-3238.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-3238.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-3238.svc;check="$$(dig +notcp +noall +answer +search 126.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.126_udp@PTR;check="$$(dig +tcp +noall +answer +search 126.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.126_tcp@PTR;sleep 1; done
   @ 07/19/25 12:32:30.267
  STEP: creating a pod to probe DNS @ 07/19/25 12:32:30.267
  STEP: submitting the pod to kubernetes @ 07/19/25 12:32:30.267
  STEP: retrieving the pod @ 07/19/25 12:32:36.304
  STEP: looking for the results for each expected name from probers @ 07/19/25 12:32:36.309
  I0719 12:32:36.405466 21 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3238.svc from pod dns-3238/dns-test-57198398-be1a-488f-be64-bcbd98429e90: the server could not find the requested resource (get pods dns-test-57198398-be1a-488f-be64-bcbd98429e90)
  I0719 12:32:36.410999 21 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3238.svc from pod dns-3238/dns-test-57198398-be1a-488f-be64-bcbd98429e90: the server could not find the requested resource (get pods dns-test-57198398-be1a-488f-be64-bcbd98429e90)
  I0719 12:32:36.431137 21 dns_common.go:506] Lookups using dns-3238/dns-test-57198398-be1a-488f-be64-bcbd98429e90 failed for: [jessie_udp@_http._tcp.dns-test-service.dns-3238.svc jessie_tcp@_http._tcp.dns-test-service.dns-3238.svc]

  I0719 12:32:36.440366 21 dns_common.go:514] Pod client logs for webserver: 
  I0719 12:32:36.447878 21 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0719 12:32:36.456024 21 dns_common.go:514] Pod client logs for jessie-querier: 
  I0719 12:32:41.430934 21 dns_common.go:546] DNS probes using dns-3238/dns-test-57198398-be1a-488f-be64-bcbd98429e90 succeeded

  STEP: deleting the pod @ 07/19/25 12:32:41.431
  STEP: deleting the test service @ 07/19/25 12:32:41.455
  STEP: deleting the test headless service @ 07/19/25 12:32:41.486
  I0719 12:32:41.499730 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3238" for this suite. @ 07/19/25 12:32:41.504
• [11.287 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:754
  STEP: Creating a kubernetes client @ 07/19/25 12:32:41.512
  I0719 12:32:41.512733 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename sched-preemption @ 07/19/25 12:32:41.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:32:41.523
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:32:41.526
  I0719 12:32:41.542718 21 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0719 12:33:41.549402 21 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 07/19/25 12:33:41.553
  I0719 12:33:41.553946 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename sched-preemption-path @ 07/19/25 12:33:41.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:33:41.568
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:33:41.57
  STEP: Finding an available node @ 07/19/25 12:33:41.573
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 07/19/25 12:33:41.573
  STEP: Explicitly delete pod here to free the resource it takes. @ 07/19/25 12:33:43.602
  I0719 12:33:43.616634 21 preemption.go:717] found a healthy node: ip-172-31-6-59
  STEP: Adding a custom resource @ 07/19/25 12:33:43.621
  I0719 12:33:49.688421 21 preemption.go:836] pods created so far: [1 1 1]
  I0719 12:33:49.688451 21 preemption.go:837] length of pods created so far: 3
  I0719 12:33:51.702295 21 preemption.go:854] pods created so far: [2 2 1]
  STEP: Removing a custom resource @ 07/19/25 12:33:58.707
  STEP: Removing a custom resource @ 07/19/25 12:33:58.775
  STEP: Removing a custom resource @ 07/19/25 12:33:58.784
  STEP: Removing a custom resource @ 07/19/25 12:33:58.793
  I0719 12:33:58.803077 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-9557" for this suite. @ 07/19/25 12:33:58.809
  I0719 12:33:58.818554 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-8955" for this suite. @ 07/19/25 12:33:58.91
• [77.407 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:802
  STEP: Creating a kubernetes client @ 07/19/25 12:33:58.92
  I0719 12:33:58.920200 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename job @ 07/19/25 12:33:58.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:33:58.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:33:58.936
  STEP: Creating a job @ 07/19/25 12:33:58.938
  STEP: Ensuring job reaches completions @ 07/19/25 12:33:58.946
  I0719 12:34:08.982382 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5207" for this suite. @ 07/19/25 12:34:08.987
• [10.074 seconds]
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 07/19/25 12:34:08.994
  I0719 12:34:08.994716 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename endpointslice @ 07/19/25 12:34:08.995
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:34:09.011
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:34:09.013
  STEP: getting /apis @ 07/19/25 12:34:09.016
  STEP: getting /apis/discovery.k8s.io @ 07/19/25 12:34:09.018
  STEP: getting /apis/discovery.k8s.iov1 @ 07/19/25 12:34:09.019
  STEP: creating @ 07/19/25 12:34:09.02
  STEP: getting @ 07/19/25 12:34:09.039
  STEP: listing @ 07/19/25 12:34:09.043
  STEP: watching @ 07/19/25 12:34:09.047
  I0719 12:34:09.047311 21 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 07/19/25 12:34:09.048
  STEP: cluster-wide watching @ 07/19/25 12:34:09.052
  I0719 12:34:09.052544 21 endpointslice.go:459] starting watch
  STEP: patching @ 07/19/25 12:34:09.053
  STEP: updating @ 07/19/25 12:34:09.059
  I0719 12:34:09.068047 21 endpointslice.go:482] waiting for watch events with expected annotations
  I0719 12:34:09.068085 21 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 07/19/25 12:34:09.068
  STEP: deleting a collection @ 07/19/25 12:34:09.083
  I0719 12:34:09.103326 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5822" for this suite. @ 07/19/25 12:34:09.108
• [0.122 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 07/19/25 12:34:09.117
  I0719 12:34:09.117219 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename limitrange @ 07/19/25 12:34:09.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:34:09.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:34:09.134
  STEP: Creating LimitRange "e2e-limitrange-5qm7x" in namespace "limitrange-9244" @ 07/19/25 12:34:09.136
  STEP: Creating another limitRange in another namespace @ 07/19/25 12:34:09.141
  I0719 12:34:09.157115 21 limit_range.go:299] Namespace "e2e-limitrange-5qm7x-5442" created
  I0719 12:34:09.157138 21 limit_range.go:300] Creating LimitRange "e2e-limitrange-5qm7x" in namespace "e2e-limitrange-5qm7x-5442"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-5qm7x" @ 07/19/25 12:34:09.161
  I0719 12:34:09.166555 21 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-5qm7x" in "limitrange-9244" namespace @ 07/19/25 12:34:09.166
  I0719 12:34:09.172834 21 limit_range.go:335] LimitRange "e2e-limitrange-5qm7x" has been patched
  STEP: Delete LimitRange "e2e-limitrange-5qm7x" by Collection with labelSelector: "e2e-limitrange-5qm7x=patched" @ 07/19/25 12:34:09.172
  STEP: Confirm that the limitRange "e2e-limitrange-5qm7x" has been deleted @ 07/19/25 12:34:09.182
  I0719 12:34:09.182475 21 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0719 12:34:09.185756 21 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-5qm7x=patched"
  I0719 12:34:09.185772 21 limit_range.go:344] LimitRange "e2e-limitrange-5qm7x" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-5qm7x" @ 07/19/25 12:34:09.185
  I0719 12:34:09.190076 21 limit_range.go:350] Found 1 limitRange
  I0719 12:34:09.190181 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-9244" for this suite. @ 07/19/25 12:34:09.208
  STEP: Destroying namespace "e2e-limitrange-5qm7x-5442" for this suite. @ 07/19/25 12:34:09.218
• [0.109 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 07/19/25 12:34:09.226
  I0719 12:34:09.226573 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename container-probe @ 07/19/25 12:34:09.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:34:09.237
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:34:09.24
  STEP: Creating pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330 @ 07/19/25 12:34:09.243
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/19/25 12:34:11.284
  I0719 12:34:11.288500 21 container_probe.go:1748] Initial restart count of pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 is 0
  I0719 12:34:11.291692 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:34:13.298655 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:34:15.304883 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:34:17.310281 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:34:19.317598 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:34:21.323881 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:34:23.329611 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:34:25.335595 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:34:27.342308 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:34:29.349135 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:34:31.354747 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:34:33.360520 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:34:35.365310 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:34:37.371992 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:34:39.379166 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:34:41.384895 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:34:43.391369 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:34:45.396235 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:34:47.402210 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:34:49.408782 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:34:51.415766 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:34:53.421716 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:34:55.428586 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:34:57.434049 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:34:59.440115 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:35:01.446019 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:35:03.451733 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:35:05.455776 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:35:07.462325 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:35:09.467785 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:35:11.473273 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:35:13.478747 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:35:15.485302 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:35:17.490813 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:35:19.497147 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:35:21.502682 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:35:23.508445 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:35:25.514857 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:35:27.522514 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:35:29.529263 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:35:31.535392 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:35:33.540710 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:35:35.546359 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:35:37.553283 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:35:39.558953 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:35:41.563682 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:35:43.570571 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:35:45.575988 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:35:47.581062 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:35:49.588641 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:35:51.594975 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:35:53.600367 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:35:55.607382 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:35:57.613841 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:35:59.619167 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:36:01.626742 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:36:03.633601 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:36:05.639576 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:36:07.646493 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:36:09.652443 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:36:11.659591 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:36:13.665146 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:36:15.669678 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:36:17.674764 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:36:19.682239 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:36:21.687367 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:36:23.693839 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:36:25.699818 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:36:27.705360 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:36:29.710760 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:36:31.715681 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:36:33.720991 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:36:35.728285 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:36:37.735004 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:36:39.741900 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:36:41.748095 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:36:43.753676 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:36:45.760540 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:36:47.765806 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:36:49.772040 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:36:51.778436 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:36:53.784552 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:36:55.789843 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:36:57.796707 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:36:59.802265 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:37:01.808387 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:37:03.815743 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:37:05.820707 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:37:07.825949 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:37:09.831451 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:37:11.835978 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:37:13.842175 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:37:15.848087 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:37:17.854122 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:37:19.859980 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:37:21.864571 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:37:23.871333 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:37:25.875858 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:37:27.885250 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:37:29.890383 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:37:31.897569 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:37:33.903957 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:37:35.910166 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:37:37.915835 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:37:39.923001 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:37:41.928932 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:37:43.934673 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:37:45.941324 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:37:47.947802 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:37:49.953736 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:37:51.960483 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:37:53.966828 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:37:55.972440 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:37:57.977474 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:37:59.983465 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:38:01.988955 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:38:03.995627 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:38:06.001471 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:38:08.006103 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  I0719 12:38:10.011859 21 container_probe.go:1758] Get pod test-webserver-76effb77-58fb-427b-b043-e21246cebc48 in namespace container-probe-4330
  STEP: deleting the pod @ 07/19/25 12:38:12.012
  I0719 12:38:12.028057 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4330" for this suite. @ 07/19/25 12:38:12.032
• [242.818 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:942
  STEP: Creating a kubernetes client @ 07/19/25 12:38:12.044
  I0719 12:38:12.044421 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename sched-preemption @ 07/19/25 12:38:12.044
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:38:12.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:38:12.062
  I0719 12:38:12.080648 21 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0719 12:39:12.088632 21 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 07/19/25 12:39:12.093
  I0719 12:39:12.093062 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename sched-preemption-path @ 07/19/25 12:39:12.093
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:39:12.107
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:39:12.109
  I0719 12:39:12.128765 21 preemption.go:948] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0719 12:39:12.133187 21 preemption.go:954] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  STEP: Removing a custom resource @ 07/19/25 12:39:12.197
  STEP: Removing a custom resource @ 07/19/25 12:39:12.205
  STEP: Removing a custom resource @ 07/19/25 12:39:12.215
  I0719 12:39:12.224821 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-5520" for this suite. @ 07/19/25 12:39:12.229
  I0719 12:39:12.236961 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9806" for this suite. @ 07/19/25 12:39:12.33
• [60.299 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 07/19/25 12:39:12.343
  I0719 12:39:12.343182 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename field-validation @ 07/19/25 12:39:12.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:39:12.356
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:39:12.359
  I0719 12:39:12.361850 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  I0719 12:39:14.895802      21 warnings.go:110] "Warning: unknown field \"alpha\""
  I0719 12:39:14.895824      21 warnings.go:110] "Warning: unknown field \"beta\""
  I0719 12:39:14.895830      21 warnings.go:110] "Warning: unknown field \"delta\""
  I0719 12:39:14.895835      21 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0719 12:39:14.895841      21 warnings.go:110] "Warning: unknown field \"gamma\""
  I0719 12:39:15.444004 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6247" for this suite. @ 07/19/25 12:39:15.448
• [3.117 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 07/19/25 12:39:15.459
  I0719 12:39:15.459994 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename endpointslicemirroring @ 07/19/25 12:39:15.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:39:15.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:39:15.474
  STEP: mirroring a new custom Endpoint @ 07/19/25 12:39:15.493
  I0719 12:39:15.501167      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0719 12:39:15.506215 21 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 07/19/25 12:39:17.512
  I0719 12:39:17.519267      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: mirroring deletion of a custom Endpoint @ 07/19/25 12:39:17.527
  I0719 12:39:17.534985      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0719 12:39:17.541915 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-8482" for this suite. @ 07/19/25 12:39:17.546
• [2.095 seconds]
------------------------------
SS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:570
  STEP: Creating a kubernetes client @ 07/19/25 12:39:17.555
  I0719 12:39:17.555373 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename security-context-test @ 07/19/25 12:39:17.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:39:17.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:39:17.572
  I0719 12:39:21.604122 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-9876" for this suite. @ 07/19/25 12:39:21.61
• [4.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:166
  STEP: Creating a kubernetes client @ 07/19/25 12:39:21.619
  I0719 12:39:21.619630 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename pods @ 07/19/25 12:39:21.62
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:39:21.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:39:21.637
  STEP: creating the pod @ 07/19/25 12:39:21.64
  STEP: submitting the pod to kubernetes @ 07/19/25 12:39:21.64
  STEP: verifying QOS class is set on the pod @ 07/19/25 12:39:21.653
  I0719 12:39:21.657516 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8546" for this suite. @ 07/19/25 12:39:21.71
• [0.102 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 07/19/25 12:39:21.722
  I0719 12:39:21.722246 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename pods @ 07/19/25 12:39:21.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:39:21.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:39:21.738
  STEP: creating pod @ 07/19/25 12:39:21.74
  I0719 12:39:23.775039 21 pods.go:83] Pod pod-hostip-b65e7e20-9809-4c97-b764-a246b3f81c3b has hostIP: 172.31.6.59
  I0719 12:39:23.775148 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3950" for this suite. @ 07/19/25 12:39:23.78
• [2.066 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Node Lifecycle should run through the lifecycle of a node [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/node_lifecycle.go:51
  STEP: Creating a kubernetes client @ 07/19/25 12:39:23.788
  I0719 12:39:23.788497 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename fake-node @ 07/19/25 12:39:23.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:39:23.804
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:39:23.807
  STEP: Create "e2e-fake-node-6wbzr" @ 07/19/25 12:39:23.809
  STEP: Getting "e2e-fake-node-6wbzr" @ 07/19/25 12:39:23.815
  STEP: Patching "e2e-fake-node-6wbzr" @ 07/19/25 12:39:23.82
  STEP: Listing nodes with LabelSelector "e2e-fake-node-6wbzr=patched" @ 07/19/25 12:39:23.83
  STEP: Updating "e2e-fake-node-6wbzr" @ 07/19/25 12:39:23.836
  STEP: Delete "e2e-fake-node-6wbzr" @ 07/19/25 12:39:23.845
  STEP: Confirm deletion of "e2e-fake-node-6wbzr" @ 07/19/25 12:39:23.852
  I0719 12:39:23.856312 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "fake-node-1394" for this suite. @ 07/19/25 12:39:23.86
• [0.080 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 07/19/25 12:39:23.869
  I0719 12:39:23.869113 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename field-validation @ 07/19/25 12:39:23.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:39:23.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:39:23.884
  STEP: apply creating a deployment @ 07/19/25 12:39:23.888
  I0719 12:39:23.903089 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6966" for this suite. @ 07/19/25 12:39:23.907
• [0.047 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 07/19/25 12:39:23.916
  I0719 12:39:23.916747 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename events @ 07/19/25 12:39:23.917
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:39:23.929
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:39:23.932
  STEP: Create set of events @ 07/19/25 12:39:23.934
  STEP: get a list of Events with a label in the current namespace @ 07/19/25 12:39:23.955
  STEP: delete a list of events @ 07/19/25 12:39:23.959
  I0719 12:39:23.959451 21 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 07/19/25 12:39:23.988
  I0719 12:39:23.992410 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9043" for this suite. @ 07/19/25 12:39:24.009
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 07/19/25 12:39:24.016
  I0719 12:39:24.016745 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename aggregateddiscovery @ 07/19/25 12:39:24.017
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:39:24.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:39:24.035
  I0719 12:39:24.040915 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-3078" for this suite. @ 07/19/25 12:39:24.11
• [0.103 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:119
  STEP: Creating a kubernetes client @ 07/19/25 12:39:24.119
  I0719 12:39:24.120004 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename emptydir @ 07/19/25 12:39:24.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:39:24.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:39:24.135
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 07/19/25 12:39:24.138
  STEP: Saw pod success @ 07/19/25 12:39:28.17
  I0719 12:39:28.174758 21 output.go:207] Trying to get logs from node ip-172-31-42-177 pod pod-f3fc5c51-7a08-4dd0-bfe2-f9ce9219d0a2 container test-container: <nil>
  STEP: delete the pod @ 07/19/25 12:39:28.194
  I0719 12:39:28.213651 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5812" for this suite. @ 07/19/25 12:39:28.219
• [4.109 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 07/19/25 12:39:28.229
  I0719 12:39:28.229064 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename taint-multiple-pods @ 07/19/25 12:39:28.229
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:39:28.239
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:39:28.242
  I0719 12:39:28.244723 21 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0719 12:40:28.245797 21 util.go:390] Waiting for terminating namespaces to be deleted...
  I0719 12:40:28.252408 21 taints.go:144] Starting informer...
  STEP: Starting pods... @ 07/19/25 12:40:28.252
  I0719 12:40:28.471412 21 taints.go:463] Pod1 is running on ip-172-31-6-59. Tainting Node
  I0719 12:40:30.696461 21 taints.go:471] Pod2 is running on ip-172-31-6-59. Tainting Node
  STEP: Trying to apply a taint on the Node @ 07/19/25 12:40:30.696
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 07/19/25 12:40:30.707
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 07/19/25 12:40:30.711
  I0719 12:40:36.113547 21 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  I0719 12:40:56.142540 21 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 07/19/25 12:40:56.153
  I0719 12:40:56.156456 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-8878" for this suite. @ 07/19/25 12:40:56.161
• [87.946 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:105
  STEP: Creating a kubernetes client @ 07/19/25 12:40:56.175
  I0719 12:40:56.175132 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename replication-controller @ 07/19/25 12:40:56.175
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:40:56.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:40:56.198
  STEP: Given a ReplicationController is created @ 07/19/25 12:40:56.201
  STEP: When the matched label of one of its pods change @ 07/19/25 12:40:56.211
  I0719 12:40:56.217485 21 resource.go:81] Pod name pod-release: Found 0 pods out of 1
  I0719 12:41:01.224145 21 resource.go:81] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 07/19/25 12:41:01.236
  I0719 12:41:01.245164 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3019" for this suite. @ 07/19/25 12:41:01.25
• [5.090 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 07/19/25 12:41:01.265
  I0719 12:41:01.265394 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename configmap @ 07/19/25 12:41:01.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:41:01.278
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:41:01.281
  STEP: Creating configMap configmap-1780/configmap-test-baa942b7-0893-4fca-905d-3c0da3de8520 @ 07/19/25 12:41:01.283
  STEP: Creating a pod to test consume configMaps @ 07/19/25 12:41:01.29
  STEP: Saw pod success @ 07/19/25 12:41:03.32
  I0719 12:41:03.324618 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod pod-configmaps-3ae01bf3-539c-4c5d-8e0a-12f9bdc73782 container env-test: <nil>
  STEP: delete the pod @ 07/19/25 12:41:03.344
  I0719 12:41:03.369841 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1780" for this suite. @ 07/19/25 12:41:03.375
• [2.119 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 07/19/25 12:41:03.383
  I0719 12:41:03.384009 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename webhook @ 07/19/25 12:41:03.384
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:41:03.398
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:41:03.401
  STEP: Setting up server cert @ 07/19/25 12:41:03.423
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/19/25 12:41:03.781
  STEP: Deploying the webhook pod @ 07/19/25 12:41:03.791
  STEP: Wait for the deployment to be ready @ 07/19/25 12:41:03.807
  I0719 12:41:03.816227 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/19/25 12:41:05.831
  STEP: Verifying the service has paired with the endpoint @ 07/19/25 12:41:05.852
  I0719 12:41:06.852531 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 07/19/25 12:41:06.859
  STEP: create a pod @ 07/19/25 12:41:06.875
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 07/19/25 12:41:08.894
  I0719 12:41:08.895023 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=webhook-3256 attach --namespace=webhook-3256 to-be-attached-pod -i -c=container1'
  I0719 12:41:08.958281 21 builder.go:135] rc: 1
  I0719 12:41:09.018213 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3256" for this suite. @ 07/19/25 12:41:09.023
  STEP: Destroying namespace "webhook-markers-1095" for this suite. @ 07/19/25 12:41:09.032
• [5.656 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 07/19/25 12:41:09.039
  I0719 12:41:09.039759 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 07/19/25 12:41:09.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:41:09.053
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:41:09.055
  STEP: create the container to handle the HTTPGet hook request. @ 07/19/25 12:41:09.124
  STEP: create the pod with lifecycle hook @ 07/19/25 12:41:11.148
  STEP: check poststart hook @ 07/19/25 12:41:13.171
  STEP: delete the pod with lifecycle hook @ 07/19/25 12:41:13.191
  I0719 12:41:17.217698 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-42" for this suite. @ 07/19/25 12:41:17.222
• [8.191 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 07/19/25 12:41:17.23
  I0719 12:41:17.230925 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename chunking @ 07/19/25 12:41:17.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:41:17.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:41:17.247
  STEP: creating a large number of resources @ 07/19/25 12:41:17.25
  STEP: retrieving those results in paged fashion several times @ 07/19/25 12:41:34.939
  I0719 12:41:34.988294 21 chunking.go:98] Retrieved 17/17 results with rv 15123 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjMsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0719 12:41:35.036984 21 chunking.go:98] Retrieved 17/17 results with rv 15123 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjMsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0719 12:41:35.087327 21 chunking.go:98] Retrieved 17/17 results with rv 15123 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjMsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0719 12:41:35.137556 21 chunking.go:98] Retrieved 17/17 results with rv 15123 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjMsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0719 12:41:35.187186 21 chunking.go:98] Retrieved 17/17 results with rv 15123 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjMsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0719 12:41:35.237335 21 chunking.go:98] Retrieved 17/17 results with rv 15123 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjMsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0719 12:41:35.287497 21 chunking.go:98] Retrieved 17/17 results with rv 15123 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjMsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0719 12:41:35.337054 21 chunking.go:98] Retrieved 17/17 results with rv 15123 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjMsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0719 12:41:35.386877 21 chunking.go:98] Retrieved 17/17 results with rv 15123 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjMsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0719 12:41:35.438782 21 chunking.go:98] Retrieved 17/17 results with rv 15123 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjMsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0719 12:41:35.487197 21 chunking.go:98] Retrieved 17/17 results with rv 15123 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjMsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0719 12:41:35.535476 21 chunking.go:98] Retrieved 17/17 results with rv 15123 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjMsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0719 12:41:35.588099 21 chunking.go:98] Retrieved 17/17 results with rv 15123 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjMsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0719 12:41:35.637711 21 chunking.go:98] Retrieved 17/17 results with rv 15123 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjMsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0719 12:41:35.686720 21 chunking.go:98] Retrieved 17/17 results with rv 15123 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjMsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0719 12:41:35.738466 21 chunking.go:98] Retrieved 17/17 results with rv 15123 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjMsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0719 12:41:35.786956 21 chunking.go:98] Retrieved 17/17 results with rv 15123 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjMsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0719 12:41:35.837067 21 chunking.go:98] Retrieved 17/17 results with rv 15123 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjMsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0719 12:41:35.888334 21 chunking.go:98] Retrieved 17/17 results with rv 15123 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjMsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0719 12:41:35.937187 21 chunking.go:98] Retrieved 17/17 results with rv 15123 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjMsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0719 12:41:35.987066 21 chunking.go:98] Retrieved 17/17 results with rv 15123 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjMsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0719 12:41:36.037883 21 chunking.go:98] Retrieved 17/17 results with rv 15123 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjMsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0719 12:41:36.087302 21 chunking.go:98] Retrieved 17/17 results with rv 15123 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjMsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0719 12:41:36.135954 21 chunking.go:98] Retrieved 9/17 results with rv 15123 and continue 
  I0719 12:41:36.188137 21 chunking.go:98] Retrieved 17/17 results with rv 15125 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjUsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0719 12:41:36.237238 21 chunking.go:98] Retrieved 17/17 results with rv 15125 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjUsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0719 12:41:36.287244 21 chunking.go:98] Retrieved 17/17 results with rv 15125 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjUsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0719 12:41:36.338659 21 chunking.go:98] Retrieved 17/17 results with rv 15125 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjUsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0719 12:41:36.386906 21 chunking.go:98] Retrieved 17/17 results with rv 15125 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjUsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0719 12:41:36.436796 21 chunking.go:98] Retrieved 17/17 results with rv 15125 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjUsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0719 12:41:36.488024 21 chunking.go:98] Retrieved 17/17 results with rv 15125 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjUsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0719 12:41:36.537151 21 chunking.go:98] Retrieved 17/17 results with rv 15125 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjUsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0719 12:41:36.586836 21 chunking.go:98] Retrieved 17/17 results with rv 15125 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjUsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0719 12:41:36.638119 21 chunking.go:98] Retrieved 17/17 results with rv 15125 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjUsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0719 12:41:36.687616 21 chunking.go:98] Retrieved 17/17 results with rv 15125 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjUsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0719 12:41:36.736399 21 chunking.go:98] Retrieved 17/17 results with rv 15125 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjUsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0719 12:41:36.787308 21 chunking.go:98] Retrieved 17/17 results with rv 15125 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjUsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0719 12:41:36.836657 21 chunking.go:98] Retrieved 17/17 results with rv 15125 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjUsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0719 12:41:36.886053 21 chunking.go:98] Retrieved 17/17 results with rv 15125 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjUsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0719 12:41:36.938646 21 chunking.go:98] Retrieved 17/17 results with rv 15125 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjUsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0719 12:41:36.987063 21 chunking.go:98] Retrieved 17/17 results with rv 15125 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjUsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0719 12:41:37.036897 21 chunking.go:98] Retrieved 17/17 results with rv 15125 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjUsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0719 12:41:37.088446 21 chunking.go:98] Retrieved 17/17 results with rv 15125 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjUsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0719 12:41:37.136693 21 chunking.go:98] Retrieved 17/17 results with rv 15125 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjUsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0719 12:41:37.186697 21 chunking.go:98] Retrieved 17/17 results with rv 15125 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjUsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0719 12:41:37.237948 21 chunking.go:98] Retrieved 17/17 results with rv 15125 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjUsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0719 12:41:37.288572 21 chunking.go:98] Retrieved 17/17 results with rv 15125 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjUsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0719 12:41:37.336171 21 chunking.go:98] Retrieved 9/17 results with rv 15125 and continue 
  I0719 12:41:37.389390 21 chunking.go:98] Retrieved 17/17 results with rv 15127 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0719 12:41:37.437358 21 chunking.go:98] Retrieved 17/17 results with rv 15127 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjcsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0719 12:41:37.486221 21 chunking.go:98] Retrieved 17/17 results with rv 15127 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjcsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0719 12:41:37.538278 21 chunking.go:98] Retrieved 17/17 results with rv 15127 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjcsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0719 12:41:37.588303 21 chunking.go:98] Retrieved 17/17 results with rv 15127 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjcsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0719 12:41:37.635880 21 chunking.go:98] Retrieved 17/17 results with rv 15127 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjcsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0719 12:41:37.688234 21 chunking.go:98] Retrieved 17/17 results with rv 15127 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjcsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0719 12:41:37.737236 21 chunking.go:98] Retrieved 17/17 results with rv 15127 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjcsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0719 12:41:37.786924 21 chunking.go:98] Retrieved 17/17 results with rv 15127 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjcsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0719 12:41:37.838496 21 chunking.go:98] Retrieved 17/17 results with rv 15127 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjcsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0719 12:41:37.886987 21 chunking.go:98] Retrieved 17/17 results with rv 15127 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjcsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0719 12:41:37.937111 21 chunking.go:98] Retrieved 17/17 results with rv 15127 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjcsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0719 12:41:37.988277 21 chunking.go:98] Retrieved 17/17 results with rv 15127 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjcsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0719 12:41:38.036710 21 chunking.go:98] Retrieved 17/17 results with rv 15127 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjcsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0719 12:41:38.087298 21 chunking.go:98] Retrieved 17/17 results with rv 15127 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjcsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0719 12:41:38.137427 21 chunking.go:98] Retrieved 17/17 results with rv 15127 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjcsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0719 12:41:38.188028 21 chunking.go:98] Retrieved 17/17 results with rv 15127 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjcsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0719 12:41:38.236893 21 chunking.go:98] Retrieved 17/17 results with rv 15127 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjcsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0719 12:41:38.288446 21 chunking.go:98] Retrieved 17/17 results with rv 15127 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjcsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0719 12:41:38.337112 21 chunking.go:98] Retrieved 17/17 results with rv 15127 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjcsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0719 12:41:38.386941 21 chunking.go:98] Retrieved 17/17 results with rv 15127 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjcsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0719 12:41:38.438310 21 chunking.go:98] Retrieved 17/17 results with rv 15127 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjcsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0719 12:41:38.486824 21 chunking.go:98] Retrieved 17/17 results with rv 15127 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTUxMjcsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0719 12:41:38.536681 21 chunking.go:98] Retrieved 9/17 results with rv 15127 and continue 
  STEP: retrieving those results all at once @ 07/19/25 12:41:38.536
  I0719 12:41:38.596073 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-2977" for this suite. @ 07/19/25 12:41:38.637
• [21.463 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 07/19/25 12:41:38.693
  I0719 12:41:38.693678 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename cronjob @ 07/19/25 12:41:38.694
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:41:38.709
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:41:38.712
  STEP: Creating a ForbidConcurrent cronjob @ 07/19/25 12:41:38.714
  STEP: Ensuring a job is scheduled @ 07/19/25 12:41:38.719
  STEP: Ensuring exactly one is scheduled @ 07/19/25 12:42:00.725
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 07/19/25 12:42:00.729
  STEP: Ensuring no more jobs are scheduled @ 07/19/25 12:42:00.735
  STEP: Removing cronjob @ 07/19/25 12:42:00.74
  I0719 12:42:00.747880 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3134" for this suite. @ 07/19/25 12:42:00.753
• [22.069 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:124
  STEP: Creating a kubernetes client @ 07/19/25 12:42:00.763
  I0719 12:42:00.763172 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename configmap @ 07/19/25 12:42:00.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:42:00.785
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:42:00.79
  STEP: Creating configMap with name configmap-test-upd-b901179a-da17-4195-87ab-72275abba555 @ 07/19/25 12:42:00.854
  STEP: Creating the pod @ 07/19/25 12:42:00.86
  STEP: Updating configmap configmap-test-upd-b901179a-da17-4195-87ab-72275abba555 @ 07/19/25 12:42:02.902
  STEP: waiting to observe update in volume @ 07/19/25 12:42:02.908
  I0719 12:43:09.251646 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5011" for this suite. @ 07/19/25 12:43:09.256
• [68.504 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:131
  STEP: Creating a kubernetes client @ 07/19/25 12:43:09.267
  I0719 12:43:09.267605 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename projected @ 07/19/25 12:43:09.268
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:43:09.281
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:43:09.284
  STEP: Creating the pod @ 07/19/25 12:43:09.286
  I0719 12:43:11.845110 21 pod_client.go:173] Successfully updated pod "labelsupdate1d7d7d8c-3064-419e-b7ad-96d0b3235a25"
  I0719 12:43:15.871452 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1866" for this suite. @ 07/19/25 12:43:15.878
• [6.619 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 07/19/25 12:43:15.886
  I0719 12:43:15.886916 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename subpath @ 07/19/25 12:43:15.887
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:43:15.901
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:43:15.903
  STEP: Setting up data @ 07/19/25 12:43:15.906
  STEP: Creating pod pod-subpath-test-configmap-g9c7 @ 07/19/25 12:43:15.919
  STEP: Creating a pod to test atomic-volume-subpath @ 07/19/25 12:43:15.919
  STEP: Saw pod success @ 07/19/25 12:43:40.004
  I0719 12:43:40.009228 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod pod-subpath-test-configmap-g9c7 container test-container-subpath-configmap-g9c7: <nil>
  STEP: delete the pod @ 07/19/25 12:43:40.016
  STEP: Deleting pod pod-subpath-test-configmap-g9c7 @ 07/19/25 12:43:40.038
  I0719 12:43:40.038500 21 delete.go:62] Deleting pod "pod-subpath-test-configmap-g9c7" in namespace "subpath-2868"
  I0719 12:43:40.041543 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2868" for this suite. @ 07/19/25 12:43:40.047
• [24.169 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:295
  STEP: Creating a kubernetes client @ 07/19/25 12:43:40.056
  I0719 12:43:40.056199 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename downward-api @ 07/19/25 12:43:40.056
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:43:40.07
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:43:40.073
  STEP: Creating a pod to test downward api env vars @ 07/19/25 12:43:40.075
  STEP: Saw pod success @ 07/19/25 12:43:44.104
  I0719 12:43:44.109281 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod downward-api-df6f1e45-3ae1-4c90-a843-485fd2915c89 container dapi-container: <nil>
  STEP: delete the pod @ 07/19/25 12:43:44.118
  I0719 12:43:44.136523 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9115" for this suite. @ 07/19/25 12:43:44.141
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 07/19/25 12:43:44.151
  I0719 12:43:44.151512 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename podtemplate @ 07/19/25 12:43:44.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:43:44.163
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:43:44.165
  STEP: Create a pod template @ 07/19/25 12:43:44.168
  STEP: Replace a pod template @ 07/19/25 12:43:44.173
  I0719 12:43:44.183387 21 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0719 12:43:44.183466 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-5651" for this suite. @ 07/19/25 12:43:44.243
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 07/19/25 12:43:44.251
  I0719 12:43:44.251780 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename secrets @ 07/19/25 12:43:44.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:43:44.267
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:43:44.27
  STEP: Creating secret with name secret-test-918be8ff-18c2-4c72-90a7-b66068004dce @ 07/19/25 12:43:44.274
  STEP: Creating a pod to test consume secrets @ 07/19/25 12:43:44.279
  STEP: Saw pod success @ 07/19/25 12:43:48.311
  I0719 12:43:48.315106 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod pod-secrets-a18c3e8f-bba6-4400-96e0-5ee90349c0a1 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/19/25 12:43:48.324
  I0719 12:43:48.341382 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7918" for this suite. @ 07/19/25 12:43:48.346
• [4.103 seconds]
------------------------------
SS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 07/19/25 12:43:48.355
  I0719 12:43:48.355084 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename conformance-tests @ 07/19/25 12:43:48.355
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:43:48.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:43:48.37
  STEP: Getting node addresses @ 07/19/25 12:43:48.373
  I0719 12:43:48.373434 21 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0719 12:43:48.447616 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-8048" for this suite. @ 07/19/25 12:43:48.452
• [0.105 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:677
  STEP: Creating a kubernetes client @ 07/19/25 12:43:48.459
  I0719 12:43:48.459750 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename svcaccounts @ 07/19/25 12:43:48.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:43:48.475
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:43:48.477
  STEP: creating a ServiceAccount @ 07/19/25 12:43:48.48
  STEP: watching for the ServiceAccount to be added @ 07/19/25 12:43:48.489
  STEP: patching the ServiceAccount @ 07/19/25 12:43:48.49
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 07/19/25 12:43:48.496
  STEP: deleting the ServiceAccount @ 07/19/25 12:43:48.499
  I0719 12:43:48.519551 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8985" for this suite. @ 07/19/25 12:43:48.547
• [0.095 seconds]
------------------------------
S
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:59
  STEP: Creating a kubernetes client @ 07/19/25 12:43:48.555
  I0719 12:43:48.555213 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename volumeattachment @ 07/19/25 12:43:48.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:43:48.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:43:48.573
  STEP: Create VolumeAttachment "va-e2e-q5wsb" on node "ip-172-31-6-59" @ 07/19/25 12:43:48.647
  STEP: Get VolumeAttachment "va-e2e-q5wsb" on node "ip-172-31-6-59" @ 07/19/25 12:43:48.656
  STEP: Patch VolumeAttachment "va-e2e-q5wsb" on node "ip-172-31-6-59" @ 07/19/25 12:43:48.659
  STEP: List VolumeAttachments with "va-e2e-q5wsb=patched" label @ 07/19/25 12:43:48.665
  STEP: Delete VolumeAttachment "va-e2e-q5wsb" on node "ip-172-31-6-59" @ 07/19/25 12:43:48.67
  STEP: Confirm deletion of VolumeAttachment "va-e2e-q5wsb" on node "ip-172-31-6-59" @ 07/19/25 12:43:48.678
  STEP: Create VolumeAttachment "va-e2e-f4vxs" on node "ip-172-31-42-177" @ 07/19/25 12:43:48.748
  STEP: Update the VolumeAttachment "va-e2e-f4vxs" on node "ip-172-31-42-177" with label "va-e2e=updated" @ 07/19/25 12:43:48.754
  STEP: Create VolumeAttachment "va-e2e-m4s26" on node "ip-172-31-64-234" @ 07/19/25 12:43:48.849
  STEP: Update the VolumeAttachment "va-e2e-m4s26" on node "ip-172-31-64-234" with label "va-e2e=updated" @ 07/19/25 12:43:48.856
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 07/19/25 12:43:48.866
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 07/19/25 12:43:48.885
  I0719 12:43:48.888701 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-9342" for this suite. @ 07/19/25 12:43:48.949
• [0.402 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 07/19/25 12:43:48.957
  I0719 12:43:48.957696 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename discovery @ 07/19/25 12:43:48.958
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:43:48.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:43:48.972
  STEP: Setting up server cert @ 07/19/25 12:43:48.975
  I0719 12:43:49.541270 21 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0719 12:43:49.542385 21 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0719 12:43:49.542404 21 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0719 12:43:49.542410 21 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0719 12:43:49.542416 21 discovery.go:139] Checking APIGroup: apps
  I0719 12:43:49.543395 21 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0719 12:43:49.543406 21 discovery.go:148] Versions found [{apps/v1 v1}]
  I0719 12:43:49.543411 21 discovery.go:154] apps/v1 matches apps/v1
  I0719 12:43:49.543417 21 discovery.go:139] Checking APIGroup: events.k8s.io
  I0719 12:43:49.544307 21 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0719 12:43:49.544319 21 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0719 12:43:49.544324 21 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0719 12:43:49.544331 21 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0719 12:43:49.545227 21 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0719 12:43:49.545239 21 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0719 12:43:49.545244 21 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0719 12:43:49.545249 21 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0719 12:43:49.546396 21 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0719 12:43:49.546409 21 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0719 12:43:49.546414 21 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0719 12:43:49.546419 21 discovery.go:139] Checking APIGroup: autoscaling
  I0719 12:43:49.547403 21 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0719 12:43:49.547418 21 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0719 12:43:49.547423 21 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0719 12:43:49.547429 21 discovery.go:139] Checking APIGroup: batch
  I0719 12:43:49.548306 21 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0719 12:43:49.548318 21 discovery.go:148] Versions found [{batch/v1 v1}]
  I0719 12:43:49.548324 21 discovery.go:154] batch/v1 matches batch/v1
  I0719 12:43:49.548330 21 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0719 12:43:49.549234 21 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0719 12:43:49.549246 21 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0719 12:43:49.549251 21 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0719 12:43:49.549257 21 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0719 12:43:49.550310 21 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0719 12:43:49.550329 21 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0719 12:43:49.550367 21 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0719 12:43:49.550377 21 discovery.go:139] Checking APIGroup: policy
  I0719 12:43:49.551229 21 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0719 12:43:49.551241 21 discovery.go:148] Versions found [{policy/v1 v1}]
  I0719 12:43:49.551247 21 discovery.go:154] policy/v1 matches policy/v1
  I0719 12:43:49.551252 21 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0719 12:43:49.552153 21 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0719 12:43:49.552166 21 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0719 12:43:49.552171 21 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0719 12:43:49.552177 21 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0719 12:43:49.553005 21 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0719 12:43:49.553016 21 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0719 12:43:49.553021 21 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0719 12:43:49.553027 21 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0719 12:43:49.553871 21 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0719 12:43:49.553880 21 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0719 12:43:49.553889 21 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0719 12:43:49.553894 21 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0719 12:43:49.554945 21 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0719 12:43:49.554957 21 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0719 12:43:49.554963 21 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0719 12:43:49.554969 21 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0719 12:43:49.555811 21 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0719 12:43:49.555823 21 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0719 12:43:49.555830 21 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0719 12:43:49.555835 21 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0719 12:43:49.556737 21 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0719 12:43:49.556754 21 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0719 12:43:49.556759 21 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0719 12:43:49.556764 21 discovery.go:139] Checking APIGroup: node.k8s.io
  I0719 12:43:49.557658 21 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0719 12:43:49.557676 21 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0719 12:43:49.557688 21 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0719 12:43:49.557694 21 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0719 12:43:49.558552 21 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0719 12:43:49.558568 21 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0719 12:43:49.558574 21 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0719 12:43:49.558580 21 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0719 12:43:49.559460 21 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0719 12:43:49.559470 21 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1}]
  I0719 12:43:49.559476 21 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0719 12:43:49.559481 21 discovery.go:139] Checking APIGroup: metrics.k8s.io
  I0719 12:43:49.560302 21 discovery.go:147] PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  I0719 12:43:49.560314 21 discovery.go:148] Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  I0719 12:43:49.560319 21 discovery.go:154] metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  I0719 12:43:49.560460 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-2487" for this suite. @ 07/19/25 12:43:49.565
• [0.616 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 07/19/25 12:43:49.573
  I0719 12:43:49.573972 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename secrets @ 07/19/25 12:43:49.574
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:43:49.586
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:43:49.589
  STEP: Creating secret with name secret-test-map-4e3086e7-7ecd-43bd-9eaa-c44218562abf @ 07/19/25 12:43:49.592
  STEP: Creating a pod to test consume secrets @ 07/19/25 12:43:49.597
  STEP: Saw pod success @ 07/19/25 12:43:51.619
  I0719 12:43:51.624570 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod pod-secrets-5fc5107c-1926-4c76-86c0-87820661ffab container secret-volume-test: <nil>
  STEP: delete the pod @ 07/19/25 12:43:51.631
  I0719 12:43:51.651145 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7109" for this suite. @ 07/19/25 12:43:51.657
• [2.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3220
  STEP: Creating a kubernetes client @ 07/19/25 12:43:51.666
  I0719 12:43:51.666510 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename services @ 07/19/25 12:43:51.667
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:43:51.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:43:51.684
  I0719 12:43:51.692744      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: creating an Endpoint @ 07/19/25 12:43:51.692
  I0719 12:43:51.698089      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: waiting for available Endpoint @ 07/19/25 12:43:51.698
  I0719 12:43:51.699370      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: listing all Endpoints @ 07/19/25 12:43:51.699
  I0719 12:43:51.702594      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: updating the Endpoint @ 07/19/25 12:43:51.702
  I0719 12:43:51.708447      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0719 12:43:51.709528      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 07/19/25 12:43:51.709
  I0719 12:43:51.713449      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: patching the Endpoint @ 07/19/25 12:43:51.713
  I0719 12:43:51.719631      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0719 12:43:51.720902      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 07/19/25 12:43:51.72
  I0719 12:43:51.725138      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: deleting the Endpoint by Collection @ 07/19/25 12:43:51.725
  I0719 12:43:51.734833      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: waiting for Endpoint deletion @ 07/19/25 12:43:51.734
  I0719 12:43:51.736007      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 07/19/25 12:43:51.736
  I0719 12:43:51.739364      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0719 12:43:51.739537 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9091" for this suite. @ 07/19/25 12:43:51.758
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:55
  STEP: Creating a kubernetes client @ 07/19/25 12:43:51.767
  I0719 12:43:51.767615 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename dns @ 07/19/25 12:43:51.768
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:43:51.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:43:51.783
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 07/19/25 12:43:51.785
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 07/19/25 12:43:51.785
  STEP: creating a pod to probe DNS @ 07/19/25 12:43:51.785
  STEP: submitting the pod to kubernetes @ 07/19/25 12:43:51.785
  STEP: retrieving the pod @ 07/19/25 12:43:53.808
  STEP: looking for the results for each expected name from probers @ 07/19/25 12:43:53.812
  I0719 12:43:53.832365 21 dns_common.go:546] DNS probes using dns-1852/dns-test-b98e2bbb-e8e2-4914-9671-e97c045c670f succeeded

  STEP: deleting the pod @ 07/19/25 12:43:53.832
  I0719 12:43:53.844829 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1852" for this suite. @ 07/19/25 12:43:53.848
• [2.088 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:426
  STEP: Creating a kubernetes client @ 07/19/25 12:43:53.855
  I0719 12:43:53.855963 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename replication-controller @ 07/19/25 12:43:53.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:43:53.867
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:43:53.869
  STEP: Creating ReplicationController "e2e-rc-ncb2v" @ 07/19/25 12:43:53.872
  I0719 12:43:53.880010 21 rc.go:795] Get Replication Controller "e2e-rc-ncb2v" to confirm replicas
  I0719 12:43:54.880456 21 rc.go:795] Get Replication Controller "e2e-rc-ncb2v" to confirm replicas
  I0719 12:43:54.885611 21 rc.go:804] Found 1 replicas for "e2e-rc-ncb2v" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-ncb2v" @ 07/19/25 12:43:54.885
  STEP: Updating a scale subresource @ 07/19/25 12:43:54.889
  STEP: Verifying replicas where modified for replication controller "e2e-rc-ncb2v" @ 07/19/25 12:43:54.896
  I0719 12:43:54.896755 21 rc.go:795] Get Replication Controller "e2e-rc-ncb2v" to confirm replicas
  I0719 12:43:55.896853 21 rc.go:795] Get Replication Controller "e2e-rc-ncb2v" to confirm replicas
  I0719 12:43:55.902198 21 rc.go:804] Found 2 replicas for "e2e-rc-ncb2v" replication controller
  I0719 12:43:55.902368 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3765" for this suite. @ 07/19/25 12:43:55.909
• [2.064 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 07/19/25 12:43:55.92
  I0719 12:43:55.920389 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename endpointslice @ 07/19/25 12:43:55.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:43:55.932
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:43:55.935
  I0719 12:43:55.947910      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0719 12:43:55.952309 21 endpointslice.go:1045] Endpoints addresses: [172.31.3.129 172.31.39.138] , ports: [6443]
  I0719 12:43:55.952329 21 endpointslice.go:1075] EndpointSlices addresses: [172.31.3.129 172.31.39.138] , ports: [6443]
  I0719 12:43:55.952432 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-7174" for this suite. @ 07/19/25 12:43:56.01
• [0.102 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 07/19/25 12:43:56.022
  I0719 12:43:56.022561 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename subpath @ 07/19/25 12:43:56.023
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:43:56.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:43:56.038
  STEP: Setting up data @ 07/19/25 12:43:56.041
  STEP: Creating pod pod-subpath-test-downwardapi-g5wc @ 07/19/25 12:43:56.05
  STEP: Creating a pod to test atomic-volume-subpath @ 07/19/25 12:43:56.05
  STEP: Saw pod success @ 07/19/25 12:44:20.143
  I0719 12:44:20.148723 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod pod-subpath-test-downwardapi-g5wc container test-container-subpath-downwardapi-g5wc: <nil>
  STEP: delete the pod @ 07/19/25 12:44:20.156
  STEP: Deleting pod pod-subpath-test-downwardapi-g5wc @ 07/19/25 12:44:20.173
  I0719 12:44:20.173528 21 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-g5wc" in namespace "subpath-2385"
  I0719 12:44:20.178731 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2385" for this suite. @ 07/19/25 12:44:20.184
• [24.170 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 07/19/25 12:44:20.192
  I0719 12:44:20.192384 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename aggregateddiscovery @ 07/19/25 12:44:20.192
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:44:20.206
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:44:20.209
  I0719 12:44:20.215398 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-7691" for this suite. @ 07/19/25 12:44:20.284
• [0.100 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 07/19/25 12:44:20.292
  I0719 12:44:20.292781 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename webhook @ 07/19/25 12:44:20.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:44:20.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:44:20.31
  STEP: Setting up server cert @ 07/19/25 12:44:20.334
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/19/25 12:44:20.605
  STEP: Deploying the webhook pod @ 07/19/25 12:44:20.611
  STEP: Wait for the deployment to be ready @ 07/19/25 12:44:20.628
  I0719 12:44:20.635833 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/19/25 12:44:22.652
  STEP: Verifying the service has paired with the endpoint @ 07/19/25 12:44:22.671
  I0719 12:44:23.671271 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 07/19/25 12:44:23.677
  STEP: Creating a custom resource definition that should be denied by the webhook @ 07/19/25 12:44:23.692
  I0719 12:44:23.692871 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  I0719 12:44:23.754324 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1378" for this suite. @ 07/19/25 12:44:23.758
  STEP: Destroying namespace "webhook-markers-2409" for this suite. @ 07/19/25 12:44:23.766
• [3.481 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 07/19/25 12:44:23.775
  I0719 12:44:23.775359 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename var-expansion @ 07/19/25 12:44:23.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:44:23.787
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:44:23.79
  STEP: Creating a pod to test substitution in volume subpath @ 07/19/25 12:44:23.792
  STEP: Saw pod success @ 07/19/25 12:44:25.816
  I0719 12:44:25.821205 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod var-expansion-57ee0afa-0418-400c-b96d-4affc054381a container dapi-container: <nil>
  STEP: delete the pod @ 07/19/25 12:44:25.829
  I0719 12:44:25.851337 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1189" for this suite. @ 07/19/25 12:44:25.856
• [2.089 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 07/19/25 12:44:25.864
  I0719 12:44:25.864247 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename webhook @ 07/19/25 12:44:25.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:44:25.875
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:44:25.878
  STEP: Setting up server cert @ 07/19/25 12:44:25.897
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/19/25 12:44:26.062
  STEP: Deploying the webhook pod @ 07/19/25 12:44:26.07
  STEP: Wait for the deployment to be ready @ 07/19/25 12:44:26.085
  I0719 12:44:26.094243 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0719 12:44:28.108161 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 19, 12, 44, 26, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 19, 12, 44, 26, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 19, 12, 44, 26, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 19, 12, 44, 26, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 07/19/25 12:44:30.114
  STEP: Verifying the service has paired with the endpoint @ 07/19/25 12:44:30.135
  I0719 12:44:31.136535 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 07/19/25 12:44:31.141
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 07/19/25 12:44:31.156
  STEP: Creating a dummy validating-webhook-configuration object @ 07/19/25 12:44:31.17
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 07/19/25 12:44:31.177
  STEP: Creating a dummy mutating-webhook-configuration object @ 07/19/25 12:44:31.187
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 07/19/25 12:44:31.197
  I0719 12:44:31.267098 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2955" for this suite. @ 07/19/25 12:44:31.272
  STEP: Destroying namespace "webhook-markers-5930" for this suite. @ 07/19/25 12:44:31.279
• [5.425 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:262
  STEP: Creating a kubernetes client @ 07/19/25 12:44:31.289
  I0719 12:44:31.289735 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename projected @ 07/19/25 12:44:31.29
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:44:31.303
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:44:31.305
  STEP: Creating a pod to test downward API volume plugin @ 07/19/25 12:44:31.308
  STEP: Saw pod success @ 07/19/25 12:44:35.338
  I0719 12:44:35.343526 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod downwardapi-volume-2251ae35-1d05-4a9a-adfb-786aec6e0d3b container client-container: <nil>
  STEP: delete the pod @ 07/19/25 12:44:35.352
  I0719 12:44:35.369372 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4393" for this suite. @ 07/19/25 12:44:35.374
• [4.094 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:85
  STEP: Creating a kubernetes client @ 07/19/25 12:44:35.383
  I0719 12:44:35.383666 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename projected @ 07/19/25 12:44:35.384
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:44:35.398
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:44:35.401
  STEP: Creating a pod to test downward API volume plugin @ 07/19/25 12:44:35.404
  STEP: Saw pod success @ 07/19/25 12:44:39.436
  I0719 12:44:39.440445 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod downwardapi-volume-9c75fcce-49e2-4f13-8e9c-1cb8daf6e3f5 container client-container: <nil>
  STEP: delete the pod @ 07/19/25 12:44:39.447
  I0719 12:44:39.464887 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5761" for this suite. @ 07/19/25 12:44:39.471
• [4.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:222
  STEP: Creating a kubernetes client @ 07/19/25 12:44:39.48
  I0719 12:44:39.480228 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename downward-api @ 07/19/25 12:44:39.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:44:39.493
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:44:39.496
  STEP: Creating a pod to test downward API volume plugin @ 07/19/25 12:44:39.499
  STEP: Saw pod success @ 07/19/25 12:44:43.53
  I0719 12:44:43.533818 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod downwardapi-volume-284e03cb-1a34-4490-90c6-f9a81a820f0e container client-container: <nil>
  STEP: delete the pod @ 07/19/25 12:44:43.541
  I0719 12:44:43.563419 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8266" for this suite. @ 07/19/25 12:44:43.569
• [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:340
  STEP: Creating a kubernetes client @ 07/19/25 12:44:43.578
  I0719 12:44:43.578043 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename statefulset @ 07/19/25 12:44:43.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:44:43.59
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:44:43.592
  STEP: Creating service test in namespace statefulset-3624 @ 07/19/25 12:44:43.595
  STEP: Creating a new StatefulSet @ 07/19/25 12:44:43.602
  I0719 12:44:43.614019 21 wait.go:44] Found 0 stateful pods, waiting for 3
  I0719 12:44:53.618193 21 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0719 12:44:53.618225 21 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0719 12:44:53.618235 21 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 07/19/25 12:44:53.634
  I0719 12:44:53.645704 21 statefulset.go:2542] Updating stateful set ss2
  STEP: Creating a new revision @ 07/19/25 12:44:53.645
  STEP: Not applying an update when the partition is greater than the number of replicas @ 07/19/25 12:45:03.66
  STEP: Performing a canary update @ 07/19/25 12:45:03.66
  I0719 12:45:03.670269 21 statefulset.go:2542] Updating stateful set ss2
  I0719 12:45:03.680904 21 wait.go:74] Waiting for Pod statefulset-3624/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 07/19/25 12:45:13.68
  I0719 12:45:13.728612 21 wait.go:44] Found 2 stateful pods, waiting for 3
  I0719 12:45:23.720367 21 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0719 12:45:23.720412 21 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0719 12:45:23.720421 21 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 07/19/25 12:45:23.73
  I0719 12:45:23.743227 21 statefulset.go:2542] Updating stateful set ss2
  I0719 12:45:23.753774 21 wait.go:74] Waiting for Pod statefulset-3624/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0719 12:45:33.767820 21 statefulset.go:2542] Updating stateful set ss2
  I0719 12:45:33.778398 21 wait.go:56] Waiting for StatefulSet statefulset-3624/ss2 to complete update
  I0719 12:45:33.778433 21 wait.go:63] Waiting for Pod statefulset-3624/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0719 12:45:43.783314 21 statefulset.go:138] Deleting all statefulset in ns statefulset-3624
  I0719 12:45:43.788705 21 rest.go:153] Scaling statefulset ss2 to 0
  I0719 12:45:53.811172 21 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0719 12:45:53.815631 21 rest.go:91] Deleting statefulset ss2
  I0719 12:45:53.831968 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3624" for this suite. @ 07/19/25 12:45:53.84
• [70.272 seconds]
------------------------------
SS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 07/19/25 12:45:53.85
  I0719 12:45:53.850066 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename init-container @ 07/19/25 12:45:53.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:45:53.861
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:45:53.864
  STEP: creating the pod @ 07/19/25 12:45:53.867
  I0719 12:45:53.867716 21 init_container.go:213] PodSpec: initContainers in spec.initContainers
  I0719 12:45:57.852572 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-4916" for this suite. @ 07/19/25 12:45:57.857
• [4.016 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1162
  STEP: Creating a kubernetes client @ 07/19/25 12:45:57.866
  I0719 12:45:57.866229 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename job @ 07/19/25 12:45:57.866
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:45:57.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:45:57.881
  STEP: Creating a suspended job @ 07/19/25 12:45:57.889
  STEP: Patching the Job @ 07/19/25 12:45:57.896
  STEP: Watching for Job to be patched @ 07/19/25 12:45:57.936
  I0719 12:45:57.938120 21 job.go:1369] Event ADDED observed for Job e2e-2w4xk in namespace job-5172 with labels: map[e2e-job-label:e2e-2w4xk] and annotations: map[]
  I0719 12:45:57.938144 21 job.go:1369] Event MODIFIED observed for Job e2e-2w4xk in namespace job-5172 with labels: map[e2e-job-label:e2e-2w4xk] and annotations: map[]
  I0719 12:45:57.938155 21 job.go:1372] Event MODIFIED found for Job e2e-2w4xk in namespace job-5172 with labels: map[e2e-2w4xk:patched e2e-job-label:e2e-2w4xk] and annotations: map[]
  STEP: Updating the job @ 07/19/25 12:45:57.938
  STEP: Watching for Job to be updated @ 07/19/25 12:45:57.951
  I0719 12:45:57.953607 21 job.go:1372] Event MODIFIED found for Job e2e-2w4xk in namespace job-5172 with labels: map[e2e-2w4xk:patched e2e-job-label:e2e-2w4xk] and annotations: map[updated:true]
  I0719 12:45:57.953641 21 job.go:1240] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 07/19/25 12:45:57.953
  I0719 12:45:57.958685 21 job.go:1247] Job: e2e-2w4xk as labels: map[e2e-2w4xk:patched e2e-job-label:e2e-2w4xk]
  STEP: Waiting for job to complete @ 07/19/25 12:45:57.958
  STEP: Delete a job collection with a labelselector @ 07/19/25 12:46:05.99
  STEP: Watching for Job to be deleted @ 07/19/25 12:46:06.002
  I0719 12:46:06.003985 21 job.go:1369] Event MODIFIED observed for Job e2e-2w4xk in namespace job-5172 with labels: map[e2e-2w4xk:patched e2e-job-label:e2e-2w4xk] and annotations: map[updated:true]
  I0719 12:46:06.004095 21 job.go:1369] Event MODIFIED observed for Job e2e-2w4xk in namespace job-5172 with labels: map[e2e-2w4xk:patched e2e-job-label:e2e-2w4xk] and annotations: map[updated:true]
  I0719 12:46:06.004111 21 job.go:1369] Event MODIFIED observed for Job e2e-2w4xk in namespace job-5172 with labels: map[e2e-2w4xk:patched e2e-job-label:e2e-2w4xk] and annotations: map[updated:true]
  I0719 12:46:06.004121 21 job.go:1369] Event MODIFIED observed for Job e2e-2w4xk in namespace job-5172 with labels: map[e2e-2w4xk:patched e2e-job-label:e2e-2w4xk] and annotations: map[updated:true]
  I0719 12:46:06.004179 21 job.go:1369] Event MODIFIED observed for Job e2e-2w4xk in namespace job-5172 with labels: map[e2e-2w4xk:patched e2e-job-label:e2e-2w4xk] and annotations: map[updated:true]
  I0719 12:46:06.004218 21 job.go:1369] Event MODIFIED observed for Job e2e-2w4xk in namespace job-5172 with labels: map[e2e-2w4xk:patched e2e-job-label:e2e-2w4xk] and annotations: map[updated:true]
  I0719 12:46:06.004228 21 job.go:1369] Event MODIFIED observed for Job e2e-2w4xk in namespace job-5172 with labels: map[e2e-2w4xk:patched e2e-job-label:e2e-2w4xk] and annotations: map[updated:true]
  I0719 12:46:06.004236 21 job.go:1369] Event MODIFIED observed for Job e2e-2w4xk in namespace job-5172 with labels: map[e2e-2w4xk:patched e2e-job-label:e2e-2w4xk] and annotations: map[updated:true]
  I0719 12:46:06.004281 21 job.go:1369] Event MODIFIED observed for Job e2e-2w4xk in namespace job-5172 with labels: map[e2e-2w4xk:patched e2e-job-label:e2e-2w4xk] and annotations: map[updated:true]
  I0719 12:46:06.004295 21 job.go:1372] Event DELETED found for Job e2e-2w4xk in namespace job-5172 with labels: map[e2e-2w4xk:patched e2e-job-label:e2e-2w4xk] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 07/19/25 12:46:06.004
  I0719 12:46:06.008501 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5172" for this suite. @ 07/19/25 12:46:06.013
• [8.164 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 07/19/25 12:46:06.03
  I0719 12:46:06.030702 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename container-probe @ 07/19/25 12:46:06.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:46:06.046
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:46:06.049
  STEP: Creating pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311 @ 07/19/25 12:46:06.051
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/19/25 12:46:08.075
  I0719 12:46:08.080252 21 container_probe.go:1748] Initial restart count of pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e is 0
  I0719 12:46:08.083609 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:46:10.089616 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:46:12.094407 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:46:14.100963 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:46:16.107124 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:46:18.113390 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:46:20.120097 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:46:22.125615 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:46:24.133430 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:46:26.138323 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:46:28.144200 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:46:30.150707 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:46:32.157156 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:46:34.162290 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:46:36.167647 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:46:38.175602 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:46:40.180841 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:46:42.186831 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:46:44.194152 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:46:46.199331 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:46:48.207086 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:46:50.212001 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:46:52.217235 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:46:54.224152 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:46:56.230615 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:46:58.235110 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:47:00.241437 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:47:02.247609 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:47:04.252610 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:47:06.258822 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:47:08.264180 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:47:10.269860 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:47:12.275355 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:47:14.281625 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:47:16.288637 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:47:18.295046 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:47:20.300133 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:47:22.307143 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:47:24.313815 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:47:26.321222 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:47:28.327386 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:47:30.332077 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:47:32.338570 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:47:34.345213 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:47:36.350524 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:47:38.357716 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:47:40.362236 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:47:42.369124 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:47:44.374501 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:47:46.380937 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:47:48.386067 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:47:50.391726 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:47:52.398524 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:47:54.403475 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:47:56.410291 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:47:58.417593 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:48:00.423250 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:48:02.430406 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:48:04.436388 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:48:06.441039 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:48:08.448190 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:48:10.453727 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:48:12.458887 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:48:14.464537 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:48:16.470631 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:48:18.476074 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:48:20.482561 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:48:22.488565 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:48:24.493920 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:48:26.500192 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:48:28.505056 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:48:30.510510 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:48:32.516427 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:48:34.521475 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:48:36.527110 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:48:38.532501 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:48:40.537547 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:48:42.544134 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:48:44.549808 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:48:46.556352 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:48:48.562197 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:48:50.567535 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:48:52.573527 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:48:54.580475 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:48:56.586064 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:48:58.591766 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:49:00.597190 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:49:02.602051 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:49:04.606389 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:49:06.611818 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:49:08.618380 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:49:10.625068 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:49:12.630645 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:49:14.636641 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:49:16.643492 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:49:18.648404 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:49:20.654284 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:49:22.660108 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:49:24.665831 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:49:26.671261 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:49:28.677221 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:49:30.682202 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:49:32.688809 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:49:34.694480 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:49:36.700467 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:49:38.705930 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:49:40.711283 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:49:42.717445 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:49:44.722748 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:49:46.729468 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:49:48.735111 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:49:50.739790 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:49:52.746912 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:49:54.753081 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:49:56.759740 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:49:58.765630 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:50:00.771573 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:50:02.776538 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:50:04.783881 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  I0719 12:50:06.789082 21 container_probe.go:1758] Get pod liveness-c5bf0b53-17b0-418b-9402-a442fa400d4e in namespace container-probe-4311
  STEP: deleting the pod @ 07/19/25 12:50:08.789
  I0719 12:50:08.808129 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4311" for this suite. @ 07/19/25 12:50:08.812
• [242.789 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 07/19/25 12:50:08.819
  I0719 12:50:08.819846 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename subpath @ 07/19/25 12:50:08.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:50:08.833
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:50:08.836
  STEP: Setting up data @ 07/19/25 12:50:08.838
  STEP: Creating pod pod-subpath-test-projected-w78d @ 07/19/25 12:50:08.852
  STEP: Creating a pod to test atomic-volume-subpath @ 07/19/25 12:50:08.852
  STEP: Saw pod success @ 07/19/25 12:50:32.937
  I0719 12:50:32.941931 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod pod-subpath-test-projected-w78d container test-container-subpath-projected-w78d: <nil>
  STEP: delete the pod @ 07/19/25 12:50:32.961
  STEP: Deleting pod pod-subpath-test-projected-w78d @ 07/19/25 12:50:32.984
  I0719 12:50:32.984142 21 delete.go:62] Deleting pod "pod-subpath-test-projected-w78d" in namespace "subpath-8414"
  I0719 12:50:32.988099 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8414" for this suite. @ 07/19/25 12:50:32.992
• [24.184 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Job with successPolicy should succeeded when all indexes succeeded [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:485
  STEP: Creating a kubernetes client @ 07/19/25 12:50:33.003
  I0719 12:50:33.003797 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename job @ 07/19/25 12:50:33.004
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:50:33.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:50:33.018
  STEP: Creating an indexed job with successPolicy @ 07/19/25 12:50:33.02
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet with SuccessPolicy reason condition @ 07/19/25 12:50:33.027
  STEP: Ensure that the job reaches completions @ 07/19/25 12:50:37.041
  STEP: Verifying that the job status to ensure correct final state @ 07/19/25 12:50:37.05
  I0719 12:50:37.054050 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5550" for this suite. @ 07/19/25 12:50:37.059
• [4.065 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:359
  STEP: Creating a kubernetes client @ 07/19/25 12:50:37.068
  I0719 12:50:37.068602 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/19/25 12:50:37.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:50:37.081
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:50:37.083
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 07/19/25 12:50:37.086
  I0719 12:50:37.086331 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  I0719 12:50:38.552141 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  I0719 12:50:43.488416 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9057" for this suite. @ 07/19/25 12:50:43.498
• [6.438 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:402
  STEP: Creating a kubernetes client @ 07/19/25 12:50:43.506
  I0719 12:50:43.506482 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename resourcequota @ 07/19/25 12:50:43.507
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:50:43.52
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:50:43.524
  STEP: Counting existing ResourceQuota @ 07/19/25 12:50:43.527
  STEP: Creating a ResourceQuota @ 07/19/25 12:50:48.533
  STEP: Ensuring resource quota status is calculated @ 07/19/25 12:50:48.538
  STEP: Creating a ReplicationController @ 07/19/25 12:50:50.546
  STEP: Ensuring resource quota status captures replication controller creation @ 07/19/25 12:50:50.56
  STEP: Deleting a ReplicationController @ 07/19/25 12:50:52.566
  STEP: Ensuring resource quota status released usage @ 07/19/25 12:50:52.575
  I0719 12:50:54.581698 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3800" for this suite. @ 07/19/25 12:50:54.586
• [11.087 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:47
  STEP: Creating a kubernetes client @ 07/19/25 12:50:54.593
  I0719 12:50:54.593283 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename configmap @ 07/19/25 12:50:54.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:50:54.609
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:50:54.612
  STEP: Creating configMap with name configmap-test-volume-63c47735-c31c-4d22-91bd-4b64188e41b2 @ 07/19/25 12:50:54.615
  STEP: Creating a pod to test consume configMaps @ 07/19/25 12:50:54.62
  STEP: Saw pod success @ 07/19/25 12:50:58.644
  I0719 12:50:58.649211 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod pod-configmaps-7c531f58-3061-4640-8cc3-c3929a62d6a3 container agnhost-container: <nil>
  STEP: delete the pod @ 07/19/25 12:50:58.659
  I0719 12:50:58.683969 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5212" for this suite. @ 07/19/25 12:50:58.69
• [4.105 seconds]
------------------------------
SSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:437
  STEP: Creating a kubernetes client @ 07/19/25 12:50:58.698
  I0719 12:50:58.698294 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename dns @ 07/19/25 12:50:58.698
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:50:58.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:50:58.714
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 07/19/25 12:50:58.717
  I0719 12:50:58.728815 21 dns.go:449] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-7483  f54d66e6-8e89-48d2-9df0-a20c55f2a579 18241 1 2025-07-19 12:50:58 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2025-07-19 12:50:58 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-s4t5k,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.53,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-s4t5k,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,SELinuxChangePolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},Resources:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},ObservedGeneration:0,},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 07/19/25 12:51:00.742
  I0719 12:51:00.742508 21 exec_util.go:63] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-7483 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0719 12:51:00.742525 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0719 12:51:00.742564 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/dns-7483/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&stderr=true&stdout=true)
  I0719 12:51:00.793325 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: Verifying customized DNS server is configured on pod... @ 07/19/25 12:51:00.793
  I0719 12:51:00.793433 21 exec_util.go:63] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-7483 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0719 12:51:00.793439 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0719 12:51:00.793483 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/dns-7483/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&stderr=true&stdout=true)
  I0719 12:51:00.838663 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0719 12:51:00.838758 21 dns.go:451] Deleting pod test-dns-nameservers...
  I0719 12:51:00.854885 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7483" for this suite. @ 07/19/25 12:51:00.86
• [2.171 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 07/19/25 12:51:00.869
  I0719 12:51:00.869646 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename disruption @ 07/19/25 12:51:00.87
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:51:00.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:51:00.886
  STEP: Creating a kubernetes client @ 07/19/25 12:51:00.889
  I0719 12:51:00.889688 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename disruption-2 @ 07/19/25 12:51:00.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:51:00.902
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:51:00.905
  STEP: Waiting for the pdb to be processed @ 07/19/25 12:51:00.914
  STEP: Waiting for the pdb to be processed @ 07/19/25 12:51:02.926
  STEP: Waiting for the pdb to be processed @ 07/19/25 12:51:04.939
  STEP: listing a collection of PDBs across all namespaces @ 07/19/25 12:51:06.944
  STEP: listing a collection of PDBs in namespace disruption-5813 @ 07/19/25 12:51:06.949
  STEP: deleting a collection of PDBs @ 07/19/25 12:51:06.954
  STEP: Waiting for the PDB collection to be deleted @ 07/19/25 12:51:06.969
  I0719 12:51:06.974358 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-8539" for this suite. @ 07/19/25 12:51:06.979
  I0719 12:51:06.989222 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5813" for this suite. @ 07/19/25 12:51:07.08
• [6.219 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 07/19/25 12:51:07.089
  I0719 12:51:07.089587 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename webhook @ 07/19/25 12:51:07.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:51:07.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:51:07.106
  STEP: Setting up server cert @ 07/19/25 12:51:07.136
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/19/25 12:51:07.539
  STEP: Deploying the webhook pod @ 07/19/25 12:51:07.546
  STEP: Wait for the deployment to be ready @ 07/19/25 12:51:07.562
  I0719 12:51:07.577309 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/19/25 12:51:09.595
  STEP: Verifying the service has paired with the endpoint @ 07/19/25 12:51:09.609
  I0719 12:51:10.610463 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 07/19/25 12:51:10.615
  STEP: Registering slow webhook via the AdmissionRegistration API @ 07/19/25 12:51:10.615
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 07/19/25 12:51:10.63
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 07/19/25 12:51:11.645
  STEP: Registering slow webhook via the AdmissionRegistration API @ 07/19/25 12:51:11.645
  STEP: Having no error when timeout is longer than webhook latency @ 07/19/25 12:51:12.683
  STEP: Registering slow webhook via the AdmissionRegistration API @ 07/19/25 12:51:12.683
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 07/19/25 12:51:17.725
  STEP: Registering slow webhook via the AdmissionRegistration API @ 07/19/25 12:51:17.725
  I0719 12:51:22.835064 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6638" for this suite. @ 07/19/25 12:51:22.839
  STEP: Destroying namespace "webhook-markers-2041" for this suite. @ 07/19/25 12:51:22.847
• [15.768 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:174
  STEP: Creating a kubernetes client @ 07/19/25 12:51:22.857
  I0719 12:51:22.857823 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename projected @ 07/19/25 12:51:22.858
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:51:22.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:51:22.873
  STEP: Creating configMap with name cm-test-opt-del-f8decc72-af8a-4b7d-96d9-73d9b6c2f836 @ 07/19/25 12:51:22.94
  STEP: Creating configMap with name cm-test-opt-upd-57a47311-3a75-43c6-a32b-6defdc37d549 @ 07/19/25 12:51:22.946
  STEP: Creating the pod @ 07/19/25 12:51:22.955
  STEP: Deleting configmap cm-test-opt-del-f8decc72-af8a-4b7d-96d9-73d9b6c2f836 @ 07/19/25 12:51:25.009
  STEP: Updating configmap cm-test-opt-upd-57a47311-3a75-43c6-a32b-6defdc37d549 @ 07/19/25 12:51:25.017
  STEP: Creating configMap with name cm-test-opt-create-93db10e3-cb52-4a18-b00c-c9d342577e6c @ 07/19/25 12:51:25.023
  STEP: waiting to observe update in volume @ 07/19/25 12:51:25.028
  I0719 12:52:29.367998 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4763" for this suite. @ 07/19/25 12:52:29.375
• [66.528 seconds]
------------------------------
S
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 07/19/25 12:52:29.385
  I0719 12:52:29.385561 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename csistoragecapacity @ 07/19/25 12:52:29.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:52:29.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:52:29.404
  STEP: getting /apis @ 07/19/25 12:52:29.407
  STEP: getting /apis/storage.k8s.io @ 07/19/25 12:52:29.411
  STEP: getting /apis/storage.k8s.io/v1 @ 07/19/25 12:52:29.412
  STEP: creating @ 07/19/25 12:52:29.414
  STEP: watching @ 07/19/25 12:52:29.436
  I0719 12:52:29.436095 21 csistoragecapacity.go:143] starting watch
  STEP: getting @ 07/19/25 12:52:29.444
  STEP: listing in namespace @ 07/19/25 12:52:29.448
  STEP: listing across namespaces @ 07/19/25 12:52:29.453
  STEP: patching @ 07/19/25 12:52:29.457
  STEP: updating @ 07/19/25 12:52:29.462
  I0719 12:52:29.469146 21 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0719 12:52:29.469210 21 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 07/19/25 12:52:29.469
  STEP: deleting a collection @ 07/19/25 12:52:29.484
  I0719 12:52:29.505690 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-5351" for this suite. @ 07/19/25 12:52:29.511
• [0.134 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 07/19/25 12:52:29.519
  I0719 12:52:29.519412 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename tables @ 07/19/25 12:52:29.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:52:29.531
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:52:29.534
  I0719 12:52:29.540989 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-1161" for this suite. @ 07/19/25 12:52:29.612
• [0.101 seconds]
------------------------------
SS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 07/19/25 12:52:29.62
  I0719 12:52:29.620636 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename prestop @ 07/19/25 12:52:29.621
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:52:29.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:52:29.637
  STEP: Creating server pod server in namespace prestop-3588 @ 07/19/25 12:52:29.641
  STEP: Waiting for pods to come up. @ 07/19/25 12:52:29.653
  STEP: Creating tester pod tester in namespace prestop-3588 @ 07/19/25 12:52:31.667
  STEP: Deleting pre-stop pod @ 07/19/25 12:52:33.686
  I0719 12:52:38.709464 21 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 07/19/25 12:52:38.709
  I0719 12:52:38.727724 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-3588" for this suite. @ 07/19/25 12:52:38.737
• [9.124 seconds]
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:366
  STEP: Creating a kubernetes client @ 07/19/25 12:52:38.745
  I0719 12:52:38.745191 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename cronjob @ 07/19/25 12:52:38.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:52:38.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:52:38.76
  STEP: Creating a cronjob @ 07/19/25 12:52:38.763
  STEP: creating @ 07/19/25 12:52:38.763
  STEP: getting @ 07/19/25 12:52:38.769
  STEP: listing @ 07/19/25 12:52:38.774
  STEP: watching @ 07/19/25 12:52:38.778
  I0719 12:52:38.778761 21 cronjob.go:395] starting watch
  STEP: cluster-wide listing @ 07/19/25 12:52:38.78
  STEP: cluster-wide watching @ 07/19/25 12:52:38.783
  I0719 12:52:38.783873 21 cronjob.go:407] starting watch
  STEP: patching @ 07/19/25 12:52:38.785
  STEP: updating @ 07/19/25 12:52:38.794
  I0719 12:52:38.804395 21 cronjob.go:431] waiting for watch events with expected annotations
  I0719 12:52:38.804420 21 cronjob.go:445] saw patched and updated annotations
  STEP: patching /status @ 07/19/25 12:52:38.804
  STEP: updating /status @ 07/19/25 12:52:38.813
  STEP: get /status @ 07/19/25 12:52:38.822
  STEP: deleting @ 07/19/25 12:52:38.827
  STEP: deleting a collection @ 07/19/25 12:52:38.85
  I0719 12:52:38.866615 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8192" for this suite. @ 07/19/25 12:52:38.872
• [0.135 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:236
  STEP: Creating a kubernetes client @ 07/19/25 12:52:38.88
  I0719 12:52:38.880625 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename projected @ 07/19/25 12:52:38.881
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:52:38.895
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:52:38.898
  STEP: Creating a pod to test downward API volume plugin @ 07/19/25 12:52:38.902
  STEP: Saw pod success @ 07/19/25 12:52:42.929
  I0719 12:52:42.933023 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod downwardapi-volume-8831bc3f-80d7-49bc-8ab8-d0bc67d6a67e container client-container: <nil>
  STEP: delete the pod @ 07/19/25 12:52:42.942
  I0719 12:52:42.963590 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-317" for this suite. @ 07/19/25 12:52:42.969
• [4.097 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:160
  STEP: Creating a kubernetes client @ 07/19/25 12:52:42.977
  I0719 12:52:42.977421 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename runtimeclass @ 07/19/25 12:52:42.977
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:52:42.991
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:52:42.995
  STEP: Deleting RuntimeClass runtimeclass-6435-delete-me @ 07/19/25 12:52:43.003
  STEP: Waiting for the RuntimeClass to disappear @ 07/19/25 12:52:43.011
  I0719 12:52:43.022287 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-6435" for this suite. @ 07/19/25 12:52:43.07
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:169
  STEP: Creating a kubernetes client @ 07/19/25 12:52:43.08
  I0719 12:52:43.080857 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename emptydir @ 07/19/25 12:52:43.081
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:52:43.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:52:43.099
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 07/19/25 12:52:43.103
  STEP: Saw pod success @ 07/19/25 12:52:47.145
  I0719 12:52:47.149243 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod pod-e39e5378-1337-4b40-b658-b4d54d439c13 container test-container: <nil>
  STEP: delete the pod @ 07/19/25 12:52:47.157
  I0719 12:52:47.182076 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3082" for this suite. @ 07/19/25 12:52:47.187
• [4.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 07/19/25 12:52:47.195
  I0719 12:52:47.195688 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename pods @ 07/19/25 12:52:47.196
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:52:47.209
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:52:47.213
  I0719 12:52:47.216758 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: creating the pod @ 07/19/25 12:52:47.217
  STEP: submitting the pod to kubernetes @ 07/19/25 12:52:47.217
  I0719 12:52:49.294250 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6671" for this suite. @ 07/19/25 12:52:49.3
• [2.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:411
  STEP: Creating a kubernetes client @ 07/19/25 12:52:49.311
  I0719 12:52:49.311228 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename validating-admission-policy @ 07/19/25 12:52:49.311
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:52:49.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:52:49.327
  STEP: getting /apis @ 07/19/25 12:52:49.338
  STEP: getting /apis/admissionregistration.k8s.io @ 07/19/25 12:52:49.342
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 07/19/25 12:52:49.343
  STEP: creating @ 07/19/25 12:52:49.344
  STEP: getting @ 07/19/25 12:52:49.371
  STEP: listing @ 07/19/25 12:52:49.375
  STEP: watching @ 07/19/25 12:52:49.379
  I0719 12:52:49.379540 21 validatingadmissionpolicy.go:528] starting watch
  STEP: patching @ 07/19/25 12:52:49.381
  STEP: updating @ 07/19/25 12:52:49.396
  I0719 12:52:49.409413 21 validatingadmissionpolicy.go:557] waiting for watch events with expected annotations
  I0719 12:52:49.409445 21 validatingadmissionpolicy.go:573] missing expected annotations, waiting: map[string]string(nil)
  I0719 12:52:49.409474 21 validatingadmissionpolicy.go:573] missing expected annotations, waiting: map[string]string(nil)
  I0719 12:52:49.409484 21 validatingadmissionpolicy.go:573] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 07/19/25 12:52:49.409
  STEP: patching /status @ 07/19/25 12:52:49.414
  STEP: updating /status @ 07/19/25 12:52:49.419
  STEP: deleting @ 07/19/25 12:52:49.457
  STEP: deleting a collection @ 07/19/25 12:52:49.472
  I0719 12:52:49.496075 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-2878" for this suite. @ 07/19/25 12:52:49.502
• [0.200 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1693
  STEP: Creating a kubernetes client @ 07/19/25 12:52:49.511
  I0719 12:52:49.511249 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename kubectl @ 07/19/25 12:52:49.511
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:52:49.524
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:52:49.527
  STEP: creating Agnhost RC @ 07/19/25 12:52:49.531
  I0719 12:52:49.531155 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-1736 create -f -'
  I0719 12:52:49.610230 21 builder.go:146] stderr: ""
  I0719 12:52:49.610262 21 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 07/19/25 12:52:49.61
  I0719 12:52:50.615852 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0719 12:52:50.615881 21 framework.go:733] Found 1 / 1
  I0719 12:52:50.615895 21 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 07/19/25 12:52:50.615
  I0719 12:52:50.621576 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0719 12:52:50.621599 21 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0719 12:52:50.621642 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-1736 patch pod agnhost-primary-nsj4m -p {"metadata":{"annotations":{"x":"y"}}}'
  I0719 12:52:50.670567 21 builder.go:146] stderr: ""
  I0719 12:52:50.670601 21 builder.go:147] stdout: "pod/agnhost-primary-nsj4m patched\n"
  STEP: checking annotations @ 07/19/25 12:52:50.67
  I0719 12:52:50.675056 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0719 12:52:50.675072 21 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0719 12:52:50.675243 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1736" for this suite. @ 07/19/25 12:52:50.681
• [1.176 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:219
  STEP: Creating a kubernetes client @ 07/19/25 12:52:50.688
  I0719 12:52:50.688570 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename emptydir @ 07/19/25 12:52:50.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:52:50.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:52:50.704
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 07/19/25 12:52:50.708
  STEP: Saw pod success @ 07/19/25 12:52:52.732
  I0719 12:52:52.738553 21 output.go:207] Trying to get logs from node ip-172-31-42-177 pod pod-2c3d2abd-9214-4ba5-a068-ec5a1703b48a container test-container: <nil>
  STEP: delete the pod @ 07/19/25 12:52:52.756
  I0719 12:52:52.773287 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9266" for this suite. @ 07/19/25 12:52:52.779
• [2.097 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 07/19/25 12:52:52.786
  I0719 12:52:52.786135 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename field-validation @ 07/19/25 12:52:52.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:52:52.8
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:52:52.803
  I0719 12:52:52.806573 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  I0719 12:52:55.343062      21 warnings.go:110] "Warning: unknown field \"alpha\""
  I0719 12:52:55.343083      21 warnings.go:110] "Warning: unknown field \"beta\""
  I0719 12:52:55.343089      21 warnings.go:110] "Warning: unknown field \"delta\""
  I0719 12:52:55.343094      21 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0719 12:52:55.343099      21 warnings.go:110] "Warning: unknown field \"gamma\""
  I0719 12:52:55.896547 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6498" for this suite. @ 07/19/25 12:52:55.901
• [3.126 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:139
  STEP: Creating a kubernetes client @ 07/19/25 12:52:55.911
  I0719 12:52:55.911818 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename emptydir @ 07/19/25 12:52:55.912
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:52:55.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:52:55.929
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 07/19/25 12:52:55.933
  STEP: Saw pod success @ 07/19/25 12:52:57.954
  I0719 12:52:57.958122 21 output.go:207] Trying to get logs from node ip-172-31-42-177 pod pod-916b7517-b27e-442a-9cd8-031de7ae2be4 container test-container: <nil>
  STEP: delete the pod @ 07/19/25 12:52:57.967
  I0719 12:52:57.989050 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5253" for this suite. @ 07/19/25 12:52:57.994
• [2.091 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:375
  STEP: Creating a kubernetes client @ 07/19/25 12:52:58.002
  I0719 12:52:58.002556 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename projected @ 07/19/25 12:52:58.003
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:52:58.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:52:58.018
  STEP: Creating configMap with name projected-configmap-test-volume-ca45977a-0996-44ac-a96f-a04e4d66f30f @ 07/19/25 12:52:58.022
  STEP: Creating a pod to test consume configMaps @ 07/19/25 12:52:58.029
  STEP: Saw pod success @ 07/19/25 12:53:02.062
  I0719 12:53:02.067095 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod pod-projected-configmaps-e43d5913-8f44-4ba8-b299-00f61a7788fe container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 07/19/25 12:53:02.075
  I0719 12:53:02.099083 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4176" for this suite. @ 07/19/25 12:53:02.104
• [4.110 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:96
  STEP: Creating a kubernetes client @ 07/19/25 12:53:02.112
  I0719 12:53:02.112985 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename replication-controller @ 07/19/25 12:53:02.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:53:02.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:53:02.133
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 07/19/25 12:53:02.136
  STEP: When a replication controller with a matching selector is created @ 07/19/25 12:53:04.163
  STEP: Then the orphan pod is adopted @ 07/19/25 12:53:04.17
  I0719 12:53:05.179556 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8423" for this suite. @ 07/19/25 12:53:05.184
• [3.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 07/19/25 12:53:05.195
  I0719 12:53:05.195836 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename webhook @ 07/19/25 12:53:05.196
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:53:05.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:53:05.21
  STEP: Setting up server cert @ 07/19/25 12:53:05.233
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/19/25 12:53:05.513
  STEP: Deploying the webhook pod @ 07/19/25 12:53:05.522
  STEP: Wait for the deployment to be ready @ 07/19/25 12:53:05.536
  I0719 12:53:05.550176 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/19/25 12:53:07.57
  STEP: Verifying the service has paired with the endpoint @ 07/19/25 12:53:07.59
  I0719 12:53:08.591397 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 07/19/25 12:53:08.598
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/19/25 12:53:08.615
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 07/19/25 12:53:08.622
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/19/25 12:53:08.634
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 07/19/25 12:53:08.648
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/19/25 12:53:08.658
  I0719 12:53:08.721361 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9056" for this suite. @ 07/19/25 12:53:08.727
  STEP: Destroying namespace "webhook-markers-517" for this suite. @ 07/19/25 12:53:08.737
• [3.551 seconds]
------------------------------
S
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:333
  STEP: Creating a kubernetes client @ 07/19/25 12:53:08.747
  I0719 12:53:08.747162 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename sched-pred @ 07/19/25 12:53:08.747
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:53:08.765
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:53:08.768
  I0719 12:53:08.771680 21 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0719 12:53:08.831408 21 util.go:390] Waiting for terminating namespaces to be deleted...
  I0719 12:53:08.835247 21 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-42-177 before test
  I0719 12:53:08.839434 21 predicates.go:958] nginx-ingress-controller-kubernetes-worker-75jzt from ingress-nginx-kubernetes-worker started at 2025-07-19 12:06:52 +0000 UTC (1 container statuses recorded)
  I0719 12:53:08.839452 21 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0719 12:53:08.839458 21 predicates.go:958] calico-node-tv24k from kube-system started at 2025-07-19 12:08:17 +0000 UTC (1 container statuses recorded)
  I0719 12:53:08.839463 21 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0719 12:53:08.839470 21 predicates.go:958] sonobuoy-e2e-job-c9d8c2a4e5e24525 from sonobuoy started at 2025-07-19 12:13:46 +0000 UTC (2 container statuses recorded)
  I0719 12:53:08.839475 21 predicates.go:960] 	Container e2e ready: true, restart count 0
  I0719 12:53:08.839481 21 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0719 12:53:08.839486 21 predicates.go:958] sonobuoy-systemd-logs-daemon-set-9ce81a3003f64498-fgps6 from sonobuoy started at 2025-07-19 12:13:47 +0000 UTC (2 container statuses recorded)
  I0719 12:53:08.839494 21 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0719 12:53:08.839500 21 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0719 12:53:08.839505 21 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-6-59 before test
  I0719 12:53:08.845433 21 predicates.go:958] nginx-ingress-controller-kubernetes-worker-ttnnm from ingress-nginx-kubernetes-worker started at 2025-07-19 12:40:56 +0000 UTC (1 container statuses recorded)
  I0719 12:53:08.845452 21 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0719 12:53:08.845460 21 predicates.go:958] calico-node-9fhxn from kube-system started at 2025-07-19 12:11:42 +0000 UTC (1 container statuses recorded)
  I0719 12:53:08.845465 21 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0719 12:53:08.845471 21 predicates.go:958] pod-exec-websocket-6066306a-4cbe-4193-be48-cdf78cbfc1b4 from pods-6671 started at 2025-07-19 12:52:47 +0000 UTC (1 container statuses recorded)
  I0719 12:53:08.845475 21 predicates.go:960] 	Container main ready: true, restart count 0
  I0719 12:53:08.845480 21 predicates.go:958] pod-adoption from replication-controller-8423 started at 2025-07-19 12:53:02 +0000 UTC (1 container statuses recorded)
  I0719 12:53:08.845485 21 predicates.go:960] 	Container pod-adoption ready: true, restart count 0
  I0719 12:53:08.845489 21 predicates.go:958] sonobuoy from sonobuoy started at 2025-07-19 12:13:45 +0000 UTC (1 container statuses recorded)
  I0719 12:53:08.845494 21 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0719 12:53:08.845498 21 predicates.go:958] sonobuoy-systemd-logs-daemon-set-9ce81a3003f64498-n6kv8 from sonobuoy started at 2025-07-19 12:13:46 +0000 UTC (2 container statuses recorded)
  I0719 12:53:08.845504 21 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0719 12:53:08.845508 21 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0719 12:53:08.845513 21 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-64-234 before test
  I0719 12:53:08.850048 21 predicates.go:958] nginx-ingress-controller-kubernetes-worker-7rrx5 from ingress-nginx-kubernetes-worker started at 2025-07-19 11:54:23 +0000 UTC (1 container statuses recorded)
  I0719 12:53:08.850062 21 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0719 12:53:08.850068 21 predicates.go:958] calico-node-lkdps from kube-system started at 2025-07-19 12:11:57 +0000 UTC (1 container statuses recorded)
  I0719 12:53:08.850074 21 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0719 12:53:08.850079 21 predicates.go:958] coredns-5d946bb58-nbpbm from kube-system started at 2025-07-19 11:54:23 +0000 UTC (1 container statuses recorded)
  I0719 12:53:08.850084 21 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0719 12:53:08.850089 21 predicates.go:958] kube-state-metrics-b84f44f45-2nqrm from kube-system started at 2025-07-19 11:54:23 +0000 UTC (1 container statuses recorded)
  I0719 12:53:08.850094 21 predicates.go:960] 	Container kube-state-metrics ready: true, restart count 2
  I0719 12:53:08.850099 21 predicates.go:958] metrics-server-v0.7.2-7d878b47f8-gcczm from kube-system started at 2025-07-19 11:54:23 +0000 UTC (2 container statuses recorded)
  I0719 12:53:08.850104 21 predicates.go:960] 	Container metrics-server ready: true, restart count 0
  I0719 12:53:08.850109 21 predicates.go:960] 	Container metrics-server-nanny ready: true, restart count 0
  I0719 12:53:08.850119 21 predicates.go:958] dashboard-metrics-scraper-5cf87bc988-79lk5 from kubernetes-dashboard started at 2025-07-19 11:54:23 +0000 UTC (1 container statuses recorded)
  I0719 12:53:08.850123 21 predicates.go:960] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I0719 12:53:08.850128 21 predicates.go:958] kubernetes-dashboard-6858576c98-4jkn6 from kubernetes-dashboard started at 2025-07-19 11:54:23 +0000 UTC (1 container statuses recorded)
  I0719 12:53:08.850132 21 predicates.go:960] 	Container kubernetes-dashboard ready: true, restart count 2
  I0719 12:53:08.850137 21 predicates.go:958] sonobuoy-systemd-logs-daemon-set-9ce81a3003f64498-9xxjq from sonobuoy started at 2025-07-19 12:13:47 +0000 UTC (2 container statuses recorded)
  I0719 12:53:08.850142 21 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0719 12:53:08.850146 21 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-42-177 @ 07/19/25 12:53:08.864
  STEP: verifying the node has the label node ip-172-31-6-59 @ 07/19/25 12:53:08.879
  STEP: verifying the node has the label node ip-172-31-64-234 @ 07/19/25 12:53:08.894
  I0719 12:53:08.942908 21 predicates.go:373] Pod nginx-ingress-controller-kubernetes-worker-75jzt requesting resource cpu=0m on Node ip-172-31-42-177
  I0719 12:53:08.942942 21 predicates.go:373] Pod nginx-ingress-controller-kubernetes-worker-7rrx5 requesting resource cpu=0m on Node ip-172-31-64-234
  I0719 12:53:08.942949 21 predicates.go:373] Pod nginx-ingress-controller-kubernetes-worker-ttnnm requesting resource cpu=0m on Node ip-172-31-6-59
  I0719 12:53:08.942990 21 predicates.go:373] Pod calico-node-9fhxn requesting resource cpu=250m on Node ip-172-31-6-59
  I0719 12:53:08.942997 21 predicates.go:373] Pod calico-node-lkdps requesting resource cpu=250m on Node ip-172-31-64-234
  I0719 12:53:08.943004 21 predicates.go:373] Pod calico-node-tv24k requesting resource cpu=250m on Node ip-172-31-42-177
  I0719 12:53:08.943010 21 predicates.go:373] Pod coredns-5d946bb58-nbpbm requesting resource cpu=100m on Node ip-172-31-64-234
  I0719 12:53:08.943015 21 predicates.go:373] Pod kube-state-metrics-b84f44f45-2nqrm requesting resource cpu=0m on Node ip-172-31-64-234
  I0719 12:53:08.943022 21 predicates.go:373] Pod metrics-server-v0.7.2-7d878b47f8-gcczm requesting resource cpu=5m on Node ip-172-31-64-234
  I0719 12:53:08.943027 21 predicates.go:373] Pod dashboard-metrics-scraper-5cf87bc988-79lk5 requesting resource cpu=0m on Node ip-172-31-64-234
  I0719 12:53:08.943033 21 predicates.go:373] Pod kubernetes-dashboard-6858576c98-4jkn6 requesting resource cpu=0m on Node ip-172-31-64-234
  I0719 12:53:08.943039 21 predicates.go:373] Pod pod-exec-websocket-6066306a-4cbe-4193-be48-cdf78cbfc1b4 requesting resource cpu=0m on Node ip-172-31-6-59
  I0719 12:53:08.943045 21 predicates.go:373] Pod pod-adoption requesting resource cpu=0m on Node ip-172-31-6-59
  I0719 12:53:08.943051 21 predicates.go:373] Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-6-59
  I0719 12:53:08.943058 21 predicates.go:373] Pod sonobuoy-e2e-job-c9d8c2a4e5e24525 requesting resource cpu=0m on Node ip-172-31-42-177
  I0719 12:53:08.943064 21 predicates.go:373] Pod sonobuoy-systemd-logs-daemon-set-9ce81a3003f64498-9xxjq requesting resource cpu=0m on Node ip-172-31-64-234
  I0719 12:53:08.943070 21 predicates.go:373] Pod sonobuoy-systemd-logs-daemon-set-9ce81a3003f64498-fgps6 requesting resource cpu=0m on Node ip-172-31-42-177
  I0719 12:53:08.943078 21 predicates.go:373] Pod sonobuoy-systemd-logs-daemon-set-9ce81a3003f64498-n6kv8 requesting resource cpu=0m on Node ip-172-31-6-59
  STEP: Starting Pods to consume most of the cluster CPU. @ 07/19/25 12:53:08.943
  I0719 12:53:08.943109 21 predicates.go:383] Creating a pod which consumes cpu=1225m on Node ip-172-31-42-177
  I0719 12:53:08.955757 21 predicates.go:383] Creating a pod which consumes cpu=1225m on Node ip-172-31-6-59
  I0719 12:53:08.967140 21 predicates.go:383] Creating a pod which consumes cpu=1151m on Node ip-172-31-64-234
  STEP: Creating another pod that requires unavailable amount of CPU. @ 07/19/25 12:53:11.003
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-14ba2f69-2e9b-443b-a12e-b4e9cbad51bb.1853a82c7a43536d], Reason = [Scheduled], Message = [Successfully assigned sched-pred-7039/filler-pod-14ba2f69-2e9b-443b-a12e-b4e9cbad51bb to ip-172-31-42-177] @ 07/19/25 12:53:11.007
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-14ba2f69-2e9b-443b-a12e-b4e9cbad51bb.1853a82c97d37ccb], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 07/19/25 12:53:11.007
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-14ba2f69-2e9b-443b-a12e-b4e9cbad51bb.1853a82c98d6ebc0], Reason = [Created], Message = [Created container: filler-pod-14ba2f69-2e9b-443b-a12e-b4e9cbad51bb] @ 07/19/25 12:53:11.007
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-14ba2f69-2e9b-443b-a12e-b4e9cbad51bb.1853a82c9b740e2b], Reason = [Started], Message = [Started container filler-pod-14ba2f69-2e9b-443b-a12e-b4e9cbad51bb] @ 07/19/25 12:53:11.007
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-795bd2d7-eefa-406d-a1bb-6f35875a4824.1853a82c7b3e8cb1], Reason = [Scheduled], Message = [Successfully assigned sched-pred-7039/filler-pod-795bd2d7-eefa-406d-a1bb-6f35875a4824 to ip-172-31-6-59] @ 07/19/25 12:53:11.007
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-795bd2d7-eefa-406d-a1bb-6f35875a4824.1853a82c9a29a6d5], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 07/19/25 12:53:11.007
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-795bd2d7-eefa-406d-a1bb-6f35875a4824.1853a82c9b82b4f1], Reason = [Created], Message = [Created container: filler-pod-795bd2d7-eefa-406d-a1bb-6f35875a4824] @ 07/19/25 12:53:11.007
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-795bd2d7-eefa-406d-a1bb-6f35875a4824.1853a82c9e634e3b], Reason = [Started], Message = [Started container filler-pod-795bd2d7-eefa-406d-a1bb-6f35875a4824] @ 07/19/25 12:53:11.007
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b76dac6e-13eb-44a9-be71-8b544e1d2813.1853a82c7ba680df], Reason = [Scheduled], Message = [Successfully assigned sched-pred-7039/filler-pod-b76dac6e-13eb-44a9-be71-8b544e1d2813 to ip-172-31-64-234] @ 07/19/25 12:53:11.007
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b76dac6e-13eb-44a9-be71-8b544e1d2813.1853a82c9a7fe54e], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 07/19/25 12:53:11.007
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b76dac6e-13eb-44a9-be71-8b544e1d2813.1853a82c9bb2f5fe], Reason = [Created], Message = [Created container: filler-pod-b76dac6e-13eb-44a9-be71-8b544e1d2813] @ 07/19/25 12:53:11.007
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b76dac6e-13eb-44a9-be71-8b544e1d2813.1853a82c9f31b83d], Reason = [Started], Message = [Started container filler-pod-b76dac6e-13eb-44a9-be71-8b544e1d2813] @ 07/19/25 12:53:11.007
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.1853a82cf4b5a95c], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 Insufficient cpu. preemption: 0/5 nodes are available: 2 Preemption is not helpful for scheduling, 3 No preemption victims found for incoming pod.] @ 07/19/25 12:53:11.02
  STEP: removing the label node off the node ip-172-31-42-177 @ 07/19/25 12:53:12.02
  STEP: verifying the node doesn't have the label node @ 07/19/25 12:53:12.034
  STEP: removing the label node off the node ip-172-31-6-59 @ 07/19/25 12:53:12.038
  STEP: verifying the node doesn't have the label node @ 07/19/25 12:53:12.056
  STEP: removing the label node off the node ip-172-31-64-234 @ 07/19/25 12:53:12.06
  STEP: verifying the node doesn't have the label node @ 07/19/25 12:53:12.075
  I0719 12:53:12.079398 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-7039" for this suite. @ 07/19/25 12:53:12.088
• [3.350 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:149
  STEP: Creating a kubernetes client @ 07/19/25 12:53:12.097
  I0719 12:53:12.097088 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename emptydir @ 07/19/25 12:53:12.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:53:12.113
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:53:12.117
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 07/19/25 12:53:12.121
  STEP: Saw pod success @ 07/19/25 12:53:16.151
  I0719 12:53:16.156591 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod pod-7f93f07a-a5cf-43ca-970b-1d304e31c795 container test-container: <nil>
  STEP: delete the pod @ 07/19/25 12:53:16.163
  I0719 12:53:16.181052 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2932" for this suite. @ 07/19/25 12:53:16.187
• [4.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 07/19/25 12:53:16.196
  I0719 12:53:16.196888 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename container-runtime @ 07/19/25 12:53:16.197
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:53:16.21
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:53:16.213
  STEP: create the container @ 07/19/25 12:53:16.216
  I0719 12:53:16.228385      21 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Failed @ 07/19/25 12:53:16.228
  STEP: get the container status @ 07/19/25 12:53:19.25
  STEP: the container should be terminated @ 07/19/25 12:53:19.254
  STEP: the termination message should be set @ 07/19/25 12:53:19.254
  I0719 12:53:19.254390 21 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 07/19/25 12:53:19.254
  I0719 12:53:19.273805 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6420" for this suite. @ 07/19/25 12:53:19.278
• [3.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:76
  STEP: Creating a kubernetes client @ 07/19/25 12:53:19.286
  I0719 12:53:19.286382 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename containers @ 07/19/25 12:53:19.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:53:19.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:53:19.303
  STEP: Creating a pod to test override command @ 07/19/25 12:53:19.306
  STEP: Saw pod success @ 07/19/25 12:53:23.334
  I0719 12:53:23.338546 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod client-containers-5f6abd30-7926-4963-8080-bb595df7261d container agnhost-container: <nil>
  STEP: delete the pod @ 07/19/25 12:53:23.347
  I0719 12:53:23.368951 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-5275" for this suite. @ 07/19/25 12:53:23.373
• [4.095 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 07/19/25 12:53:23.381
  I0719 12:53:23.381036 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename kubelet-test @ 07/19/25 12:53:23.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:53:23.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:53:23.399
  I0719 12:53:23.427655 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7654" for this suite. @ 07/19/25 12:53:23.475
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 07/19/25 12:53:23.483
  I0719 12:53:23.483893 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename deployment @ 07/19/25 12:53:23.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:53:23.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:53:23.502
  I0719 12:53:23.506168 21 deployment.go:1215] Creating deployment "webserver-deployment"
  I0719 12:53:23.513443 21 deployment.go:1219] Waiting for observed generation 1
  I0719 12:53:25.523083 21 deployment.go:1224] Waiting for all required pods to come up
  I0719 12:53:25.529896 21 resource.go:81] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 07/19/25 12:53:25.529
  I0719 12:53:25.529967 21 deployment.go:1228] Waiting for deployment "webserver-deployment" to complete
  I0719 12:53:25.541653 21 deployment.go:1237] Updating deployment "webserver-deployment" with a non-existent image
  I0719 12:53:25.552763 21 deployment.go:314] Updating deployment webserver-deployment
  I0719 12:53:25.552787 21 deployment.go:1243] Waiting for observed generation 2
  I0719 12:53:27.564290 21 deployment.go:1253] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0719 12:53:27.568052 21 deployment.go:1258] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0719 12:53:27.573036 21 deployment.go:1263] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0719 12:53:27.586785 21 deployment.go:1277] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0719 12:53:27.586807 21 deployment.go:1282] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0719 12:53:27.590990 21 deployment.go:1287] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0719 12:53:27.599697 21 deployment.go:1294] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0719 12:53:27.599720 21 deployment.go:1302] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0719 12:53:27.611041 21 deployment.go:314] Updating deployment webserver-deployment
  I0719 12:53:27.611067 21 deployment.go:1308] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0719 12:53:27.622966 21 deployment.go:1316] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0719 12:53:27.629040 21 deployment.go:1322] Verifying that second rollout's replicaset has .spec.replicas = 13
  I0719 12:53:27.657305 21 deployment.go:632] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7536",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0d42085b-15e3-43ec-b0b5-397723beff55",
      ResourceVersion: (string) (len=5) "19780",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888526403,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 25,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526405,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526403,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-6fc69b9478\" is progressing."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0719 12:53:27.705127 21 deployment.go:40] New ReplicaSet "webserver-deployment-6fc69b9478" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-6fc69b9478",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7536",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5aaec45c-570b-4001-a936-8ee2e242859b",
      ResourceVersion: (string) (len=5) "19770",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888526405,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "0d42085b-15e3-43ec-b0b5-397723beff55",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526405,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 64 34 32 30 38  35 62 2d 31 35 65 33 2d  |\"0d42085b-15e3-|
              00000120  34 33 65 63 2d 62 30 62  35 2d 33 39 37 37 32 33  |43ec-b0b5-397723|
              00000130  62 65 66 66 35 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |beff55\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0719 12:53:27.705869 21 deployment.go:45] All old ReplicaSets of Deployment "webserver-deployment":
  I0719 12:53:27.706074 21 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7536",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5e9e106f-2035-4faa-a2b8-40aafbcf3e48",
      ResourceVersion: (string) (len=5) "19769",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888526403,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "0d42085b-15e3-43ec-b0b5-397723beff55",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526405,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 64 34 32 30 38  35 62 2d 31 35 65 33 2d  |\"0d42085b-15e3-|
              00000120  34 33 65 63 2d 62 30 62  35 2d 33 39 37 37 32 33  |43ec-b0b5-397723|
              00000130  62 65 66 66 35 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |beff55\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0719 12:53:27.722006 21 deployment.go:68] Pod "webserver-deployment-685b768f58-4zfcv" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-4zfcv",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7536",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ba812569-328f-4301-8834-fa11a0e9de9a",
      ResourceVersion: (string) (len=5) "19655",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888526403,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "5e9e106f-2035-4faa-a2b8-40aafbcf3e48",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526403,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 65  39 65 31 30 36 66 2d 32  |d\":\"5e9e106f-2|
              00000090  30 33 35 2d 34 66 61 61  2d 61 32 62 38 2d 34 30  |035-4faa-a2b8-40|
              000000a0  61 61 66 62 63 66 33 65  34 38 5c 22 7d 22 3a 7b  |aafbcf3e48\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526405,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 30  33 2e 31 38 30 5c 22 7d  |2.168.103.180\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jh5c8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jh5c8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-64-234",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526403,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526403,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.64.234",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.64.234"
        }
      },
      PodIP: (string) (len=15) "192.168.103.180",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.103.180"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888526403,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63888526404,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://6274faa1bc231ca15f87bc6612b7d1f30d9bc12158e4ec54cb5e2401eac665a0",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jh5c8",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0719 12:53:27.724189 21 deployment.go:68] Pod "webserver-deployment-685b768f58-52rm2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-52rm2",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7536",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "03b599a8-7a87-41e6-9276-1d5b646ba356",
      ResourceVersion: (string) (len=5) "19796",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888526407,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "5e9e106f-2035-4faa-a2b8-40aafbcf3e48",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 65  39 65 31 30 36 66 2d 32  |d\":\"5e9e106f-2|
              00000090  30 33 35 2d 34 66 61 61  2d 61 32 62 38 2d 34 30  |035-4faa-a2b8-40|
              000000a0  61 61 66 62 63 66 33 65  34 38 5c 22 7d 22 3a 7b  |aafbcf3e48\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7tgsm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7tgsm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-64-234",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0719 12:53:27.725184 21 deployment.go:68] Pod "webserver-deployment-685b768f58-6w8pm" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-6w8pm",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7536",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "43c74b91-14db-40a1-ab15-292b7011e5ab",
      ResourceVersion: (string) (len=5) "19614",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888526403,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "5e9e106f-2035-4faa-a2b8-40aafbcf3e48",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526403,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 65  39 65 31 30 36 66 2d 32  |d\":\"5e9e106f-2|
              00000090  30 33 35 2d 34 66 61 61  2d 61 32 62 38 2d 34 30  |035-4faa-a2b8-40|
              000000a0  61 61 66 62 63 66 33 65  34 38 5c 22 7d 22 3a 7b  |aafbcf3e48\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 30  36 2e 31 39 37 5c 22 7d  |2.168.206.197\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xmnkz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xmnkz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-6-59",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526403,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526403,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.6.59",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.6.59"
        }
      },
      PodIP: (string) (len=15) "192.168.206.197",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.206.197"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888526403,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63888526404,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://4b28b6cfc26f1d15de3f643e53f3ef5b1629405a2df74818112fcd465f50e6d4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-xmnkz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0719 12:53:27.726468 21 deployment.go:68] Pod "webserver-deployment-685b768f58-77zsn" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-77zsn",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7536",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "43555fec-0cbc-47e4-a806-fbd2ab820b88",
      ResourceVersion: (string) (len=5) "19649",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888526403,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "5e9e106f-2035-4faa-a2b8-40aafbcf3e48",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526403,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 65  39 65 31 30 36 66 2d 32  |d\":\"5e9e106f-2|
              00000090  30 33 35 2d 34 66 61 61  2d 61 32 62 38 2d 34 30  |035-4faa-a2b8-40|
              000000a0  61 61 66 62 63 66 33 65  34 38 5c 22 7d 22 3a 7b  |aafbcf3e48\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 30  33 2e 31 38 31 5c 22 7d  |2.168.103.181\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7mrvb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7mrvb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-64-234",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526403,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526403,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.64.234",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.64.234"
        }
      },
      PodIP: (string) (len=15) "192.168.103.181",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.103.181"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888526403,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63888526404,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://67c7943a7aa845e7fd02e6dd286555cdd8a197e551abe6aadf24429553ef9ce9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7mrvb",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0719 12:53:27.728147 21 deployment.go:68] Pod "webserver-deployment-685b768f58-87ckn" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-87ckn",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7536",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0fee69c1-374a-4128-a4b3-762a7782a6e0",
      ResourceVersion: (string) (len=5) "19609",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888526403,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "5e9e106f-2035-4faa-a2b8-40aafbcf3e48",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526403,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 65  39 65 31 30 36 66 2d 32  |d\":\"5e9e106f-2|
              00000090  30 33 35 2d 34 66 61 61  2d 61 32 62 38 2d 34 30  |035-4faa-a2b8-40|
              000000a0  61 61 66 62 63 66 33 65  34 38 5c 22 7d 22 3a 7b  |aafbcf3e48\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 30  36 2e 31 39 36 5c 22 7d  |2.168.206.196\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-h2n7k",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-h2n7k",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-6-59",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526403,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526403,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.6.59",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.6.59"
        }
      },
      PodIP: (string) (len=15) "192.168.206.196",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.206.196"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888526403,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63888526404,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://0c2b751c8810794ac16d0baa6046a7609d4a1c3c2fdca87d3eeb7397fa0386cc",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-h2n7k",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0719 12:53:27.729458 21 deployment.go:68] Pod "webserver-deployment-685b768f58-8b65w" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-8b65w",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7536",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2ea52c9f-7d84-40c0-b756-2a62104cc964",
      ResourceVersion: (string) (len=5) "19652",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888526403,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "5e9e106f-2035-4faa-a2b8-40aafbcf3e48",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526403,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 65  39 65 31 30 36 66 2d 32  |d\":\"5e9e106f-2|
              00000090  30 33 35 2d 34 66 61 61  2d 61 32 62 38 2d 34 30  |035-4faa-a2b8-40|
              000000a0  61 61 66 62 63 66 33 65  34 38 5c 22 7d 22 3a 7b  |aafbcf3e48\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 30  33 2e 31 38 32 5c 22 7d  |2.168.103.182\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-whrzq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-whrzq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-64-234",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526403,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526403,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.64.234",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.64.234"
        }
      },
      PodIP: (string) (len=15) "192.168.103.182",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.103.182"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888526403,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63888526404,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://67d73800053132289effd36df480007baa6e9ca8737de2285ff2ae85225c326a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-whrzq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0719 12:53:27.731140 21 deployment.go:68] Pod "webserver-deployment-685b768f58-8nhh5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-8nhh5",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7536",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b9e3c016-4815-467b-8cd4-15e65e735d1d",
      ResourceVersion: (string) (len=5) "19799",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888526407,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "5e9e106f-2035-4faa-a2b8-40aafbcf3e48",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 65  39 65 31 30 36 66 2d 32  |d\":\"5e9e106f-2|
              00000090  30 33 35 2d 34 66 61 61  2d 61 32 62 38 2d 34 30  |035-4faa-a2b8-40|
              000000a0  61 61 66 62 63 66 33 65  34 38 5c 22 7d 22 3a 7b  |aafbcf3e48\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rvddg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rvddg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-42-177",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0719 12:53:27.732505 21 deployment.go:68] Pod "webserver-deployment-685b768f58-bl8rh" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-bl8rh",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7536",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0d22c14b-71f9-4f82-a1ad-0255c673b32d",
      ResourceVersion: (string) (len=5) "19634",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888526403,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "5e9e106f-2035-4faa-a2b8-40aafbcf3e48",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526403,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 65  39 65 31 30 36 66 2d 32  |d\":\"5e9e106f-2|
              00000090  30 33 35 2d 34 66 61 61  2d 61 32 62 38 2d 34 30  |035-4faa-a2b8-40|
              000000a0  61 61 66 62 63 66 33 65  34 38 5c 22 7d 22 3a 7b  |aafbcf3e48\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 35  36 2e 32 31 32 5c 22 7d  |2.168.156.212\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-m7v5z",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-m7v5z",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-42-177",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526403,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526403,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.42.177",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.42.177"
        }
      },
      PodIP: (string) (len=15) "192.168.156.212",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.156.212"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888526403,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63888526404,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://34130c8e6093fa396f6e7542210a128b1fd22900175acf85c3d286208596d834",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-m7v5z",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0719 12:53:27.733851 21 deployment.go:68] Pod "webserver-deployment-685b768f58-cj6hc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-cj6hc",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7536",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c025229c-ddfe-474e-ad45-c6790d15c209",
      ResourceVersion: (string) (len=5) "19791",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888526407,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "5e9e106f-2035-4faa-a2b8-40aafbcf3e48",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 65  39 65 31 30 36 66 2d 32  |d\":\"5e9e106f-2|
              00000090  30 33 35 2d 34 66 61 61  2d 61 32 62 38 2d 34 30  |035-4faa-a2b8-40|
              000000a0  61 61 66 62 63 66 33 65  34 38 5c 22 7d 22 3a 7b  |aafbcf3e48\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vld48",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vld48",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-42-177",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0719 12:53:27.735883 21 deployment.go:68] Pod "webserver-deployment-685b768f58-gvjg5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-gvjg5",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7536",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9a2c72a7-2883-4434-a16e-fd713df05e62",
      ResourceVersion: (string) (len=5) "19803",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888526407,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "5e9e106f-2035-4faa-a2b8-40aafbcf3e48",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 65  39 65 31 30 36 66 2d 32  |d\":\"5e9e106f-2|
              00000090  30 33 35 2d 34 66 61 61  2d 61 32 62 38 2d 34 30  |035-4faa-a2b8-40|
              000000a0  61 61 66 62 63 66 33 65  34 38 5c 22 7d 22 3a 7b  |aafbcf3e48\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rf6qr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rf6qr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0719 12:53:27.736671 21 deployment.go:68] Pod "webserver-deployment-685b768f58-kxckd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-kxckd",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7536",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d0a5802c-063f-4524-b10f-d3d59509522b",
      ResourceVersion: (string) (len=5) "19798",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888526407,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "5e9e106f-2035-4faa-a2b8-40aafbcf3e48",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 65  39 65 31 30 36 66 2d 32  |d\":\"5e9e106f-2|
              00000090  30 33 35 2d 34 66 61 61  2d 61 32 62 38 2d 34 30  |035-4faa-a2b8-40|
              000000a0  61 61 66 62 63 66 33 65  34 38 5c 22 7d 22 3a 7b  |aafbcf3e48\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mj2nr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mj2nr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-6-59",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0719 12:53:27.737670 21 deployment.go:68] Pod "webserver-deployment-685b768f58-lklp7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-lklp7",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7536",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2c9b401b-05e5-4007-9a62-95a8147e46be",
      ResourceVersion: (string) (len=5) "19790",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888526407,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "5e9e106f-2035-4faa-a2b8-40aafbcf3e48",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 65  39 65 31 30 36 66 2d 32  |d\":\"5e9e106f-2|
              00000090  30 33 35 2d 34 66 61 61  2d 61 32 62 38 2d 34 30  |035-4faa-a2b8-40|
              000000a0  61 61 66 62 63 66 33 65  34 38 5c 22 7d 22 3a 7b  |aafbcf3e48\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-f56m9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-f56m9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-42-177",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.42.177",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.42.177"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888526407,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-f56m9",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0719 12:53:27.738841 21 deployment.go:68] Pod "webserver-deployment-685b768f58-ngdpr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-ngdpr",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7536",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "773cf0fe-3aec-4b0a-ab2d-743d6e574253",
      ResourceVersion: (string) (len=5) "19805",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888526407,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "5e9e106f-2035-4faa-a2b8-40aafbcf3e48",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 65  39 65 31 30 36 66 2d 32  |d\":\"5e9e106f-2|
              00000090  30 33 35 2d 34 66 61 61  2d 61 32 62 38 2d 34 30  |035-4faa-a2b8-40|
              000000a0  61 61 66 62 63 66 33 65  34 38 5c 22 7d 22 3a 7b  |aafbcf3e48\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-f8kf4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-f8kf4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-64-234",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0719 12:53:27.739558 21 deployment.go:68] Pod "webserver-deployment-685b768f58-pjjgq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-pjjgq",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7536",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "468976ce-38b2-4048-b7c4-8ec1fadd26b4",
      ResourceVersion: (string) (len=5) "19806",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888526407,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "5e9e106f-2035-4faa-a2b8-40aafbcf3e48",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 65  39 65 31 30 36 66 2d 32  |d\":\"5e9e106f-2|
              00000090  30 33 35 2d 34 66 61 61  2d 61 32 62 38 2d 34 30  |035-4faa-a2b8-40|
              000000a0  61 61 66 62 63 66 33 65  34 38 5c 22 7d 22 3a 7b  |aafbcf3e48\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-k2zjt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-k2zjt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0719 12:53:27.740519 21 deployment.go:68] Pod "webserver-deployment-685b768f58-pjsvj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-pjsvj",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7536",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3f37130a-51a7-46d7-97b5-51dfe014e172",
      ResourceVersion: (string) (len=5) "19638",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888526403,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "5e9e106f-2035-4faa-a2b8-40aafbcf3e48",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526403,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 65  39 65 31 30 36 66 2d 32  |d\":\"5e9e106f-2|
              00000090  30 33 35 2d 34 66 61 61  2d 61 32 62 38 2d 34 30  |035-4faa-a2b8-40|
              000000a0  61 61 66 62 63 66 33 65  34 38 5c 22 7d 22 3a 7b  |aafbcf3e48\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 35  36 2e 32 32 37 5c 22 7d  |2.168.156.227\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-j2p66",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-j2p66",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-42-177",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526403,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526403,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.42.177",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.42.177"
        }
      },
      PodIP: (string) (len=15) "192.168.156.227",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.156.227"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888526403,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63888526404,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://9716e335034e5523e631201ca79210841d0fa35924d61fd46768775916a45bfe",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-j2p66",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0719 12:53:27.741890 21 deployment.go:68] Pod "webserver-deployment-685b768f58-pmldb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-pmldb",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7536",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c9eb2c2d-191b-4158-8983-dd91b1da660f",
      ResourceVersion: (string) (len=5) "19617",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888526403,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "5e9e106f-2035-4faa-a2b8-40aafbcf3e48",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526403,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 65  39 65 31 30 36 66 2d 32  |d\":\"5e9e106f-2|
              00000090  30 33 35 2d 34 66 61 61  2d 61 32 62 38 2d 34 30  |035-4faa-a2b8-40|
              000000a0  61 61 66 62 63 66 33 65  34 38 5c 22 7d 22 3a 7b  |aafbcf3e48\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 30  36 2e 31 39 39 5c 22 7d  |2.168.206.199\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jlr98",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jlr98",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-6-59",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526403,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526403,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.6.59",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.6.59"
        }
      },
      PodIP: (string) (len=15) "192.168.206.199",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.206.199"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888526403,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63888526404,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://cf7255f5f7b8c7465a0911c42609e3c70fb09b575273279de850ad72128c01ac",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jlr98",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0719 12:53:27.744786 21 deployment.go:68] Pod "webserver-deployment-685b768f58-sd2rb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-sd2rb",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7536",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1c21b8ad-8758-4dce-82c5-561bf819e3c3",
      ResourceVersion: (string) (len=5) "19794",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888526407,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "5e9e106f-2035-4faa-a2b8-40aafbcf3e48",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 65  39 65 31 30 36 66 2d 32  |d\":\"5e9e106f-2|
              00000090  30 33 35 2d 34 66 61 61  2d 61 32 62 38 2d 34 30  |035-4faa-a2b8-40|
              000000a0  61 61 66 62 63 66 33 65  34 38 5c 22 7d 22 3a 7b  |aafbcf3e48\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pcrwl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pcrwl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-6-59",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0719 12:53:27.745747 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-2pppx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-2pppx",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7536",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "34f83373-29fa-48e4-8261-c3574cf10993",
      ResourceVersion: (string) (len=5) "19757",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888526405,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "5aaec45c-570b-4001-a936-8ee2e242859b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526405,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 61  61 65 63 34 35 63 2d 35  |d\":\"5aaec45c-5|
              00000090  37 30 62 2d 34 30 30 31  2d 61 39 33 36 2d 38 65  |70b-4001-a936-8e|
              000000a0  65 32 65 32 34 32 38 35  39 62 5c 22 7d 22 3a 7b  |e2e242859b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 32 30 36 2e 32  30 30 5c 22 7d 22 3a 7b  |68.206.200\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-txqq7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-txqq7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-6-59",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526405,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526405,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526405,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526405,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.6.59",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.6.59"
        }
      },
      PodIP: (string) (len=15) "192.168.206.200",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.206.200"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888526405,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-txqq7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0719 12:53:27.747172 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-5sxvw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-5sxvw",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7536",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "98816043-38f4-41d4-854f-db372fc07835",
      ResourceVersion: (string) (len=5) "19759",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888526405,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "5aaec45c-570b-4001-a936-8ee2e242859b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526405,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 61  61 65 63 34 35 63 2d 35  |d\":\"5aaec45c-5|
              00000090  37 30 62 2d 34 30 30 31  2d 61 39 33 36 2d 38 65  |70b-4001-a936-8e|
              000000a0  65 32 65 32 34 32 38 35  39 62 5c 22 7d 22 3a 7b  |e2e242859b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 35 36 2e 32  32 38 5c 22 7d 22 3a 7b  |68.156.228\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qvmmq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qvmmq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-42-177",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526405,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526405,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526405,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526405,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.42.177",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.42.177"
        }
      },
      PodIP: (string) (len=15) "192.168.156.228",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.156.228"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888526405,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qvmmq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0719 12:53:27.748759 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-77kzw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-77kzw",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7536",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d13a1374-b1eb-45be-9395-e94945f0077c",
      ResourceVersion: (string) (len=5) "19795",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888526407,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "5aaec45c-570b-4001-a936-8ee2e242859b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 61  61 65 63 34 35 63 2d 35  |d\":\"5aaec45c-5|
              00000090  37 30 62 2d 34 30 30 31  2d 61 39 33 36 2d 38 65  |70b-4001-a936-8e|
              000000a0  65 32 65 32 34 32 38 35  39 62 5c 22 7d 22 3a 7b  |e2e242859b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-985rd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-985rd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-6-59",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0719 12:53:27.749605 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-9759v" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-9759v",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7536",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "38338aa1-98ab-4a1e-931d-7759a2fad6ad",
      ResourceVersion: (string) (len=5) "19804",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888526407,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "5aaec45c-570b-4001-a936-8ee2e242859b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 61  61 65 63 34 35 63 2d 35  |d\":\"5aaec45c-5|
              00000090  37 30 62 2d 34 30 30 31  2d 61 39 33 36 2d 38 65  |70b-4001-a936-8e|
              000000a0  65 32 65 32 34 32 38 35  39 62 5c 22 7d 22 3a 7b  |e2e242859b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hpvkk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hpvkk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0719 12:53:27.751759 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-9bcnf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-9bcnf",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7536",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "85617772-b2d4-42e0-a434-ac5f048e3642",
      ResourceVersion: (string) (len=5) "19766",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888526405,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "5aaec45c-570b-4001-a936-8ee2e242859b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526405,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 61  61 65 63 34 35 63 2d 35  |d\":\"5aaec45c-5|
              00000090  37 30 62 2d 34 30 30 31  2d 61 39 33 36 2d 38 65  |70b-4001-a936-8e|
              000000a0  65 32 65 32 34 32 38 35  39 62 5c 22 7d 22 3a 7b  |e2e242859b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 30 33 2e 31  38 33 5c 22 7d 22 3a 7b  |68.103.183\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4z5bp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4z5bp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-64-234",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526405,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526405,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526405,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526405,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.64.234",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.64.234"
        }
      },
      PodIP: (string) (len=15) "192.168.103.183",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.103.183"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888526405,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-4z5bp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0719 12:53:27.753844 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-dk5r6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-dk5r6",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7536",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "40c19314-2791-40b3-95ff-f84241ae4d38",
      ResourceVersion: (string) (len=5) "19754",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888526405,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "5aaec45c-570b-4001-a936-8ee2e242859b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526405,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 61  61 65 63 34 35 63 2d 35  |d\":\"5aaec45c-5|
              00000090  37 30 62 2d 34 30 30 31  2d 61 39 33 36 2d 38 65  |70b-4001-a936-8e|
              000000a0  65 32 65 32 34 32 38 35  39 62 5c 22 7d 22 3a 7b  |e2e242859b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 32 30 36 2e 32  30 33 5c 22 7d 22 3a 7b  |68.206.203\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zlknm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zlknm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-6-59",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526405,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526405,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526405,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526405,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.6.59",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.6.59"
        }
      },
      PodIP: (string) (len=15) "192.168.206.203",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.206.203"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888526405,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-zlknm",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0719 12:53:27.754968 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-gjb66" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-gjb66",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7536",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8e7ce15f-14d0-4ced-9de5-b405e04757ca",
      ResourceVersion: (string) (len=5) "19802",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888526407,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "5aaec45c-570b-4001-a936-8ee2e242859b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 61  61 65 63 34 35 63 2d 35  |d\":\"5aaec45c-5|
              00000090  37 30 62 2d 34 30 30 31  2d 61 39 33 36 2d 38 65  |70b-4001-a936-8e|
              000000a0  65 32 65 32 34 32 38 35  39 62 5c 22 7d 22 3a 7b  |e2e242859b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jqnls",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jqnls",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0719 12:53:27.756386 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-kz7pp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-kz7pp",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7536",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1110036b-c534-4221-89e5-c0ebef818fa4",
      ResourceVersion: (string) (len=5) "19793",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888526407,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "5aaec45c-570b-4001-a936-8ee2e242859b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 61  61 65 63 34 35 63 2d 35  |d\":\"5aaec45c-5|
              00000090  37 30 62 2d 34 30 30 31  2d 61 39 33 36 2d 38 65  |70b-4001-a936-8e|
              000000a0  65 32 65 32 34 32 38 35  39 62 5c 22 7d 22 3a 7b  |e2e242859b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fnc5c",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fnc5c",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-42-177",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0719 12:53:27.757019 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-lwx9l" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-lwx9l",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7536",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "64455657-66cd-4862-a2ec-d9387c6d6903",
      ResourceVersion: (string) (len=5) "19801",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888526407,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "5aaec45c-570b-4001-a936-8ee2e242859b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 61  61 65 63 34 35 63 2d 35  |d\":\"5aaec45c-5|
              00000090  37 30 62 2d 34 30 30 31  2d 61 39 33 36 2d 38 65  |70b-4001-a936-8e|
              000000a0  65 32 65 32 34 32 38 35  39 62 5c 22 7d 22 3a 7b  |e2e242859b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kn4ss",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kn4ss",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0719 12:53:27.757635 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-svkxm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-svkxm",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7536",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b301130a-f7c8-41ab-b795-3e7b2e71b7ca",
      ResourceVersion: (string) (len=5) "19800",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888526407,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "5aaec45c-570b-4001-a936-8ee2e242859b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 61  61 65 63 34 35 63 2d 35  |d\":\"5aaec45c-5|
              00000090  37 30 62 2d 34 30 30 31  2d 61 39 33 36 2d 38 65  |70b-4001-a936-8e|
              000000a0  65 32 65 32 34 32 38 35  39 62 5c 22 7d 22 3a 7b  |e2e242859b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pgmkg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pgmkg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0719 12:53:27.758294 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-tdrv5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-tdrv5",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7536",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "66920f80-dea6-4525-86f8-fb942d6ac059",
      ResourceVersion: (string) (len=5) "19797",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888526407,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "5aaec45c-570b-4001-a936-8ee2e242859b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 61  61 65 63 34 35 63 2d 35  |d\":\"5aaec45c-5|
              00000090  37 30 62 2d 34 30 30 31  2d 61 39 33 36 2d 38 65  |70b-4001-a936-8e|
              000000a0  65 32 65 32 34 32 38 35  39 62 5c 22 7d 22 3a 7b  |e2e242859b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xmbrp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xmbrp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-64-234",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.64.234",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.64.234"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888526407,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-xmbrp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0719 12:53:27.764024 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-zdpk7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-zdpk7",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7536",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2a56a12c-0f5e-43bf-9433-08d2c54a18a1",
      ResourceVersion: (string) (len=5) "19763",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888526405,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "5aaec45c-570b-4001-a936-8ee2e242859b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526405,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 61  61 65 63 34 35 63 2d 35  |d\":\"5aaec45c-5|
              00000090  37 30 62 2d 34 30 30 31  2d 61 39 33 36 2d 38 65  |70b-4001-a936-8e|
              000000a0  65 32 65 32 34 32 38 35  39 62 5c 22 7d 22 3a 7b  |e2e242859b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 35 36 2e 32  32 34 5c 22 7d 22 3a 7b  |68.156.224\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wdkc5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wdkc5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-42-177",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526405,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526405,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526405,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888526405,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.42.177",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.42.177"
        }
      },
      PodIP: (string) (len=15) "192.168.156.224",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.156.224"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888526405,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wdkc5",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0719 12:53:27.768193 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7536" for this suite. @ 07/19/25 12:53:27.788
• [4.334 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 07/19/25 12:53:27.818
  I0719 12:53:27.818690 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename secrets @ 07/19/25 12:53:27.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:53:27.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:53:27.857
  STEP: Creating secret with name s-test-opt-del-8f744f9d-c07c-471f-a101-73d014affe40 @ 07/19/25 12:53:27.885
  STEP: Creating secret with name s-test-opt-upd-9bc15721-562f-4156-b025-04e57dc0294f @ 07/19/25 12:53:27.892
  STEP: Creating the pod @ 07/19/25 12:53:27.9
  STEP: Deleting secret s-test-opt-del-8f744f9d-c07c-471f-a101-73d014affe40 @ 07/19/25 12:53:29.968
  STEP: Updating secret s-test-opt-upd-9bc15721-562f-4156-b025-04e57dc0294f @ 07/19/25 12:53:29.977
  STEP: Creating secret with name s-test-opt-create-e1acdb65-5f30-41fb-a7ad-a2635c81ee88 @ 07/19/25 12:53:29.982
  STEP: waiting to observe update in volume @ 07/19/25 12:53:29.99
  I0719 12:54:40.386525 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-297" for this suite. @ 07/19/25 12:54:40.392
• [72.581 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 07/19/25 12:54:40.399
  I0719 12:54:40.399538 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename container-probe @ 07/19/25 12:54:40.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:54:40.414
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:54:40.417
  STEP: Creating pod busybox-08849238-ab39-4294-a999-48f0146ddc96 in namespace container-probe-140 @ 07/19/25 12:54:40.421
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/19/25 12:54:42.446
  I0719 12:54:42.450609 21 container_probe.go:1748] Initial restart count of pod busybox-08849238-ab39-4294-a999-48f0146ddc96 is 0
  I0719 12:54:42.454406 21 container_probe.go:1758] Get pod busybox-08849238-ab39-4294-a999-48f0146ddc96 in namespace container-probe-140
  I0719 12:54:44.461089 21 container_probe.go:1758] Get pod busybox-08849238-ab39-4294-a999-48f0146ddc96 in namespace container-probe-140
  I0719 12:54:46.467255 21 container_probe.go:1758] Get pod busybox-08849238-ab39-4294-a999-48f0146ddc96 in namespace container-probe-140
  I0719 12:54:48.473630 21 container_probe.go:1758] Get pod busybox-08849238-ab39-4294-a999-48f0146ddc96 in namespace container-probe-140
  I0719 12:54:50.479640 21 container_probe.go:1758] Get pod busybox-08849238-ab39-4294-a999-48f0146ddc96 in namespace container-probe-140
  I0719 12:54:52.485032 21 container_probe.go:1758] Get pod busybox-08849238-ab39-4294-a999-48f0146ddc96 in namespace container-probe-140
  I0719 12:54:54.490239 21 container_probe.go:1758] Get pod busybox-08849238-ab39-4294-a999-48f0146ddc96 in namespace container-probe-140
  I0719 12:54:56.495775 21 container_probe.go:1758] Get pod busybox-08849238-ab39-4294-a999-48f0146ddc96 in namespace container-probe-140
  I0719 12:54:58.503032 21 container_probe.go:1758] Get pod busybox-08849238-ab39-4294-a999-48f0146ddc96 in namespace container-probe-140
  I0719 12:55:00.509089 21 container_probe.go:1758] Get pod busybox-08849238-ab39-4294-a999-48f0146ddc96 in namespace container-probe-140
  I0719 12:55:02.517990 21 container_probe.go:1758] Get pod busybox-08849238-ab39-4294-a999-48f0146ddc96 in namespace container-probe-140
  I0719 12:55:04.526928 21 container_probe.go:1758] Get pod busybox-08849238-ab39-4294-a999-48f0146ddc96 in namespace container-probe-140
  I0719 12:55:06.535831 21 container_probe.go:1758] Get pod busybox-08849238-ab39-4294-a999-48f0146ddc96 in namespace container-probe-140
  I0719 12:55:08.543088 21 container_probe.go:1758] Get pod busybox-08849238-ab39-4294-a999-48f0146ddc96 in namespace container-probe-140
  I0719 12:55:10.548818 21 container_probe.go:1758] Get pod busybox-08849238-ab39-4294-a999-48f0146ddc96 in namespace container-probe-140
  I0719 12:55:12.555769 21 container_probe.go:1758] Get pod busybox-08849238-ab39-4294-a999-48f0146ddc96 in namespace container-probe-140
  I0719 12:55:14.563292 21 container_probe.go:1758] Get pod busybox-08849238-ab39-4294-a999-48f0146ddc96 in namespace container-probe-140
  I0719 12:55:16.568621 21 container_probe.go:1758] Get pod busybox-08849238-ab39-4294-a999-48f0146ddc96 in namespace container-probe-140
  I0719 12:55:18.575044 21 container_probe.go:1758] Get pod busybox-08849238-ab39-4294-a999-48f0146ddc96 in namespace container-probe-140
  I0719 12:55:20.581303 21 container_probe.go:1758] Get pod busybox-08849238-ab39-4294-a999-48f0146ddc96 in namespace container-probe-140
  I0719 12:55:22.586144 21 container_probe.go:1758] Get pod busybox-08849238-ab39-4294-a999-48f0146ddc96 in namespace container-probe-140
  I0719 12:55:24.592977 21 container_probe.go:1758] Get pod busybox-08849238-ab39-4294-a999-48f0146ddc96 in namespace container-probe-140
  I0719 12:55:26.602545 21 container_probe.go:1758] Get pod busybox-08849238-ab39-4294-a999-48f0146ddc96 in namespace container-probe-140
  I0719 12:55:28.608698 21 container_probe.go:1758] Get pod busybox-08849238-ab39-4294-a999-48f0146ddc96 in namespace container-probe-140
  I0719 12:55:30.615833 21 container_probe.go:1758] Get pod busybox-08849238-ab39-4294-a999-48f0146ddc96 in namespace container-probe-140
  I0719 12:55:32.621138 21 container_probe.go:1758] Get pod busybox-08849238-ab39-4294-a999-48f0146ddc96 in namespace container-probe-140
  I0719 12:55:32.621174 21 container_probe.go:1762] Restart count of pod container-probe-140/busybox-08849238-ab39-4294-a999-48f0146ddc96 is now 1 (50.170542976s elapsed)
  STEP: deleting the pod @ 07/19/25 12:55:32.621
  I0719 12:55:32.642719 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-140" for this suite. @ 07/19/25 12:55:32.649
• [52.258 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:838
  STEP: Creating a kubernetes client @ 07/19/25 12:55:32.657
  I0719 12:55:32.657495 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename svcaccounts @ 07/19/25 12:55:32.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:55:32.672
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:55:32.675
  STEP: Creating ServiceAccount "e2e-sa-2rdcp"  @ 07/19/25 12:55:32.678
  I0719 12:55:32.683205 21 service_accounts.go:853] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-2rdcp"  @ 07/19/25 12:55:32.683
  I0719 12:55:32.697415 21 service_accounts.go:867] AutomountServiceAccountToken: true
  I0719 12:55:32.697511 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-12" for this suite. @ 07/19/25 12:55:32.75
• [0.102 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 07/19/25 12:55:32.759
  I0719 12:55:32.759464 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename container-probe @ 07/19/25 12:55:32.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:55:32.772
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:55:32.776
  STEP: Creating pod liveness-f8cc9705-6db1-4ff8-849d-17b875c29427 in namespace container-probe-7460 @ 07/19/25 12:55:32.779
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/19/25 12:55:34.796
  I0719 12:55:34.800040 21 container_probe.go:1748] Initial restart count of pod liveness-f8cc9705-6db1-4ff8-849d-17b875c29427 is 0
  I0719 12:55:34.806209 21 container_probe.go:1758] Get pod liveness-f8cc9705-6db1-4ff8-849d-17b875c29427 in namespace container-probe-7460
  I0719 12:55:36.813237 21 container_probe.go:1758] Get pod liveness-f8cc9705-6db1-4ff8-849d-17b875c29427 in namespace container-probe-7460
  I0719 12:55:38.819139 21 container_probe.go:1758] Get pod liveness-f8cc9705-6db1-4ff8-849d-17b875c29427 in namespace container-probe-7460
  I0719 12:55:40.826315 21 container_probe.go:1758] Get pod liveness-f8cc9705-6db1-4ff8-849d-17b875c29427 in namespace container-probe-7460
  I0719 12:55:42.832802 21 container_probe.go:1758] Get pod liveness-f8cc9705-6db1-4ff8-849d-17b875c29427 in namespace container-probe-7460
  I0719 12:55:44.840096 21 container_probe.go:1758] Get pod liveness-f8cc9705-6db1-4ff8-849d-17b875c29427 in namespace container-probe-7460
  I0719 12:55:46.846354 21 container_probe.go:1758] Get pod liveness-f8cc9705-6db1-4ff8-849d-17b875c29427 in namespace container-probe-7460
  I0719 12:55:48.851974 21 container_probe.go:1758] Get pod liveness-f8cc9705-6db1-4ff8-849d-17b875c29427 in namespace container-probe-7460
  I0719 12:55:50.857301 21 container_probe.go:1758] Get pod liveness-f8cc9705-6db1-4ff8-849d-17b875c29427 in namespace container-probe-7460
  I0719 12:55:52.864673 21 container_probe.go:1758] Get pod liveness-f8cc9705-6db1-4ff8-849d-17b875c29427 in namespace container-probe-7460
  I0719 12:55:54.871032 21 container_probe.go:1758] Get pod liveness-f8cc9705-6db1-4ff8-849d-17b875c29427 in namespace container-probe-7460
  I0719 12:55:54.871067 21 container_probe.go:1762] Restart count of pod container-probe-7460/liveness-f8cc9705-6db1-4ff8-849d-17b875c29427 is now 1 (20.071000247s elapsed)
  STEP: deleting the pod @ 07/19/25 12:55:54.871
  I0719 12:55:54.889943 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7460" for this suite. @ 07/19/25 12:55:54.894
• [22.144 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 07/19/25 12:55:54.904
  I0719 12:55:54.904405 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename watch @ 07/19/25 12:55:54.904
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:55:54.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:55:54.921
  STEP: creating a watch on configmaps @ 07/19/25 12:55:54.925
  STEP: creating a new configmap @ 07/19/25 12:55:54.926
  STEP: modifying the configmap once @ 07/19/25 12:55:54.932
  STEP: closing the watch once it receives two notifications @ 07/19/25 12:55:54.94
  I0719 12:55:54.940668 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-9075  12749eff-67bf-4539-886a-55df26727af2 20638 0 2025-07-19 12:55:54 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-07-19 12:55:54 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0719 12:55:54.940824 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-9075  12749eff-67bf-4539-886a-55df26727af2 20639 0 2025-07-19 12:55:54 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-07-19 12:55:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 07/19/25 12:55:54.94
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 07/19/25 12:55:54.95
  STEP: deleting the configmap @ 07/19/25 12:55:54.951
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 07/19/25 12:55:54.959
  I0719 12:55:54.959570 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-9075  12749eff-67bf-4539-886a-55df26727af2 20640 0 2025-07-19 12:55:54 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-07-19 12:55:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0719 12:55:54.959684 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-9075  12749eff-67bf-4539-886a-55df26727af2 20641 0 2025-07-19 12:55:54 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-07-19 12:55:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0719 12:55:54.959768 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9075" for this suite. @ 07/19/25 12:55:54.994
• [0.100 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:238
  STEP: Creating a kubernetes client @ 07/19/25 12:55:55.004
  I0719 12:55:55.004735 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/19/25 12:55:55.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:55:55.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:55:55.022
  I0719 12:55:55.026003 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 07/19/25 12:55:56.256
  I0719 12:55:56.256227 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=crd-publish-openapi-9501 --namespace=crd-publish-openapi-9501 create -f -'
  I0719 12:55:58.321629 21 builder.go:146] stderr: ""
  I0719 12:55:58.321672 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4288-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0719 12:55:58.321724 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=crd-publish-openapi-9501 --namespace=crd-publish-openapi-9501 delete e2e-test-crd-publish-openapi-4288-crds test-cr'
  I0719 12:55:58.371123 21 builder.go:146] stderr: ""
  I0719 12:55:58.371163 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4288-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I0719 12:55:58.371205 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=crd-publish-openapi-9501 --namespace=crd-publish-openapi-9501 apply -f -'
  I0719 12:55:58.423382 21 builder.go:146] stderr: ""
  I0719 12:55:58.423421 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4288-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0719 12:55:58.423464 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=crd-publish-openapi-9501 --namespace=crd-publish-openapi-9501 delete e2e-test-crd-publish-openapi-4288-crds test-cr'
  I0719 12:55:58.471456 21 builder.go:146] stderr: ""
  I0719 12:55:58.471494 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4288-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 07/19/25 12:55:58.471
  I0719 12:55:58.471561 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=crd-publish-openapi-9501 explain e2e-test-crd-publish-openapi-4288-crds'
  I0719 12:55:58.510711 21 builder.go:146] stderr: ""
  I0719 12:55:58.510757 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-4288-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0719 12:55:59.792659 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9501" for this suite. @ 07/19/25 12:55:59.802
• [4.806 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 07/19/25 12:55:59.81
  I0719 12:55:59.810725 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename pods @ 07/19/25 12:55:59.811
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:55:59.823
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:55:59.825
  I0719 12:55:59.827919 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: creating the pod @ 07/19/25 12:55:59.828
  STEP: submitting the pod to kubernetes @ 07/19/25 12:55:59.828
  STEP: waiting for the container to be running @ 07/19/25 12:56:01.858
  I0719 12:56:01.886452 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8363" for this suite. @ 07/19/25 12:56:01.892
• [2.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:114
  STEP: Creating a kubernetes client @ 07/19/25 12:56:01.899
  I0719 12:56:01.899855 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename replication-controller @ 07/19/25 12:56:01.9
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:56:01.914
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:56:01.918
  STEP: creating a ReplicationController @ 07/19/25 12:56:01.927
  STEP: waiting for RC to be added @ 07/19/25 12:56:01.936
  STEP: waiting for available Replicas @ 07/19/25 12:56:01.936
  STEP: patching ReplicationController @ 07/19/25 12:56:02.73
  STEP: waiting for RC to be modified @ 07/19/25 12:56:02.737
  STEP: patching ReplicationController status @ 07/19/25 12:56:02.738
  STEP: waiting for RC to be modified @ 07/19/25 12:56:02.744
  STEP: waiting for available Replicas @ 07/19/25 12:56:02.744
  STEP: fetching ReplicationController status @ 07/19/25 12:56:02.751
  STEP: patching ReplicationController scale @ 07/19/25 12:56:02.757
  STEP: waiting for RC to be modified @ 07/19/25 12:56:02.764
  STEP: waiting for ReplicationController's scale to be the max amount @ 07/19/25 12:56:02.765
  STEP: fetching ReplicationController; ensuring that it's patched @ 07/19/25 12:56:03.895
  STEP: updating ReplicationController status @ 07/19/25 12:56:03.899
  STEP: waiting for RC to be modified @ 07/19/25 12:56:03.907
  STEP: listing all ReplicationControllers @ 07/19/25 12:56:03.907
  STEP: checking that ReplicationController has expected values @ 07/19/25 12:56:03.911
  STEP: deleting ReplicationControllers by collection @ 07/19/25 12:56:03.911
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 07/19/25 12:56:03.923
  I0719 12:56:03.979240 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0719 12:56:03.979335      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-2008" for this suite. @ 07/19/25 12:56:03.983
• [2.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 07/19/25 12:56:03.992
  I0719 12:56:03.992168 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename init-container @ 07/19/25 12:56:03.992
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:56:04.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:56:04.01
  STEP: creating the pod @ 07/19/25 12:56:04.013
  I0719 12:56:04.013199 21 init_container.go:374] PodSpec: initContainers in spec.initContainers
  E0719 12:56:04.979816      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:56:05.980337      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:56:06.980583      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:56:07.980668      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:56:08.980805      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:56:09.980936      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:56:10.981150      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:56:11.981243      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:56:12.981383      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:56:13.981547      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:56:14.981753      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:56:15.981858      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:56:16.982045      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:56:17.982850      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:56:18.983104      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:56:19.983368      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:56:20.983638      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:56:21.983821      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:56:22.983889      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:56:23.984046      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:56:24.984575      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:56:25.984648      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:56:26.984739      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:56:27.985561      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:56:28.985667      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:56:29.985717      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:56:30.986561      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:56:31.986648      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:56:32.987541      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:56:33.987634      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:56:34.987725      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:56:35.988538      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:56:36.988714      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:56:37.988798      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:56:38.989543      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:56:39.990542      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:56:40.991531      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:56:41.991710      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:56:42.992547      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:56:43.992734      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 12:56:44.956840 21 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-ff31b8e1-1c5b-43d9-b4fd-da68cb417ff6", GenerateName:"", Namespace:"init-container-5843", SelfLink:"", UID:"74d17636-997b-4456-8812-2a77af1e8629", ResourceVersion:"20942", Generation:1, CreationTimestamp:time.Date(2025, time.July, 19, 12, 56, 4, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"13192691"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 12, 56, 4, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004020a20), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 12, 56, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004020a50), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-c28pb", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc0015c86c0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-c28pb", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-c28pb", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-c28pb", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc00088ef88), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-42-177", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc003021200), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc00088f010)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc00088f030)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc00088f038), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc00088f03c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc000fb4f30), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil), Resources:(*v1.ResourceRequirements)(nil)}, Status:v1.PodStatus{ObservedGeneration:0, Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", ObservedGeneration:0, Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.July, 19, 12, 56, 4, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.July, 19, 12, 56, 4, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.July, 19, 12, 56, 4, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.July, 19, 12, 56, 4, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", ObservedGeneration:0, Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.July, 19, 12, 56, 4, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.42.177", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.31.42.177"}}, PodIP:"192.168.156.218", PodIPs:[]v1.PodIP{v1.PodIP{IP:"192.168.156.218"}}, StartTime:time.Date(2025, time.July, 19, 12, 56, 4, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0003c3110)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0003c3180)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://2a85cac16b170d865f2c41a343c03bc28420a3d277c28745df676d58bf3b9c90", Started:(*bool)(0xc00088f0fa), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(0xc002fa61b0), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-c28pb", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc000fb4f50)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0015c8720), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc00088f10d), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-c28pb", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc000fb4f60)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0015c8700), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc00088f0b4), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-c28pb", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc000fb4f40)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I0719 12:56:44.957012 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5843" for this suite. @ 07/19/25 12:56:44.962
• [40.979 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1464
  STEP: Creating a kubernetes client @ 07/19/25 12:56:44.971
  I0719 12:56:44.971308 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename services @ 07/19/25 12:56:44.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:56:44.984
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:56:44.987
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-8611 @ 07/19/25 12:56:44.99
  E0719 12:56:44.992740      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 07/19/25 12:56:45.012
  STEP: creating service externalsvc in namespace services-8611 @ 07/19/25 12:56:45.012
  I0719 12:56:45.044156 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0719 12:56:45.993588      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:56:46.993796      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: changing the ClusterIP service to type=ExternalName @ 07/19/25 12:56:47.063
  I0719 12:56:47.085100 21 resource.go:361] Creating new exec pod
  E0719 12:56:47.993925      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:56:48.994034      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 12:56:49.109479 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-8611 exec execpod2lxp8 -- /bin/sh -x -c nslookup clusterip-service.services-8611.svc.cluster.local'
  I0719 12:56:49.227872 21 builder.go:146] stderr: "+ nslookup clusterip-service.services-8611.svc.cluster.local\n"
  I0719 12:56:49.227911 21 builder.go:147] stdout: "Server:\t\t10.152.183.201\nAddress:\t10.152.183.201#53\n\nclusterip-service.services-8611.svc.cluster.local\tcanonical name = externalsvc.services-8611.svc.cluster.local.\nName:\texternalsvc.services-8611.svc.cluster.local\nAddress: 10.152.183.86\n\n"
  I0719 12:56:49.264423 21 service.go:1473] Cleaning up the ClusterIP to ExternalName test service
  I0719 12:56:49.276858 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8611" for this suite. @ 07/19/25 12:56:49.281
• [4.319 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 07/19/25 12:56:49.29
  I0719 12:56:49.290121 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename crd-webhook @ 07/19/25 12:56:49.29
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:56:49.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:56:49.31
  STEP: Setting up server cert @ 07/19/25 12:56:49.313
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 07/19/25 12:56:49.548
  STEP: Deploying the custom resource conversion webhook pod @ 07/19/25 12:56:49.554
  STEP: Wait for the deployment to be ready @ 07/19/25 12:56:49.568
  I0719 12:56:49.577629 21 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0719 12:56:49.994233      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:56:50.994186      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/19/25 12:56:51.592
  STEP: Verifying the service has paired with the endpoint @ 07/19/25 12:56:51.613
  E0719 12:56:51.995028      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 12:56:52.614334 21 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0719 12:56:52.621210 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  E0719 12:56:52.995334      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:56:53.996077      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:56:54.996845      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 07/19/25 12:56:55.175
  STEP: Create a v2 custom resource @ 07/19/25 12:56:55.193
  STEP: List CRs in v1 @ 07/19/25 12:56:55.218
  STEP: List CRs in v2 @ 07/19/25 12:56:55.221
  I0719 12:56:55.790998 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-6525" for this suite. @ 07/19/25 12:56:55.795
• [6.516 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1426
  STEP: Creating a kubernetes client @ 07/19/25 12:56:55.806
  I0719 12:56:55.806387 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename services @ 07/19/25 12:56:55.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:56:55.821
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:56:55.824
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-7215 @ 07/19/25 12:56:55.827
  STEP: changing the ExternalName service to type=NodePort @ 07/19/25 12:56:55.831
  I0719 12:56:55.876581 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0719 12:56:55.997893      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:56:56.998572      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 12:56:57.882262 21 resource.go:361] Creating new exec pod
  E0719 12:56:57.999254      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:56:58.999456      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 12:56:59.915266 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-7215 exec execpoddqbdf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0719 12:56:59.995586 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.152.183.43) 80 port [tcp/http] succeeded!\n"
  I0719 12:56:59.995623 21 builder.go:147] stdout: "externalname-service-69b5769dc-7nnhr"
  I0719 12:56:59.995690 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-7215 exec execpoddqbdf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.43 80'
  E0719 12:56:59.999991      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 12:57:00.075150 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.43 80\nConnection to 10.152.183.43 80 port [tcp/http] succeeded!\n"
  I0719 12:57:00.075193 21 builder.go:147] stdout: ""
  I0719 12:57:00.995802 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-7215 exec execpoddqbdf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.43 80'
  E0719 12:57:01.000238      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 12:57:01.081574 21 builder.go:146] stderr: "+ + ncecho -v hostName -t\n -w 2 10.152.183.43 80\nConnection to 10.152.183.43 80 port [tcp/http] succeeded!\n"
  I0719 12:57:01.081610 21 builder.go:147] stdout: ""
  I0719 12:57:01.996442 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-7215 exec execpoddqbdf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.43 80'
  E0719 12:57:02.000832      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 12:57:02.077428 21 builder.go:146] stderr: "+ + nc -v -t -w 2 10.152.183.43 80\necho hostName\nConnection to 10.152.183.43 80 port [tcp/http] succeeded!\n"
  I0719 12:57:02.077481 21 builder.go:147] stdout: "externalname-service-69b5769dc-7ntlm"
  I0719 12:57:02.077609 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-7215 exec execpoddqbdf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.64.234 31518'
  I0719 12:57:02.159729 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.64.234 31518\nConnection to 172.31.64.234 31518 port [tcp/*] succeeded!\n"
  I0719 12:57:02.159776 21 builder.go:147] stdout: "externalname-service-69b5769dc-7ntlm"
  I0719 12:57:02.159933 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-7215 exec execpoddqbdf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.6.59 31518'
  I0719 12:57:02.241706 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.6.59 31518\nConnection to 172.31.6.59 31518 port [tcp/*] succeeded!\n"
  I0719 12:57:02.241744 21 builder.go:147] stdout: "externalname-service-69b5769dc-7ntlm"
  I0719 12:57:02.241825 21 service.go:1435] Cleaning up the ExternalName to NodePort test service
  I0719 12:57:02.276681 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7215" for this suite. @ 07/19/25 12:57:02.282
• [6.485 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:431
  STEP: Creating a kubernetes client @ 07/19/25 12:57:02.291
  I0719 12:57:02.291649 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename security-context-test @ 07/19/25 12:57:02.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:57:02.306
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:57:02.311
  E0719 12:57:03.000990      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:57:04.001039      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:57:05.001121      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:57:06.001201      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 12:57:06.358161 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2945" for this suite. @ 07/19/25 12:57:06.364
• [4.082 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 07/19/25 12:57:06.373
  I0719 12:57:06.373362 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename webhook @ 07/19/25 12:57:06.373
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:57:06.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:57:06.389
  STEP: Setting up server cert @ 07/19/25 12:57:06.41
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/19/25 12:57:06.688
  STEP: Deploying the webhook pod @ 07/19/25 12:57:06.694
  STEP: Wait for the deployment to be ready @ 07/19/25 12:57:06.704
  I0719 12:57:06.716132 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0719 12:57:07.001335      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:57:08.001553      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/19/25 12:57:08.73
  STEP: Verifying the service has paired with the endpoint @ 07/19/25 12:57:08.747
  E0719 12:57:09.002573      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 12:57:09.748606 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 07/19/25 12:57:09.754
  STEP: verifying the mutating webhook match conditions @ 07/19/25 12:57:09.763
  STEP: updating the mutating webhook match conditions @ 07/19/25 12:57:09.767
  STEP: verifying the mutating webhook match conditions @ 07/19/25 12:57:09.781
  I0719 12:57:09.844729 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7905" for this suite. @ 07/19/25 12:57:09.848
  STEP: Destroying namespace "webhook-markers-7872" for this suite. @ 07/19/25 12:57:09.857
• [3.492 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 07/19/25 12:57:09.867
  I0719 12:57:09.867415 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename container-probe @ 07/19/25 12:57:09.867
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:57:09.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:57:09.881
  E0719 12:57:10.002674      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:57:11.002756      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:57:12.002827      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:57:13.003615      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:57:14.003912      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:57:15.004001      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:57:16.004475      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:57:17.004552      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:57:18.004645      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:57:19.004897      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:57:20.005037      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:57:21.005139      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:57:22.005980      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:57:23.006052      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:57:24.006360      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:57:25.006501      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:57:26.006964      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:57:27.007022      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:57:28.007282      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:57:29.007431      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:57:30.008150      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:57:31.008256      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 12:57:31.962489 21 container_probe.go:91] Container started at 2025-07-19 12:57:10 +0000 UTC, pod became ready at 2025-07-19 12:57:31 +0000 UTC
  I0719 12:57:31.962606 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6384" for this suite. @ 07/19/25 12:57:31.967
• [22.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1504
  STEP: Creating a kubernetes client @ 07/19/25 12:57:31.975
  I0719 12:57:31.975731 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename services @ 07/19/25 12:57:31.976
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:57:31.988
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:57:31.99
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-6533 @ 07/19/25 12:57:31.993
  E0719 12:57:32.008715      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 07/19/25 12:57:32.017
  STEP: creating service externalsvc in namespace services-6533 @ 07/19/25 12:57:32.017
  I0719 12:57:32.052130 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0719 12:57:33.009230      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:57:34.009461      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: changing the NodePort service to type=ExternalName @ 07/19/25 12:57:34.07
  I0719 12:57:34.104207 21 resource.go:361] Creating new exec pod
  E0719 12:57:35.009541      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:57:36.009625      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 12:57:36.125608 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-6533 exec execpodzx455 -- /bin/sh -x -c nslookup nodeport-service.services-6533.svc.cluster.local'
  I0719 12:57:36.237786 21 builder.go:146] stderr: "+ nslookup nodeport-service.services-6533.svc.cluster.local\n"
  I0719 12:57:36.237834 21 builder.go:147] stdout: "Server:\t\t10.152.183.201\nAddress:\t10.152.183.201#53\n\nnodeport-service.services-6533.svc.cluster.local\tcanonical name = externalsvc.services-6533.svc.cluster.local.\nName:\texternalsvc.services-6533.svc.cluster.local\nAddress: 10.152.183.35\n\n"
  I0719 12:57:36.278650 21 service.go:1515] Cleaning up the NodePort to ExternalName test service
  I0719 12:57:36.297956 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6533" for this suite. @ 07/19/25 12:57:36.303
• [4.336 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 07/19/25 12:57:36.311
  I0719 12:57:36.311949 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename ingress @ 07/19/25 12:57:36.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:57:36.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:57:36.325
  STEP: getting /apis @ 07/19/25 12:57:36.328
  STEP: getting /apis/networking.k8s.io @ 07/19/25 12:57:36.331
  STEP: getting /apis/networking.k8s.iov1 @ 07/19/25 12:57:36.332
  STEP: creating @ 07/19/25 12:57:36.333
  STEP: getting @ 07/19/25 12:57:36.355
  STEP: listing @ 07/19/25 12:57:36.361
  STEP: watching @ 07/19/25 12:57:36.37
  I0719 12:57:36.370625 21 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 07/19/25 12:57:36.371
  STEP: cluster-wide watching @ 07/19/25 12:57:36.374
  I0719 12:57:36.374831 21 ingress.go:198] starting watch
  STEP: patching @ 07/19/25 12:57:36.376
  STEP: updating @ 07/19/25 12:57:36.384
  I0719 12:57:36.397134 21 ingress.go:221] waiting for watch events with expected annotations
  I0719 12:57:36.397175 21 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 07/19/25 12:57:36.397
  STEP: updating /status @ 07/19/25 12:57:36.405
  STEP: get /status @ 07/19/25 12:57:36.415
  STEP: deleting @ 07/19/25 12:57:36.421
  STEP: deleting a collection @ 07/19/25 12:57:36.471
  I0719 12:57:36.491509 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-1423" for this suite. @ 07/19/25 12:57:36.496
• [0.192 seconds]
------------------------------
SS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 07/19/25 12:57:36.504
  I0719 12:57:36.504101 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename var-expansion @ 07/19/25 12:57:36.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:57:36.515
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:57:36.518
  STEP: creating the pod @ 07/19/25 12:57:36.521
  STEP: waiting for pod running @ 07/19/25 12:57:36.531
  E0719 12:57:37.009752      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:57:38.009869      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 07/19/25 12:57:38.541
  I0719 12:57:38.545534 21 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-5214 PodName:var-expansion-418d2d7c-eb60-4e2a-8385-b6662d2ea145 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0719 12:57:38.545560 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0719 12:57:38.545596 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/var-expansion-5214/pods/var-expansion-418d2d7c-eb60-4e2a-8385-b6662d2ea145/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  I0719 12:57:38.592530 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: test for file in mounted path @ 07/19/25 12:57:38.592
  I0719 12:57:38.596790 21 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-5214 PodName:var-expansion-418d2d7c-eb60-4e2a-8385-b6662d2ea145 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0719 12:57:38.596805 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0719 12:57:38.596841 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/var-expansion-5214/pods/var-expansion-418d2d7c-eb60-4e2a-8385-b6662d2ea145/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  I0719 12:57:38.630619 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: updating the annotation value @ 07/19/25 12:57:38.63
  E0719 12:57:39.010188      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 12:57:39.146392 21 pod_client.go:173] Successfully updated pod "var-expansion-418d2d7c-eb60-4e2a-8385-b6662d2ea145"
  STEP: waiting for annotated pod running @ 07/19/25 12:57:39.146
  STEP: deleting the pod gracefully @ 07/19/25 12:57:39.151
  I0719 12:57:39.151025 21 delete.go:62] Deleting pod "var-expansion-418d2d7c-eb60-4e2a-8385-b6662d2ea145" in namespace "var-expansion-5214"
  I0719 12:57:39.160409 21 delete.go:70] Wait up to 5m0s for pod "var-expansion-418d2d7c-eb60-4e2a-8385-b6662d2ea145" to be fully deleted
  E0719 12:57:40.011102      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:57:41.011578      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:57:42.011703      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:57:43.011879      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:57:44.012059      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:57:45.012148      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:57:46.012291      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:57:47.012400      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:57:48.012512      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:57:49.013112      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:57:50.013236      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:57:51.013324      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:57:52.013466      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:57:53.013678      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:57:54.013850      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:57:55.014059      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:57:56.014201      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:57:57.014365      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:57:58.014732      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:57:59.014895      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:58:00.015188      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:58:01.015665      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:58:02.016146      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:58:03.016651      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:58:04.016882      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:58:05.016900      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:58:06.017557      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:58:07.019508      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:58:08.019587      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:58:09.020044      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:58:10.020538      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:58:11.020661      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 12:58:11.261766 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5214" for this suite. @ 07/19/25 12:58:11.268
• [34.771 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 07/19/25 12:58:11.275
  I0719 12:58:11.275814 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename webhook @ 07/19/25 12:58:11.276
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:58:11.29
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:58:11.292
  STEP: Setting up server cert @ 07/19/25 12:58:11.308
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/19/25 12:58:11.541
  STEP: Deploying the webhook pod @ 07/19/25 12:58:11.549
  STEP: Wait for the deployment to be ready @ 07/19/25 12:58:11.564
  I0719 12:58:11.576191 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0719 12:58:12.021561      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:58:13.021621      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/19/25 12:58:13.59
  STEP: Verifying the service has paired with the endpoint @ 07/19/25 12:58:13.607
  E0719 12:58:14.022107      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 12:58:14.609457 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0719 12:58:14.615515 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  E0719 12:58:15.022197      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7308-crds.webhook.example.com via the AdmissionRegistration API @ 07/19/25 12:58:15.126
  STEP: Creating a custom resource that should be mutated by the webhook @ 07/19/25 12:58:15.143
  E0719 12:58:16.022518      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:58:17.022600      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 12:58:17.749201 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4564" for this suite. @ 07/19/25 12:58:17.754
  STEP: Destroying namespace "webhook-markers-2059" for this suite. @ 07/19/25 12:58:17.76
• [6.493 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 07/19/25 12:58:17.769
  I0719 12:58:17.769175 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename pod-network-test @ 07/19/25 12:58:17.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:58:17.782
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:58:17.785
  STEP: Performing setup for networking test in namespace pod-network-test-1157 @ 07/19/25 12:58:17.789
  STEP: creating a selector @ 07/19/25 12:58:17.789
  STEP: Creating the service pods in kubernetes @ 07/19/25 12:58:17.789
  I0719 12:58:17.789374 21 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0719 12:58:18.023300      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:58:19.023452      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:58:20.023618      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:58:21.023710      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:58:22.024320      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:58:23.024508      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:58:24.025016      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:58:25.025095      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:58:26.025556      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:58:27.025633      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:58:28.026322      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:58:29.027137      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:58:30.028179      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:58:31.028261      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 07/19/25 12:58:31.953
  E0719 12:58:32.029315      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:58:33.029482      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 12:58:33.972502 21 utils.go:802] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0719 12:58:33.972535 21 networking.go:42] Breadth first check of 192.168.156.203 on host 172.31.42.177...
  I0719 12:58:33.975743 21 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.206.221:9080/dial?request=hostname&protocol=http&host=192.168.156.203&port=8083&tries=1'] Namespace:pod-network-test-1157 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0719 12:58:33.975776 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0719 12:58:33.975813 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1157/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.206.221%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.156.203%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0719 12:58:34.012757 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0719 12:58:34.012807 21 utils.go:355] Waiting for responses: map[]
  I0719 12:58:34.012816 21 utils.go:359] reached 192.168.156.203 after 0/1 tries
  I0719 12:58:34.012830 21 networking.go:42] Breadth first check of 192.168.206.235 on host 172.31.6.59...
  I0719 12:58:34.018498 21 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.206.221:9080/dial?request=hostname&protocol=http&host=192.168.206.235&port=8083&tries=1'] Namespace:pod-network-test-1157 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0719 12:58:34.018515 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0719 12:58:34.018557 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1157/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.206.221%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.206.235%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  E0719 12:58:34.030237      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 12:58:34.055849 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0719 12:58:34.055892 21 utils.go:355] Waiting for responses: map[]
  I0719 12:58:34.055900 21 utils.go:359] reached 192.168.206.235 after 0/1 tries
  I0719 12:58:34.055906 21 networking.go:42] Breadth first check of 192.168.103.184 on host 172.31.64.234...
  I0719 12:58:34.059449 21 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.206.221:9080/dial?request=hostname&protocol=http&host=192.168.103.184&port=8083&tries=1'] Namespace:pod-network-test-1157 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0719 12:58:34.059463 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0719 12:58:34.059499 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1157/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.206.221%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.103.184%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0719 12:58:34.102279 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0719 12:58:34.102316 21 utils.go:355] Waiting for responses: map[]
  I0719 12:58:34.102324 21 utils.go:359] reached 192.168.103.184 after 0/1 tries
  I0719 12:58:34.102331 21 networking.go:53] Going to retry 0 out of 3 pods....
  I0719 12:58:34.102439 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-1157" for this suite. @ 07/19/25 12:58:34.109
• [16.349 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:163
  STEP: Creating a kubernetes client @ 07/19/25 12:58:34.118
  I0719 12:58:34.118141 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename projected @ 07/19/25 12:58:34.118
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:58:34.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:58:34.135
  STEP: Creating the pod @ 07/19/25 12:58:34.138
  E0719 12:58:35.030420      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:58:36.030644      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 12:58:36.696326 21 pod_client.go:173] Successfully updated pod "annotationupdate3e9cb3cb-a3f8-4fb0-a5ff-ca0a1a4a200f"
  E0719 12:58:37.030851      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:58:38.031073      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:58:39.032074      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:58:40.032237      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 12:58:40.725151 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3204" for this suite. @ 07/19/25 12:58:40.729
• [6.619 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:504
  STEP: Creating a kubernetes client @ 07/19/25 12:58:40.737
  I0719 12:58:40.737567 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename configmap @ 07/19/25 12:58:40.738
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:58:40.75
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:58:40.752
  I0719 12:58:40.800849 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6249" for this suite. @ 07/19/25 12:58:40.831
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 07/19/25 12:58:40.839
  I0719 12:58:40.839811 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename daemonsets @ 07/19/25 12:58:40.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:58:40.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:58:40.857
  STEP: Creating simple DaemonSet "daemon-set" @ 07/19/25 12:58:40.944
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/19/25 12:58:40.951
  E0719 12:58:41.032729      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 12:58:41.032971 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-3-129 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 12:58:41.033010 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-39-138 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 12:58:41.038221 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0719 12:58:41.038240 21 fixtures.go:131] Node ip-172-31-42-177 is running 0 daemon pod, expected 1
  I0719 12:58:41.958957 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-3-129 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 12:58:41.958996 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-39-138 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 12:58:41.963650 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0719 12:58:41.963670 21 fixtures.go:131] Node ip-172-31-42-177 is running 0 daemon pod, expected 1
  E0719 12:58:42.032758      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 12:58:42.959385 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-3-129 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 12:58:42.959423 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-39-138 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 12:58:42.964246 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0719 12:58:42.964267 21 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 07/19/25 12:58:42.968
  STEP: DeleteCollection of the DaemonSets @ 07/19/25 12:58:42.973
  STEP: Verify that ReplicaSets have been deleted @ 07/19/25 12:58:42.984
  I0719 12:58:42.994313 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"22152"},"items":null}

  I0719 12:58:43.001966 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"22153"},"items":[{"metadata":{"name":"daemon-set-4j2rd","generateName":"daemon-set-","namespace":"daemonsets-1657","uid":"c4c61e76-c1ed-4289-a7ca-3f4629f2ee09","resourceVersion":"22149","generation":1,"creationTimestamp":"2025-07-19T12:58:40Z","labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"3052822b-a56a-4dfa-bd28-354dd0200a98","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-07-19T12:58:40Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"3052822b-a56a-4dfa-bd28-354dd0200a98\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-07-19T12:58:42Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.103.185\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-k76mn","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-k76mn","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-64-234","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-64-234"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-19T12:58:42Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-19T12:58:40Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-19T12:58:42Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-19T12:58:42Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-19T12:58:40Z"}],"hostIP":"172.31.64.234","hostIPs":[{"ip":"172.31.64.234"}],"podIP":"192.168.103.185","podIPs":[{"ip":"192.168.103.185"}],"startTime":"2025-07-19T12:58:40Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-07-19T12:58:41Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://0206170534822a27bf4b708efa6bbc6fa5ef52048067bc819a308a8b70b6becd","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-k76mn","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-92rct","generateName":"daemon-set-","namespace":"daemonsets-1657","uid":"c583309a-cc9e-4cbb-a4e0-4b87be8c813a","resourceVersion":"22153","generation":2,"creationTimestamp":"2025-07-19T12:58:40Z","deletionTimestamp":"2025-07-19T12:59:12Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"3052822b-a56a-4dfa-bd28-354dd0200a98","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-07-19T12:58:40Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"3052822b-a56a-4dfa-bd28-354dd0200a98\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-07-19T12:58:42Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.156.215\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-tqc9f","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-tqc9f","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-42-177","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-42-177"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-19T12:58:42Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-19T12:58:40Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-19T12:58:42Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-19T12:58:42Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-19T12:58:40Z"}],"hostIP":"172.31.42.177","hostIPs":[{"ip":"172.31.42.177"}],"podIP":"192.168.156.215","podIPs":[{"ip":"192.168.156.215"}],"startTime":"2025-07-19T12:58:40Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-07-19T12:58:41Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://228f74275b88044bd043e607d77900eeaf0c469cd1283272c25d3c4fca8085c0","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-tqc9f","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-prmrp","generateName":"daemon-set-","namespace":"daemonsets-1657","uid":"b3bf9c3a-d15f-456d-8acd-048e53b0ae7c","resourceVersion":"22144","generation":1,"creationTimestamp":"2025-07-19T12:58:40Z","labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"3052822b-a56a-4dfa-bd28-354dd0200a98","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-07-19T12:58:40Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"3052822b-a56a-4dfa-bd28-354dd0200a98\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-07-19T12:58:42Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.206.237\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-2z25r","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-2z25r","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-6-59","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-6-59"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-19T12:58:41Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-19T12:58:41Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-19T12:58:41Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-19T12:58:41Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-19T12:58:40Z"}],"hostIP":"172.31.6.59","hostIPs":[{"ip":"172.31.6.59"}],"podIP":"192.168.206.237","podIPs":[{"ip":"192.168.206.237"}],"startTime":"2025-07-19T12:58:41Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-07-19T12:58:41Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://55850910b0f3c4141819878b6ff7b6208d450a6d070cfe87ac991f0d17317a0b","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-2z25r","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}}]}

  E0719 12:58:43.033106      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 12:58:43.072585 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1657" for this suite. @ 07/19/25 12:58:43.077
• [2.246 seconds]
------------------------------
S
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:42
  STEP: Creating a kubernetes client @ 07/19/25 12:58:43.085
  I0719 12:58:43.085807 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename containers @ 07/19/25 12:58:43.086
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:58:43.098
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:58:43.101
  E0719 12:58:44.034113      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:58:45.034325      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 12:58:45.146640 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-6896" for this suite. @ 07/19/25 12:58:45.151
• [2.074 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:335
  STEP: Creating a kubernetes client @ 07/19/25 12:58:45.159
  I0719 12:58:45.159497 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename resourcequota @ 07/19/25 12:58:45.159
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:58:45.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:58:45.176
  E0719 12:58:46.035005      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:58:47.035635      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:58:48.035723      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:58:49.036093      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:58:50.036270      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:58:51.036379      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:58:52.036495      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:58:53.036599      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:58:54.037056      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:58:55.037499      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:58:56.037597      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:58:57.037692      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:58:58.038038      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:58:59.039105      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:59:00.039805      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:59:01.040013      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:59:02.040124      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 07/19/25 12:59:02.188
  E0719 12:59:03.040934      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:59:04.041732      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:59:05.042464      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:59:06.042553      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:59:07.042697      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/19/25 12:59:07.193
  STEP: Ensuring resource quota status is calculated @ 07/19/25 12:59:07.2
  E0719 12:59:08.043166      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:59:09.044093      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 07/19/25 12:59:09.206
  STEP: Ensuring resource quota status captures configMap creation @ 07/19/25 12:59:09.218
  E0719 12:59:10.044858      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:59:11.044955      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 07/19/25 12:59:11.225
  STEP: Ensuring resource quota status released usage @ 07/19/25 12:59:11.235
  E0719 12:59:12.045089      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:59:13.046102      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 12:59:13.239949 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4276" for this suite. @ 07/19/25 12:59:13.245
• [28.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 07/19/25 12:59:13.254
  I0719 12:59:13.254478 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename endpointslice @ 07/19/25 12:59:13.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:59:13.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:59:13.272
  I0719 12:59:13.295936      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  E0719 12:59:14.047061      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:59:15.047180      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 12:59:15.302330      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0719 12:59:15.340719      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0719 12:59:15.408239 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5011" for this suite. @ 07/19/25 12:59:15.414
• [2.169 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 07/19/25 12:59:15.423
  I0719 12:59:15.423456 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename replicaset @ 07/19/25 12:59:15.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:59:15.439
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:59:15.441
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 07/19/25 12:59:15.444
  E0719 12:59:16.048221      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:59:17.048372      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 07/19/25 12:59:17.468
  STEP: Then the orphan pod is adopted @ 07/19/25 12:59:17.477
  E0719 12:59:18.049272      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 07/19/25 12:59:18.486
  I0719 12:59:18.491210 21 resource.go:81] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 07/19/25 12:59:18.502
  E0719 12:59:19.049780      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 12:59:19.513611 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3770" for this suite. @ 07/19/25 12:59:19.519
• [4.106 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:131
  STEP: Creating a kubernetes client @ 07/19/25 12:59:19.529
  I0719 12:59:19.529392 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename dns @ 07/19/25 12:59:19.529
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:59:19.543
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:59:19.547
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-1244.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-1.dns-test-service.dns-1244.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/agnhost_hosts@dns-querier-1;sleep 1; done
   @ 07/19/25 12:59:19.55
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-1244.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-1244.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 07/19/25 12:59:19.55
  STEP: creating a pod to probe /etc/hosts @ 07/19/25 12:59:19.55
  STEP: submitting the pod to kubernetes @ 07/19/25 12:59:19.55
  E0719 12:59:20.049871      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:59:21.049970      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:59:22.050623      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:59:23.050676      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/19/25 12:59:23.58
  STEP: looking for the results for each expected name from probers @ 07/19/25 12:59:23.585
  I0719 12:59:23.604749 21 dns_common.go:546] DNS probes using dns-1244/dns-test-95047f39-004f-46b4-9311-63bc93a39dcd succeeded

  STEP: deleting the pod @ 07/19/25 12:59:23.604
  I0719 12:59:23.617627 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1244" for this suite. @ 07/19/25 12:59:23.623
• [4.104 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:133
  STEP: Creating a kubernetes client @ 07/19/25 12:59:23.633
  I0719 12:59:23.633133 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename runtimeclass @ 07/19/25 12:59:23.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:59:23.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:59:23.648
  I0719 12:59:23.685049 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4372" for this suite. @ 07/19/25 12:59:23.724
• [0.102 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 07/19/25 12:59:23.734
  I0719 12:59:23.735011 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename disruption @ 07/19/25 12:59:23.735
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:59:23.745
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:59:23.747
  STEP: Creating a pdb that targets all three pods in a test replica set @ 07/19/25 12:59:23.749
  STEP: Waiting for the pdb to be processed @ 07/19/25 12:59:23.757
  E0719 12:59:24.051102      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:59:25.051302      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 07/19/25 12:59:25.771
  STEP: Waiting for all pods to be running @ 07/19/25 12:59:25.771
  I0719 12:59:25.776814 21 disruption.go:680] pods: 0 < 3
  E0719 12:59:26.052312      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:59:27.052626      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 07/19/25 12:59:27.777
  STEP: Updating the pdb to allow a pod to be evicted @ 07/19/25 12:59:27.79
  STEP: Waiting for the pdb to be processed @ 07/19/25 12:59:27.801
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 07/19/25 12:59:27.805
  STEP: Waiting for all pods to be running @ 07/19/25 12:59:27.805
  STEP: Waiting for the pdb to observed all healthy pods @ 07/19/25 12:59:27.878
  STEP: Patching the pdb to disallow a pod to be evicted @ 07/19/25 12:59:27.912
  STEP: Waiting for the pdb to be processed @ 07/19/25 12:59:27.938
  STEP: Waiting for all pods to be running @ 07/19/25 12:59:27.946
  I0719 12:59:27.952196 21 disruption.go:691] running pods: 2 < 3
  E0719 12:59:28.053392      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:59:29.053505      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 07/19/25 12:59:29.952
  STEP: Deleting the pdb to allow a pod to be evicted @ 07/19/25 12:59:29.965
  STEP: Waiting for the pdb to be deleted @ 07/19/25 12:59:29.975
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 07/19/25 12:59:29.979
  STEP: Waiting for all pods to be running @ 07/19/25 12:59:29.979
  E0719 12:59:30.053632      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 12:59:30.079570 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9409" for this suite. @ 07/19/25 12:59:30.087
• [6.366 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 07/19/25 12:59:30.101
  I0719 12:59:30.101397 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename watch @ 07/19/25 12:59:30.101
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:59:30.116
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:59:30.119
  STEP: getting a starting resourceVersion @ 07/19/25 12:59:30.122
  STEP: starting a background goroutine to produce watch events @ 07/19/25 12:59:30.127
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 07/19/25 12:59:30.127
  E0719 12:59:31.053785      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:59:32.054632      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 12:59:32.909593 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5490" for this suite. @ 07/19/25 12:59:32.958
• [2.910 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 07/19/25 12:59:33.011
  I0719 12:59:33.011506 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename kubelet-test @ 07/19/25 12:59:33.012
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:59:33.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:59:33.036
  E0719 12:59:33.054647      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:59:34.054809      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:59:35.054889      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 12:59:35.069800 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6972" for this suite. @ 07/19/25 12:59:35.075
• [2.072 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 07/19/25 12:59:35.083
  I0719 12:59:35.083563 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename container-probe @ 07/19/25 12:59:35.084
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 12:59:35.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 12:59:35.099
  STEP: Creating pod test-grpc-568f1d80-70d7-4e2e-8e96-f1b74bfd8d39 in namespace container-probe-8480 @ 07/19/25 12:59:35.102
  E0719 12:59:36.055046      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:59:37.055114      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/19/25 12:59:37.121
  I0719 12:59:37.126051 21 container_probe.go:1748] Initial restart count of pod test-grpc-568f1d80-70d7-4e2e-8e96-f1b74bfd8d39 is 0
  I0719 12:59:37.129945 21 container_probe.go:1758] Get pod test-grpc-568f1d80-70d7-4e2e-8e96-f1b74bfd8d39 in namespace container-probe-8480
  E0719 12:59:38.055674      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:59:39.055883      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 12:59:39.134958 21 container_probe.go:1758] Get pod test-grpc-568f1d80-70d7-4e2e-8e96-f1b74bfd8d39 in namespace container-probe-8480
  E0719 12:59:40.055969      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:59:41.056053      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 12:59:41.140705 21 container_probe.go:1758] Get pod test-grpc-568f1d80-70d7-4e2e-8e96-f1b74bfd8d39 in namespace container-probe-8480
  E0719 12:59:42.056502      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:59:43.057587      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 12:59:43.145322 21 container_probe.go:1758] Get pod test-grpc-568f1d80-70d7-4e2e-8e96-f1b74bfd8d39 in namespace container-probe-8480
  E0719 12:59:44.058102      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:59:45.058228      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 12:59:45.151205 21 container_probe.go:1758] Get pod test-grpc-568f1d80-70d7-4e2e-8e96-f1b74bfd8d39 in namespace container-probe-8480
  E0719 12:59:46.059207      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:59:47.059292      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 12:59:47.157144 21 container_probe.go:1758] Get pod test-grpc-568f1d80-70d7-4e2e-8e96-f1b74bfd8d39 in namespace container-probe-8480
  E0719 12:59:48.060083      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:59:49.060191      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 12:59:49.161609 21 container_probe.go:1758] Get pod test-grpc-568f1d80-70d7-4e2e-8e96-f1b74bfd8d39 in namespace container-probe-8480
  E0719 12:59:50.060558      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:59:51.060654      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 12:59:51.167765 21 container_probe.go:1758] Get pod test-grpc-568f1d80-70d7-4e2e-8e96-f1b74bfd8d39 in namespace container-probe-8480
  E0719 12:59:52.061572      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:59:53.061824      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 12:59:53.173669 21 container_probe.go:1758] Get pod test-grpc-568f1d80-70d7-4e2e-8e96-f1b74bfd8d39 in namespace container-probe-8480
  E0719 12:59:54.062168      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:59:55.062297      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 12:59:55.180242 21 container_probe.go:1758] Get pod test-grpc-568f1d80-70d7-4e2e-8e96-f1b74bfd8d39 in namespace container-probe-8480
  E0719 12:59:56.063181      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:59:57.063277      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 12:59:57.185091 21 container_probe.go:1758] Get pod test-grpc-568f1d80-70d7-4e2e-8e96-f1b74bfd8d39 in namespace container-probe-8480
  E0719 12:59:58.064100      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 12:59:59.065114      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 12:59:59.190469 21 container_probe.go:1758] Get pod test-grpc-568f1d80-70d7-4e2e-8e96-f1b74bfd8d39 in namespace container-probe-8480
  E0719 13:00:00.066140      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:00:01.066250      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:00:01.195961 21 container_probe.go:1758] Get pod test-grpc-568f1d80-70d7-4e2e-8e96-f1b74bfd8d39 in namespace container-probe-8480
  E0719 13:00:02.066524      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:00:03.067562      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:00:03.201252 21 container_probe.go:1758] Get pod test-grpc-568f1d80-70d7-4e2e-8e96-f1b74bfd8d39 in namespace container-probe-8480
  E0719 13:00:04.068253      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:00:05.068330      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:00:05.207288 21 container_probe.go:1758] Get pod test-grpc-568f1d80-70d7-4e2e-8e96-f1b74bfd8d39 in namespace container-probe-8480
  E0719 13:00:06.068512      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:00:07.068748      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:00:07.211964 21 container_probe.go:1758] Get pod test-grpc-568f1d80-70d7-4e2e-8e96-f1b74bfd8d39 in namespace container-probe-8480
  E0719 13:00:08.069579      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:00:09.070122      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:00:09.218133 21 container_probe.go:1758] Get pod test-grpc-568f1d80-70d7-4e2e-8e96-f1b74bfd8d39 in namespace container-probe-8480
  E0719 13:00:10.071147      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:00:11.071335      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:00:11.224104 21 container_probe.go:1758] Get pod test-grpc-568f1d80-70d7-4e2e-8e96-f1b74bfd8d39 in namespace container-probe-8480
  E0719 13:00:12.071503      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:00:13.071578      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:00:13.229833 21 container_probe.go:1758] Get pod test-grpc-568f1d80-70d7-4e2e-8e96-f1b74bfd8d39 in namespace container-probe-8480
  E0719 13:00:14.071681      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:00:15.071823      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:00:15.236210 21 container_probe.go:1758] Get pod test-grpc-568f1d80-70d7-4e2e-8e96-f1b74bfd8d39 in namespace container-probe-8480
  E0719 13:00:16.071968      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:00:17.072052      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:00:17.241971 21 container_probe.go:1758] Get pod test-grpc-568f1d80-70d7-4e2e-8e96-f1b74bfd8d39 in namespace container-probe-8480
  E0719 13:00:18.072202      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:00:19.072364      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:00:19.248590 21 container_probe.go:1758] Get pod test-grpc-568f1d80-70d7-4e2e-8e96-f1b74bfd8d39 in namespace container-probe-8480
  E0719 13:00:20.072910      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:00:21.073033      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:00:21.255139 21 container_probe.go:1758] Get pod test-grpc-568f1d80-70d7-4e2e-8e96-f1b74bfd8d39 in namespace container-probe-8480
  E0719 13:00:22.073191      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:00:23.073261      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:00:23.260927 21 container_probe.go:1758] Get pod test-grpc-568f1d80-70d7-4e2e-8e96-f1b74bfd8d39 in namespace container-probe-8480
  E0719 13:00:24.073796      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:00:25.073913      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:00:25.266166 21 container_probe.go:1758] Get pod test-grpc-568f1d80-70d7-4e2e-8e96-f1b74bfd8d39 in namespace container-probe-8480
  E0719 13:00:26.074089      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:00:27.074173      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:00:27.274004 21 container_probe.go:1758] Get pod test-grpc-568f1d80-70d7-4e2e-8e96-f1b74bfd8d39 in namespace container-probe-8480
  E0719 13:00:28.074865      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:00:29.075086      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:00:29.279853 21 container_probe.go:1758] Get pod test-grpc-568f1d80-70d7-4e2e-8e96-f1b74bfd8d39 in namespace container-probe-8480
  E0719 13:00:30.075525      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:00:31.076124      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:00:31.285292 21 container_probe.go:1758] Get pod test-grpc-568f1d80-70d7-4e2e-8e96-f1b74bfd8d39 in namespace container-probe-8480
  E0719 13:00:32.076810      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:00:33.077792      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:00:33.290470 21 container_probe.go:1758] Get pod test-grpc-568f1d80-70d7-4e2e-8e96-f1b74bfd8d39 in namespace container-probe-8480
  E0719 13:00:34.078511      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:00:35.078518      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:00:35.295615 21 container_probe.go:1758] Get pod test-grpc-568f1d80-70d7-4e2e-8e96-f1b74bfd8d39 in namespace container-probe-8480
  E0719 13:00:36.079561      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:00:37.079657      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:00:37.302656 21 container_probe.go:1758] Get pod test-grpc-568f1d80-70d7-4e2e-8e96-f1b74bfd8d39 in namespace container-probe-8480
  E0719 13:00:38.079785      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:00:39.080105      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:00:39.307635 21 container_probe.go:1758] Get pod test-grpc-568f1d80-70d7-4e2e-8e96-f1b74bfd8d39 in namespace container-probe-8480
  E0719 13:00:40.080491      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:00:41.080600      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:00:41.313874 21 container_probe.go:1758] Get pod test-grpc-568f1d80-70d7-4e2e-8e96-f1b74bfd8d39 in namespace container-probe-8480
  I0719 13:00:41.313911 21 container_probe.go:1762] Restart count of pod container-probe-8480/test-grpc-568f1d80-70d7-4e2e-8e96-f1b74bfd8d39 is now 1 (1m4.187832411s elapsed)
  STEP: deleting the pod @ 07/19/25 13:00:41.313
  I0719 13:00:41.331444 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8480" for this suite. @ 07/19/25 13:00:41.337
• [66.264 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:179
  STEP: Creating a kubernetes client @ 07/19/25 13:00:41.347
  I0719 13:00:41.347249 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename emptydir @ 07/19/25 13:00:41.347
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:00:41.36
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:00:41.363
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 07/19/25 13:00:41.365
  E0719 13:00:42.080895      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:00:43.080985      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/19/25 13:00:43.385
  I0719 13:00:43.389549 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod pod-56f1e30d-388d-434b-9bb1-fd425930019b container test-container: <nil>
  STEP: delete the pod @ 07/19/25 13:00:43.397
  I0719 13:00:43.418779 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2805" for this suite. @ 07/19/25 13:00:43.423
• [2.085 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 07/19/25 13:00:43.432
  I0719 13:00:43.432054 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename pods @ 07/19/25 13:00:43.432
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:00:43.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:00:43.446
  STEP: creating the pod @ 07/19/25 13:00:43.448
  STEP: setting up watch @ 07/19/25 13:00:43.449
  STEP: submitting the pod to kubernetes @ 07/19/25 13:00:43.556
  STEP: verifying the pod is in kubernetes @ 07/19/25 13:00:43.567
  STEP: verifying pod creation was observed @ 07/19/25 13:00:43.57
  E0719 13:00:44.081733      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:00:45.082574      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 07/19/25 13:00:45.585
  STEP: verifying pod deletion was observed @ 07/19/25 13:00:45.595
  E0719 13:00:46.083316      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:00:46.259429 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1037" for this suite. @ 07/19/25 13:00:46.264
• [2.841 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:239
  STEP: Creating a kubernetes client @ 07/19/25 13:00:46.273
  I0719 13:00:46.273427 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename resourcequota @ 07/19/25 13:00:46.273
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:00:46.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:00:46.291
  STEP: Counting existing ResourceQuota @ 07/19/25 13:00:46.294
  E0719 13:00:47.083503      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:00:48.083632      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:00:49.084267      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:00:50.084406      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:00:51.084545      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/19/25 13:00:51.299
  STEP: Ensuring resource quota status is calculated @ 07/19/25 13:00:51.305
  E0719 13:00:52.084840      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:00:53.084932      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 07/19/25 13:00:53.311
  STEP: Ensuring ResourceQuota status captures the pod usage @ 07/19/25 13:00:53.33
  E0719 13:00:54.085158      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:00:55.085396      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 07/19/25 13:00:55.336
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 07/19/25 13:00:55.338
  STEP: Ensuring a pod cannot update its resource requirements @ 07/19/25 13:00:55.34
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 07/19/25 13:00:55.344
  E0719 13:00:56.085579      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:00:57.085661      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 07/19/25 13:00:57.349
  STEP: Ensuring resource quota status released the pod usage @ 07/19/25 13:00:57.367
  E0719 13:00:58.085788      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:00:59.086153      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:00:59.373418 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1938" for this suite. @ 07/19/25 13:00:59.379
• [13.120 seconds]
------------------------------
SS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 07/19/25 13:00:59.393
  I0719 13:00:59.393666 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename events @ 07/19/25 13:00:59.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:00:59.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:00:59.411
  STEP: creating a test event @ 07/19/25 13:00:59.417
  STEP: listing all events in all namespaces @ 07/19/25 13:00:59.424
  STEP: patching the test event @ 07/19/25 13:00:59.45
  STEP: fetching the test event @ 07/19/25 13:00:59.459
  STEP: updating the test event @ 07/19/25 13:00:59.462
  STEP: getting the test event @ 07/19/25 13:00:59.474
  STEP: deleting the test event @ 07/19/25 13:00:59.477
  STEP: listing all events in all namespaces @ 07/19/25 13:00:59.487
  I0719 13:00:59.496005 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5529" for this suite. @ 07/19/25 13:00:59.501
• [0.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:884
  STEP: Creating a kubernetes client @ 07/19/25 13:00:59.51
  I0719 13:00:59.510541 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename kubectl @ 07/19/25 13:00:59.511
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:00:59.524
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:00:59.526
  STEP: validating api versions @ 07/19/25 13:00:59.529
  I0719 13:00:59.529198 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-3551 api-versions'
  I0719 13:00:59.569697 21 builder.go:146] stderr: ""
  I0719 13:00:59.569733 21 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I0719 13:00:59.569837 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3551" for this suite. @ 07/19/25 13:00:59.603
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 07/19/25 13:00:59.612
  I0719 13:00:59.612833 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename field-validation @ 07/19/25 13:00:59.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:00:59.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:00:59.628
  STEP: apply creating a deployment @ 07/19/25 13:00:59.631
  I0719 13:00:59.648473 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1471" for this suite. @ 07/19/25 13:00:59.703
• [0.100 seconds]
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 07/19/25 13:00:59.712
  I0719 13:00:59.712707 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename pods @ 07/19/25 13:00:59.713
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:00:59.727
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:00:59.729
  STEP: creating the pod @ 07/19/25 13:00:59.732
  STEP: submitting the pod to kubernetes @ 07/19/25 13:00:59.732
  I0719 13:00:59.743611      21 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  E0719 13:01:00.086256      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:01:01.086321      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 07/19/25 13:01:01.757
  STEP: updating the pod @ 07/19/25 13:01:01.761
  E0719 13:01:02.086957      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:01:02.275836 21 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-620a6fc6-f77a-4859-8521-3240efc176bb"
  E0719 13:01:03.087995      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:01:04.088082      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:01:05.088128      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:01:06.088561      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:01:06.292487 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8434" for this suite. @ 07/19/25 13:01:06.298
• [6.593 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:659
  STEP: Creating a kubernetes client @ 07/19/25 13:01:06.305
  I0719 13:01:06.305754 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename statefulset @ 07/19/25 13:01:06.306
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:01:06.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:01:06.323
  STEP: Creating service test in namespace statefulset-5802 @ 07/19/25 13:01:06.325
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 07/19/25 13:01:06.331
  STEP: Creating stateful set ss in namespace statefulset-5802 @ 07/19/25 13:01:06.339
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-5802 @ 07/19/25 13:01:06.346
  I0719 13:01:06.361840 21 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  E0719 13:01:07.088659      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:01:08.088763      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:01:09.088854      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:01:10.088933      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:01:11.089043      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:01:12.089138      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:01:13.089259      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:01:14.089391      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:01:15.089593      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:01:16.089683      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:01:16.353639 21 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 07/19/25 13:01:16.353
  I0719 13:01:16.357405 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=statefulset-5802 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0719 13:01:16.449830 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0719 13:01:16.449865 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0719 13:01:16.449874 21 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0719 13:01:16.455068 21 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0719 13:01:17.089758      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:01:18.089819      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:01:19.089882      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:01:20.090103      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:01:21.090172      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:01:22.090489      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:01:23.090580      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:01:24.090655      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:01:25.090746      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:01:26.090852      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:01:26.455473 21 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0719 13:01:26.455511 21 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0719 13:01:26.557154 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 9.999999862s
  E0719 13:01:27.091773      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:01:27.564322 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 8.913854296s
  E0719 13:01:28.092033      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:01:28.571262 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 7.906526616s
  E0719 13:01:29.093026      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:01:29.578782 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 6.900433219s
  E0719 13:01:30.093160      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:01:30.586305 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 5.89251962s
  E0719 13:01:31.093556      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:01:31.593119 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 4.884977866s
  E0719 13:01:32.093689      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:01:32.600265 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 3.878766957s
  E0719 13:01:33.094030      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:01:33.606756 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 2.87154647s
  E0719 13:01:34.094101      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:01:34.613941 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 1.864606929s
  E0719 13:01:35.094178      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:01:35.620085 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 857.65336ms
  E0719 13:01:36.094582      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-5802 @ 07/19/25 13:01:36.621
  I0719 13:01:36.628949 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=statefulset-5802 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0719 13:01:36.712474 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0719 13:01:36.712508 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0719 13:01:36.712517 21 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0719 13:01:36.717204 21 wait.go:44] Found 1 stateful pods, waiting for 3
  E0719 13:01:37.094722      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:01:38.095804      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:01:39.095854      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:01:40.096054      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:01:41.096170      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:01:42.096572      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:01:43.096643      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:01:44.096747      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:01:45.096817      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:01:46.096935      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:01:46.719211 21 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0719 13:01:46.719242 21 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0719 13:01:46.719249 21 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 07/19/25 13:01:46.719
  STEP: Scale down will halt with unhealthy stateful pod @ 07/19/25 13:01:46.719
  I0719 13:01:46.728885 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=statefulset-5802 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0719 13:01:46.808884 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0719 13:01:46.808918 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0719 13:01:46.808927 21 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0719 13:01:46.808973 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=statefulset-5802 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0719 13:01:46.899148 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0719 13:01:46.899184 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0719 13:01:46.899194 21 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0719 13:01:46.899239 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=statefulset-5802 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0719 13:01:46.994621 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0719 13:01:46.994659 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0719 13:01:46.994668 21 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0719 13:01:46.994677 21 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0719 13:01:47.000615 21 wait.go:122] Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0719 13:01:47.097838      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:01:48.097948      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:01:49.098054      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:01:50.098118      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:01:51.098243      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:01:52.098383      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:01:53.098521      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:01:54.099567      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:01:55.099748      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:01:56.099884      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:01:57.006364 21 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0719 13:01:57.006391 21 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0719 13:01:57.006397 21 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  E0719 13:01:57.100055      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:01:57.106998 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 9.999999657s
  E0719 13:01:58.101069      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:01:58.113057 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 8.909746226s
  E0719 13:01:59.101121      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:01:59.118424 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 7.903678234s
  E0719 13:02:00.101416      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:02:00.124473 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 6.898119823s
  E0719 13:02:01.101538      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:02:01.131807 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 5.892257293s
  E0719 13:02:02.101812      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:02:02.138807 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 4.884844983s
  E0719 13:02:03.102532      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:02:03.146180 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 3.877233984s
  E0719 13:02:04.103229      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:02:04.152725 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 2.869583113s
  E0719 13:02:05.103682      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:02:05.160509 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 1.863074374s
  E0719 13:02:06.103808      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:02:06.165946 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 855.933681ms
  E0719 13:02:07.103926      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-5802 @ 07/19/25 13:02:07.166
  I0719 13:02:07.173963 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=statefulset-5802 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0719 13:02:07.256050 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0719 13:02:07.256092 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0719 13:02:07.256102 21 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0719 13:02:07.256148 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=statefulset-5802 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0719 13:02:07.342478 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0719 13:02:07.342517 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0719 13:02:07.342527 21 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0719 13:02:07.342574 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=statefulset-5802 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0719 13:02:07.430328 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0719 13:02:07.430381 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0719 13:02:07.430389 21 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0719 13:02:07.430413 21 rest.go:153] Scaling statefulset ss to 0
  E0719 13:02:08.103986      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:02:09.105062      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:02:10.105679      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:02:11.105884      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:02:12.106106      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:02:13.106186      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:02:14.106285      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:02:15.106365      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:02:16.106560      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:02:17.106625      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 07/19/25 13:02:17.441
  I0719 13:02:17.441558 21 statefulset.go:138] Deleting all statefulset in ns statefulset-5802
  I0719 13:02:17.446068 21 rest.go:153] Scaling statefulset ss to 0
  I0719 13:02:17.454325 21 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0719 13:02:17.458689 21 rest.go:91] Deleting statefulset ss
  I0719 13:02:17.476646 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5802" for this suite. @ 07/19/25 13:02:17.481
• [71.183 seconds]
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 07/19/25 13:02:17.488
  I0719 13:02:17.488801 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename var-expansion @ 07/19/25 13:02:17.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:02:17.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:02:17.513
  STEP: Creating a pod to test substitution in container's args @ 07/19/25 13:02:17.516
  E0719 13:02:18.106736      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:02:19.106816      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/19/25 13:02:19.535
  I0719 13:02:19.539845 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod var-expansion-2f3f883b-be0a-4351-aa0f-af8d978e77a9 container dapi-container: <nil>
  STEP: delete the pod @ 07/19/25 13:02:19.559
  I0719 13:02:19.575493 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3527" for this suite. @ 07/19/25 13:02:19.58
• [2.100 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Job with successPolicy succeededCount rule should succeeded even when some indexes remain pending [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:567
  STEP: Creating a kubernetes client @ 07/19/25 13:02:19.588
  I0719 13:02:19.588643 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename job @ 07/19/25 13:02:19.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:02:19.601
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:02:19.604
  STEP: Creating an indexed job with successPolicy succeededCount rule @ 07/19/25 13:02:19.607
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet condition with SuccessPolicy reason @ 07/19/25 13:02:19.613
  E0719 13:02:20.106906      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:02:21.106990      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:02:22.107584      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:02:23.108558      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensure that the job reaches completions @ 07/19/25 13:02:23.627
  STEP: Verifying that the job status to ensure correct final state @ 07/19/25 13:02:23.635
  I0719 13:02:23.639323 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2756" for this suite. @ 07/19/25 13:02:23.643
• [4.063 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:547
  STEP: Creating a kubernetes client @ 07/19/25 13:02:23.652
  I0719 13:02:23.652104 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename gc @ 07/19/25 13:02:23.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:02:23.672
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:02:23.675
  STEP: create the deployment @ 07/19/25 13:02:23.677
  I0719 13:02:23.684828      21 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: Wait for the Deployment to create new ReplicaSet @ 07/19/25 13:02:23.684
  E0719 13:02:24.109010      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 07/19/25 13:02:24.197
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 07/19/25 13:02:24.206
  STEP: Gathering metrics @ 07/19/25 13:02:24.729
  W0719 13:02:24.827559      21 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0719 13:02:24.827594 21 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0719 13:02:24.827728 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2144" for this suite. @ 07/19/25 13:02:24.834
• [1.190 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:57
  STEP: Creating a kubernetes client @ 07/19/25 13:02:24.842
  I0719 13:02:24.842472 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename configmap @ 07/19/25 13:02:24.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:02:24.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:02:24.858
  STEP: Creating configMap with name configmap-test-volume-d2c910f4-8893-4103-97fb-42566a9885ce @ 07/19/25 13:02:24.861
  STEP: Creating a pod to test consume configMaps @ 07/19/25 13:02:24.867
  E0719 13:02:25.109500      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:02:26.109585      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:02:27.110654      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:02:28.110747      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/19/25 13:02:28.897
  I0719 13:02:28.901243 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod pod-configmaps-ce949ba7-fd05-4ee7-b712-69728c68cc20 container agnhost-container: <nil>
  STEP: delete the pod @ 07/19/25 13:02:28.907
  I0719 13:02:28.928231 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-754" for this suite. @ 07/19/25 13:02:28.932
• [4.099 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 07/19/25 13:02:28.94
  I0719 13:02:28.941026 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename projected @ 07/19/25 13:02:28.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:02:28.955
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:02:28.958
  STEP: Creating projection with secret that has name projected-secret-test-b9490ce3-bc8d-4c84-ba5c-c9a4ab453299 @ 07/19/25 13:02:28.96
  STEP: Creating a pod to test consume secrets @ 07/19/25 13:02:28.966
  E0719 13:02:29.111714      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:02:30.111840      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:02:31.112408      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:02:32.112622      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/19/25 13:02:32.994
  I0719 13:02:32.998206 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod pod-projected-secrets-7177ee45-7484-475f-ab88-6dc214d63fb8 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/19/25 13:02:33.006
  I0719 13:02:33.024425 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8241" for this suite. @ 07/19/25 13:02:33.03
• [4.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:770
  STEP: Creating a kubernetes client @ 07/19/25 13:02:33.037
  I0719 13:02:33.037691 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename svcaccounts @ 07/19/25 13:02:33.038
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:02:33.052
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:02:33.055
  I0719 13:02:33.061158 21 service_accounts.go:782] Got root ca configmap in namespace "svcaccounts-681"
  I0719 13:02:33.069247 21 service_accounts.go:785] Deleted root ca configmap in namespace "svcaccounts-681"
  E0719 13:02:33.113538      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting for a new root ca configmap created @ 07/19/25 13:02:33.57
  I0719 13:02:33.575960 21 service_accounts.go:799] Recreated root ca configmap in namespace "svcaccounts-681"
  I0719 13:02:33.581690 21 service_accounts.go:810] Updated root ca configmap in namespace "svcaccounts-681"
  STEP: waiting for the root ca configmap reconciled @ 07/19/25 13:02:34.082
  I0719 13:02:34.086332 21 service_accounts.go:828] Reconciled root ca configmap in namespace "svcaccounts-681"
  I0719 13:02:34.086467 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-681" for this suite. @ 07/19/25 13:02:34.091
• [1.061 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 07/19/25 13:02:34.098
  I0719 13:02:34.098643 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename webhook @ 07/19/25 13:02:34.099
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:02:34.109
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:02:34.112
  E0719 13:02:34.113545      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 07/19/25 13:02:34.133
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/19/25 13:02:34.427
  STEP: Deploying the webhook pod @ 07/19/25 13:02:34.434
  STEP: Wait for the deployment to be ready @ 07/19/25 13:02:34.45
  I0719 13:02:34.460522 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0719 13:02:35.113748      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:02:36.113862      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/19/25 13:02:36.475
  STEP: Verifying the service has paired with the endpoint @ 07/19/25 13:02:36.493
  E0719 13:02:37.113980      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:02:37.494094 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 07/19/25 13:02:37.499
  STEP: create a configmap that should be updated by the webhook @ 07/19/25 13:02:37.514
  I0719 13:02:37.589945 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4581" for this suite. @ 07/19/25 13:02:37.594
  STEP: Destroying namespace "webhook-markers-9912" for this suite. @ 07/19/25 13:02:37.601
• [3.512 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1070
  STEP: Creating a kubernetes client @ 07/19/25 13:02:37.61
  I0719 13:02:37.610805 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename resourcequota @ 07/19/25 13:02:37.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:02:37.623
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:02:37.625
  STEP: Creating resourceQuota "e2e-rq-status-79szr" @ 07/19/25 13:02:37.632
  I0719 13:02:37.640951 21 resource_quota.go:1106] Resource quota "e2e-rq-status-79szr" reports spec: hard cpu limit of 500m
  I0719 13:02:37.640972 21 resource_quota.go:1108] Resource quota "e2e-rq-status-79szr" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-79szr" /status @ 07/19/25 13:02:37.64
  STEP: Confirm /status for "e2e-rq-status-79szr" resourceQuota via watch @ 07/19/25 13:02:37.649
  I0719 13:02:37.650579 21 resource_quota.go:1135] observed resourceQuota "e2e-rq-status-79szr" in namespace "resourcequota-2405" with hard status: v1.ResourceList(nil)
  I0719 13:02:37.650637 21 resource_quota.go:1138] Found resourceQuota "e2e-rq-status-79szr" in namespace "resourcequota-2405" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0719 13:02:37.650650 21 resource_quota.go:1145] ResourceQuota "e2e-rq-status-79szr" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 07/19/25 13:02:37.654
  I0719 13:02:37.661163 21 resource_quota.go:1156] Resource quota "e2e-rq-status-79szr" reports spec: hard cpu limit of 1
  I0719 13:02:37.661182 21 resource_quota.go:1157] Resource quota "e2e-rq-status-79szr" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-79szr" /status @ 07/19/25 13:02:37.661
  STEP: Confirm /status for "e2e-rq-status-79szr" resourceQuota via watch @ 07/19/25 13:02:37.666
  I0719 13:02:37.668064 21 resource_quota.go:1179] observed resourceQuota "e2e-rq-status-79szr" in namespace "resourcequota-2405" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0719 13:02:37.668091 21 resource_quota.go:1182] Found resourceQuota "e2e-rq-status-79szr" in namespace "resourcequota-2405" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0719 13:02:37.668101 21 resource_quota.go:1189] ResourceQuota "e2e-rq-status-79szr" /status was patched
  STEP: Get "e2e-rq-status-79szr" /status @ 07/19/25 13:02:37.668
  I0719 13:02:37.672209 21 resource_quota.go:1200] Resourcequota "e2e-rq-status-79szr" reports status: hard cpu of 1
  I0719 13:02:37.672233 21 resource_quota.go:1202] Resourcequota "e2e-rq-status-79szr" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-79szr" /status before checking Spec is unchanged @ 07/19/25 13:02:37.675
  I0719 13:02:37.689897 21 resource_quota.go:1222] Resourcequota "e2e-rq-status-79szr" reports status: hard cpu of 2
  I0719 13:02:37.689923 21 resource_quota.go:1224] Resourcequota "e2e-rq-status-79szr" reports status: hard memory of 2Gi
  I0719 13:02:37.691197 21 resource_quota.go:1233] observed resourceQuota "e2e-rq-status-79szr" in namespace "resourcequota-2405" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0719 13:02:37.691220 21 resource_quota.go:1236] Found resourceQuota "e2e-rq-status-79szr" in namespace "resourcequota-2405" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0719 13:02:37.694648 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-79szr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-79szr", GenerateName:"", Namespace:"resourcequota-2405", SelfLink:"", UID:"8fb9e3e5-4645-4194-a79d-ef4398096f52", ResourceVersion:"24055", Generation:0, CreationTimestamp:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-79szr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045026a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045026d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004502708), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0719 13:02:38.114081      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:02:39.114190      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:02:40.114309      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:02:41.114664      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:02:42.114736      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:02:42.698232 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-79szr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-79szr", GenerateName:"", Namespace:"resourcequota-2405", SelfLink:"", UID:"8fb9e3e5-4645-4194-a79d-ef4398096f52", ResourceVersion:"24055", Generation:0, CreationTimestamp:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-79szr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004502828), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004502858), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045028b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0719 13:02:43.115568      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:02:44.115869      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:02:45.115933      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:02:46.116061      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:02:47.116268      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:02:47.696684 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-79szr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-79szr", GenerateName:"", Namespace:"resourcequota-2405", SelfLink:"", UID:"8fb9e3e5-4645-4194-a79d-ef4398096f52", ResourceVersion:"24055", Generation:0, CreationTimestamp:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-79szr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004502ab0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004502ae0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004502b28), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0719 13:02:48.116989      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:02:49.117231      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:02:50.117322      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:02:51.117510      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:02:52.118544      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:02:52.697210 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-79szr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-79szr", GenerateName:"", Namespace:"resourcequota-2405", SelfLink:"", UID:"8fb9e3e5-4645-4194-a79d-ef4398096f52", ResourceVersion:"24055", Generation:0, CreationTimestamp:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-79szr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010283d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001028420), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001028480), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0719 13:02:53.119571      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:02:54.119671      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:02:55.119854      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:02:56.119939      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:02:57.120087      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:02:57.697115 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-79szr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-79szr", GenerateName:"", Namespace:"resourcequota-2405", SelfLink:"", UID:"8fb9e3e5-4645-4194-a79d-ef4398096f52", ResourceVersion:"24055", Generation:0, CreationTimestamp:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-79szr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004502c18), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004502c60), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004502c90), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0719 13:02:58.120647      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:02:59.120729      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:03:00.120953      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:03:01.121016      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:03:02.121133      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:03:02.697281 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-79szr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-79szr", GenerateName:"", Namespace:"resourcequota-2405", SelfLink:"", UID:"8fb9e3e5-4645-4194-a79d-ef4398096f52", ResourceVersion:"24055", Generation:0, CreationTimestamp:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-79szr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010286a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001028708), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001028738), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0719 13:03:03.121739      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:03:04.122765      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:03:05.122871      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:03:06.123041      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:03:07.123214      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:03:07.696548 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-79szr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-79szr", GenerateName:"", Namespace:"resourcequota-2405", SelfLink:"", UID:"8fb9e3e5-4645-4194-a79d-ef4398096f52", ResourceVersion:"24055", Generation:0, CreationTimestamp:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-79szr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010288a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010288d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001028918), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0719 13:03:08.124125      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:03:09.124806      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:03:10.125033      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:03:11.125258      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:03:12.126229      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:03:12.697363 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-79szr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-79szr", GenerateName:"", Namespace:"resourcequota-2405", SelfLink:"", UID:"8fb9e3e5-4645-4194-a79d-ef4398096f52", ResourceVersion:"24055", Generation:0, CreationTimestamp:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-79szr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004502fa8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004502fd8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004503008), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0719 13:03:13.126657      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:03:14.126728      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:03:15.126852      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:03:16.126915      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:03:17.127043      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:03:17.696739 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-79szr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-79szr", GenerateName:"", Namespace:"resourcequota-2405", SelfLink:"", UID:"8fb9e3e5-4645-4194-a79d-ef4398096f52", ResourceVersion:"24055", Generation:0, CreationTimestamp:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-79szr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001028b10), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001028b40), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001028b70), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0719 13:03:18.127133      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:03:19.127765      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:03:20.127892      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:03:21.127960      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:03:22.128085      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:03:22.696152 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-79szr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-79szr", GenerateName:"", Namespace:"resourcequota-2405", SelfLink:"", UID:"8fb9e3e5-4645-4194-a79d-ef4398096f52", ResourceVersion:"24055", Generation:0, CreationTimestamp:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-79szr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004503230), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004503290), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045032c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0719 13:03:23.128568      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:03:24.129268      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:03:25.129394      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:03:26.129508      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:03:27.129598      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:03:27.698820 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-79szr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-79szr", GenerateName:"", Namespace:"resourcequota-2405", SelfLink:"", UID:"8fb9e3e5-4645-4194-a79d-ef4398096f52", ResourceVersion:"24055", Generation:0, CreationTimestamp:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-79szr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045034d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004503500), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004503530), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0719 13:03:28.130332      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:03:29.131203      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:03:30.131296      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:03:31.131552      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:03:32.131639      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:03:32.697459 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-79szr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-79szr", GenerateName:"", Namespace:"resourcequota-2405", SelfLink:"", UID:"8fb9e3e5-4645-4194-a79d-ef4398096f52", ResourceVersion:"24055", Generation:0, CreationTimestamp:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-79szr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004503740), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004503770), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045037a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0719 13:03:33.132057      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:03:34.132147      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:03:35.132364      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:03:36.132547      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:03:37.132731      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:03:37.695730 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-79szr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-79szr", GenerateName:"", Namespace:"resourcequota-2405", SelfLink:"", UID:"8fb9e3e5-4645-4194-a79d-ef4398096f52", ResourceVersion:"24055", Generation:0, CreationTimestamp:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-79szr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001028240), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001028288), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010282b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0719 13:03:38.133207      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:03:39.134154      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:03:40.134463      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:03:41.134521      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:03:42.134658      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:03:42.698468 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-79szr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-79szr", GenerateName:"", Namespace:"resourcequota-2405", SelfLink:"", UID:"8fb9e3e5-4645-4194-a79d-ef4398096f52", ResourceVersion:"24055", Generation:0, CreationTimestamp:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-79szr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010285a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010285d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001028600), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0719 13:03:43.134733      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:03:44.135278      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:03:45.135408      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:03:46.135594      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:03:47.135669      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:03:47.697133 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-79szr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-79szr", GenerateName:"", Namespace:"resourcequota-2405", SelfLink:"", UID:"8fb9e3e5-4645-4194-a79d-ef4398096f52", ResourceVersion:"24055", Generation:0, CreationTimestamp:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-79szr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004502030), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004502060), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045020a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0719 13:03:48.136613      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:03:49.136723      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:03:50.137555      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:03:51.137645      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:03:52.138543      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:03:52.697063 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-79szr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-79szr", GenerateName:"", Namespace:"resourcequota-2405", SelfLink:"", UID:"8fb9e3e5-4645-4194-a79d-ef4398096f52", ResourceVersion:"24055", Generation:0, CreationTimestamp:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-79szr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001028990), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010289d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001028a08), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0719 13:03:53.139576      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:03:54.139709      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:03:55.140552      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:03:56.140737      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:03:57.140927      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:03:57.697842 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-79szr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-79szr", GenerateName:"", Namespace:"resourcequota-2405", SelfLink:"", UID:"8fb9e3e5-4645-4194-a79d-ef4398096f52", ResourceVersion:"24055", Generation:0, CreationTimestamp:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-79szr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045021b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045021e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004502210), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0719 13:03:58.141048      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:03:59.141141      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:04:00.141546      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:04:01.141737      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:04:02.142550      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:04:02.697330 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-79szr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-79szr", GenerateName:"", Namespace:"resourcequota-2405", SelfLink:"", UID:"8fb9e3e5-4645-4194-a79d-ef4398096f52", ResourceVersion:"24055", Generation:0, CreationTimestamp:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-79szr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004502330), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004502378), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045023a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0719 13:04:03.142842      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:04:04.143018      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:04:05.143120      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:04:06.143316      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:04:07.143527      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:04:07.696392 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-79szr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-79szr", GenerateName:"", Namespace:"resourcequota-2405", SelfLink:"", UID:"8fb9e3e5-4645-4194-a79d-ef4398096f52", ResourceVersion:"24055", Generation:0, CreationTimestamp:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-79szr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001028e88), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001028ed0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001028f00), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0719 13:04:08.143647      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:04:09.143685      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:04:10.143864      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:04:11.144045      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:04:12.144231      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:04:12.696824 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-79szr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-79szr", GenerateName:"", Namespace:"resourcequota-2405", SelfLink:"", UID:"8fb9e3e5-4645-4194-a79d-ef4398096f52", ResourceVersion:"24055", Generation:0, CreationTimestamp:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-79szr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001029038), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001029068), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001029098), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0719 13:04:13.144286      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:04:14.145214      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:04:15.145504      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:04:16.146633      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:04:17.147545      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:04:17.696671 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-79szr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-79szr", GenerateName:"", Namespace:"resourcequota-2405", SelfLink:"", UID:"8fb9e3e5-4645-4194-a79d-ef4398096f52", ResourceVersion:"24055", Generation:0, CreationTimestamp:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-79szr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045026c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045026f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004502738), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0719 13:04:18.148182      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:04:19.149179      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:04:20.149539      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:04:21.149735      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:04:22.149910      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:04:22.697646 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-79szr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-79szr", GenerateName:"", Namespace:"resourcequota-2405", SelfLink:"", UID:"8fb9e3e5-4645-4194-a79d-ef4398096f52", ResourceVersion:"24055", Generation:0, CreationTimestamp:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-79szr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001029428), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001029488), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010294b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0719 13:04:23.150149      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:04:24.151191      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:04:25.151306      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:04:26.151511      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:04:27.151701      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:04:27.698035 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-79szr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-79szr", GenerateName:"", Namespace:"resourcequota-2405", SelfLink:"", UID:"8fb9e3e5-4645-4194-a79d-ef4398096f52", ResourceVersion:"24055", Generation:0, CreationTimestamp:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-79szr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004502840), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004502870), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045028d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0719 13:04:28.152602      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:04:29.153187      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:04:30.153472      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:04:31.153507      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:04:32.153696      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:04:32.697067 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-79szr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-79szr", GenerateName:"", Namespace:"resourcequota-2405", SelfLink:"", UID:"8fb9e3e5-4645-4194-a79d-ef4398096f52", ResourceVersion:"24055", Generation:0, CreationTimestamp:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-79szr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045029d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004502a38), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004502a68), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0719 13:04:33.154537      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:04:34.155255      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:04:35.155470      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:04:36.156539      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:04:37.156630      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:04:37.697652 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-79szr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-79szr", GenerateName:"", Namespace:"resourcequota-2405", SelfLink:"", UID:"8fb9e3e5-4645-4194-a79d-ef4398096f52", ResourceVersion:"24055", Generation:0, CreationTimestamp:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-79szr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010297d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001029800), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001029830), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0719 13:04:38.157111      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:04:39.157148      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:04:40.157542      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:04:41.158542      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:04:42.159550      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:04:42.697413 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-79szr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-79szr", GenerateName:"", Namespace:"resourcequota-2405", SelfLink:"", UID:"8fb9e3e5-4645-4194-a79d-ef4398096f52", ResourceVersion:"24055", Generation:0, CreationTimestamp:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-79szr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001029a58), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001029aa0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001029ad0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0719 13:04:43.159643      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:04:44.160217      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:04:45.160411      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:04:46.160600      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:04:47.160793      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:04:47.696184 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-79szr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-79szr", GenerateName:"", Namespace:"resourcequota-2405", SelfLink:"", UID:"8fb9e3e5-4645-4194-a79d-ef4398096f52", ResourceVersion:"24055", Generation:0, CreationTimestamp:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-79szr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001029ce0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001029d28), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001029d70), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0719 13:04:48.161777      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:04:49.161896      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:04:50.162089      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:04:51.162274      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:04:52.162494      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:04:52.698145 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-79szr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-79szr", GenerateName:"", Namespace:"resourcequota-2405", SelfLink:"", UID:"8fb9e3e5-4645-4194-a79d-ef4398096f52", ResourceVersion:"24055", Generation:0, CreationTimestamp:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-79szr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001029e90), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001029ef0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001029f20), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0719 13:04:53.162581      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:04:54.163192      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:04:55.163438      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:04:56.163647      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:04:57.163839      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:04:57.697099 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-79szr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-79szr", GenerateName:"", Namespace:"resourcequota-2405", SelfLink:"", UID:"8fb9e3e5-4645-4194-a79d-ef4398096f52", ResourceVersion:"24055", Generation:0, CreationTimestamp:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-79szr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004502d38), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004502d80), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004502db0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0719 13:04:58.164707      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:04:59.164827      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:05:00.164925      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:05:01.165778      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:05:02.165865      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:05:02.696025 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-79szr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-79szr", GenerateName:"", Namespace:"resourcequota-2405", SelfLink:"", UID:"8fb9e3e5-4645-4194-a79d-ef4398096f52", ResourceVersion:"24055", Generation:0, CreationTimestamp:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-79szr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004502eb8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004502ee8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004502f18), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0719 13:05:03.166218      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:05:04.167198      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:05:05.167536      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:05:06.168578      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:05:07.168667      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:05:07.698724 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-79szr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-79szr", GenerateName:"", Namespace:"resourcequota-2405", SelfLink:"", UID:"8fb9e3e5-4645-4194-a79d-ef4398096f52", ResourceVersion:"24055", Generation:0, CreationTimestamp:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-79szr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f163a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f163d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f16420), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0719 13:05:08.169243      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:05:09.170216      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:05:10.170330      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:05:11.170549      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:05:12.170616      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:05:12.697506 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-79szr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-79szr", GenerateName:"", Namespace:"resourcequota-2405", SelfLink:"", UID:"8fb9e3e5-4645-4194-a79d-ef4398096f52", ResourceVersion:"24055", Generation:0, CreationTimestamp:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-79szr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f16660), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f16690), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f166c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0719 13:05:13.170696      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:05:14.170766      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:05:15.170949      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:05:16.171686      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:05:17.171865      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:05:17.695975 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-79szr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-79szr", GenerateName:"", Namespace:"resourcequota-2405", SelfLink:"", UID:"8fb9e3e5-4645-4194-a79d-ef4398096f52", ResourceVersion:"24055", Generation:0, CreationTimestamp:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-79szr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f167c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f167f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f16828), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0719 13:05:18.172544      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:05:19.172720      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:05:20.172924      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:05:21.173140      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:05:22.173411      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:05:22.698194 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-79szr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-79szr", GenerateName:"", Namespace:"resourcequota-2405", SelfLink:"", UID:"8fb9e3e5-4645-4194-a79d-ef4398096f52", ResourceVersion:"24055", Generation:0, CreationTimestamp:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-79szr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004503188), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045031b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045031e8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0719 13:05:23.173673      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:05:24.174264      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:05:25.174717      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:05:26.174814      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:05:27.175015      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:05:27.695771 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-79szr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-79szr", GenerateName:"", Namespace:"resourcequota-2405", SelfLink:"", UID:"8fb9e3e5-4645-4194-a79d-ef4398096f52", ResourceVersion:"24055", Generation:0, CreationTimestamp:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-79szr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f16de0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f16e10), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f16e40), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0719 13:05:28.175123      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:05:29.176193      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:05:30.176391      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:05:31.176476      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:05:32.177532      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:05:32.696277 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-79szr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-79szr", GenerateName:"", Namespace:"resourcequota-2405", SelfLink:"", UID:"8fb9e3e5-4645-4194-a79d-ef4398096f52", ResourceVersion:"24055", Generation:0, CreationTimestamp:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-79szr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f16f30), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f16f78), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 19, 13, 2, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f16fa8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0719 13:05:33.177801      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:05:34.178003      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:05:35.178079      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:05:36.178605      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:05:37.179545      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:05:37.698164 21 resource_quota.go:1264] ResourceQuota "e2e-rq-status-79szr" Spec was unchanged and /status reset
  I0719 13:05:37.698295 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2405" for this suite. @ 07/19/25 13:05:37.704
• [180.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 07/19/25 13:05:37.713
  I0719 13:05:37.713752 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename container-runtime @ 07/19/25 13:05:37.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:05:37.727
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:05:37.73
  STEP: create the container @ 07/19/25 13:05:37.732
  I0719 13:05:37.743369      21 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 07/19/25 13:05:37.743
  E0719 13:05:38.180397      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:05:39.180590      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:05:40.180685      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: get the container status @ 07/19/25 13:05:40.763
  STEP: the container should be terminated @ 07/19/25 13:05:40.766
  STEP: the termination message should be set @ 07/19/25 13:05:40.766
  I0719 13:05:40.766750 21 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 07/19/25 13:05:40.766
  I0719 13:05:40.785414 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-747" for this suite. @ 07/19/25 13:05:40.789
• [3.086 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 07/19/25 13:05:40.799
  I0719 13:05:40.799917 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename daemonsets @ 07/19/25 13:05:40.8
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:05:40.812
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:05:40.815
  STEP: Creating a simple DaemonSet "daemon-set" @ 07/19/25 13:05:40.902
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/19/25 13:05:40.91
  I0719 13:05:40.991793 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-3-129 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 13:05:40.991833 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-39-138 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 13:05:40.995263 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0719 13:05:40.995281 21 fixtures.go:131] Node ip-172-31-42-177 is running 0 daemon pod, expected 1
  E0719 13:05:41.181564      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:05:41.917243 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-3-129 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 13:05:41.917289 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-39-138 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 13:05:41.922723 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0719 13:05:41.922746 21 fixtures.go:131] Node ip-172-31-64-234 is running 0 daemon pod, expected 1
  E0719 13:05:42.182142      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:05:42.917774 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-3-129 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 13:05:42.917817 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-39-138 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 13:05:42.923530 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0719 13:05:42.923554 21 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 07/19/25 13:05:42.927
  I0719 13:05:43.018971 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-3-129 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 13:05:43.019019 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-39-138 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 13:05:43.023102 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0719 13:05:43.023125 21 fixtures.go:131] Node ip-172-31-64-234 is running 0 daemon pod, expected 1
  E0719 13:05:43.182360      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:05:43.947046 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-3-129 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 13:05:43.947086 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-39-138 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 13:05:43.952571 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0719 13:05:43.952587 21 fixtures.go:131] Node ip-172-31-64-234 is running 0 daemon pod, expected 1
  E0719 13:05:44.183011      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:05:44.947815 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-3-129 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 13:05:44.947853 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-39-138 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 13:05:44.952114 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0719 13:05:44.952136 21 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 07/19/25 13:05:44.952
  STEP: Deleting DaemonSet "daemon-set" @ 07/19/25 13:05:44.961
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8645, will wait for the garbage collector to delete the pods @ 07/19/25 13:05:44.961
  I0719 13:05:45.024879 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 8.601335ms
  I0719 13:05:45.125127 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.241724ms
  E0719 13:05:45.184633      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:05:46.184961      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:05:46.332054 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0719 13:05:46.332087 21 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0719 13:05:46.337966 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"24633"},"items":null}

  I0719 13:05:46.341900 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"24633"},"items":null}

  I0719 13:05:46.358636 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8645" for this suite. @ 07/19/25 13:05:46.361
• [5.571 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 07/19/25 13:05:46.37
  I0719 13:05:46.370571 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename apf @ 07/19/25 13:05:46.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:05:46.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:05:46.385
  STEP: getting /apis @ 07/19/25 13:05:46.388
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 07/19/25 13:05:46.391
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 07/19/25 13:05:46.392
  STEP: creating @ 07/19/25 13:05:46.393
  STEP: getting @ 07/19/25 13:05:46.415
  STEP: listing @ 07/19/25 13:05:46.42
  STEP: watching @ 07/19/25 13:05:46.424
  I0719 13:05:46.424679 21 flowcontrol.go:620] starting watch
  STEP: patching @ 07/19/25 13:05:46.425
  STEP: updating @ 07/19/25 13:05:46.432
  I0719 13:05:46.441873 21 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 07/19/25 13:05:46.441
  STEP: patching /status @ 07/19/25 13:05:46.445
  STEP: updating /status @ 07/19/25 13:05:46.452
  STEP: deleting @ 07/19/25 13:05:46.462
  STEP: deleting a collection @ 07/19/25 13:05:46.479
  I0719 13:05:46.503683 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-5188" for this suite. @ 07/19/25 13:05:46.51
• [0.148 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:108
  STEP: Creating a kubernetes client @ 07/19/25 13:05:46.518
  I0719 13:05:46.518566 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename resourcequota @ 07/19/25 13:05:46.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:05:46.533
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:05:46.536
  STEP: Counting existing ResourceQuota @ 07/19/25 13:05:46.538
  E0719 13:05:47.185021      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:05:48.185116      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:05:49.185194      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:05:50.185298      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:05:51.185562      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/19/25 13:05:51.544
  STEP: Ensuring resource quota status is calculated @ 07/19/25 13:05:51.55
  E0719 13:05:52.185859      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:05:53.186003      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 07/19/25 13:05:53.555
  STEP: Creating a NodePort Service @ 07/19/25 13:05:53.588
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 07/19/25 13:05:53.622
  STEP: Ensuring resource quota status captures service creation @ 07/19/25 13:05:53.663
  E0719 13:05:54.186112      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:05:55.186214      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 07/19/25 13:05:55.668
  STEP: Ensuring resource quota status released usage @ 07/19/25 13:05:55.722
  E0719 13:05:56.187089      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:05:57.187164      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:05:57.727412 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8372" for this suite. @ 07/19/25 13:05:57.732
• [11.222 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 07/19/25 13:05:57.74
  I0719 13:05:57.740513 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename validating-admission-policy @ 07/19/25 13:05:57.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:05:57.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:05:57.756
  STEP: creating a policy with variables @ 07/19/25 13:05:57.763
  STEP: waiting until the marker is denied @ 07/19/25 13:05:57.781
  STEP: testing a replicated Deployment to be allowed @ 07/19/25 13:05:58.09
  STEP: testing a non-replicated ReplicaSet not to be denied @ 07/19/25 13:05:58.106
  I0719 13:05:58.161473 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-638" for this suite. @ 07/19/25 13:05:58.171
• [0.444 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:209
  STEP: Creating a kubernetes client @ 07/19/25 13:05:58.184
  I0719 13:05:58.184854 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename emptydir @ 07/19/25 13:05:58.185
  E0719 13:05:58.187264      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:05:58.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:05:58.2
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 07/19/25 13:05:58.202
  E0719 13:05:59.188202      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:06:00.188683      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:06:01.188815      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:06:02.188881      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/19/25 13:06:02.231
  I0719 13:06:02.235532 21 output.go:207] Trying to get logs from node ip-172-31-64-234 pod pod-6d1bd2a2-73a7-4d35-8ed9-ffe58d9bc0a0 container test-container: <nil>
  STEP: delete the pod @ 07/19/25 13:06:02.254
  I0719 13:06:02.275765 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8484" for this suite. @ 07/19/25 13:06:02.28
• [4.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 07/19/25 13:06:02.289
  I0719 13:06:02.289827 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename pod-network-test @ 07/19/25 13:06:02.29
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:06:02.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:06:02.304
  STEP: Performing setup for networking test in namespace pod-network-test-1883 @ 07/19/25 13:06:02.306
  STEP: creating a selector @ 07/19/25 13:06:02.306
  STEP: Creating the service pods in kubernetes @ 07/19/25 13:06:02.306
  I0719 13:06:02.306758 21 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0719 13:06:03.189500      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:06:04.190251      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:06:05.190399      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:06:06.190611      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:06:07.190719      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:06:08.190783      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:06:09.191173      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:06:10.191301      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:06:11.192330      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:06:12.192562      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:06:13.193570      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:06:14.194590      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:06:15.194728      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:06:16.194977      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 07/19/25 13:06:16.483
  E0719 13:06:17.195918      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:06:18.196033      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:06:18.506697 21 utils.go:802] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0719 13:06:18.506731 21 networking.go:42] Breadth first check of 192.168.156.209 on host 172.31.42.177...
  I0719 13:06:18.510142 21 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.206.241:9080/dial?request=hostname&protocol=udp&host=192.168.156.209&port=8081&tries=1'] Namespace:pod-network-test-1883 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0719 13:06:18.510167 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0719 13:06:18.510211 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1883/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.206.241%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.156.209%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0719 13:06:18.554600 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0719 13:06:18.554643 21 utils.go:355] Waiting for responses: map[]
  I0719 13:06:18.554652 21 utils.go:359] reached 192.168.156.209 after 0/1 tries
  I0719 13:06:18.554661 21 networking.go:42] Breadth first check of 192.168.206.240 on host 172.31.6.59...
  I0719 13:06:18.558777 21 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.206.241:9080/dial?request=hostname&protocol=udp&host=192.168.206.240&port=8081&tries=1'] Namespace:pod-network-test-1883 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0719 13:06:18.558792 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0719 13:06:18.558835 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1883/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.206.241%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.206.240%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0719 13:06:18.592381 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0719 13:06:18.592424 21 utils.go:355] Waiting for responses: map[]
  I0719 13:06:18.592433 21 utils.go:359] reached 192.168.206.240 after 0/1 tries
  I0719 13:06:18.592440 21 networking.go:42] Breadth first check of 192.168.103.191 on host 172.31.64.234...
  I0719 13:06:18.596962 21 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.206.241:9080/dial?request=hostname&protocol=udp&host=192.168.103.191&port=8081&tries=1'] Namespace:pod-network-test-1883 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0719 13:06:18.596982 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0719 13:06:18.597033 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1883/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.206.241%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.103.191%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0719 13:06:18.644798 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0719 13:06:18.644842 21 utils.go:355] Waiting for responses: map[]
  I0719 13:06:18.644852 21 utils.go:359] reached 192.168.103.191 after 0/1 tries
  I0719 13:06:18.644860 21 networking.go:53] Going to retry 0 out of 3 pods....
  I0719 13:06:18.644977 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-1883" for this suite. @ 07/19/25 13:06:18.65
• [16.369 seconds]
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:245
  STEP: Creating a kubernetes client @ 07/19/25 13:06:18.659
  I0719 13:06:18.659382 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename downward-api @ 07/19/25 13:06:18.659
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:06:18.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:06:18.674
  STEP: Creating a pod to test downward api env vars @ 07/19/25 13:06:18.677
  E0719 13:06:19.196867      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:06:20.196966      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:06:21.197050      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:06:22.197509      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/19/25 13:06:22.708
  I0719 13:06:22.712177 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod downward-api-7b91160b-4407-441b-8430-0e681997bde5 container dapi-container: <nil>
  STEP: delete the pod @ 07/19/25 13:06:22.725
  I0719 13:06:22.747855 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7185" for this suite. @ 07/19/25 13:06:22.753
• [4.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:373
  STEP: Creating a kubernetes client @ 07/19/25 13:06:22.761
  I0719 13:06:22.761191 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename namespaces @ 07/19/25 13:06:22.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:06:22.774
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:06:22.777
  STEP: Updating Namespace "namespaces-8670" @ 07/19/25 13:06:22.78
  I0719 13:06:22.790233 21 namespace.go:390] Namespace "namespaces-8670" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"37f7b574-4ada-4c29-9631-0d21e665751f", "kubernetes.io/metadata.name":"namespaces-8670", "namespaces-8670":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0719 13:06:22.790319 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8670" for this suite. @ 07/19/25 13:06:22.854
• [0.102 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] ServiceCIDR and IPAddress API should support ServiceCIDR API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_cidrs.go:163
  STEP: Creating a kubernetes client @ 07/19/25 13:06:22.863
  I0719 13:06:22.863746 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename servicecidr @ 07/19/25 13:06:22.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:06:22.877
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:06:22.879
  STEP: getting @ 07/19/25 13:06:22.882
  STEP: patching @ 07/19/25 13:06:22.885
  STEP: updating @ 07/19/25 13:06:22.893
  STEP: listing @ 07/19/25 13:06:22.926
  STEP: watching @ 07/19/25 13:06:22.929
  I0719 13:06:22.930658 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "servicecidr-9396" for this suite. @ 07/19/25 13:06:22.955
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:199
  STEP: Creating a kubernetes client @ 07/19/25 13:06:22.962
  I0719 13:06:22.962714 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename emptydir @ 07/19/25 13:06:22.963
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:06:22.977
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:06:22.979
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 07/19/25 13:06:22.982
  E0719 13:06:23.198143      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:06:24.198255      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/19/25 13:06:25.003
  I0719 13:06:25.007281 21 output.go:207] Trying to get logs from node ip-172-31-42-177 pod pod-1ab4547c-bf57-4dcc-87a5-f7cbd8918cc7 container test-container: <nil>
  STEP: delete the pod @ 07/19/25 13:06:25.024
  I0719 13:06:25.043453 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-216" for this suite. @ 07/19/25 13:06:25.048
• [2.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 07/19/25 13:06:25.056
  I0719 13:06:25.056661 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename replicaset @ 07/19/25 13:06:25.057
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:06:25.07
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:06:25.073
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 07/19/25 13:06:25.077
  I0719 13:06:25.089210 21 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  E0719 13:06:25.198580      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:06:26.198671      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:06:27.198794      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:06:28.199006      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:06:29.199209      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:06:30.096041 21 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/19/25 13:06:30.096
  STEP: getting scale subresource @ 07/19/25 13:06:30.096
  STEP: updating a scale subresource @ 07/19/25 13:06:30.099
  STEP: verifying the replicaset Spec.Replicas was modified @ 07/19/25 13:06:30.106
  STEP: Patch a scale subresource @ 07/19/25 13:06:30.111
  I0719 13:06:30.121581 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-932" for this suite. @ 07/19/25 13:06:30.127
• [5.081 seconds]
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 07/19/25 13:06:30.137
  I0719 13:06:30.137403 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename daemonsets @ 07/19/25 13:06:30.137
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:06:30.149
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:06:30.152
  E0719 13:06:30.199702      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating simple DaemonSet "daemon-set" @ 07/19/25 13:06:30.246
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/19/25 13:06:30.252
  I0719 13:06:30.328938 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-3-129 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 13:06:30.328976 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-39-138 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 13:06:30.333489 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0719 13:06:30.333511 21 fixtures.go:131] Node ip-172-31-42-177 is running 0 daemon pod, expected 1
  E0719 13:06:31.199873      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:06:31.260113 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-3-129 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 13:06:31.260145 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-39-138 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 13:06:31.265819 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0719 13:06:31.265840 21 fixtures.go:131] Node ip-172-31-6-59 is running 0 daemon pod, expected 1
  E0719 13:06:32.200572      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:06:32.259001 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-3-129 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 13:06:32.259050 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-39-138 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 13:06:32.264553 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0719 13:06:32.264573 21 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 07/19/25 13:06:32.269
  I0719 13:06:32.274824 21 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 07/19/25 13:06:32.274
  I0719 13:06:32.286394 21 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 07/19/25 13:06:32.286
  I0719 13:06:32.287836 21 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I0719 13:06:32.287930 21 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0719 13:06:32.288034 21 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0719 13:06:32.288255 21 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0719 13:06:32.288322 21 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0719 13:06:32.288376 21 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-4930 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0719 13:06:32.288431 21 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 07/19/25 13:06:32.288
  STEP: watching for the daemon set status to be patched @ 07/19/25 13:06:32.296
  I0719 13:06:32.297796 21 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I0719 13:06:32.297870 21 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0719 13:06:32.297921 21 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0719 13:06:32.297997 21 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0719 13:06:32.298157 21 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0719 13:06:32.298194 21 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-4930 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0719 13:06:32.298600 21 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0719 13:06:32.298636 21 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-4930 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0719 13:06:32.298647 21 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 07/19/25 13:06:32.304
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4930, will wait for the garbage collector to delete the pods @ 07/19/25 13:06:32.304
  I0719 13:06:32.367116 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.971261ms
  I0719 13:06:32.468008 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.870384ms
  E0719 13:06:33.201389      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:06:34.202218      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:06:34.873768 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0719 13:06:34.873802 21 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0719 13:06:34.879716 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"25298"},"items":null}

  I0719 13:06:34.883094 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"25298"},"items":null}

  I0719 13:06:34.900938 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4930" for this suite. @ 07/19/25 13:06:34.905
• [4.778 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 07/19/25 13:06:34.915
  I0719 13:06:34.915460 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename container-probe @ 07/19/25 13:06:34.916
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:06:34.928
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:06:34.931
  STEP: Creating pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865 @ 07/19/25 13:06:34.933
  E0719 13:06:35.202711      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:06:36.202926      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/19/25 13:06:36.957
  I0719 13:06:36.961454 21 container_probe.go:1748] Initial restart count of pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab is 0
  I0719 13:06:36.964580 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:06:37.203877      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:06:38.203972      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:06:38.969155 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:06:39.204693      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:06:40.204897      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:06:40.974282 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:06:41.205693      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:06:42.205793      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:06:42.979789 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:06:43.206068      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:06:44.206800      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:06:44.987091 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:06:45.207471      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:06:46.207508      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:06:46.992593 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:06:47.207954      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:06:48.208162      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:06:48.997177 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:06:49.208362      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:06:50.208516      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:06:51.003410 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:06:51.208585      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:06:52.208670      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:06:53.010282 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:06:53.209569      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:06:54.209794      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:06:55.015162 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:06:55.210540      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:06:56.210633      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:06:57.020402 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:06:57.211678      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:06:58.211904      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:06:59.025571 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:06:59.212916      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:07:00.213132      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:07:01.030272 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:07:01.213574      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:07:02.213684      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:07:03.037233 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:07:03.214545      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:07:04.214618      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:07:05.042712 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:07:05.215052      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:07:06.215134      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:07:07.048863 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:07:07.216178      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:07:08.216219      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:07:09.054170 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:07:09.216279      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:07:10.216389      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:07:11.060754 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:07:11.217048      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:07:12.217074      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:07:13.066360 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:07:13.217587      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:07:14.218614      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:07:15.072585 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:07:15.218704      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:07:16.218790      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:07:17.077960 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:07:17.219213      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:07:18.219337      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:07:19.083720 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:07:19.219908      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:07:20.220010      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:07:21.089634 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:07:21.220829      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:07:22.220982      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:07:23.095460 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:07:23.221683      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:07:24.221817      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:07:25.099150 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:07:25.222434      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:07:26.222635      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:07:27.104410 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:07:27.222752      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:07:28.222843      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:07:29.109696 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:07:29.223899      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:07:30.224003      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:07:31.115495 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:07:31.224648      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:07:32.224789      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:07:33.120998 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:07:33.225068      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:07:34.225838      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:07:35.126577 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:07:35.226794      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:07:36.227537      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:07:37.133146 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:07:37.228311      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:07:38.228521      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:07:39.139605 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:07:39.228791      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:07:40.228982      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:07:41.143684 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:07:41.229849      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:07:42.230536      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:07:43.149745 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:07:43.230923      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:07:44.231103      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:07:45.155088 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:07:45.231251      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:07:46.231495      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:07:47.163441 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:07:47.231504      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:07:48.231688      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:07:49.168646 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:07:49.231854      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:07:50.232034      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:07:51.174483 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:07:51.232687      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:07:52.232860      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:07:53.180029 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:07:53.233220      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:07:54.234361      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:07:55.184737 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:07:55.234890      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:07:56.235029      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:07:57.190401 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:07:57.235556      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:07:58.236543      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:07:59.197094 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:07:59.237206      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:08:00.237361      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:08:01.201581 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:08:01.237754      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:08:02.238541      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:08:03.207840 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:08:03.239000      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:08:04.239116      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:08:05.213522 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:08:05.239657      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:08:06.239785      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:08:07.218551 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:08:07.240741      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:08:08.240912      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:08:09.225382 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:08:09.241513      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:08:10.241579      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:08:11.230824 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:08:11.242313      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:08:12.242537      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:08:13.237031 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:08:13.243156      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:08:14.243289      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:08:15.242742 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:08:15.243813      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:08:16.243970      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:08:17.244025      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:08:17.247878 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:08:18.244427      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:08:19.244621      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:08:19.252943 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:08:20.244836      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:08:21.245728      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:08:21.259275 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:08:22.245845      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:08:23.245929      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:08:23.265272 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:08:24.246316      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:08:25.246525      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:08:25.270188 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:08:26.247568      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:08:27.247649      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:08:27.275784 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:08:28.248570      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:08:29.249578      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:08:29.280996 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:08:30.249702      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:08:31.249808      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:08:31.287572 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:08:32.250524      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:08:33.250729      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:08:33.293100 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:08:34.251442      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:08:35.251661      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:08:35.298576 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:08:36.252509      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:08:37.252756      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:08:37.303863 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:08:38.253569      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:08:39.253684      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:08:39.310376 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:08:40.254371      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:08:41.254600      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:08:41.317311 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:08:42.254706      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:08:43.254867      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:08:43.323603 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:08:44.255320      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:08:45.255526      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:08:45.329430 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:08:46.255725      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:08:47.256494      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:08:47.335715 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:08:48.256562      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:08:49.257490      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:08:49.341809 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:08:50.257508      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:08:51.257883      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:08:51.347071 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:08:52.257898      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:08:53.257975      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:08:53.353763 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:08:54.258578      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:08:55.258650      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:08:55.359505 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:08:56.258764      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:08:57.258847      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:08:57.364491 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:08:58.259494      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:08:59.260330      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:08:59.371474 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:09:00.260404      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:09:01.260498      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:09:01.376129 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:09:02.261584      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:09:03.261701      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:09:03.381382 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:09:04.262515      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:09:05.263581      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:09:05.387947 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:09:06.263697      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:09:07.263866      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:09:07.393718 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:09:08.264002      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:09:09.264149      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:09:09.400534 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:09:10.264271      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:09:11.264334      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:09:11.406931 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:09:12.264810      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:09:13.264935      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:09:13.411992 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:09:14.265069      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:09:15.265634      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:09:15.419094 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:09:16.266693      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:09:17.266767      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:09:17.425184 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:09:18.267569      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:09:19.268565      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:09:19.430889 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:09:20.268748      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:09:21.268848      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:09:21.436870 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:09:22.269558      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:09:23.269660      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:09:23.443217 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:09:24.270260      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:09:25.270571      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:09:25.447660 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:09:26.271562      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:09:27.271714      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:09:27.453661 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:09:28.272505      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:09:29.273404      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:09:29.460326 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:09:30.274236      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:09:31.274325      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:09:31.465739 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:09:32.274616      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:09:33.274931      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:09:33.471323 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:09:34.275441      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:09:35.275485      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:09:35.476397 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:09:36.276191      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:09:37.276386      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:09:37.483178 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:09:38.276481      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:09:39.277313      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:09:39.489077 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:09:40.277516      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:09:41.278557      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:09:41.494539 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:09:42.279455      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:09:43.279636      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:09:43.500968 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:09:44.279753      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:09:45.279947      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:09:45.506137 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:09:46.280103      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:09:47.280285      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:09:47.512659 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:09:48.280459      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:09:49.281431      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:09:49.517328 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:09:50.281507      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:09:51.281691      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:09:51.522684 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:09:52.282597      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:09:53.282731      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:09:53.528913 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:09:54.282826      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:09:55.282901      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:09:55.535125 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:09:56.282975      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:09:57.283129      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:09:57.540626 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:09:58.283523      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:09:59.284413      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:09:59.546118 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:10:00.284670      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:10:01.284895      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:10:01.552717 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:10:02.285220      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:10:03.285299      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:10:03.558252 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:10:04.286255      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:10:05.286957      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:10:05.563164 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:10:06.287569      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:10:07.287637      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:10:07.569277 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:10:08.288572      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:10:09.288632      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:10:09.574649 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:10:10.289571      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:10:11.289649      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:10:11.580898 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:10:12.290736      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:10:13.291615      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:10:13.588040 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:10:14.291719      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:10:15.291825      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:10:15.592977 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:10:16.292569      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:10:17.292809      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:10:17.597957 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:10:18.293798      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:10:19.293833      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:10:19.604057 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:10:20.294829      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:10:21.295655      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:10:21.610062 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:10:22.295752      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:10:23.295824      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:10:23.617691 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:10:24.296493      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:10:25.297540      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:10:25.623268 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:10:26.298638      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:10:27.298718      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:10:27.628595 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:10:28.298811      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:10:29.298909      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:10:29.634150 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:10:30.299578      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:10:31.299706      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:10:31.640552 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:10:32.299828      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:10:33.300003      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:10:33.645937 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:10:34.300575      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:10:35.300703      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:10:35.652890 21 container_probe.go:1758] Get pod busybox-6696ecf6-7350-4f5b-9270-4e2761e94cab in namespace container-probe-3865
  E0719 13:10:36.301644      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:10:37.301713      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 07/19/25 13:10:37.653
  I0719 13:10:37.672409 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3865" for this suite. @ 07/19/25 13:10:37.681
• [242.774 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:131
  STEP: Creating a kubernetes client @ 07/19/25 13:10:37.689
  I0719 13:10:37.689145 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename downward-api @ 07/19/25 13:10:37.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:10:37.703
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:10:37.705
  STEP: Creating the pod @ 07/19/25 13:10:37.708
  E0719 13:10:38.301849      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:10:39.301942      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:10:40.269037 21 pod_client.go:173] Successfully updated pod "labelsupdate7aeb4752-0392-4cd0-ab7d-7eb13227b646"
  E0719 13:10:40.302706      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:10:41.302887      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:10:42.303189      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:10:43.303434      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:10:44.298936 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0719 13:10:44.303636      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "downward-api-7812" for this suite. @ 07/19/25 13:10:44.304
• [6.623 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 07/19/25 13:10:44.312
  I0719 13:10:44.312317 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename watch @ 07/19/25 13:10:44.313
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:10:44.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:10:44.331
  STEP: creating a new configmap @ 07/19/25 13:10:44.334
  STEP: modifying the configmap once @ 07/19/25 13:10:44.341
  STEP: modifying the configmap a second time @ 07/19/25 13:10:44.349
  STEP: deleting the configmap @ 07/19/25 13:10:44.36
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 07/19/25 13:10:44.368
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 07/19/25 13:10:44.369
  I0719 13:10:44.369677 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-6916  32659db0-f038-4455-ac46-0c5346be7f6f 25931 0 2025-07-19 13:10:44 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-07-19 13:10:44 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0719 13:10:44.369784 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-6916  32659db0-f038-4455-ac46-0c5346be7f6f 25932 0 2025-07-19 13:10:44 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-07-19 13:10:44 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0719 13:10:44.369860 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6916" for this suite. @ 07/19/25 13:10:44.404
• [0.101 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 07/19/25 13:10:44.413
  I0719 13:10:44.413269 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename configmap @ 07/19/25 13:10:44.413
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:10:44.431
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:10:44.434
  STEP: Creating configMap that has name configmap-test-emptyKey-42517067-0f53-4c77-9ac3-df65affbe670 @ 07/19/25 13:10:44.436
  I0719 13:10:44.438150 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9354" for this suite. @ 07/19/25 13:10:44.505
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:814
  STEP: Creating a kubernetes client @ 07/19/25 13:10:44.515
  I0719 13:10:44.515241 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename services @ 07/19/25 13:10:44.515
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:10:44.527
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:10:44.529
  STEP: creating service multi-endpoint-test in namespace services-7558 @ 07/19/25 13:10:44.532
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7558 to expose endpoints map[] @ 07/19/25 13:10:44.551
  I0719 13:10:44.556531      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0719 13:10:44.556564 21 service.go:4613] Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  E0719 13:10:45.304673      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:10:45.562653      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0719 13:10:45.569635 21 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-7558 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-7558 @ 07/19/25 13:10:45.569
  E0719 13:10:46.305716      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:10:47.305817      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7558 to expose endpoints map[pod1:[100]] @ 07/19/25 13:10:47.598
  I0719 13:10:47.606005      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0719 13:10:47.611477 21 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-7558 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-7558 @ 07/19/25 13:10:47.611
  E0719 13:10:48.305929      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:10:49.306022      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7558 to expose endpoints map[pod1:[100] pod2:[101]] @ 07/19/25 13:10:49.631
  I0719 13:10:49.642095      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0719 13:10:49.648108 21 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-7558 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 07/19/25 13:10:49.648
  I0719 13:10:49.648153 21 resource.go:361] Creating new exec pod
  E0719 13:10:50.306134      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:10:51.306204      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:10:51.670550 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-7558 exec execpodqgd9z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I0719 13:10:51.758201 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test (10.152.183.239) 80 port [tcp/http] succeeded!\n"
  I0719 13:10:51.758259 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0719 13:10:51.758329 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-7558 exec execpodqgd9z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.239 80'
  I0719 13:10:51.841550 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.239 80\nConnection to 10.152.183.239 80 port [tcp/http] succeeded!\n"
  I0719 13:10:51.841598 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0719 13:10:51.841666 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-7558 exec execpodqgd9z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0719 13:10:51.924479 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test (10.152.183.239) 81 port [tcp/*] succeeded!\n"
  I0719 13:10:51.924612 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0719 13:10:51.924692 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-7558 exec execpodqgd9z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.239 81'
  I0719 13:10:52.003541 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.239 81\nConnection to 10.152.183.239 81 port [tcp/*] succeeded!\n"
  I0719 13:10:52.003580 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-7558 @ 07/19/25 13:10:52.003
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7558 to expose endpoints map[pod2:[101]] @ 07/19/25 13:10:52.026
  I0719 13:10:52.037563      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0719 13:10:52.042490 21 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-7558 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-7558 @ 07/19/25 13:10:52.042
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7558 to expose endpoints map[] @ 07/19/25 13:10:52.059
  I0719 13:10:52.062503      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0719 13:10:52.067334 21 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-7558 exposes endpoints map[]
  I0719 13:10:52.095391 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7558" for this suite. @ 07/19/25 13:10:52.101
• [7.593 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1081
  STEP: Creating a kubernetes client @ 07/19/25 13:10:52.112
  I0719 13:10:52.112017 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename kubectl @ 07/19/25 13:10:52.112
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:10:52.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:10:52.129
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 07/19/25 13:10:52.132
  I0719 13:10:52.132571 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-6732 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0719 13:10:52.226048 21 builder.go:146] stderr: ""
  I0719 13:10:52.226103 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 07/19/25 13:10:52.226
  I0719 13:10:52.226180 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-6732 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I0719 13:10:52.282045 21 builder.go:146] stderr: ""
  I0719 13:10:52.282090 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 07/19/25 13:10:52.282
  I0719 13:10:52.286745 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-6732 delete pods e2e-test-httpd-pod'
  E0719 13:10:52.307074      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:10:53.307474      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:10:54.268864 21 builder.go:146] stderr: ""
  I0719 13:10:54.268907 21 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0719 13:10:54.269089 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6732" for this suite. @ 07/19/25 13:10:54.275
• [2.171 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:769
  STEP: Creating a kubernetes client @ 07/19/25 13:10:54.283
  I0719 13:10:54.283369 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename statefulset @ 07/19/25 13:10:54.283
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:10:54.297
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:10:54.3
  STEP: Creating service test in namespace statefulset-7802 @ 07/19/25 13:10:54.303
  E0719 13:10:54.307799      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating stateful set ss in namespace statefulset-7802 @ 07/19/25 13:10:54.309
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-7802 @ 07/19/25 13:10:54.317
  I0719 13:10:54.324572 21 wait.go:44] Found 0 stateful pods, waiting for 1
  E0719 13:10:55.308498      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:10:56.308626      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:10:57.308698      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:10:58.308813      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:10:59.308882      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:11:00.309205      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:11:01.309453      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:11:02.309669      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:11:03.309901      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:11:04.309995      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:11:04.324310 21 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 07/19/25 13:11:04.324
  I0719 13:11:04.328269 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=statefulset-7802 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0719 13:11:04.420927 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0719 13:11:04.420961 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0719 13:11:04.420969 21 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0719 13:11:04.424963 21 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0719 13:11:05.310137      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:11:06.310239      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:11:07.310440      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:11:08.310588      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:11:09.311517      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:11:10.311638      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:11:11.311836      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:11:12.311927      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:11:13.312111      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:11:14.312241      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:11:14.427134 21 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0719 13:11:14.427176 21 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0719 13:11:14.448796 21 resource.go:168] POD   NODE              PHASE    GRACE  CONDITIONS
  I0719 13:11:14.448847 21 resource.go:175] ss-0  ip-172-31-42-177  Running         [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-19 13:10:55 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-19 13:10:54 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-19 13:11:05 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-19 13:11:05 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-19 13:10:54 +0000 UTC  }]
  I0719 13:11:14.448855 21 resource.go:175] ss-2                    Pending         []
  I0719 13:11:14.448860 21 resource.go:178] 
  I0719 13:11:14.448866 21 statefulset.go:2448] StatefulSet ss has not reached scale 3, at 2
  E0719 13:11:15.312435      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:11:15.455698 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 8.99254824s
  E0719 13:11:16.312657      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:11:16.462584 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 7.985247035s
  E0719 13:11:17.312778      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:11:17.469932 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 6.979057563s
  E0719 13:11:18.313833      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:11:18.476611 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 5.971012511s
  E0719 13:11:19.314577      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:11:19.484775 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 4.964279478s
  E0719 13:11:20.314695      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:11:20.490420 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 3.957145693s
  E0719 13:11:21.314795      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:11:21.497778 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 2.951048226s
  E0719 13:11:22.315665      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:11:22.505194 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 1.94325056s
  E0719 13:11:23.316011      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:11:23.512154 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 935.778105ms
  E0719 13:11:24.317001      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-7802 @ 07/19/25 13:11:24.513
  I0719 13:11:24.520276 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=statefulset-7802 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0719 13:11:24.603578 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0719 13:11:24.603613 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0719 13:11:24.603623 21 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0719 13:11:24.603662 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=statefulset-7802 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0719 13:11:24.700212 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0719 13:11:24.700250 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0719 13:11:24.700260 21 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0719 13:11:24.700389 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=statefulset-7802 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0719 13:11:24.780359 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0719 13:11:24.780395 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0719 13:11:24.780404 21 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0719 13:11:24.787002 21 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  E0719 13:11:25.317555      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:11:26.317672      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:11:27.317747      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:11:28.317868      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:11:29.317943      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:11:30.318063      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:11:31.318160      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:11:32.318285      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:11:33.318637      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:11:34.318566      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:11:34.788526 21 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0719 13:11:34.788555 21 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0719 13:11:34.788561 21 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 07/19/25 13:11:34.788
  I0719 13:11:34.792972 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=statefulset-7802 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0719 13:11:34.879190 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0719 13:11:34.879224 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0719 13:11:34.879232 21 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0719 13:11:34.879287 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=statefulset-7802 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0719 13:11:34.986275 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0719 13:11:34.986309 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0719 13:11:34.986317 21 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0719 13:11:34.986373 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=statefulset-7802 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0719 13:11:35.080190 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0719 13:11:35.080231 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0719 13:11:35.080240 21 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0719 13:11:35.080248 21 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0719 13:11:35.084304 21 wait.go:122] Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0719 13:11:35.318724      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:11:36.318800      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:11:37.319048      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:11:38.319140      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:11:39.319270      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:11:40.319372      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:11:41.319600      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:11:42.319832      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:11:43.319965      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:11:44.320043      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:11:45.091733 21 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0719 13:11:45.091767 21 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0719 13:11:45.091773 21 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0719 13:11:45.112625 21 resource.go:168] POD   NODE              PHASE    GRACE  CONDITIONS
  I0719 13:11:45.112674 21 resource.go:175] ss-0  ip-172-31-42-177  Running         [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-19 13:10:55 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-19 13:10:54 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-19 13:11:35 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-19 13:11:35 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-19 13:10:54 +0000 UTC  }]
  I0719 13:11:45.112691 21 resource.go:175] ss-1  ip-172-31-64-234  Running         [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-19 13:11:15 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-19 13:11:14 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-19 13:11:35 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-19 13:11:35 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-19 13:11:14 +0000 UTC  }]
  I0719 13:11:45.112705 21 resource.go:175] ss-2  ip-172-31-6-59    Running  30s    [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-19 13:11:15 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-19 13:11:14 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-19 13:11:35 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-19 13:11:35 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-19 13:11:14 +0000 UTC  }]
  I0719 13:11:45.112709 21 resource.go:178] 
  I0719 13:11:45.112716 21 statefulset.go:2448] StatefulSet ss has not reached scale 0, at 3
  E0719 13:11:45.320951      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:11:46.120989 21 resource.go:168] POD   NODE              PHASE      GRACE  CONDITIONS
  I0719 13:11:46.121044 21 resource.go:175] ss-0  ip-172-31-42-177  Succeeded  30s    [{PodReadyToStartContainers 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-19 13:11:45 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-19 13:10:54 +0000 UTC PodCompleted } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-19 13:11:35 +0000 UTC PodCompleted } {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-19 13:11:35 +0000 UTC PodCompleted } {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-19 13:10:54 +0000 UTC  }]
  I0719 13:11:46.121060 21 resource.go:175] ss-2  ip-172-31-6-59    Succeeded  30s    [{PodReadyToStartContainers 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-19 13:11:45 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-19 13:11:14 +0000 UTC PodCompleted } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-19 13:11:35 +0000 UTC PodCompleted } {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-19 13:11:35 +0000 UTC PodCompleted } {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-19 13:11:14 +0000 UTC  }]
  I0719 13:11:46.121065 21 resource.go:178] 
  I0719 13:11:46.121070 21 statefulset.go:2448] StatefulSet ss has not reached scale 0, at 2
  E0719 13:11:46.321313      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:11:47.129115 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 7.980553875s
  E0719 13:11:47.321442      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:11:48.136075 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 6.973529707s
  E0719 13:11:48.322474      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:11:49.142505 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 5.965626284s
  E0719 13:11:49.322849      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:11:50.148626 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 4.960095736s
  E0719 13:11:50.322902      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:11:51.155782 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 3.952996028s
  E0719 13:11:51.323030      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:11:52.161057 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 2.946255371s
  E0719 13:11:52.323494      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:11:53.167077 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 1.941449767s
  E0719 13:11:53.323530      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:11:54.173190 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 935.337239ms
  E0719 13:11:54.324566      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-7802 @ 07/19/25 13:11:55.173
  I0719 13:11:55.179216 21 rest.go:153] Scaling statefulset ss to 0
  I0719 13:11:55.188104 21 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0719 13:11:55.191595 21 statefulset.go:138] Deleting all statefulset in ns statefulset-7802
  I0719 13:11:55.197459 21 rest.go:153] Scaling statefulset ss to 0
  I0719 13:11:55.205013 21 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0719 13:11:55.208305 21 rest.go:91] Deleting statefulset ss
  I0719 13:11:55.226467 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7802" for this suite. @ 07/19/25 13:11:55.231
• [60.957 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 07/19/25 13:11:55.241
  I0719 13:11:55.241129 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename downward-api @ 07/19/25 13:11:55.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:11:55.256
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:11:55.258
  STEP: Creating a pod to test downward api env vars @ 07/19/25 13:11:55.261
  E0719 13:11:55.325217      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:11:56.325333      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:11:57.326058      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:11:58.326864      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/19/25 13:11:59.29
  I0719 13:11:59.295850 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod downward-api-7196a3fc-955f-454c-ac61-1114b3d6112c container dapi-container: <nil>
  STEP: delete the pod @ 07/19/25 13:11:59.304
  I0719 13:11:59.322003 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0719 13:11:59.327121      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "downward-api-3311" for this suite. @ 07/19/25 13:11:59.328
• [4.097 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:423
  STEP: Creating a kubernetes client @ 07/19/25 13:11:59.338
  I0719 13:11:59.338398 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename proxy @ 07/19/25 13:11:59.338
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:11:59.348
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:11:59.351
  I0719 13:11:59.353520 21 proxy.go:430] Creating pod...
  E0719 13:12:00.327498      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:12:01.327573      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:12:01.378578 21 proxy.go:454] Creating service...
  I0719 13:12:01.400107 21 proxy.go:491] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2297/pods/agnhost/proxy?method=DELETE
  I0719 13:12:01.406237 21 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0719 13:12:01.406262 21 proxy.go:491] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2297/pods/agnhost/proxy?method=OPTIONS
  I0719 13:12:01.411072 21 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0719 13:12:01.411097 21 proxy.go:491] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2297/pods/agnhost/proxy?method=PATCH
  I0719 13:12:01.416108 21 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0719 13:12:01.416132 21 proxy.go:491] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2297/pods/agnhost/proxy?method=POST
  I0719 13:12:01.420538 21 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0719 13:12:01.420568 21 proxy.go:491] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2297/pods/agnhost/proxy?method=PUT
  I0719 13:12:01.425235 21 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0719 13:12:01.425264 21 proxy.go:502] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2297/services/e2e-proxy-test-service/proxy?method=DELETE
  I0719 13:12:01.432027 21 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0719 13:12:01.432062 21 proxy.go:502] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2297/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0719 13:12:01.437423 21 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0719 13:12:01.437443 21 proxy.go:502] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2297/services/e2e-proxy-test-service/proxy?method=PATCH
  I0719 13:12:01.445311 21 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0719 13:12:01.445370 21 proxy.go:502] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2297/services/e2e-proxy-test-service/proxy?method=POST
  I0719 13:12:01.451696 21 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0719 13:12:01.451730 21 proxy.go:502] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2297/services/e2e-proxy-test-service/proxy?method=PUT
  I0719 13:12:01.458635 21 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0719 13:12:01.458673 21 proxy.go:522] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2297/pods/agnhost/proxy?method=GET
  I0719 13:12:01.462618 21 proxy.go:530] http.Client request:GET StatusCode:301
  I0719 13:12:01.462657 21 proxy.go:522] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2297/services/e2e-proxy-test-service/proxy?method=GET
  I0719 13:12:01.469772 21 proxy.go:530] http.Client request:GET StatusCode:301
  I0719 13:12:01.469793 21 proxy.go:522] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2297/pods/agnhost/proxy?method=HEAD
  I0719 13:12:01.472987 21 proxy.go:530] http.Client request:HEAD StatusCode:301
  I0719 13:12:01.473010 21 proxy.go:522] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2297/services/e2e-proxy-test-service/proxy?method=HEAD
  I0719 13:12:01.479922 21 proxy.go:530] http.Client request:HEAD StatusCode:301
  I0719 13:12:01.480079 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-2297" for this suite. @ 07/19/25 13:12:01.485
• [2.156 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 07/19/25 13:12:01.494
  I0719 13:12:01.494554 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename csiinlinevolumes @ 07/19/25 13:12:01.495
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:12:01.508
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:12:01.511
  STEP: creating @ 07/19/25 13:12:01.513
  STEP: getting @ 07/19/25 13:12:01.539
  STEP: listing in namespace @ 07/19/25 13:12:01.543
  STEP: patching @ 07/19/25 13:12:01.547
  STEP: deleting @ 07/19/25 13:12:01.555
  I0719 13:12:01.567827 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-7062" for this suite. @ 07/19/25 13:12:01.586
• [0.102 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:74
  STEP: Creating a kubernetes client @ 07/19/25 13:12:01.596
  I0719 13:12:01.596539 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename projected @ 07/19/25 13:12:01.597
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:12:01.608
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:12:01.611
  STEP: Creating configMap with name projected-configmap-test-volume-12265a71-55b7-4a7a-8f0d-836c7b74731c @ 07/19/25 13:12:01.613
  STEP: Creating a pod to test consume configMaps @ 07/19/25 13:12:01.617
  E0719 13:12:02.327680      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:12:03.327791      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/19/25 13:12:03.64
  I0719 13:12:03.644329 21 output.go:207] Trying to get logs from node ip-172-31-42-177 pod pod-projected-configmaps-c9d0acae-f415-4fb6-a7a5-ed3ad5529f56 container agnhost-container: <nil>
  STEP: delete the pod @ 07/19/25 13:12:03.662
  I0719 13:12:03.685163 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3375" for this suite. @ 07/19/25 13:12:03.692
• [2.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:175
  STEP: Creating a kubernetes client @ 07/19/25 13:12:03.701
  I0719 13:12:03.701636 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename configmap @ 07/19/25 13:12:03.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:12:03.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:12:03.717
  STEP: Creating configMap with name configmap-test-upd-12751199-16bc-4693-99ae-0407ae422dfd @ 07/19/25 13:12:03.791
  STEP: Creating the pod @ 07/19/25 13:12:03.798
  E0719 13:12:04.328827      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:12:05.329725      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 07/19/25 13:12:05.824
  STEP: Waiting for pod with binary data @ 07/19/25 13:12:05.833
  I0719 13:12:05.840540 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-451" for this suite. @ 07/19/25 13:12:05.845
• [2.152 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:811
  STEP: Creating a kubernetes client @ 07/19/25 13:12:05.854
  I0719 13:12:05.854293 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename statefulset @ 07/19/25 13:12:05.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:12:05.868
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:12:05.87
  STEP: Creating service test in namespace statefulset-733 @ 07/19/25 13:12:05.873
  STEP: Looking for a node to schedule stateful set and pod @ 07/19/25 13:12:05.879
  STEP: Creating pod with conflicting port in namespace statefulset-733 @ 07/19/25 13:12:05.946
  STEP: Waiting until pod test-pod will start running in namespace statefulset-733 @ 07/19/25 13:12:05.961
  E0719 13:12:06.329748      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:12:07.329928      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-733 @ 07/19/25 13:12:07.97
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-733 @ 07/19/25 13:12:07.977
  I0719 13:12:07.994216 21 statefulset.go:884] Observed stateful pod in namespace: statefulset-733, name: ss-0, uid: 8fdc0fb6-0e58-4594-907e-34fa443fc7ab, status phase: Pending. Waiting for statefulset controller to delete.
  I0719 13:12:08.018108 21 statefulset.go:884] Observed stateful pod in namespace: statefulset-733, name: ss-0, uid: 8fdc0fb6-0e58-4594-907e-34fa443fc7ab, status phase: Failed. Waiting for statefulset controller to delete.
  I0719 13:12:08.027109 21 statefulset.go:884] Observed stateful pod in namespace: statefulset-733, name: ss-0, uid: 8fdc0fb6-0e58-4594-907e-34fa443fc7ab, status phase: Failed. Waiting for statefulset controller to delete.
  I0719 13:12:08.031114 21 statefulset.go:878] Observed delete event for stateful pod ss-0 in namespace statefulset-733
  STEP: Removing pod with conflicting port in namespace statefulset-733 @ 07/19/25 13:12:08.031
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-733 and will be in running state @ 07/19/25 13:12:08.05
  E0719 13:12:08.330882      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:12:09.331011      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:12:10.059551 21 statefulset.go:138] Deleting all statefulset in ns statefulset-733
  I0719 13:12:10.065308 21 rest.go:153] Scaling statefulset ss to 0
  E0719 13:12:10.331113      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:12:11.331177      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:12:12.331318      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:12:13.331506      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:12:14.331746      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:12:15.331808      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:12:16.331960      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:12:17.332022      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:12:18.332164      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:12:19.332317      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:12:20.083264 21 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0719 13:12:20.088038 21 rest.go:91] Deleting statefulset ss
  I0719 13:12:20.106584 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-733" for this suite. @ 07/19/25 13:12:20.111
• [14.266 seconds]
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 07/19/25 13:12:20.119
  I0719 13:12:20.119868 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename kubelet-test @ 07/19/25 13:12:20.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:12:20.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:12:20.135
  E0719 13:12:20.332463      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:12:21.332504      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:12:22.172867 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2524" for this suite. @ 07/19/25 13:12:22.178
• [2.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should mark indexes as failed when the FailIndex action is matched in podFailurePolicy [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:730
  STEP: Creating a kubernetes client @ 07/19/25 13:12:22.185
  I0719 13:12:22.185514 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename job @ 07/19/25 13:12:22.186
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:12:22.199
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:12:22.201
  STEP: Creating an indexed job with failing pods matching the FailIndex action @ 07/19/25 13:12:22.204
  STEP: Awaiting for the job to fail as all indexes are failed @ 07/19/25 13:12:22.212
  E0719 13:12:22.333066      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:12:23.333147      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:12:24.333413      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:12:25.333544      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the Job status fields to ensure the upper indexes didn't execute @ 07/19/25 13:12:26.227
  I0719 13:12:26.231180 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3275" for this suite. @ 07/19/25 13:12:26.235
• [4.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceFieldSelectors [Privileged:ClusterAdmin] CustomResourceFieldSelectors MUST list and watch custom resources matching the field selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_selectable_fields.go:124
  STEP: Creating a kubernetes client @ 07/19/25 13:12:26.246
  I0719 13:12:26.246924 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename crd-selectable-fields @ 07/19/25 13:12:26.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:12:26.26
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:12:26.263
  STEP: Setting up server cert @ 07/19/25 13:12:26.265
  E0719 13:12:26.333926      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 07/19/25 13:12:26.507
  STEP: Deploying the custom resource conversion webhook pod @ 07/19/25 13:12:26.515
  STEP: Wait for the deployment to be ready @ 07/19/25 13:12:26.53
  I0719 13:12:26.541175 21 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0719 13:12:27.335036      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:12:28.335142      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/19/25 13:12:28.555
  STEP: Verifying the service has paired with the endpoint @ 07/19/25 13:12:28.572
  E0719 13:12:29.335205      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:12:29.573465 21 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  STEP: Creating a custom resource definition with selectable fields @ 07/19/25 13:12:29.58
  I0719 13:12:29.580515 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Creating a custom resource conversion webhook @ 07/19/25 13:12:30.093
  E0719 13:12:30.335840      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:12:31.335918      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Watching with field selectors @ 07/19/25 13:12:32.145
  STEP: Registering informers with field selectors @ 07/19/25 13:12:32.148
  STEP: Creating custom resources @ 07/19/25 13:12:32.148
  STEP: Listing v2 custom resources with field selector host=host1 @ 07/19/25 13:12:32.174
  STEP: Listing v2 custom resources with field selector host=host1,port=80 @ 07/19/25 13:12:32.178
  STEP: Listing v1 custom resources with field selector hostPort=host1:80 @ 07/19/25 13:12:32.182
  STEP: Listing v1 custom resources with field selector hostPort=host1:8080 @ 07/19/25 13:12:32.186
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1 @ 07/19/25 13:12:32.191
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1,port=80 @ 07/19/25 13:12:32.196
  STEP: Waiting for watch events to contain v1 custom resources for field selector hostPort=host1:80 @ 07/19/25 13:12:32.196
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1 @ 07/19/25 13:12:32.196
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1,port=80 @ 07/19/25 13:12:32.196
  STEP: Deleting one custom resources to ensure that deletions are observed @ 07/19/25 13:12:32.196
  STEP: Updating one custom resources to ensure that deletions are observed @ 07/19/25 13:12:32.212
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1 @ 07/19/25 13:12:32.231
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1,port=80 @ 07/19/25 13:12:32.235
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1 @ 07/19/25 13:12:32.239
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1,port=80 @ 07/19/25 13:12:32.244
  STEP: Waiting for v1 watch events after updates and deletes for field selector hostPort=host1:80 @ 07/19/25 13:12:32.244
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1 @ 07/19/25 13:12:32.244
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1,port=80 @ 07/19/25 13:12:32.244
  E0719 13:12:32.336370      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:12:32.812963 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-selectable-fields-4935" for this suite. @ 07/19/25 13:12:32.819
• [6.581 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2207
  STEP: Creating a kubernetes client @ 07/19/25 13:12:32.83
  I0719 13:12:32.830272 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename services @ 07/19/25 13:12:32.831
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:12:32.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:12:32.846
  STEP: creating service in namespace services-8576 @ 07/19/25 13:12:32.849
  STEP: creating service affinity-clusterip-transition in namespace services-8576 @ 07/19/25 13:12:32.849
  I0719 13:12:32.882783 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0719 13:12:33.337378      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:12:34.338406      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:12:34.908969 21 resource.go:361] Creating new exec pod
  E0719 13:12:35.338621      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:12:36.338688      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:12:36.937900 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-8576 exec execpod-affinityxvfrt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0719 13:12:37.019047 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition (10.152.183.63) 80 port [tcp/http] succeeded!\n"
  I0719 13:12:37.019101 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0719 13:12:37.019166 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-8576 exec execpod-affinityxvfrt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.63 80'
  I0719 13:12:37.099359 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.63 80\nConnection to 10.152.183.63 80 port [tcp/http] succeeded!\n"
  I0719 13:12:37.099397 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0719 13:12:37.109582 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-8576 exec execpod-affinityxvfrt -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.63:80/ ; done'
  I0719 13:12:37.257740 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.63:80/\n"
  I0719 13:12:37.257808 21 builder.go:147] stdout: "\naffinity-clusterip-transition-5cffb65545-zkddc\naffinity-clusterip-transition-5cffb65545-zkddc\naffinity-clusterip-transition-5cffb65545-zkddc\naffinity-clusterip-transition-5cffb65545-sz59c\naffinity-clusterip-transition-5cffb65545-zst2q\naffinity-clusterip-transition-5cffb65545-zkddc\naffinity-clusterip-transition-5cffb65545-zst2q\naffinity-clusterip-transition-5cffb65545-sz59c\naffinity-clusterip-transition-5cffb65545-zkddc\naffinity-clusterip-transition-5cffb65545-zkddc\naffinity-clusterip-transition-5cffb65545-sz59c\naffinity-clusterip-transition-5cffb65545-zkddc\naffinity-clusterip-transition-5cffb65545-sz59c\naffinity-clusterip-transition-5cffb65545-zkddc\naffinity-clusterip-transition-5cffb65545-zkddc\naffinity-clusterip-transition-5cffb65545-sz59c"
  I0719 13:12:37.257826 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zkddc
  I0719 13:12:37.257835 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zkddc
  I0719 13:12:37.257841 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zkddc
  I0719 13:12:37.257847 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-sz59c
  I0719 13:12:37.257853 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zst2q
  I0719 13:12:37.257862 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zkddc
  I0719 13:12:37.257869 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zst2q
  I0719 13:12:37.257875 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-sz59c
  I0719 13:12:37.257880 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zkddc
  I0719 13:12:37.257900 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zkddc
  I0719 13:12:37.257906 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-sz59c
  I0719 13:12:37.257913 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zkddc
  I0719 13:12:37.257919 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-sz59c
  I0719 13:12:37.257929 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zkddc
  I0719 13:12:37.257936 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zkddc
  I0719 13:12:37.257941 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-sz59c
  I0719 13:12:37.271979 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-8576 exec execpod-affinityxvfrt -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.63:80/ ; done'
  E0719 13:12:37.339489      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:12:37.414281 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.63:80/\n"
  I0719 13:12:37.414329 21 builder.go:147] stdout: "\naffinity-clusterip-transition-5cffb65545-zkddc\naffinity-clusterip-transition-5cffb65545-zkddc\naffinity-clusterip-transition-5cffb65545-zkddc\naffinity-clusterip-transition-5cffb65545-zkddc\naffinity-clusterip-transition-5cffb65545-zkddc\naffinity-clusterip-transition-5cffb65545-zkddc\naffinity-clusterip-transition-5cffb65545-zkddc\naffinity-clusterip-transition-5cffb65545-zkddc\naffinity-clusterip-transition-5cffb65545-zkddc\naffinity-clusterip-transition-5cffb65545-zkddc\naffinity-clusterip-transition-5cffb65545-zkddc\naffinity-clusterip-transition-5cffb65545-zkddc\naffinity-clusterip-transition-5cffb65545-zkddc\naffinity-clusterip-transition-5cffb65545-zkddc\naffinity-clusterip-transition-5cffb65545-zkddc\naffinity-clusterip-transition-5cffb65545-zkddc"
  I0719 13:12:37.414355 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zkddc
  I0719 13:12:37.414363 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zkddc
  I0719 13:12:37.414369 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zkddc
  I0719 13:12:37.414375 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zkddc
  I0719 13:12:37.414381 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zkddc
  I0719 13:12:37.414386 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zkddc
  I0719 13:12:37.414391 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zkddc
  I0719 13:12:37.414399 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zkddc
  I0719 13:12:37.414405 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zkddc
  I0719 13:12:37.414412 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zkddc
  I0719 13:12:37.414417 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zkddc
  I0719 13:12:37.414422 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zkddc
  I0719 13:12:37.414427 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zkddc
  I0719 13:12:37.414437 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zkddc
  I0719 13:12:37.414442 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zkddc
  I0719 13:12:37.414447 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-zkddc
  I0719 13:12:37.414594 21 service.go:4352] Cleaning up the exec pod
  I0719 13:12:37.466815 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8576" for this suite. @ 07/19/25 13:12:37.477
• [4.659 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:255
  STEP: Creating a kubernetes client @ 07/19/25 13:12:37.489
  I0719 13:12:37.489736 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename namespaces @ 07/19/25 13:12:37.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:12:37.503
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:12:37.505
  STEP: Creating a test namespace @ 07/19/25 13:12:37.508
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:12:37.519
  STEP: Creating a service in the namespace @ 07/19/25 13:12:37.521
  STEP: Deleting the namespace @ 07/19/25 13:12:37.539
  STEP: Waiting for the namespace to be removed. @ 07/19/25 13:12:37.55
  E0719 13:12:38.340596      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:12:39.341024      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:12:40.341550      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:12:41.341742      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:12:42.341921      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:12:43.341999      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 07/19/25 13:12:43.556
  STEP: Verifying there is no service in the namespace @ 07/19/25 13:12:43.569
  I0719 13:12:43.572828 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6029" for this suite. @ 07/19/25 13:12:43.578
  STEP: Destroying namespace "nsdeletetest-757" for this suite. @ 07/19/25 13:12:43.587
  I0719 13:12:43.590717 21 framework.go:370] Namespace nsdeletetest-757 was already deleted
  STEP: Destroying namespace "nsdeletetest-3938" for this suite. @ 07/19/25 13:12:43.59
• [6.111 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:753
  STEP: Creating a kubernetes client @ 07/19/25 13:12:43.6
  I0719 13:12:43.600841 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename services @ 07/19/25 13:12:43.601
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:12:43.611
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:12:43.614
  STEP: creating service endpoint-test2 in namespace services-5999 @ 07/19/25 13:12:43.616
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5999 to expose endpoints map[] @ 07/19/25 13:12:43.635
  I0719 13:12:43.640264      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0719 13:12:43.640297 21 service.go:4613] Failed go get Endpoints object: endpoints "endpoint-test2" not found
  E0719 13:12:44.343008      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:12:44.647781      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0719 13:12:44.653316 21 service.go:4645] successfully validated that service endpoint-test2 in namespace services-5999 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-5999 @ 07/19/25 13:12:44.653
  E0719 13:12:45.343496      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:12:46.343633      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5999 to expose endpoints map[pod1:[80]] @ 07/19/25 13:12:46.68
  I0719 13:12:46.687988      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0719 13:12:46.693929 21 service.go:4645] successfully validated that service endpoint-test2 in namespace services-5999 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 07/19/25 13:12:46.693
  I0719 13:12:46.693976 21 resource.go:361] Creating new exec pod
  E0719 13:12:47.344557      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:12:48.344660      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:12:48.719681 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-5999 exec execpodxxnts -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0719 13:12:48.801826 21 builder.go:146] stderr: "+ + ncecho -v hostName -t\n -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.152.183.254) 80 port [tcp/http] succeeded!\n"
  I0719 13:12:48.801864 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0719 13:12:48.801926 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-5999 exec execpodxxnts -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.254 80'
  I0719 13:12:48.880836 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.254 80\nConnection to 10.152.183.254 80 port [tcp/http] succeeded!\n"
  I0719 13:12:48.880893 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-5999 @ 07/19/25 13:12:48.88
  E0719 13:12:49.346490      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:12:50.346586      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5999 to expose endpoints map[pod1:[80] pod2:[80]] @ 07/19/25 13:12:50.902
  I0719 13:12:50.915368      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0719 13:12:50.921507 21 service.go:4645] successfully validated that service endpoint-test2 in namespace services-5999 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 07/19/25 13:12:50.921
  I0719 13:12:50.925086 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-5999 exec execpodxxnts -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0719 13:12:51.002937 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.152.183.254) 80 port [tcp/http] succeeded!\n"
  I0719 13:12:51.002973 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0719 13:12:51.003032 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-5999 exec execpodxxnts -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.254 80'
  I0719 13:12:51.083699 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.254 80\nConnection to 10.152.183.254 80 port [tcp/http] succeeded!\n"
  I0719 13:12:51.083734 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-5999 @ 07/19/25 13:12:51.083
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5999 to expose endpoints map[pod2:[80]] @ 07/19/25 13:12:51.098
  I0719 13:12:51.111176      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0719 13:12:51.116423 21 service.go:4645] successfully validated that service endpoint-test2 in namespace services-5999 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 07/19/25 13:12:51.116
  I0719 13:12:51.120078 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-5999 exec execpodxxnts -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0719 13:12:51.203910 21 builder.go:146] stderr: "+ + echonc -v hostName\n -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.152.183.254) 80 port [tcp/http] succeeded!\n"
  I0719 13:12:51.203944 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0719 13:12:51.204035 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-5999 exec execpodxxnts -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.254 80'
  I0719 13:12:51.306116 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.254 80\nConnection to 10.152.183.254 80 port [tcp/http] succeeded!\n"
  I0719 13:12:51.306155 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-5999 @ 07/19/25 13:12:51.306
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5999 to expose endpoints map[] @ 07/19/25 13:12:51.319
  I0719 13:12:51.325442      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0719 13:12:51.329387 21 service.go:4645] successfully validated that service endpoint-test2 in namespace services-5999 exposes endpoints map[]
  E0719 13:12:51.347564      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:12:51.357550 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5999" for this suite. @ 07/19/25 13:12:51.365
• [7.771 seconds]
------------------------------
SSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 07/19/25 13:12:51.372
  I0719 13:12:51.372249 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename runtimeclass @ 07/19/25 13:12:51.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:12:51.383
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:12:51.385
  I0719 13:12:51.396983 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-990" for this suite. @ 07/19/25 13:12:51.465
• [0.103 seconds]
------------------------------
SS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:65
  STEP: Creating a kubernetes client @ 07/19/25 13:12:51.475
  I0719 13:12:51.475320 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 07/19/25 13:12:51.476
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:12:51.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:12:51.49
  STEP: Setting up the test @ 07/19/25 13:12:51.493
  STEP: Creating hostNetwork=false pod @ 07/19/25 13:12:51.493
  E0719 13:12:52.347712      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:12:53.347778      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 07/19/25 13:12:53.521
  E0719 13:12:54.347894      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:12:55.347989      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Running the test @ 07/19/25 13:12:55.54
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 07/19/25 13:12:55.54
  I0719 13:12:55.540750 21 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9034 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0719 13:12:55.540799 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0719 13:12:55.540836 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9034/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0719 13:12:55.583559 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0719 13:12:55.583594 21 exec_util.go:112] Exec stderr: ""
  I0719 13:12:55.583609 21 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9034 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0719 13:12:55.583628 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0719 13:12:55.583673 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9034/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0719 13:12:55.618667 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0719 13:12:55.618709 21 exec_util.go:112] Exec stderr: ""
  I0719 13:12:55.618728 21 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9034 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0719 13:12:55.618734 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0719 13:12:55.618778 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9034/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0719 13:12:55.665281 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0719 13:12:55.665316 21 exec_util.go:112] Exec stderr: ""
  I0719 13:12:55.665332 21 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9034 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0719 13:12:55.665337 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0719 13:12:55.665425 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9034/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0719 13:12:55.710815 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0719 13:12:55.710848 21 exec_util.go:112] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 07/19/25 13:12:55.71
  I0719 13:12:55.710893 21 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9034 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0719 13:12:55.710918 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0719 13:12:55.710962 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9034/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&stderr=true&stdout=true)
  I0719 13:12:55.743405 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0719 13:12:55.743436 21 exec_util.go:112] Exec stderr: ""
  I0719 13:12:55.743451 21 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9034 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0719 13:12:55.743457 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0719 13:12:55.743499 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9034/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&stderr=true&stdout=true)
  I0719 13:12:55.777458 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0719 13:12:55.777485 21 exec_util.go:112] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 07/19/25 13:12:55.777
  I0719 13:12:55.777528 21 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9034 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0719 13:12:55.777535 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0719 13:12:55.777580 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9034/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0719 13:12:55.818415 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0719 13:12:55.818460 21 exec_util.go:112] Exec stderr: ""
  I0719 13:12:55.818487 21 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9034 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0719 13:12:55.818501 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0719 13:12:55.818555 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9034/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0719 13:12:55.857982 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0719 13:12:55.858019 21 exec_util.go:112] Exec stderr: ""
  I0719 13:12:55.858037 21 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9034 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0719 13:12:55.858044 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0719 13:12:55.858094 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9034/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0719 13:12:55.896672 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0719 13:12:55.896709 21 exec_util.go:112] Exec stderr: ""
  I0719 13:12:55.896727 21 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9034 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0719 13:12:55.896733 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0719 13:12:55.896848 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9034/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0719 13:12:55.931779 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0719 13:12:55.931813 21 exec_util.go:112] Exec stderr: ""
  I0719 13:12:55.932001 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-9034" for this suite. @ 07/19/25 13:12:55.938
• [4.473 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:329
  STEP: Creating a kubernetes client @ 07/19/25 13:12:55.948
  I0719 13:12:55.948355 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename statefulset @ 07/19/25 13:12:55.948
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:12:55.96
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:12:55.962
  STEP: Creating service test in namespace statefulset-2294 @ 07/19/25 13:12:55.964
  STEP: Creating a new StatefulSet @ 07/19/25 13:12:55.972
  I0719 13:12:55.987648 21 wait.go:44] Found 0 stateful pods, waiting for 3
  E0719 13:12:56.348081      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:12:57.348280      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:12:58.348418      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:12:59.349459      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:13:00.349700      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:13:01.349908      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:13:02.350049      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:13:03.350579      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:13:04.350680      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:13:05.351543      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:13:05.987251 21 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0719 13:13:05.987288 21 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0719 13:13:05.987295 21 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0719 13:13:05.999641 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=statefulset-2294 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0719 13:13:06.084933 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0719 13:13:06.085014 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0719 13:13:06.085024 21 statefulset.go:2485] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0719 13:13:06.352652      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:13:07.352758      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:13:08.352987      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:13:09.353100      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:13:10.353299      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:13:11.353478      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:13:12.353692      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:13:13.353922      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:13:14.354016      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:13:15.354208      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 07/19/25 13:13:16.096
  I0719 13:13:16.109325 21 statefulset.go:2542] Updating stateful set ss2
  STEP: Creating a new revision @ 07/19/25 13:13:16.109
  E0719 13:13:16.354956      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:13:17.355052      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:13:18.355266      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:13:19.355424      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:13:20.355501      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:13:21.355568      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:13:22.355749      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:13:23.355844      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:13:24.355974      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:13:25.356045      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 07/19/25 13:13:26.118
  I0719 13:13:26.123094 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=statefulset-2294 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0719 13:13:26.202138 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0719 13:13:26.202183 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0719 13:13:26.202192 21 statefulset.go:2509] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0719 13:13:26.356784      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:13:27.356860      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:13:28.356981      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:13:29.357050      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:13:30.357165      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:13:31.357252      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:13:32.357588      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:13:33.357849      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:13:34.357763      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:13:35.357947      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 07/19/25 13:13:36.219
  I0719 13:13:36.219941 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=statefulset-2294 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0719 13:13:36.311478 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0719 13:13:36.311518 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0719 13:13:36.311528 21 statefulset.go:2485] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0719 13:13:36.358108      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:13:37.358239      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:13:38.358394      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:13:39.359450      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:13:40.359667      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:13:41.359879      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:13:42.360569      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:13:43.360668      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:13:44.360780      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:13:45.360968      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:13:46.333722 21 statefulset.go:2542] Updating stateful set ss2
  E0719 13:13:46.361009      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:13:47.361172      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:13:48.361264      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:13:49.361497      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:13:50.361622      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:13:51.361831      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:13:52.362037      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:13:53.362247      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:13:54.363048      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:13:55.363262      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 07/19/25 13:13:56.343
  I0719 13:13:56.347130 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=statefulset-2294 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0719 13:13:56.363447      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:13:56.427744 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0719 13:13:56.427787 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0719 13:13:56.427803 21 statefulset.go:2509] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0719 13:13:57.363630      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:13:58.363879      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:13:59.364010      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:14:00.364103      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:14:01.364300      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:14:02.364413      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:14:03.364529      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:14:04.364595      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:14:05.364760      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:14:06.364842      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:14:06.446623 21 statefulset.go:138] Deleting all statefulset in ns statefulset-2294
  I0719 13:14:06.451322 21 rest.go:153] Scaling statefulset ss2 to 0
  E0719 13:14:07.365895      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:14:08.365967      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:14:09.366092      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:14:10.366152      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:14:11.366272      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:14:12.366363      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:14:13.366510      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:14:14.366579      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:14:15.366694      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:14:16.366767      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:14:16.469220 21 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0719 13:14:16.474169 21 rest.go:91] Deleting statefulset ss2
  I0719 13:14:16.491239 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2294" for this suite. @ 07/19/25 13:14:16.496
• [80.556 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 07/19/25 13:14:16.504
  I0719 13:14:16.504729 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename projected @ 07/19/25 13:14:16.505
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:14:16.519
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:14:16.521
  STEP: Creating projection with secret that has name projected-secret-test-c3fb0136-938f-421e-a371-34782da5dcc0 @ 07/19/25 13:14:16.524
  STEP: Creating a pod to test consume secrets @ 07/19/25 13:14:16.529
  E0719 13:14:17.366888      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:14:18.366960      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:14:19.367354      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:14:20.367500      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/19/25 13:14:20.555
  I0719 13:14:20.559730 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod pod-projected-secrets-c53d68d1-b26a-4f1b-a032-9cb0f965160c container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/19/25 13:14:20.574
  I0719 13:14:20.591042 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1005" for this suite. @ 07/19/25 13:14:20.596
• [4.102 seconds]
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 07/19/25 13:14:20.606
  I0719 13:14:20.606666 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename var-expansion @ 07/19/25 13:14:20.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:14:20.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:14:20.623
  STEP: Creating a pod to test env composition @ 07/19/25 13:14:20.626
  E0719 13:14:21.367601      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:14:22.367674      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:14:23.368571      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:14:24.369532      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/19/25 13:14:24.658
  I0719 13:14:24.661994 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod var-expansion-82988251-4711-4dcd-9646-e5aa257dcca3 container dapi-container: <nil>
  STEP: delete the pod @ 07/19/25 13:14:24.672
  I0719 13:14:24.693665 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-91" for this suite. @ 07/19/25 13:14:24.698
• [4.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 07/19/25 13:14:24.707
  I0719 13:14:24.707884 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename deployment @ 07/19/25 13:14:24.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:14:24.721
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:14:24.723
  I0719 13:14:24.726663 21 deployment.go:798] Creating deployment "test-recreate-deployment"
  I0719 13:14:24.733099 21 deployment.go:804] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0719 13:14:24.741436 21 deployment.go:223] deployment "test-recreate-deployment" doesn't have the required revision set
  E0719 13:14:25.369673      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:14:26.369750      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:14:26.753850 21 deployment.go:808] Waiting deployment "test-recreate-deployment" to complete
  I0719 13:14:26.758137 21 deployment.go:813] Triggering a new rollout for deployment "test-recreate-deployment"
  I0719 13:14:26.770319 21 deployment.go:314] Updating deployment test-recreate-deployment
  I0719 13:14:26.770367 21 deployment.go:820] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0719 13:14:26.885900 21 deployment.go:632] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7132",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5adb13a5-3260-43a7-b559-29d19e9c426b",
      ResourceVersion: (string) (len=5) "28148",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888527664,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888527666,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888527666,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888527666,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888527666,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888527666,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888527664,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=64) "ReplicaSet \"test-recreate-deployment-59cddbdd4b\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0719 13:14:26.891732 21 deployment.go:40] New ReplicaSet "test-recreate-deployment-59cddbdd4b" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7132",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4646de43-d436-4456-ac97-9a3fd2591e19",
      ResourceVersion: (string) (len=5) "28146",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888527666,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "5adb13a5-3260-43a7-b559-29d19e9c426b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888527666,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 61 64 62 31 33  61 35 2d 33 32 36 30 2d  |\"5adb13a5-3260-|
              00000120  34 33 61 37 2d 62 35 35  39 2d 32 39 64 31 39 65  |43a7-b559-29d19e|
              00000130  39 63 34 32 36 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |9c426b\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888527666,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b",
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0719 13:14:26.892234 21 deployment.go:45] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0719 13:14:26.892422 21 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-db85869db",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7132",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c3c99b07-9412-43d7-9a49-c32d6a9da03e",
      ResourceVersion: (string) (len=5) "28135",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888527664,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "5adb13a5-3260-43a7-b559-29d19e9c426b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888527666,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 61 64 62 31 33  61 35 2d 33 32 36 30 2d  |\"5adb13a5-3260-|
              00000120  34 33 61 37 2d 62 35 35  39 2d 32 39 64 31 39 65  |43a7-b559-29d19e|
              00000130  39 63 34 32 36 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |9c426b\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888527666,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0719 13:14:26.897942 21 deployment.go:68] Pod "test-recreate-deployment-59cddbdd4b-q6m7f" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-recreate-deployment-59cddbdd4b-q6m7f",
      GenerateName: (string) (len=36) "test-recreate-deployment-59cddbdd4b-",
      Namespace: (string) (len=15) "deployment-7132",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "abdeca57-a080-408b-ab34-53ebf5362832",
      ResourceVersion: (string) (len=5) "28147",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888527666,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
          UID: (types.UID) (len=36) "4646de43-d436-4456-ac97-9a3fd2591e19",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888527666,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 36  34 36 64 65 34 33 2d 64  |d\":\"4646de43-d|
              00000090  34 33 36 2d 34 34 35 36  2d 61 63 39 37 2d 39 61  |436-4456-ac97-9a|
              000000a0  33 66 64 32 35 39 31 65  31 39 5c 22 7d 22 3a 7b  |3fd2591e19\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888527666,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rg6sz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rg6sz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-6-59",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888527666,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888527666,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888527666,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888527666,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888527666,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.6.59",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.6.59"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888527666,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-rg6sz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0719 13:14:26.899072 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7132" for this suite. @ 07/19/25 13:14:26.904
• [2.206 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:69
  STEP: Creating a kubernetes client @ 07/19/25 13:14:26.914
  I0719 13:14:26.914117 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename projected @ 07/19/25 13:14:26.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:14:26.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:14:26.928
  STEP: Creating a pod to test downward API volume plugin @ 07/19/25 13:14:26.931
  E0719 13:14:27.370569      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:14:28.370815      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/19/25 13:14:28.949
  I0719 13:14:28.954624 21 output.go:207] Trying to get logs from node ip-172-31-42-177 pod downwardapi-volume-5c57cd6f-e4b8-4b32-ac3e-24d55b54f90e container client-container: <nil>
  STEP: delete the pod @ 07/19/25 13:14:28.967
  I0719 13:14:28.983924 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9723" for this suite. @ 07/19/25 13:14:28.989
• [2.083 seconds]
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 07/19/25 13:14:28.997
  I0719 13:14:28.997534 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename deployment @ 07/19/25 13:14:28.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:14:29.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:14:29.015
  I0719 13:14:29.026137 21 resource.go:81] Pod name rollover-pod: Found 0 pods out of 1
  E0719 13:14:29.371628      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:14:30.371677      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:14:31.372547      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:14:32.372667      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:14:33.372735      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:14:34.032402 21 resource.go:81] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/19/25 13:14:34.032
  I0719 13:14:34.032468 21 deployment.go:930] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E0719 13:14:34.373642      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:14:35.373710      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:14:36.039509 21 deployment.go:940] Creating deployment "test-rollover-deployment"
  I0719 13:14:36.050022 21 deployment.go:953] Make sure deployment "test-rollover-deployment" performs scaling operations
  E0719 13:14:36.374387      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:14:37.374586      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:14:38.059309 21 deployment.go:958] Check revision of new replica set for deployment "test-rollover-deployment"
  I0719 13:14:38.068566 21 deployment.go:962] Ensure that both replica sets have 1 created replica
  I0719 13:14:38.077067 21 deployment.go:971] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0719 13:14:38.088360 21 deployment.go:314] Updating deployment test-rollover-deployment
  I0719 13:14:38.088386 21 deployment.go:980] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E0719 13:14:38.374693      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:14:39.374778      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:14:40.099077 21 deployment.go:985] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0719 13:14:40.107724 21 deployment.go:989] Make sure deployment "test-rollover-deployment" is complete
  I0719 13:14:40.116001 21 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0719 13:14:40.116041 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.July, 19, 13, 14, 36, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 19, 13, 14, 36, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 19, 13, 14, 39, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 19, 13, 14, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0719 13:14:40.375474      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:14:41.375706      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:14:42.127449 21 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0719 13:14:42.127508 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.July, 19, 13, 14, 36, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 19, 13, 14, 36, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 19, 13, 14, 39, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 19, 13, 14, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0719 13:14:42.376723      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:14:43.376797      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:14:44.126648 21 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0719 13:14:44.126708 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.July, 19, 13, 14, 36, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 19, 13, 14, 36, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 19, 13, 14, 39, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 19, 13, 14, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0719 13:14:44.377886      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:14:45.377978      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:14:46.127257 21 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0719 13:14:46.127314 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.July, 19, 13, 14, 36, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 19, 13, 14, 36, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 19, 13, 14, 39, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 19, 13, 14, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0719 13:14:46.378578      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:14:47.378656      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:14:48.127415 21 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0719 13:14:48.127475 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.July, 19, 13, 14, 36, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 19, 13, 14, 36, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 19, 13, 14, 39, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 19, 13, 14, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0719 13:14:48.379582      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:14:49.380569      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:14:50.126567 21 deployment.go:95] 
  I0719 13:14:50.126617 21 deployment.go:993] Ensure that both old replica sets have no replicas
  I0719 13:14:50.140410 21 deployment.go:632] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6338",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b6a7a800-9c9a-4401-8eca-35f9ae80bb86",
      ResourceVersion: (string) (len=5) "28361",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888527676,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888527678,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888527689,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888527676,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888527676,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888527689,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888527676,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-7fb4c746bc\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0719 13:14:50.145143 21 deployment.go:40] New ReplicaSet "test-rollover-deployment-7fb4c746bc" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6338",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "14ca1481-885b-4cc2-a468-2964ae17ffd9",
      ResourceVersion: (string) (len=5) "28350",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888527678,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "b6a7a800-9c9a-4401-8eca-35f9ae80bb86",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888527678,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 36 61 37 61 38  30 30 2d 39 63 39 61 2d  |\"b6a7a800-9c9a-|
              00000120  34 34 30 31 2d 38 65 63  61 2d 33 35 66 39 61 65  |4401-8eca-35f9ae|
              00000130  38 30 62 62 38 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |80bb86\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888527689,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0719 13:14:50.145765 21 deployment.go:45] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0719 13:14:50.146004 21 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6338",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3775e566-3fc1-45df-8d37-a75dfc483ec1",
      ResourceVersion: (string) (len=5) "28360",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888527669,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "b6a7a800-9c9a-4401-8eca-35f9ae80bb86",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888527669,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888527689,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  62 36 61 37 61 38 30 30  2d 39 63 39 61 2d 34 34  |b6a7a800-9c9a-44|
              000000c0  30 31 2d 38 65 63 61 2d  33 35 66 39 61 65 38 30  |01-8eca-35f9ae80|
              000000d0  62 62 38 36 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |bb86\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888527689,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0719 13:14:50.147453 21 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-6f6c9688c5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6338",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ecb836f3-19f6-4dce-8e42-995a0baf6903",
      ResourceVersion: (string) (len=5) "28307",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888527676,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "b6a7a800-9c9a-4401-8eca-35f9ae80bb86",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888527678,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 36 61 37 61 38  30 30 2d 39 63 39 61 2d  |\"b6a7a800-9c9a-|
              00000120  34 34 30 31 2d 38 65 63  61 2d 33 35 66 39 61 65  |4401-8eca-35f9ae|
              00000130  38 30 62 62 38 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |80bb86\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888527678,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0719 13:14:50.153156 21 deployment.go:68] Pod "test-rollover-deployment-7fb4c746bc-9hv87" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-7fb4c746bc-9hv87",
      GenerateName: (string) (len=36) "test-rollover-deployment-7fb4c746bc-",
      Namespace: (string) (len=15) "deployment-6338",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2282e537-0a2a-44ce-9a13-3c6e3a8a96fa",
      ResourceVersion: (string) (len=5) "28325",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888527678,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
          UID: (types.UID) (len=36) "14ca1481-885b-4cc2-a468-2964ae17ffd9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888527678,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 34  63 61 31 34 38 31 2d 38  |d\":\"14ca1481-8|
              00000090  38 35 62 2d 34 63 63 32  2d 61 34 36 38 2d 32 39  |85b-4cc2-a468-29|
              000000a0  36 34 61 65 31 37 66 66  64 39 5c 22 7d 22 3a 7b  |64ae17ffd9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888527679,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 30  36 2e 32 30 38 5c 22 7d  |2.168.206.208\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-78dpg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-78dpg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-6-59",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888527679,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888527678,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888527679,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888527679,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888527678,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.6.59",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.6.59"
        }
      },
      PodIP: (string) (len=15) "192.168.206.208",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.206.208"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888527678,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63888527678,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://80f9fb34cf4da61f2f44bc3e33a7719d0c6c99830c01c63eaa9ec380edbc2365",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-78dpg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0719 13:14:50.154204 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6338" for this suite. @ 07/19/25 13:14:50.159
• [21.170 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 07/19/25 13:14:50.167
  I0719 13:14:50.167249 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename downward-api @ 07/19/25 13:14:50.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:14:50.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:14:50.182
  STEP: Creating a pod to test downward api env vars @ 07/19/25 13:14:50.184
  E0719 13:14:50.381109      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:14:51.381208      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:14:52.381255      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:14:53.381475      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/19/25 13:14:54.213
  I0719 13:14:54.216954 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod downward-api-2383560f-f115-4539-abc1-90c6a36a838b container dapi-container: <nil>
  STEP: delete the pod @ 07/19/25 13:14:54.227
  I0719 13:14:54.248845 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4343" for this suite. @ 07/19/25 13:14:54.254
• [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 07/19/25 13:14:54.264
  I0719 13:14:54.264380 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename container-runtime @ 07/19/25 13:14:54.264
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:14:54.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:14:54.28
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 07/19/25 13:14:54.299
  E0719 13:14:54.381999      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:14:55.382601      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:14:56.382662      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:14:57.383121      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:14:58.383513      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:14:59.383821      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:15:00.384397      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:15:01.384980      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:15:02.385525      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:15:03.386248      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:15:04.387073      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:15:05.387927      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:15:06.388256      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:15:07.388334      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:15:08.388618      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:15:09.388764      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:15:10.388875      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:15:11.389410      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:15:12.389500      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:15:13.389641      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 07/19/25 13:15:13.417
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 07/19/25 13:15:13.422
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 07/19/25 13:15:13.429
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 07/19/25 13:15:13.429
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 07/19/25 13:15:13.453
  E0719 13:15:14.390069      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:15:15.390187      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:15:16.390401      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 07/19/25 13:15:16.478
  E0719 13:15:17.390532      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 07/19/25 13:15:17.488
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 07/19/25 13:15:17.497
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 07/19/25 13:15:17.497
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 07/19/25 13:15:17.522
  E0719 13:15:18.390672      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 07/19/25 13:15:18.535
  E0719 13:15:19.390999      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:15:20.391145      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 07/19/25 13:15:20.551
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 07/19/25 13:15:20.561
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 07/19/25 13:15:20.561
  I0719 13:15:20.595157 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2357" for this suite. @ 07/19/25 13:15:20.601
• [26.344 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:826
  STEP: Creating a kubernetes client @ 07/19/25 13:15:20.608
  I0719 13:15:20.608846 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename gc @ 07/19/25 13:15:20.609
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:15:20.623
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:15:20.625
  I0719 13:15:20.662903 21 garbage_collector.go:848] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"aa5e528e-3903-4de4-ad03-168ee19b49d4", Controller:(*bool)(0xc002ac65de), BlockOwnerDeletion:(*bool)(0xc002ac65df)}}
  I0719 13:15:20.670640 21 garbage_collector.go:852] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"ca870b33-f74a-4837-b534-42aa4d76a6c7", Controller:(*bool)(0xc002e0515e), BlockOwnerDeletion:(*bool)(0xc002e0515f)}}
  I0719 13:15:20.681505 21 garbage_collector.go:856] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"a05ebd26-61f7-486f-a1a8-da6c5d74acfd", Controller:(*bool)(0xc002ac67b6), BlockOwnerDeletion:(*bool)(0xc002ac67b7)}}
  E0719 13:15:21.392186      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:15:22.392318      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:15:23.392461      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:15:24.392641      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:15:25.392766      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:15:25.700422 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2348" for this suite. @ 07/19/25 13:15:25.706
• [5.106 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:240
  STEP: Creating a kubernetes client @ 07/19/25 13:15:25.714
  I0719 13:15:25.714600 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename configmap @ 07/19/25 13:15:25.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:15:25.728
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:15:25.73
  STEP: Creating configMap with name cm-test-opt-del-141334ec-6ece-42b0-adb7-45b085bb381d @ 07/19/25 13:15:25.806
  STEP: Creating configMap with name cm-test-opt-upd-09ded1ed-8516-4451-aea0-10455f31de49 @ 07/19/25 13:15:25.812
  STEP: Creating the pod @ 07/19/25 13:15:25.818
  E0719 13:15:26.393495      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:15:27.393628      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-141334ec-6ece-42b0-adb7-45b085bb381d @ 07/19/25 13:15:27.868
  STEP: Updating configmap cm-test-opt-upd-09ded1ed-8516-4451-aea0-10455f31de49 @ 07/19/25 13:15:27.875
  STEP: Creating configMap with name cm-test-opt-create-710994e5-7d92-4405-852f-8ba48e651486 @ 07/19/25 13:15:27.881
  STEP: waiting to observe update in volume @ 07/19/25 13:15:27.886
  E0719 13:15:28.394456      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:15:29.394567      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:15:30.395465      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:15:31.395608      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:15:32.396548      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:15:33.396837      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:15:34.396754      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:15:35.396852      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:15:36.397456      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:15:37.397509      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:15:38.398195      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:15:39.398374      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:15:40.398565      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:15:41.398652      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:15:42.399387      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:15:43.399528      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:15:44.399641      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:15:45.399711      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:15:46.400131      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:15:47.400233      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:15:48.401270      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:15:49.401384      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:15:50.401509      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:15:51.401584      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:15:52.401722      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:15:53.401810      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:15:54.402054      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:15:55.402123      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:15:56.403012      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:15:57.403100      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:15:58.403625      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:15:59.404491      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:16:00.405193      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:16:01.405424      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:16:02.405507      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:16:03.405619      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:16:04.405725      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:16:05.405785      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:16:06.405934      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:16:07.405998      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:16:08.406119      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:16:09.406197      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:16:10.406850      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:16:11.406946      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:16:12.407937      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:16:13.408009      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:16:14.408955      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:16:15.409059      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:16:16.409202      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:16:17.409298      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:16:18.409458      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:16:19.409512      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:16:20.410419      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:16:21.410636      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:16:22.411353      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:16:23.411689      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:16:24.411841      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:16:25.411927      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:16:26.412480      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:16:27.412565      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:16:28.413042      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:16:29.413187      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:16:30.413670      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:16:31.413811      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:16:32.248807 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3245" for this suite. @ 07/19/25 13:16:32.255
• [66.549 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 07/19/25 13:16:32.263
  I0719 13:16:32.263670 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename aggregateddiscovery @ 07/19/25 13:16:32.264
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:16:32.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:16:32.279
  I0719 13:16:32.281953 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  E0719 13:16:32.413934      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:16:33.414790      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:16:34.414796      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:16:35.335198 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-2752" for this suite. @ 07/19/25 13:16:35.341
• [3.090 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 07/19/25 13:16:35.353
  I0719 13:16:35.353659 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename deployment @ 07/19/25 13:16:35.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:16:35.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:16:35.372
  I0719 13:16:35.375484 21 deployment.go:1664] Creating simple deployment test-new-deployment
  I0719 13:16:35.399305 21 deployment.go:223] deployment "test-new-deployment" doesn't have the required revision set
  E0719 13:16:35.415441      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:16:36.416082      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:16:37.416605      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 07/19/25 13:16:37.418
  STEP: updating a scale subresource @ 07/19/25 13:16:37.423
  STEP: verifying the deployment Spec.Replicas was modified @ 07/19/25 13:16:37.431
  STEP: Patch a scale subresource @ 07/19/25 13:16:37.433
  I0719 13:16:37.465818 21 deployment.go:632] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3404",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "43f31849-759e-48a8-86ec-c0c2f5fdfeea",
      ResourceVersion: (string) (len=5) "28875",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888527795,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888527795,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888527796,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888527796,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888527796,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888527796,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888527795,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-685b768f58\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0719 13:16:37.471480 21 deployment.go:40] New ReplicaSet "test-new-deployment-685b768f58" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3404",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f047f3a1-3a43-4072-a585-f05a004d7bf1",
      ResourceVersion: (string) (len=5) "28882",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888527795,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "4",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "5",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "43f31849-759e-48a8-86ec-c0c2f5fdfeea",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888527797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 33 66 33 31 38  34 39 2d 37 35 39 65 2d  |\"43f31849-759e-|
              00000120  34 38 61 38 2d 38 36 65  63 2d 63 30 63 32 66 35  |48a8-86ec-c0c2f5|
              00000130  66 64 66 65 65 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |fdfeea\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888527797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(4),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0719 13:16:37.476059 21 deployment.go:68] Pod "test-new-deployment-685b768f58-hqnn6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-hqnn6",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-3404",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0a1f0263-420e-493f-a403-73ca1f0c1be0",
      ResourceVersion: (string) (len=5) "28880",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888527797,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "f047f3a1-3a43-4072-a585-f05a004d7bf1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888527797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 30  34 37 66 33 61 31 2d 33  |d\":\"f047f3a1-3|
              00000090  61 34 33 2d 34 30 37 32  2d 61 35 38 35 2d 66 30  |a43-4072-a585-f0|
              000000a0  35 61 30 30 34 64 37 62  66 31 5c 22 7d 22 3a 7b  |5a004d7bf1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5rzn5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5rzn5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-6-59",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888527797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0719 13:16:37.477425 21 deployment.go:68] Pod "test-new-deployment-685b768f58-ps8vw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-ps8vw",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-3404",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b7b0c7c6-2cb7-414c-b9b0-95f3a723e8f0",
      ResourceVersion: (string) (len=5) "28866",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888527795,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "f047f3a1-3a43-4072-a585-f05a004d7bf1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888527795,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 30  34 37 66 33 61 31 2d 33  |d\":\"f047f3a1-3|
              00000090  61 34 33 2d 34 30 37 32  2d 61 35 38 35 2d 66 30  |a43-4072-a585-f0|
              000000a0  35 61 30 30 34 64 37 62  66 31 5c 22 7d 22 3a 7b  |5a004d7bf1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888527796,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 35  36 2e 32 33 39 5c 22 7d  |2.168.156.239\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6pfv4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6pfv4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-42-177",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888527796,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888527795,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888527796,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888527796,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888527795,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.42.177",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.42.177"
        }
      },
      PodIP: (string) (len=15) "192.168.156.239",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.156.239"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888527795,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63888527795,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5a3e9b3f2657364353d78c0fd313032370323501488fedbd8080e9eaaf98cd50",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6pfv4",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0719 13:16:37.478519 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3404" for this suite. @ 07/19/25 13:16:37.483
• [2.141 seconds]
------------------------------
S
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 07/19/25 13:16:37.494
  I0719 13:16:37.494431 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename disruption @ 07/19/25 13:16:37.494
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:16:37.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:16:37.514
  STEP: Waiting for the pdb to be processed @ 07/19/25 13:16:37.523
  E0719 13:16:38.416772      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:16:39.417562      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating PodDisruptionBudget status @ 07/19/25 13:16:39.529
  STEP: Waiting for all pods to be running @ 07/19/25 13:16:39.541
  I0719 13:16:39.548331 21 disruption.go:691] running pods: 0 < 1
  E0719 13:16:40.417654      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:16:41.417724      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 07/19/25 13:16:41.547
  STEP: Waiting for the pdb to be processed @ 07/19/25 13:16:41.563
  STEP: Patching PodDisruptionBudget status @ 07/19/25 13:16:41.57
  STEP: Waiting for the pdb to be processed @ 07/19/25 13:16:41.581
  I0719 13:16:41.585263 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-338" for this suite. @ 07/19/25 13:16:41.59
• [4.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 07/19/25 13:16:41.601
  I0719 13:16:41.601297 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/19/25 13:16:41.601
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:16:41.612
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:16:41.615
  I0719 13:16:41.617459 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  E0719 13:16:42.418598      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:16:43.418684      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:16:44.419210      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:16:44.813217 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6307" for this suite. @ 07/19/25 13:16:44.819
• [3.229 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 07/19/25 13:16:44.83
  I0719 13:16:44.830304 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename pods @ 07/19/25 13:16:44.83
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:16:44.842
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:16:44.847
  E0719 13:16:45.420260      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:16:46.420381      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:16:47.420578      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:16:48.420687      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:16:49.421123      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:16:50.421417      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/19/25 13:16:50.933
  I0719 13:16:50.938588 21 output.go:207] Trying to get logs from node ip-172-31-42-177 pod client-envvars-f847c7cb-c174-42f3-a5ee-77e88012e82c container env3cont: <nil>
  STEP: delete the pod @ 07/19/25 13:16:50.949
  I0719 13:16:50.968815 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9813" for this suite. @ 07/19/25 13:16:50.974
• [6.153 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 07/19/25 13:16:50.983
  I0719 13:16:50.983405 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename endpointslice @ 07/19/25 13:16:50.983
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:16:50.996
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:16:50.999
  E0719 13:16:51.422029      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:16:52.422158      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 07/19/25 13:16:53.097
  I0719 13:16:53.107920      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: referencing matching pods with named port @ 07/19/25 13:16:53.107
  I0719 13:16:53.115631      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 07/19/25 13:16:53.115
  I0719 13:16:53.123423      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: recreating EndpointSlices after they've been deleted @ 07/19/25 13:16:53.123
  I0719 13:16:53.147843 21 endpointslice.go:938] EndpointSlice for Service endpointslice-6769/example-named-port not found
  E0719 13:16:53.422267      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:16:54.422400      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:16:55.155535      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0719 13:16:55.155692 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-6769" for this suite. @ 07/19/25 13:16:55.16
• [4.186 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3195
  STEP: Creating a kubernetes client @ 07/19/25 13:16:55.169
  I0719 13:16:55.169672 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename services @ 07/19/25 13:16:55.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:16:55.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:16:55.186
  STEP: fetching services @ 07/19/25 13:16:55.189
  I0719 13:16:55.193925 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9384" for this suite. @ 07/19/25 13:16:55.262
• [0.103 seconds]
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 07/19/25 13:16:55.272
  I0719 13:16:55.272246 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename init-container @ 07/19/25 13:16:55.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:16:55.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:16:55.288
  STEP: creating the pod @ 07/19/25 13:16:55.29
  I0719 13:16:55.291014 21 init_container.go:294] PodSpec: initContainers in spec.initContainers
  E0719 13:16:55.422598      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:16:56.422686      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:16:57.422818      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:16:58.422916      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:16:58.867421 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-1336" for this suite. @ 07/19/25 13:16:58.873
• [3.608 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 07/19/25 13:16:58.88
  I0719 13:16:58.880685 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename controllerrevisions @ 07/19/25 13:16:58.881
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:16:58.896
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:16:58.899
  STEP: Creating DaemonSet "e2e-2wbhj-daemon-set" @ 07/19/25 13:16:58.987
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/19/25 13:16:58.993
  I0719 13:16:59.075037 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-3-129 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 13:16:59.075073 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-39-138 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 13:16:59.079975 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-2wbhj-daemon-set: 0
  I0719 13:16:59.079996 21 fixtures.go:131] Node ip-172-31-42-177 is running 0 daemon pod, expected 1
  E0719 13:16:59.423170      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:17:00.000993 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-3-129 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 13:17:00.001027 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-39-138 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 13:17:00.005660 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-2wbhj-daemon-set: 2
  I0719 13:17:00.005677 21 fixtures.go:131] Node ip-172-31-64-234 is running 0 daemon pod, expected 1
  E0719 13:17:00.424151      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:17:00.999657 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-3-129 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 13:17:00.999699 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-39-138 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 13:17:01.003630 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-2wbhj-daemon-set: 3
  I0719 13:17:01.003651 21 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset e2e-2wbhj-daemon-set
  STEP: Confirm DaemonSet "e2e-2wbhj-daemon-set" successfully created with "daemonset-name=e2e-2wbhj-daemon-set" label @ 07/19/25 13:17:01.008
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-2wbhj-daemon-set" @ 07/19/25 13:17:01.016
  I0719 13:17:01.023198 21 controller_revision.go:162] Located ControllerRevision: "e2e-2wbhj-daemon-set-5dc5b9c7b7"
  STEP: Patching ControllerRevision "e2e-2wbhj-daemon-set-5dc5b9c7b7" @ 07/19/25 13:17:01.028
  I0719 13:17:01.035710 21 controller_revision.go:173] e2e-2wbhj-daemon-set-5dc5b9c7b7 has been patched
  STEP: Create a new ControllerRevision @ 07/19/25 13:17:01.035
  I0719 13:17:01.041781 21 controller_revision.go:191] Created ControllerRevision: e2e-2wbhj-daemon-set-857c759775
  STEP: Confirm that there are two ControllerRevisions @ 07/19/25 13:17:01.041
  I0719 13:17:01.041826 21 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0719 13:17:01.124200 21 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-2wbhj-daemon-set-5dc5b9c7b7" @ 07/19/25 13:17:01.124
  STEP: Confirm that there is only one ControllerRevision @ 07/19/25 13:17:01.132
  I0719 13:17:01.132452 21 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0719 13:17:01.136453 21 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-2wbhj-daemon-set-857c759775" @ 07/19/25 13:17:01.224
  I0719 13:17:01.237175 21 controller_revision.go:220] e2e-2wbhj-daemon-set-857c759775 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 07/19/25 13:17:01.237
  I0719 13:17:01.245698      21 warnings.go:110] "Warning: unknown field \"updateStrategy\""
  STEP: Confirm that there are two ControllerRevisions @ 07/19/25 13:17:01.245
  I0719 13:17:01.245907 21 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0719 13:17:01.271594 21 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-2wbhj-daemon-set-857c759775=updated" @ 07/19/25 13:17:01.271
  STEP: Confirm that there is only one ControllerRevision @ 07/19/25 13:17:01.283
  I0719 13:17:01.283440 21 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0719 13:17:01.325260 21 controller_revision.go:265] Found 1 ControllerRevisions
  I0719 13:17:01.328979 21 controller_revision.go:246] ControllerRevision "e2e-2wbhj-daemon-set-76445bb8bb" has revision 3
  STEP: Deleting DaemonSet "e2e-2wbhj-daemon-set" @ 07/19/25 13:17:01.333
  STEP: deleting DaemonSet.extensions e2e-2wbhj-daemon-set in namespace controllerrevisions-2252, will wait for the garbage collector to delete the pods @ 07/19/25 13:17:01.333
  I0719 13:17:01.395724 21 resources.go:139] Deleting DaemonSet.extensions e2e-2wbhj-daemon-set took: 8.850766ms
  E0719 13:17:01.424530      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:17:01.496252 21 resources.go:163] Terminating DaemonSet.extensions e2e-2wbhj-daemon-set pods took: 100.526187ms
  E0719 13:17:02.425558      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:17:02.500534 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-2wbhj-daemon-set: 0
  I0719 13:17:02.500567 21 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-2wbhj-daemon-set
  I0719 13:17:02.505686 21 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"29353"},"items":null}

  I0719 13:17:02.510372 21 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"29353"},"items":null}

  I0719 13:17:02.526740 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-2252" for this suite. @ 07/19/25 13:17:02.531
• [3.659 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1759
  STEP: Creating a kubernetes client @ 07/19/25 13:17:02.539
  I0719 13:17:02.539718 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename kubectl @ 07/19/25 13:17:02.54
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:17:02.554
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:17:02.556
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 07/19/25 13:17:02.558
  I0719 13:17:02.558854 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-8778 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I0719 13:17:02.608539 21 builder.go:146] stderr: ""
  I0719 13:17:02.608582 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 07/19/25 13:17:02.608
  I0719 13:17:02.611798 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-8778 delete pods e2e-test-httpd-pod'
  E0719 13:17:03.426548      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:17:03.856855 21 builder.go:146] stderr: ""
  I0719 13:17:03.856895 21 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0719 13:17:03.857047 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8778" for this suite. @ 07/19/25 13:17:03.863
• [1.331 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2222
  STEP: Creating a kubernetes client @ 07/19/25 13:17:03.871
  I0719 13:17:03.871154 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename services @ 07/19/25 13:17:03.871
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:17:03.884
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:17:03.886
  STEP: creating service in namespace services-989 @ 07/19/25 13:17:03.889
  STEP: creating service affinity-nodeport in namespace services-989 @ 07/19/25 13:17:03.889
  I0719 13:17:03.929723 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0719 13:17:04.427644      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:17:05.428558      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:17:05.958059 21 resource.go:361] Creating new exec pod
  E0719 13:17:06.429562      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:17:07.429639      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:17:07.994465 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-989 exec execpod-affinity24gsv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I0719 13:17:08.084309 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport (10.152.183.145) 80 port [tcp/http] succeeded!\n"
  I0719 13:17:08.084365 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0719 13:17:08.084436 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-989 exec execpod-affinity24gsv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.145 80'
  I0719 13:17:08.166228 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.145 80\nConnection to 10.152.183.145 80 port [tcp/http] succeeded!\n"
  I0719 13:17:08.166271 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0719 13:17:08.166365 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-989 exec execpod-affinity24gsv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.6.59 31666'
  I0719 13:17:08.246852 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.6.59 31666\nConnection to 172.31.6.59 31666 port [tcp/*] succeeded!\n"
  I0719 13:17:08.246893 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0719 13:17:08.246966 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-989 exec execpod-affinity24gsv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.42.177 31666'
  I0719 13:17:08.333123 21 builder.go:146] stderr: "+ + echo hostName\nnc -v -t -w 2 172.31.42.177 31666\nConnection to 172.31.42.177 31666 port [tcp/*] succeeded!\n"
  I0719 13:17:08.333166 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0719 13:17:08.333254 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-989 exec execpod-affinity24gsv -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://172.31.42.177:31666/ ; done'
  E0719 13:17:08.429838      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:17:08.521101 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.42.177:31666/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.42.177:31666/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.42.177:31666/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.42.177:31666/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.42.177:31666/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.42.177:31666/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.42.177:31666/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.42.177:31666/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.42.177:31666/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.42.177:31666/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.42.177:31666/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.42.177:31666/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.42.177:31666/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.42.177:31666/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.42.177:31666/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.42.177:31666/\n"
  I0719 13:17:08.521150 21 builder.go:147] stdout: "\naffinity-nodeport-85dffb5fc7-j7gr8\naffinity-nodeport-85dffb5fc7-j7gr8\naffinity-nodeport-85dffb5fc7-j7gr8\naffinity-nodeport-85dffb5fc7-j7gr8\naffinity-nodeport-85dffb5fc7-j7gr8\naffinity-nodeport-85dffb5fc7-j7gr8\naffinity-nodeport-85dffb5fc7-j7gr8\naffinity-nodeport-85dffb5fc7-j7gr8\naffinity-nodeport-85dffb5fc7-j7gr8\naffinity-nodeport-85dffb5fc7-j7gr8\naffinity-nodeport-85dffb5fc7-j7gr8\naffinity-nodeport-85dffb5fc7-j7gr8\naffinity-nodeport-85dffb5fc7-j7gr8\naffinity-nodeport-85dffb5fc7-j7gr8\naffinity-nodeport-85dffb5fc7-j7gr8\naffinity-nodeport-85dffb5fc7-j7gr8"
  I0719 13:17:08.521161 21 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-j7gr8
  I0719 13:17:08.521169 21 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-j7gr8
  I0719 13:17:08.521175 21 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-j7gr8
  I0719 13:17:08.521181 21 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-j7gr8
  I0719 13:17:08.521187 21 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-j7gr8
  I0719 13:17:08.521192 21 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-j7gr8
  I0719 13:17:08.521197 21 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-j7gr8
  I0719 13:17:08.521203 21 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-j7gr8
  I0719 13:17:08.521209 21 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-j7gr8
  I0719 13:17:08.521215 21 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-j7gr8
  I0719 13:17:08.521220 21 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-j7gr8
  I0719 13:17:08.521225 21 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-j7gr8
  I0719 13:17:08.521230 21 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-j7gr8
  I0719 13:17:08.521235 21 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-j7gr8
  I0719 13:17:08.521239 21 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-j7gr8
  I0719 13:17:08.521244 21 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-j7gr8
  I0719 13:17:08.521372 21 service.go:4352] Cleaning up the exec pod
  I0719 13:17:08.584509 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-989" for this suite. @ 07/19/25 13:17:08.59
• [4.726 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 07/19/25 13:17:08.597
  I0719 13:17:08.597743 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename subpath @ 07/19/25 13:17:08.598
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:17:08.609
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:17:08.612
  STEP: Setting up data @ 07/19/25 13:17:08.615
  STEP: Creating pod pod-subpath-test-secret-r9nf @ 07/19/25 13:17:08.624
  STEP: Creating a pod to test atomic-volume-subpath @ 07/19/25 13:17:08.624
  E0719 13:17:09.430494      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:17:10.430671      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:17:11.431725      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:17:12.431933      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:17:13.432072      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:17:14.433114      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:17:15.433514      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:17:16.433784      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:17:17.433898      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:17:18.433965      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:17:19.434100      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:17:20.434196      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:17:21.434516      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:17:22.434597      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:17:23.434740      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:17:24.435573      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:17:25.435658      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:17:26.435736      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:17:27.435871      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:17:28.436070      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:17:29.436564      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:17:30.436641      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:17:31.436743      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:17:32.436846      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/19/25 13:17:32.713
  I0719 13:17:32.718738 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod pod-subpath-test-secret-r9nf container test-container-subpath-secret-r9nf: <nil>
  STEP: delete the pod @ 07/19/25 13:17:32.728
  STEP: Deleting pod pod-subpath-test-secret-r9nf @ 07/19/25 13:17:32.745
  I0719 13:17:32.745517 21 delete.go:62] Deleting pod "pod-subpath-test-secret-r9nf" in namespace "subpath-530"
  I0719 13:17:32.749874 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-530" for this suite. @ 07/19/25 13:17:32.754
• [24.166 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 07/19/25 13:17:32.763
  I0719 13:17:32.763393 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename webhook @ 07/19/25 13:17:32.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:17:32.779
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:17:32.782
  STEP: Setting up server cert @ 07/19/25 13:17:32.806
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/19/25 13:17:33.096
  STEP: Deploying the webhook pod @ 07/19/25 13:17:33.104
  STEP: Wait for the deployment to be ready @ 07/19/25 13:17:33.119
  I0719 13:17:33.128097 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0719 13:17:33.437104      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:17:34.437036      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/19/25 13:17:35.143
  STEP: Verifying the service has paired with the endpoint @ 07/19/25 13:17:35.161
  E0719 13:17:35.437859      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:17:36.161522 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0719 13:17:36.168226 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  E0719 13:17:36.438577      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 07/19/25 13:17:36.678
  STEP: Creating a custom resource that should be denied by the webhook @ 07/19/25 13:17:36.694
  E0719 13:17:37.438659      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:17:38.438753      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 07/19/25 13:17:38.711
  STEP: Updating the custom resource with disallowed data should be denied @ 07/19/25 13:17:38.718
  STEP: Deleting the custom resource should be denied @ 07/19/25 13:17:38.73
  STEP: Remove the offending key and value from the custom resource data @ 07/19/25 13:17:38.739
  STEP: Deleting the updated custom resource should be successful @ 07/19/25 13:17:38.75
  I0719 13:17:39.332682 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5389" for this suite. @ 07/19/25 13:17:39.339
  STEP: Destroying namespace "webhook-markers-9214" for this suite. @ 07/19/25 13:17:39.351
• [6.596 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSINodes CSI Conformance should run through the lifecycle of a csinode [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_node.go:54
  STEP: Creating a kubernetes client @ 07/19/25 13:17:39.359
  I0719 13:17:39.359400 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename csinodes @ 07/19/25 13:17:39.359
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:17:39.374
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:17:39.376
  STEP: Creating initial csiNode "e2e-csinode-m6k4d" @ 07/19/25 13:17:39.379
  STEP: Getting initial csiNode "e2e-csinode-m6k4d" @ 07/19/25 13:17:39.385
  STEP: Patching initial csiNode: "e2e-csinode-m6k4d" @ 07/19/25 13:17:39.389
  STEP: Listing csiNodes with LabelSelector "e2e-csinode-m6k4d=patched" @ 07/19/25 13:17:39.395
  STEP: Delete initial csiNode: "e2e-csinode-m6k4d" @ 07/19/25 13:17:39.399
  STEP: Confirm deletion of csiNode "e2e-csinode-m6k4d" @ 07/19/25 13:17:39.407
  STEP: Creating replacement csiNode "e2e-csinode-556tb" @ 07/19/25 13:17:39.411
  STEP: Getting replacement csiNode "e2e-csinode-556tb" @ 07/19/25 13:17:39.416
  STEP: Updating replacement csiNode "e2e-csinode-556tb" @ 07/19/25 13:17:39.421
  STEP: DeleteCollection of CSINodes with "e2e-csinode-556tb=updated" label @ 07/19/25 13:17:39.429
  E0719 13:17:39.439073      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Confirm deletion of replacement csiNode with LabelSelector "e2e-csinode-556tb=updated" @ 07/19/25 13:17:39.44
  I0719 13:17:39.445160 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csinodes-1" for this suite. @ 07/19/25 13:17:39.45
• [0.100 seconds]
------------------------------
SSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:104
  STEP: Creating a kubernetes client @ 07/19/25 13:17:39.459
  I0719 13:17:39.459532 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 07/19/25 13:17:39.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:17:39.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:17:39.475
  STEP: creating a target pod @ 07/19/25 13:17:39.478
  E0719 13:17:40.439529      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:17:41.439733      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 07/19/25 13:17:41.504
  E0719 13:17:42.440507      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:17:43.440719      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod's generation is 2 @ 07/19/25 13:17:43.526
  STEP: checking pod container endpoints @ 07/19/25 13:17:43.53
  I0719 13:17:43.530119 21 exec_util.go:63] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-7875 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0719 13:17:43.530136 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0719 13:17:43.530171 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-7875/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0719 13:17:43.564776 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0719 13:17:43.564827 21 exec_util.go:112] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 07/19/25 13:17:43.575
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 07/19/25 13:17:43.579
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 07/19/25 13:17:43.593
  I0719 13:17:43.597418 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-7875" for this suite. @ 07/19/25 13:17:43.602
• [4.153 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1533
  STEP: Creating a kubernetes client @ 07/19/25 13:17:43.613
  I0719 13:17:43.613072 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename kubectl @ 07/19/25 13:17:43.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:17:43.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:17:43.629
  STEP: creating Agnhost RC @ 07/19/25 13:17:43.632
  I0719 13:17:43.632270 21 kubectl.go:1540] namespace kubectl-4804
  I0719 13:17:43.632306 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-4804 create -f -'
  I0719 13:17:43.712626 21 builder.go:146] stderr: ""
  I0719 13:17:43.712654 21 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 07/19/25 13:17:43.712
  E0719 13:17:44.441504      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:17:44.719617 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0719 13:17:44.719655 21 framework.go:733] Found 0 / 1
  E0719 13:17:45.441553      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:17:45.719207 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0719 13:17:45.719242 21 framework.go:733] Found 1 / 1
  I0719 13:17:45.719254 21 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0719 13:17:45.722829 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0719 13:17:45.722849 21 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0719 13:17:45.722855 21 kubectl.go:1547] wait on agnhost-primary startup in kubectl-4804 
  I0719 13:17:45.722900 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-4804 logs agnhost-primary-svkqk agnhost-primary'
  I0719 13:17:45.777824 21 builder.go:146] stderr: ""
  I0719 13:17:45.777969 21 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 07/19/25 13:17:45.777
  I0719 13:17:45.778041 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-4804 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0719 13:17:45.859822 21 builder.go:146] stderr: ""
  I0719 13:17:45.859922 21 builder.go:147] stdout: "service/rm2 exposed\n"
  I0719 13:17:45.865094 21 utils.go:1115] Service rm2 in namespace kubectl-4804 found.
  E0719 13:17:46.441843      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:17:47.441943      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: exposing service @ 07/19/25 13:17:47.874
  I0719 13:17:47.874734 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-4804 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0719 13:17:47.943097 21 builder.go:146] stderr: ""
  I0719 13:17:47.943160 21 builder.go:147] stdout: "service/rm3 exposed\n"
  I0719 13:17:47.948925 21 utils.go:1115] Service rm3 in namespace kubectl-4804 found.
  E0719 13:17:48.442632      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:17:49.442736      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:17:49.958698 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4804" for this suite. @ 07/19/25 13:17:49.962
• [6.357 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 07/19/25 13:17:49.97
  I0719 13:17:49.970307 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename replicaset @ 07/19/25 13:17:49.97
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:17:49.984
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:17:49.987
  STEP: Create a ReplicaSet @ 07/19/25 13:17:49.989
  STEP: Verify that the required pods have come up @ 07/19/25 13:17:49.996
  I0719 13:17:50.001605 21 resource.go:81] Pod name sample-pod: Found 0 pods out of 3
  E0719 13:17:50.443164      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:17:51.443365      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:17:52.443506      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:17:53.443716      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:17:54.444576      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:17:55.010966 21 resource.go:81] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 07/19/25 13:17:55.011
  I0719 13:17:55.014757 21 replica_set.go:588] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 TerminatingReplicas:<nil> ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 07/19/25 13:17:55.014
  STEP: DeleteCollection of the ReplicaSets @ 07/19/25 13:17:55.02
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 07/19/25 13:17:55.03
  I0719 13:17:55.035397 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3272" for this suite. @ 07/19/25 13:17:55.046
• [5.092 seconds]
------------------------------
S
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:445
  STEP: Creating a kubernetes client @ 07/19/25 13:17:55.062
  I0719 13:17:55.062119 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename sched-pred @ 07/19/25 13:17:55.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:17:55.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:17:55.074
  I0719 13:17:55.077354 21 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0719 13:17:55.152602 21 util.go:390] Waiting for terminating namespaces to be deleted...
  I0719 13:17:55.158082 21 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-42-177 before test
  I0719 13:17:55.162692 21 predicates.go:958] nginx-ingress-controller-kubernetes-worker-75jzt from ingress-nginx-kubernetes-worker started at 2025-07-19 12:06:52 +0000 UTC (1 container statuses recorded)
  I0719 13:17:55.162717 21 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0719 13:17:55.162724 21 predicates.go:958] calico-node-tv24k from kube-system started at 2025-07-19 12:08:17 +0000 UTC (1 container statuses recorded)
  I0719 13:17:55.162729 21 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0719 13:17:55.162735 21 predicates.go:958] sonobuoy-e2e-job-c9d8c2a4e5e24525 from sonobuoy started at 2025-07-19 12:13:46 +0000 UTC (2 container statuses recorded)
  I0719 13:17:55.162740 21 predicates.go:960] 	Container e2e ready: true, restart count 0
  I0719 13:17:55.162746 21 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0719 13:17:55.162751 21 predicates.go:958] sonobuoy-systemd-logs-daemon-set-9ce81a3003f64498-fgps6 from sonobuoy started at 2025-07-19 12:13:47 +0000 UTC (2 container statuses recorded)
  I0719 13:17:55.162754 21 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0719 13:17:55.162759 21 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0719 13:17:55.162764 21 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-6-59 before test
  I0719 13:17:55.167867 21 predicates.go:958] ephemeral-containers-target-pod from ephemeral-containers-test-7875 started at 2025-07-19 13:17:39 +0000 UTC (1 container statuses recorded)
  I0719 13:17:55.168088 21 predicates.go:960] 	Container test-container-1 ready: true, restart count 0
  I0719 13:17:55.168146 21 predicates.go:958] nginx-ingress-controller-kubernetes-worker-ttnnm from ingress-nginx-kubernetes-worker started at 2025-07-19 12:40:56 +0000 UTC (1 container statuses recorded)
  I0719 13:17:55.168152 21 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0719 13:17:55.168159 21 predicates.go:958] calico-node-9fhxn from kube-system started at 2025-07-19 12:11:42 +0000 UTC (1 container statuses recorded)
  I0719 13:17:55.168164 21 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0719 13:17:55.168170 21 predicates.go:958] agnhost-primary-svkqk from kubectl-4804 started at 2025-07-19 13:17:43 +0000 UTC (1 container statuses recorded)
  I0719 13:17:55.168175 21 predicates.go:960] 	Container agnhost-primary ready: true, restart count 0
  I0719 13:17:55.168361 21 predicates.go:958] sonobuoy from sonobuoy started at 2025-07-19 12:13:45 +0000 UTC (1 container statuses recorded)
  I0719 13:17:55.168398 21 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0719 13:17:55.168405 21 predicates.go:958] sonobuoy-systemd-logs-daemon-set-9ce81a3003f64498-n6kv8 from sonobuoy started at 2025-07-19 12:13:46 +0000 UTC (2 container statuses recorded)
  I0719 13:17:55.168410 21 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0719 13:17:55.168414 21 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0719 13:17:55.168420 21 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-64-234 before test
  I0719 13:17:55.173061 21 predicates.go:958] nginx-ingress-controller-kubernetes-worker-7rrx5 from ingress-nginx-kubernetes-worker started at 2025-07-19 11:54:23 +0000 UTC (1 container statuses recorded)
  I0719 13:17:55.173154 21 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0719 13:17:55.173164 21 predicates.go:958] calico-node-lkdps from kube-system started at 2025-07-19 12:11:57 +0000 UTC (1 container statuses recorded)
  I0719 13:17:55.173170 21 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0719 13:17:55.173176 21 predicates.go:958] coredns-5d946bb58-nbpbm from kube-system started at 2025-07-19 11:54:23 +0000 UTC (1 container statuses recorded)
  I0719 13:17:55.173183 21 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0719 13:17:55.173188 21 predicates.go:958] kube-state-metrics-b84f44f45-2nqrm from kube-system started at 2025-07-19 11:54:23 +0000 UTC (1 container statuses recorded)
  I0719 13:17:55.173193 21 predicates.go:960] 	Container kube-state-metrics ready: true, restart count 2
  I0719 13:17:55.173200 21 predicates.go:958] metrics-server-v0.7.2-7d878b47f8-gcczm from kube-system started at 2025-07-19 11:54:23 +0000 UTC (2 container statuses recorded)
  I0719 13:17:55.173205 21 predicates.go:960] 	Container metrics-server ready: true, restart count 0
  I0719 13:17:55.173209 21 predicates.go:960] 	Container metrics-server-nanny ready: true, restart count 0
  I0719 13:17:55.173222 21 predicates.go:958] dashboard-metrics-scraper-5cf87bc988-79lk5 from kubernetes-dashboard started at 2025-07-19 11:54:23 +0000 UTC (1 container statuses recorded)
  I0719 13:17:55.173227 21 predicates.go:960] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I0719 13:17:55.173233 21 predicates.go:958] kubernetes-dashboard-6858576c98-4jkn6 from kubernetes-dashboard started at 2025-07-19 11:54:23 +0000 UTC (1 container statuses recorded)
  I0719 13:17:55.173237 21 predicates.go:960] 	Container kubernetes-dashboard ready: true, restart count 2
  I0719 13:17:55.173243 21 predicates.go:958] sonobuoy-systemd-logs-daemon-set-9ce81a3003f64498-9xxjq from sonobuoy started at 2025-07-19 12:13:47 +0000 UTC (2 container statuses recorded)
  I0719 13:17:55.173248 21 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0719 13:17:55.173253 21 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 07/19/25 13:17:55.173
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.1853a98685381abf], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/5 nodes are available: 5 Preemption is not helpful for scheduling.] @ 07/19/25 13:17:55.213
  E0719 13:17:55.445423      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:17:56.211327 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8" for this suite. @ 07/19/25 13:17:56.218
• [1.164 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 07/19/25 13:17:56.225
  I0719 13:17:56.225840 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename watch @ 07/19/25 13:17:56.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:17:56.239
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:17:56.243
  STEP: creating a watch on configmaps with a certain label @ 07/19/25 13:17:56.247
  STEP: creating a new configmap @ 07/19/25 13:17:56.248
  STEP: modifying the configmap once @ 07/19/25 13:17:56.255
  STEP: changing the label value of the configmap @ 07/19/25 13:17:56.264
  STEP: Expecting to observe a delete notification for the watched object @ 07/19/25 13:17:56.273
  I0719 13:17:56.273701 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3399  df8d4296-887e-43bd-b9a7-a901d74e0877 30014 0 2025-07-19 13:17:56 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-07-19 13:17:56 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0719 13:17:56.273842 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3399  df8d4296-887e-43bd-b9a7-a901d74e0877 30015 0 2025-07-19 13:17:56 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-07-19 13:17:56 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0719 13:17:56.273906 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3399  df8d4296-887e-43bd-b9a7-a901d74e0877 30016 0 2025-07-19 13:17:56 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-07-19 13:17:56 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 07/19/25 13:17:56.273
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 07/19/25 13:17:56.282
  E0719 13:17:56.445956      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:17:57.446785      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:17:58.446867      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:17:59.446970      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:00.447057      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:01.447160      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:02.447231      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:03.447370      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:04.447748      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:05.447844      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 07/19/25 13:18:06.283
  STEP: modifying the configmap a third time @ 07/19/25 13:18:06.295
  STEP: deleting the configmap @ 07/19/25 13:18:06.304
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 07/19/25 13:18:06.312
  I0719 13:18:06.313018 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3399  df8d4296-887e-43bd-b9a7-a901d74e0877 30092 0 2025-07-19 13:17:56 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-07-19 13:18:06 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0719 13:18:06.313157 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3399  df8d4296-887e-43bd-b9a7-a901d74e0877 30093 0 2025-07-19 13:17:56 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-07-19 13:18:06 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0719 13:18:06.313203 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3399  df8d4296-887e-43bd-b9a7-a901d74e0877 30094 0 2025-07-19 13:17:56 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-07-19 13:18:06 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0719 13:18:06.313291 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3399" for this suite. @ 07/19/25 13:18:06.319
• [10.101 seconds]
------------------------------
SS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 07/19/25 13:18:06.326
  I0719 13:18:06.326551 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename cronjob @ 07/19/25 13:18:06.327
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:18:06.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:18:06.342
  STEP: Creating a cronjob @ 07/19/25 13:18:06.344
  STEP: Ensuring more than one job is running at a time @ 07/19/25 13:18:06.35
  E0719 13:18:06.448248      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:07.448390      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:08.448909      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:09.449012      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:10.449422      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:11.449632      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:12.450020      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:13.450230      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:14.450396      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:15.450541      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:16.451105      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:17.451214      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:18.451320      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:19.451455      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:20.451530      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:21.451748      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:22.452193      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:23.452876      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:24.453800      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:25.453880      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:26.454811      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:27.454988      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:28.455334      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:29.455455      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:30.455768      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:31.456796      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:32.457086      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:33.457157      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:34.457292      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:35.457496      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:36.457685      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:37.457759      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:38.458459      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:39.458516      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:40.459579      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:41.459724      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:42.459820      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:43.460044      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:44.461091      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:45.461194      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:46.461740      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:47.461985      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:48.462860      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:49.462993      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:50.463872      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:51.464009      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:52.464444      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:53.464660      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:54.465444      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:55.465528      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:56.465993      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:57.466072      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:58.466186      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:18:59.466310      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:00.466968      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:01.467043      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:02.467571      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:03.467701      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:04.468250      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:05.468570      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:06.468814      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:07.469649      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:08.469970      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:09.470087      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:10.470659      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:11.470572      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:12.471504      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:13.471724      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:14.472384      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:15.472528      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:16.473450      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:17.473662      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:18.474596      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:19.475585      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:20.475926      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:21.476023      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:22.476970      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:23.477039      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:24.477813      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:25.478653      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:26.479730      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:27.479848      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:28.480495      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:29.480606      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:30.481558      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:31.481658      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:32.482083      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:33.482430      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:34.482934      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:35.483125      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:36.483861      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:37.484048      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:38.484932      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:39.485058      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:40.485462      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:41.486557      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:42.487360      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:43.487472      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:44.488459      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:45.488480      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:46.488743      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:47.489537      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:48.490221      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:49.490327      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:50.490597      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:51.490688      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:52.491648      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:53.492541      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:54.493503      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:55.493622      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:56.494212      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:57.494653      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:58.495142      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:19:59.495243      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 07/19/25 13:20:00.355
  STEP: Removing cronjob @ 07/19/25 13:20:00.36
  I0719 13:20:00.368523 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-437" for this suite. @ 07/19/25 13:20:00.374
• [114.057 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 07/19/25 13:20:00.383
  I0719 13:20:00.383269 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename watch @ 07/19/25 13:20:00.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:20:00.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:20:00.402
  STEP: creating a watch on configmaps with label A @ 07/19/25 13:20:00.404
  STEP: creating a watch on configmaps with label B @ 07/19/25 13:20:00.405
  STEP: creating a watch on configmaps with label A or B @ 07/19/25 13:20:00.406
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 07/19/25 13:20:00.407
  I0719 13:20:00.413844 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9026  fdf53277-711d-4c00-9722-5f08052999aa 30395 0 2025-07-19 13:20:00 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-07-19 13:20:00 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0719 13:20:00.413943 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9026  fdf53277-711d-4c00-9722-5f08052999aa 30395 0 2025-07-19 13:20:00 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-07-19 13:20:00 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 07/19/25 13:20:00.414
  I0719 13:20:00.423558 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9026  fdf53277-711d-4c00-9722-5f08052999aa 30396 0 2025-07-19 13:20:00 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-07-19 13:20:00 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0719 13:20:00.423628 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9026  fdf53277-711d-4c00-9722-5f08052999aa 30396 0 2025-07-19 13:20:00 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-07-19 13:20:00 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 07/19/25 13:20:00.423
  I0719 13:20:00.432863 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9026  fdf53277-711d-4c00-9722-5f08052999aa 30397 0 2025-07-19 13:20:00 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-07-19 13:20:00 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0719 13:20:00.432930 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9026  fdf53277-711d-4c00-9722-5f08052999aa 30397 0 2025-07-19 13:20:00 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-07-19 13:20:00 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 07/19/25 13:20:00.432
  I0719 13:20:00.440818 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9026  fdf53277-711d-4c00-9722-5f08052999aa 30398 0 2025-07-19 13:20:00 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-07-19 13:20:00 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0719 13:20:00.440847 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9026  fdf53277-711d-4c00-9722-5f08052999aa 30398 0 2025-07-19 13:20:00 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-07-19 13:20:00 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 07/19/25 13:20:00.44
  I0719 13:20:00.447551 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9026  a6452f6a-c47f-418b-baf0-b2bb73d309cc 30399 0 2025-07-19 13:20:00 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-07-19 13:20:00 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0719 13:20:00.447608 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9026  a6452f6a-c47f-418b-baf0-b2bb73d309cc 30399 0 2025-07-19 13:20:00 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-07-19 13:20:00 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0719 13:20:00.495761      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:20:01.496659      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:20:02.496735      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:20:03.496838      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:20:04.496931      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:20:05.497009      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:20:06.497129      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:20:07.497179      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:20:08.497395      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:20:09.498179      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 07/19/25 13:20:10.448
  I0719 13:20:10.458151 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9026  a6452f6a-c47f-418b-baf0-b2bb73d309cc 30427 0 2025-07-19 13:20:00 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-07-19 13:20:00 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0719 13:20:10.458190 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9026  a6452f6a-c47f-418b-baf0-b2bb73d309cc 30427 0 2025-07-19 13:20:00 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-07-19 13:20:00 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0719 13:20:10.499260      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:20:11.499391      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:20:12.499484      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:20:13.499682      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:20:14.499763      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:20:15.499821      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:20:16.499933      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:20:17.500053      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:20:18.500146      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:20:19.500647      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:20:20.458524 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9026" for this suite. @ 07/19/25 13:20:20.464
• [20.090 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 07/19/25 13:20:20.472
  I0719 13:20:20.472984 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename replicaset @ 07/19/25 13:20:20.473
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:20:20.486
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:20:20.488
  STEP: Create a Replicaset @ 07/19/25 13:20:20.496
  E0719 13:20:20.500814      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verify that the required pods have come up. @ 07/19/25 13:20:20.503
  I0719 13:20:20.509656 21 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  E0719 13:20:21.501509      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:20:22.501587      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:20:23.501712      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:20:24.501861      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:20:25.502030      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:20:25.517316 21 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/19/25 13:20:25.517
  STEP: Getting /status @ 07/19/25 13:20:25.517
  I0719 13:20:25.521847 21 replica_set.go:649] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 07/19/25 13:20:25.521
  I0719 13:20:25.532534 21 replica_set.go:669] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 07/19/25 13:20:25.532
  I0719 13:20:25.533969 21 replica_set.go:695] Observed &ReplicaSet event: ADDED
  I0719 13:20:25.534070 21 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0719 13:20:25.534198 21 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0719 13:20:25.534253 21 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0719 13:20:25.534269 21 replica_set.go:688] Found replicaset test-rs in namespace replicaset-2746 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0719 13:20:25.534280 21 replica_set.go:699] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 07/19/25 13:20:25.534
  I0719 13:20:25.534308 21 replica_set.go:703] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0719 13:20:25.541588 21 replica_set.go:707] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 07/19/25 13:20:25.541
  I0719 13:20:25.543179 21 replica_set.go:731] Observed &ReplicaSet event: ADDED
  I0719 13:20:25.543242 21 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0719 13:20:25.543286 21 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0719 13:20:25.543489 21 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0719 13:20:25.543509 21 replica_set.go:727] Observed replicaset test-rs in namespace replicaset-2746 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0719 13:20:25.543563 21 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0719 13:20:25.543581 21 replica_set.go:724] Found replicaset test-rs in namespace replicaset-2746 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0719 13:20:25.543591 21 replica_set.go:735] Replicaset test-rs has a patched status
  I0719 13:20:25.543670 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2746" for this suite. @ 07/19/25 13:20:25.549
• [5.086 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:196
  STEP: Creating a kubernetes client @ 07/19/25 13:20:25.558
  I0719 13:20:25.558874 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/19/25 13:20:25.559
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:20:25.573
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:20:25.576
  I0719 13:20:25.578918 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  E0719 13:20:26.502980      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 07/19/25 13:20:26.793
  I0719 13:20:26.793092 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=crd-publish-openapi-9586 --namespace=crd-publish-openapi-9586 create -f -'
  E0719 13:20:27.503060      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:20:28.503153      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:20:28.860742 21 builder.go:146] stderr: ""
  I0719 13:20:28.860780 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4202-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0719 13:20:28.860831 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=crd-publish-openapi-9586 --namespace=crd-publish-openapi-9586 delete e2e-test-crd-publish-openapi-4202-crds test-cr'
  I0719 13:20:28.924578 21 builder.go:146] stderr: ""
  I0719 13:20:28.924618 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4202-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I0719 13:20:28.924657 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=crd-publish-openapi-9586 --namespace=crd-publish-openapi-9586 apply -f -'
  I0719 13:20:28.983327 21 builder.go:146] stderr: ""
  I0719 13:20:28.983387 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4202-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0719 13:20:28.983442 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=crd-publish-openapi-9586 --namespace=crd-publish-openapi-9586 delete e2e-test-crd-publish-openapi-4202-crds test-cr'
  I0719 13:20:29.036476 21 builder.go:146] stderr: ""
  I0719 13:20:29.036515 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4202-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 07/19/25 13:20:29.036
  I0719 13:20:29.036601 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=crd-publish-openapi-9586 explain e2e-test-crd-publish-openapi-4202-crds'
  I0719 13:20:29.078047 21 builder.go:146] stderr: ""
  I0719 13:20:29.078100 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-4202-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0719 13:20:29.504120      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:20:30.319964 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9586" for this suite. @ 07/19/25 13:20:30.328
• [4.778 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:900
  STEP: Creating a kubernetes client @ 07/19/25 13:20:30.336
  I0719 13:20:30.336845 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename pods @ 07/19/25 13:20:30.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:20:30.352
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:20:30.356
  STEP: creating a Pod with a static label @ 07/19/25 13:20:30.363
  STEP: watching for Pod to be ready @ 07/19/25 13:20:30.374
  I0719 13:20:30.377012 21 pods.go:947] observed Pod pod-test in namespace pods-7154 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0719 13:20:30.380454 21 pods.go:947] observed Pod pod-test in namespace pods-7154 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-19 13:20:30 +0000 UTC  }]
  I0719 13:20:30.407500 21 pods.go:947] observed Pod pod-test in namespace pods-7154 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-19 13:20:30 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-19 13:20:30 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-19 13:20:30 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-19 13:20:30 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-19 13:20:30 +0000 UTC  }]
  E0719 13:20:30.504781      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:20:31.143882 21 pods.go:950] Found Pod pod-test in namespace pods-7154 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-19 13:20:31 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-19 13:20:30 +0000 UTC  } {Ready 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-19 13:20:31 +0000 UTC  } {ContainersReady 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-19 13:20:31 +0000 UTC  } {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-19 13:20:30 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 07/19/25 13:20:31.149
  STEP: getting the Pod and ensuring that it's patched @ 07/19/25 13:20:31.159
  STEP: replacing the Pod's status Ready condition to False @ 07/19/25 13:20:31.162
  STEP: check the Pod again to ensure its Ready conditions are False @ 07/19/25 13:20:31.175
  STEP: deleting the Pod via a Collection with a LabelSelector @ 07/19/25 13:20:31.175
  STEP: watching for the Pod to be deleted @ 07/19/25 13:20:31.189
  I0719 13:20:31.190600 21 pods.go:1060] observed event type MODIFIED
  E0719 13:20:31.504860      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:20:32.504983      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:20:33.042205 21 pods.go:1060] observed event type MODIFIED
  I0719 13:20:33.156315 21 pods.go:1060] observed event type MODIFIED
  I0719 13:20:33.295118 21 pods.go:1060] observed event type MODIFIED
  E0719 13:20:33.505481      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:20:34.159441 21 pods.go:1060] observed event type MODIFIED
  I0719 13:20:34.166300 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7154" for this suite. @ 07/19/25 13:20:34.172
• [3.843 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:99
  STEP: Creating a kubernetes client @ 07/19/25 13:20:34.18
  I0719 13:20:34.180493 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename emptydir @ 07/19/25 13:20:34.18
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:20:34.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:20:34.197
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 07/19/25 13:20:34.2
  E0719 13:20:34.506121      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:20:35.506577      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:20:36.506770      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:20:37.507570      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/19/25 13:20:38.229
  I0719 13:20:38.235200 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod pod-42c33093-70c6-4e27-9da1-e8086dd829f1 container test-container: <nil>
  STEP: delete the pod @ 07/19/25 13:20:38.247
  I0719 13:20:38.264375 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8038" for this suite. @ 07/19/25 13:20:38.269
• [4.097 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:85
  STEP: Creating a kubernetes client @ 07/19/25 13:20:38.278
  I0719 13:20:38.278074 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename downward-api @ 07/19/25 13:20:38.278
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:20:38.292
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:20:38.295
  STEP: Creating a pod to test downward API volume plugin @ 07/19/25 13:20:38.297
  E0719 13:20:38.508574      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:20:39.508684      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:20:40.509397      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:20:41.509610      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/19/25 13:20:42.327
  I0719 13:20:42.332177 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod downwardapi-volume-9de0af29-9017-4316-aae9-c1e728d702d5 container client-container: <nil>
  STEP: delete the pod @ 07/19/25 13:20:42.349
  I0719 13:20:42.365840 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3178" for this suite. @ 07/19/25 13:20:42.371
• [4.103 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 07/19/25 13:20:42.38
  I0719 13:20:42.380717 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename pod-network-test @ 07/19/25 13:20:42.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:20:42.392
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:20:42.394
  STEP: Performing setup for networking test in namespace pod-network-test-5587 @ 07/19/25 13:20:42.397
  STEP: creating a selector @ 07/19/25 13:20:42.397
  STEP: Creating the service pods in kubernetes @ 07/19/25 13:20:42.397
  I0719 13:20:42.397471 21 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0719 13:20:42.509856      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:20:43.510816      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:20:44.511637      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:20:45.511788      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:20:46.511913      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:20:47.512488      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:20:48.512722      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:20:49.513584      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:20:50.513809      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:20:51.513934      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:20:52.514025      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:20:53.514243      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:20:54.514389      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:20:55.514536      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:20:56.514639      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 07/19/25 13:20:56.569
  E0719 13:20:57.515640      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:20:58.515721      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:20:58.606405 21 utils.go:802] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0719 13:20:58.606440 21 utils.go:495] Going to poll 192.168.156.247 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0719 13:20:58.610038 21 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.156.247 8081 | grep -v '^\s*$'] Namespace:pod-network-test-5587 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0719 13:20:58.610058 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0719 13:20:58.610097 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5587/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.156.247+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0719 13:20:59.516489      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:20:59.655255 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0719 13:20:59.655306 21 utils.go:512] Found all 1 expected endpoints: [netserver-0]
  I0719 13:20:59.655319 21 utils.go:495] Going to poll 192.168.206.236 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0719 13:20:59.662619 21 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.206.236 8081 | grep -v '^\s*$'] Namespace:pod-network-test-5587 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0719 13:20:59.662642 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0719 13:20:59.662683 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5587/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.206.236+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0719 13:21:00.517029      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:21:00.705026 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0719 13:21:00.705075 21 utils.go:512] Found all 1 expected endpoints: [netserver-1]
  I0719 13:21:00.705093 21 utils.go:495] Going to poll 192.168.103.147 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0719 13:21:00.710962 21 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.103.147 8081 | grep -v '^\s*$'] Namespace:pod-network-test-5587 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0719 13:21:00.710985 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0719 13:21:00.711057 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5587/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.103.147+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0719 13:21:01.517329      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:21:01.753278 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0719 13:21:01.753351 21 utils.go:512] Found all 1 expected endpoints: [netserver-2]
  I0719 13:21:01.753453 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5587" for this suite. @ 07/19/25 13:21:01.759
• [19.388 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:559
  STEP: Creating a kubernetes client @ 07/19/25 13:21:01.768
  I0719 13:21:01.768721 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename svcaccounts @ 07/19/25 13:21:01.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:21:01.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:21:01.784
  I0719 13:21:01.805130 21 service_accounts.go:646] created pod
  E0719 13:21:02.517514      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:21:03.518587      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:21:04.519572      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:21:05.519730      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/19/25 13:21:05.821
  E0719 13:21:06.520762      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:21:07.520977      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:21:08.521217      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:21:09.521309      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:21:10.521458      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:21:11.521680      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:21:12.521901      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:21:13.522117      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:21:14.522223      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:21:15.522434      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:21:16.522543      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:21:17.523576      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:21:18.523705      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:21:19.524084      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:21:20.524383      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:21:21.524600      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:21:22.524797      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:21:23.524916      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:21:24.525164      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:21:25.525228      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:21:26.525853      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:21:27.525941      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:21:28.526857      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:21:29.526956      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:21:30.527544      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:21:31.528585      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:21:32.528763      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:21:33.528967      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:21:34.529088      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:21:35.529587      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:21:35.822603 21 service_accounts.go:652] polling logs
  I0719 13:21:35.834693 21 service_accounts.go:662] Pod logs: 
  I0719 13:21:02.401297       1 log.go:245] OK: Got token
  I0719 13:21:02.401345       1 log.go:245] validating with in-cluster discovery
  I0719 13:21:02.401517       1 log.go:245] OK: got issuer https://kubernetes.default.svc
  I0719 13:21:02.401530       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-726:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc00048b120), NotBefore:(*jwt.NumericDate)(0xc00048b210), IssuedAt:(*jwt.NumericDate)(0xc00048b130), ID:"03fb43bd-18a7-45a5-967b-6100ae667871"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-726", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"03d58c21-6851-4d3f-bfdd-1a9fc77d0f1f"}}}
  I0719 13:21:02.408935       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I0719 13:21:02.413415       1 log.go:245] OK: Validated signature on JWT
  I0719 13:21:02.413478       1 log.go:245] OK: Got valid claims from token!
  I0719 13:21:02.413533       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-726:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0002dd410), NotBefore:(*jwt.NumericDate)(0xc0002dd438), IssuedAt:(*jwt.NumericDate)(0xc0002dd418), ID:"03fb43bd-18a7-45a5-967b-6100ae667871"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-726", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"03d58c21-6851-4d3f-bfdd-1a9fc77d0f1f"}}}

  I0719 13:21:35.834734 21 service_accounts.go:666] completed pod
  I0719 13:21:35.842734 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-726" for this suite. @ 07/19/25 13:21:35.848
• [34.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:407
  STEP: Creating a kubernetes client @ 07/19/25 13:21:35.856
  I0719 13:21:35.856475 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename job @ 07/19/25 13:21:35.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:21:35.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:21:35.873
  STEP: Creating Indexed job @ 07/19/25 13:21:35.875
  STEP: Ensuring job reaches completions @ 07/19/25 13:21:35.883
  E0719 13:21:36.530600      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:21:37.530842      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:21:38.530936      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:21:39.531093      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:21:40.531958      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:21:41.532115      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:21:42.532224      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:21:43.532369      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 07/19/25 13:21:43.917
  I0719 13:21:43.922900 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1436" for this suite. @ 07/19/25 13:21:43.929
• [8.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:155
  STEP: Creating a kubernetes client @ 07/19/25 13:21:43.937
  I0719 13:21:43.937173 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/19/25 13:21:43.937
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:21:43.951
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:21:43.954
  I0719 13:21:43.956735 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  E0719 13:21:44.533038      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 07/19/25 13:21:45.204
  I0719 13:21:45.204919 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=crd-publish-openapi-8487 --namespace=crd-publish-openapi-8487 create -f -'
  I0719 13:21:45.271413 21 builder.go:146] stderr: ""
  I0719 13:21:45.271457 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2705-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0719 13:21:45.271511 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=crd-publish-openapi-8487 --namespace=crd-publish-openapi-8487 delete e2e-test-crd-publish-openapi-2705-crds test-cr'
  I0719 13:21:45.322644 21 builder.go:146] stderr: ""
  I0719 13:21:45.322680 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2705-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I0719 13:21:45.322719 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=crd-publish-openapi-8487 --namespace=crd-publish-openapi-8487 apply -f -'
  I0719 13:21:45.388684 21 builder.go:146] stderr: ""
  I0719 13:21:45.388753 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2705-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0719 13:21:45.388817 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=crd-publish-openapi-8487 --namespace=crd-publish-openapi-8487 delete e2e-test-crd-publish-openapi-2705-crds test-cr'
  I0719 13:21:45.444845 21 builder.go:146] stderr: ""
  I0719 13:21:45.444883 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2705-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 07/19/25 13:21:45.444
  I0719 13:21:45.444965 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=crd-publish-openapi-8487 explain e2e-test-crd-publish-openapi-2705-crds'
  I0719 13:21:45.486315 21 builder.go:146] stderr: ""
  I0719 13:21:45.486390 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-2705-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E0719 13:21:45.533802      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:21:46.534794      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:21:46.754036 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8487" for this suite. @ 07/19/25 13:21:46.761
• [2.835 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 07/19/25 13:21:46.771
  I0719 13:21:46.771946 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename sysctl @ 07/19/25 13:21:46.772
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:21:46.784
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:21:46.786
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 07/19/25 13:21:46.789
  STEP: Watching for error events or started pod @ 07/19/25 13:21:46.798
  E0719 13:21:47.535830      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:21:48.535910      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 07/19/25 13:21:48.804
  E0719 13:21:49.536566      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:21:50.536640      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Checking that the pod succeeded @ 07/19/25 13:21:50.818
  STEP: Getting logs from the pod @ 07/19/25 13:21:50.818
  STEP: Checking that the sysctl is actually updated @ 07/19/25 13:21:50.825
  I0719 13:21:50.826006 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-2330" for this suite. @ 07/19/25 13:21:50.832
• [4.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1050
  STEP: Creating a kubernetes client @ 07/19/25 13:21:50.84
  I0719 13:21:50.840755 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename kubectl @ 07/19/25 13:21:50.841
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:21:50.853
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:21:50.856
  STEP: create deployment with httpd image @ 07/19/25 13:21:50.858
  I0719 13:21:50.858932 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-7283 create -f -'
  I0719 13:21:50.932518 21 builder.go:146] stderr: ""
  I0719 13:21:50.932551 21 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 07/19/25 13:21:50.932
  I0719 13:21:50.932626 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-7283 diff -f -'
  E0719 13:21:51.537560      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:21:52.537641      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:21:53.537762      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:21:54.537859      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:21:55.246183 21 builder.go:135] rc: 1
  I0719 13:21:55.246268 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-7283 delete -f -'
  I0719 13:21:55.297572 21 builder.go:146] stderr: ""
  I0719 13:21:55.297606 21 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I0719 13:21:55.297764 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7283" for this suite. @ 07/19/25 13:21:55.302
• [4.470 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job with successPolicy succeededIndexes rule should succeeded even when some indexes remain pending [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:526
  STEP: Creating a kubernetes client @ 07/19/25 13:21:55.31
  I0719 13:21:55.310827 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename job @ 07/19/25 13:21:55.311
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:21:55.327
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:21:55.33
  STEP: Creating an indexed job with successPolicy succeededIndexes rule @ 07/19/25 13:21:55.333
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet with SuccessPolicy reason condition @ 07/19/25 13:21:55.34
  E0719 13:21:55.538922      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:21:56.538994      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:21:57.539853      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:21:58.540000      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensure that the job reaches completions @ 07/19/25 13:21:59.362
  STEP: Verifying that the only appropriately index succeeded @ 07/19/25 13:21:59.372
  I0719 13:21:59.375946 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1502" for this suite. @ 07/19/25 13:21:59.38
• [4.078 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 07/19/25 13:21:59.388
  I0719 13:21:59.388646 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename validating-admission-policy @ 07/19/25 13:21:59.389
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:21:59.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:21:59.406
  STEP: creating the policy @ 07/19/25 13:21:59.416
  STEP: waiting until the marker is denied @ 07/19/25 13:21:59.429
  E0719 13:21:59.540632      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: testing a replicated Deployment to be allowed @ 07/19/25 13:21:59.637
  STEP: testing a non-replicated ReplicaSet not to be denied @ 07/19/25 13:21:59.66
  I0719 13:21:59.720754 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-5649" for this suite. @ 07/19/25 13:21:59.726
• [0.346 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:83
  STEP: Creating a kubernetes client @ 07/19/25 13:21:59.735
  I0719 13:21:59.735268 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename resourcequota @ 07/19/25 13:21:59.735
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:21:59.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:21:59.753
  STEP: Counting existing ResourceQuota @ 07/19/25 13:21:59.756
  E0719 13:22:00.541584      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:22:01.542580      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:22:02.542692      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:22:03.543539      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:22:04.543634      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/19/25 13:22:04.761
  STEP: Ensuring resource quota status is calculated @ 07/19/25 13:22:04.768
  E0719 13:22:05.543878      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:22:06.544059      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:22:06.773226 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1995" for this suite. @ 07/19/25 13:22:06.778
• [7.052 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:566
  STEP: Creating a kubernetes client @ 07/19/25 13:22:06.787
  I0719 13:22:06.787381 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename webhook @ 07/19/25 13:22:06.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:22:06.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:22:06.804
  STEP: Setting up server cert @ 07/19/25 13:22:06.827
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/19/25 13:22:07.111
  STEP: Deploying the webhook pod @ 07/19/25 13:22:07.12
  STEP: Wait for the deployment to be ready @ 07/19/25 13:22:07.136
  I0719 13:22:07.147233 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0719 13:22:07.544570      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:22:08.544786      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/19/25 13:22:09.162
  STEP: Verifying the service has paired with the endpoint @ 07/19/25 13:22:09.181
  E0719 13:22:09.544874      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:22:10.182599 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 07/19/25 13:22:10.265
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/19/25 13:22:10.298
  STEP: Deleting the collection of validation webhooks @ 07/19/25 13:22:10.323
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/19/25 13:22:10.39
  I0719 13:22:10.454782 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9962" for this suite. @ 07/19/25 13:22:10.459
  STEP: Destroying namespace "webhook-markers-5150" for this suite. @ 07/19/25 13:22:10.469
• [3.693 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 07/19/25 13:22:10.487
  I0719 13:22:10.487270 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename secrets @ 07/19/25 13:22:10.488
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:22:10.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:22:10.504
  STEP: Creating secret with name secret-test-map-0e3a4e5d-bf7c-451a-8cd9-947d24c1fa13 @ 07/19/25 13:22:10.506
  STEP: Creating a pod to test consume secrets @ 07/19/25 13:22:10.512
  E0719 13:22:10.545372      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:22:11.545487      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:22:12.546302      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:22:13.546544      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/19/25 13:22:14.541
  I0719 13:22:14.545138 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod pod-secrets-93d4553b-b8bd-42d9-9b80-e7e8533e0ced container secret-volume-test: <nil>
  E0719 13:22:14.547207      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the pod @ 07/19/25 13:22:14.554
  I0719 13:22:14.575777 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-400" for this suite. @ 07/19/25 13:22:14.58
• [4.105 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:488
  STEP: Creating a kubernetes client @ 07/19/25 13:22:14.59
  I0719 13:22:14.590196 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename deployment @ 07/19/25 13:22:14.59
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:22:14.603
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:22:14.605
  STEP: creating a Deployment @ 07/19/25 13:22:14.611
  I0719 13:22:14.611650 21 deployment.go:506] Creating simple deployment test-deployment-sm4xf
  I0719 13:22:14.626680 21 deployment.go:223] deployment "test-deployment-sm4xf" doesn't have the required revision set
  E0719 13:22:15.548045      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:22:16.548151      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Getting /status @ 07/19/25 13:22:16.644
  I0719 13:22:16.648710 21 deployment.go:531] Deployment test-deployment-sm4xf has Conditions: [{Available True 2025-07-19 13:22:15 +0000 UTC 2025-07-19 13:22:15 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2025-07-19 13:22:15 +0000 UTC 2025-07-19 13:22:14 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-sm4xf-6fb4c74686" has successfully progressed.}]
  STEP: updating Deployment Status @ 07/19/25 13:22:16.648
  I0719 13:22:16.660026 21 deployment.go:551] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.July, 19, 13, 22, 15, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 19, 13, 22, 15, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 19, 13, 22, 15, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 19, 13, 22, 14, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-sm4xf-6fb4c74686\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 07/19/25 13:22:16.66
  I0719 13:22:16.661508 21 deployment.go:578] Observed &Deployment event: ADDED
  I0719 13:22:16.661529 21 deployment.go:574] Observed Deployment test-deployment-sm4xf in namespace deployment-8331 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-19 13:22:14 +0000 UTC 2025-07-19 13:22:14 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-sm4xf-6fb4c74686"}
  I0719 13:22:16.661595 21 deployment.go:578] Observed &Deployment event: MODIFIED
  I0719 13:22:16.661611 21 deployment.go:574] Observed Deployment test-deployment-sm4xf in namespace deployment-8331 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-19 13:22:14 +0000 UTC 2025-07-19 13:22:14 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-sm4xf-6fb4c74686"}
  I0719 13:22:16.661619 21 deployment.go:574] Observed Deployment test-deployment-sm4xf in namespace deployment-8331 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-07-19 13:22:14 +0000 UTC 2025-07-19 13:22:14 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0719 13:22:16.661685 21 deployment.go:578] Observed &Deployment event: MODIFIED
  I0719 13:22:16.661825 21 deployment.go:574] Observed Deployment test-deployment-sm4xf in namespace deployment-8331 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-07-19 13:22:14 +0000 UTC 2025-07-19 13:22:14 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0719 13:22:16.661840 21 deployment.go:574] Observed Deployment test-deployment-sm4xf in namespace deployment-8331 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-19 13:22:14 +0000 UTC 2025-07-19 13:22:14 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-sm4xf-6fb4c74686" is progressing.}
  I0719 13:22:16.661957 21 deployment.go:578] Observed &Deployment event: MODIFIED
  I0719 13:22:16.661972 21 deployment.go:574] Observed Deployment test-deployment-sm4xf in namespace deployment-8331 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-07-19 13:22:15 +0000 UTC 2025-07-19 13:22:15 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0719 13:22:16.661993 21 deployment.go:574] Observed Deployment test-deployment-sm4xf in namespace deployment-8331 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-19 13:22:15 +0000 UTC 2025-07-19 13:22:14 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-sm4xf-6fb4c74686" has successfully progressed.}
  I0719 13:22:16.662073 21 deployment.go:578] Observed &Deployment event: MODIFIED
  I0719 13:22:16.662085 21 deployment.go:574] Observed Deployment test-deployment-sm4xf in namespace deployment-8331 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-07-19 13:22:15 +0000 UTC 2025-07-19 13:22:15 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0719 13:22:16.662094 21 deployment.go:574] Observed Deployment test-deployment-sm4xf in namespace deployment-8331 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-19 13:22:15 +0000 UTC 2025-07-19 13:22:14 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-sm4xf-6fb4c74686" has successfully progressed.}
  I0719 13:22:16.662113 21 deployment.go:571] Found Deployment test-deployment-sm4xf in namespace deployment-8331 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0719 13:22:16.662123 21 deployment.go:582] Deployment test-deployment-sm4xf has an updated status
  STEP: patching the Statefulset Status @ 07/19/25 13:22:16.662
  I0719 13:22:16.662148 21 deployment.go:586] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0719 13:22:16.671393 21 deployment.go:590] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 07/19/25 13:22:16.671
  I0719 13:22:16.672861 21 deployment.go:615] Observed &Deployment event: ADDED
  I0719 13:22:16.672887 21 deployment.go:611] Observed deployment test-deployment-sm4xf in namespace deployment-8331 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-19 13:22:14 +0000 UTC 2025-07-19 13:22:14 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-sm4xf-6fb4c74686"}
  I0719 13:22:16.672957 21 deployment.go:615] Observed &Deployment event: MODIFIED
  I0719 13:22:16.672971 21 deployment.go:611] Observed deployment test-deployment-sm4xf in namespace deployment-8331 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-19 13:22:14 +0000 UTC 2025-07-19 13:22:14 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-sm4xf-6fb4c74686"}
  I0719 13:22:16.672979 21 deployment.go:611] Observed deployment test-deployment-sm4xf in namespace deployment-8331 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-07-19 13:22:14 +0000 UTC 2025-07-19 13:22:14 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0719 13:22:16.673041 21 deployment.go:615] Observed &Deployment event: MODIFIED
  I0719 13:22:16.673052 21 deployment.go:611] Observed deployment test-deployment-sm4xf in namespace deployment-8331 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-07-19 13:22:14 +0000 UTC 2025-07-19 13:22:14 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0719 13:22:16.673061 21 deployment.go:611] Observed deployment test-deployment-sm4xf in namespace deployment-8331 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-19 13:22:14 +0000 UTC 2025-07-19 13:22:14 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-sm4xf-6fb4c74686" is progressing.}
  I0719 13:22:16.673169 21 deployment.go:615] Observed &Deployment event: MODIFIED
  I0719 13:22:16.673248 21 deployment.go:611] Observed deployment test-deployment-sm4xf in namespace deployment-8331 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-07-19 13:22:15 +0000 UTC 2025-07-19 13:22:15 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0719 13:22:16.673261 21 deployment.go:611] Observed deployment test-deployment-sm4xf in namespace deployment-8331 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-19 13:22:15 +0000 UTC 2025-07-19 13:22:14 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-sm4xf-6fb4c74686" has successfully progressed.}
  I0719 13:22:16.673418 21 deployment.go:615] Observed &Deployment event: MODIFIED
  I0719 13:22:16.673435 21 deployment.go:611] Observed deployment test-deployment-sm4xf in namespace deployment-8331 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-07-19 13:22:15 +0000 UTC 2025-07-19 13:22:15 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0719 13:22:16.673445 21 deployment.go:611] Observed deployment test-deployment-sm4xf in namespace deployment-8331 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-19 13:22:15 +0000 UTC 2025-07-19 13:22:14 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-sm4xf-6fb4c74686" has successfully progressed.}
  I0719 13:22:16.673455 21 deployment.go:611] Observed deployment test-deployment-sm4xf in namespace deployment-8331 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0719 13:22:16.673577 21 deployment.go:615] Observed &Deployment event: MODIFIED
  I0719 13:22:16.673630 21 deployment.go:608] Found deployment test-deployment-sm4xf in namespace deployment-8331 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0719 13:22:16.673644 21 deployment.go:619] Deployment test-deployment-sm4xf has a patched status
  I0719 13:22:16.679269 21 deployment.go:632] Deployment "test-deployment-sm4xf":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-sm4xf",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8331",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "75090f37-1f4c-4bfa-8f53-68277e4068b3",
      ResourceVersion: (string) (len=5) "31604",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888528134,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888528134,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888528136,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888528136,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=3) "e2e": (string) (len=7) "testing"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888528136,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888528136,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-sm4xf-6fb4c74686\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0719 13:22:16.738801 21 deployment.go:40] New ReplicaSet "test-deployment-sm4xf-6fb4c74686" of Deployment "test-deployment-sm4xf":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-sm4xf-6fb4c74686",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8331",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e6f73af9-d775-46e9-80ed-f9d4c385d3e2",
      ResourceVersion: (string) (len=5) "31581",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888528134,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-sm4xf",
          UID: (types.UID) (len=36) "75090f37-1f4c-4bfa-8f53-68277e4068b3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888528134,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 37 35 30  |k:{\"uid\":\"750|
              00000120  39 30 66 33 37 2d 31 66  34 63 2d 34 62 66 61 2d  |90f37-1f4c-4bfa-|
              00000130  38 66 35 33 2d 36 38 32  37 37 65 34 30 36 38 62  |8f53-68277e4068b|
              00000140  33 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |3\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888528135,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686",
            (string) (len=3) "e2e": (string) (len=7) "testing"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0719 13:22:16.745882 21 deployment.go:68] Pod "test-deployment-sm4xf-6fb4c74686-jnzdt" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-sm4xf-6fb4c74686-jnzdt",
      GenerateName: (string) (len=33) "test-deployment-sm4xf-6fb4c74686-",
      Namespace: (string) (len=15) "deployment-8331",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fd4b9575-0aa8-4335-977a-b3617b348a3e",
      ResourceVersion: (string) (len=5) "31580",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888528134,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-sm4xf-6fb4c74686",
          UID: (types.UID) (len=36) "e6f73af9-d775-46e9-80ed-f9d4c385d3e2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888528134,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 65 36 66 37 33 61 66  39 2d 64 37 37 35 2d 34  |"e6f73af9-d775-4|
              000000a0  36 65 39 2d 38 30 65 64  2d 66 39 64 34 63 33 38  |6e9-80ed-f9d4c38|
              000000b0  35 64 33 65 32 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |5d3e2\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888528135,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 30  36 2e 32 33 39 5c 22 7d  |2.168.206.239\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rhpcf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rhpcf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-6-59",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888528135,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888528134,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888528135,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888528135,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888528134,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.6.59",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.6.59"
        }
      },
      PodIP: (string) (len=15) "192.168.206.239",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.206.239"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888528134,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63888528135,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a22858731b3f26f1368cdcfd61caf411c9828562b3644ea24352c823efbe5152",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-rhpcf",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0719 13:22:16.747068 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8331" for this suite. @ 07/19/25 13:22:16.752
• [2.170 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 07/19/25 13:22:16.76
  I0719 13:22:16.760583 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename daemonsets @ 07/19/25 13:22:16.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:22:16.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:22:16.778
  I0719 13:22:16.866321 21 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 07/19/25 13:22:16.873
  I0719 13:22:16.879028 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0719 13:22:16.879048 21 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 07/19/25 13:22:16.879
  I0719 13:22:16.979417 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0719 13:22:16.979450 21 fixtures.go:131] Node ip-172-31-6-59 is running 0 daemon pod, expected 1
  E0719 13:22:17.549261      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:22:17.973995 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0719 13:22:17.974037 21 fixtures.go:131] Node ip-172-31-6-59 is running 0 daemon pod, expected 1
  E0719 13:22:18.549382      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:22:18.973590 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0719 13:22:18.973625 21 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 07/19/25 13:22:18.977
  I0719 13:22:19.001442 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0719 13:22:19.001465 21 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 07/19/25 13:22:19.001
  I0719 13:22:19.074471 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0719 13:22:19.074507 21 fixtures.go:131] Node ip-172-31-6-59 is running 0 daemon pod, expected 1
  E0719 13:22:19.550030      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:22:20.019179 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0719 13:22:20.019217 21 fixtures.go:131] Node ip-172-31-6-59 is running 0 daemon pod, expected 1
  E0719 13:22:20.550896      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:22:21.021307 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0719 13:22:21.021354 21 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 07/19/25 13:22:21.03
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3779, will wait for the garbage collector to delete the pods @ 07/19/25 13:22:21.03
  I0719 13:22:21.094961 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 9.268171ms
  I0719 13:22:21.195783 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.818421ms
  E0719 13:22:21.551731      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:22:22.499972 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0719 13:22:22.500003 21 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0719 13:22:22.505102 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"31716"},"items":null}

  I0719 13:22:22.509116 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"31716"},"items":null}

  I0719 13:22:22.537040 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0719 13:22:22.552266      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "daemonsets-3779" for this suite. @ 07/19/25 13:22:22.616
• [5.864 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:246
  STEP: Creating a kubernetes client @ 07/19/25 13:22:22.624
  I0719 13:22:22.624733 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename namespaces @ 07/19/25 13:22:22.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:22:22.639
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:22:22.642
  STEP: Creating a test namespace @ 07/19/25 13:22:22.645
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:22:22.656
  STEP: Creating a pod in the namespace @ 07/19/25 13:22:22.659
  STEP: Waiting for the pod to have running status @ 07/19/25 13:22:22.67
  E0719 13:22:23.552495      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:22:24.552511      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 07/19/25 13:22:24.681
  STEP: Waiting for the namespace to be removed. @ 07/19/25 13:22:24.689
  E0719 13:22:25.552612      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:22:26.553214      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:22:27.553313      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:22:28.553470      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:22:29.553564      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:22:30.554396      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:22:31.554540      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:22:32.554577      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:22:33.554704      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:22:34.554805      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:22:35.554912      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 07/19/25 13:22:35.696
  STEP: Verifying there are no pods in the namespace @ 07/19/25 13:22:35.712
  I0719 13:22:35.718573 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8814" for this suite. @ 07/19/25 13:22:35.724
  STEP: Destroying namespace "nsdeletetest-5327" for this suite. @ 07/19/25 13:22:35.734
  I0719 13:22:35.738445 21 framework.go:370] Namespace nsdeletetest-5327 was already deleted
  STEP: Destroying namespace "nsdeletetest-8599" for this suite. @ 07/19/25 13:22:35.738
• [13.123 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:722
  STEP: Creating a kubernetes client @ 07/19/25 13:22:35.748
  I0719 13:22:35.748302 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename gc @ 07/19/25 13:22:35.748
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:22:35.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:22:35.765
  STEP: create the rc1 @ 07/19/25 13:22:35.826
  STEP: create the rc2 @ 07/19/25 13:22:35.833
  E0719 13:22:36.555518      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:22:37.557472      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:22:38.559865      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:22:39.560816      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:22:40.560867      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:22:41.562520      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 07/19/25 13:22:41.845
  STEP: delete the rc simpletest-rc-to-be-deleted @ 07/19/25 13:22:42.328
  STEP: wait for the rc to be deleted @ 07/19/25 13:22:42.34
  E0719 13:22:42.562436      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:22:43.562604      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:22:44.562704      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:22:45.562805      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:22:46.562994      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:22:47.353059 21 garbage_collector.go:770] 69 pods remaining
  I0719 13:22:47.353087 21 garbage_collector.go:777] 69 pods has nil DeletionTimestamp
  I0719 13:22:47.353093 21 garbage_collector.go:778] 
  E0719 13:22:47.563832      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:22:48.563961      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:22:49.564036      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:22:50.564152      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:22:51.564260      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 07/19/25 13:22:52.353
  W0719 13:22:52.358554      21 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0719 13:22:52.358583 21 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0719 13:22:52.358637 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-29dpt" in namespace "gc-2599"
  I0719 13:22:52.371730 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-29sg6" in namespace "gc-2599"
  I0719 13:22:52.385094 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2ckhx" in namespace "gc-2599"
  I0719 13:22:52.399271 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2ctzz" in namespace "gc-2599"
  I0719 13:22:52.415460 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4bkms" in namespace "gc-2599"
  I0719 13:22:52.429474 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4f8k7" in namespace "gc-2599"
  I0719 13:22:52.445135 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4jftc" in namespace "gc-2599"
  I0719 13:22:52.459891 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4tqzq" in namespace "gc-2599"
  I0719 13:22:52.473584 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5bgh7" in namespace "gc-2599"
  I0719 13:22:52.487982 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-62tln" in namespace "gc-2599"
  I0719 13:22:52.500693 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-69sbs" in namespace "gc-2599"
  I0719 13:22:52.514461 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6n2qc" in namespace "gc-2599"
  I0719 13:22:52.529200 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6rvt2" in namespace "gc-2599"
  I0719 13:22:52.543153 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-79t2m" in namespace "gc-2599"
  I0719 13:22:52.557720 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7d4jw" in namespace "gc-2599"
  E0719 13:22:52.564537      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:22:52.572655 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8gps7" in namespace "gc-2599"
  I0719 13:22:52.588357 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8lfs7" in namespace "gc-2599"
  I0719 13:22:52.602536 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8tzpx" in namespace "gc-2599"
  I0719 13:22:52.619014 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8vwgx" in namespace "gc-2599"
  I0719 13:22:52.633196 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8zhf8" in namespace "gc-2599"
  I0719 13:22:52.651919 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-94stf" in namespace "gc-2599"
  I0719 13:22:52.663239 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9nd2t" in namespace "gc-2599"
  I0719 13:22:52.681693 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bfrrg" in namespace "gc-2599"
  I0719 13:22:52.700445 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bwdmw" in namespace "gc-2599"
  I0719 13:22:52.713841 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bx4c5" in namespace "gc-2599"
  I0719 13:22:52.740563 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cr9js" in namespace "gc-2599"
  I0719 13:22:52.754087 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-csbzv" in namespace "gc-2599"
  I0719 13:22:52.766591 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cvhk2" in namespace "gc-2599"
  I0719 13:22:52.781918 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d8ppq" in namespace "gc-2599"
  I0719 13:22:52.797081 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dd4xj" in namespace "gc-2599"
  I0719 13:22:52.810883 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-df2p6" in namespace "gc-2599"
  I0719 13:22:52.823468 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dh4g9" in namespace "gc-2599"
  I0719 13:22:52.837419 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-djs5v" in namespace "gc-2599"
  I0719 13:22:52.853538 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fkv5n" in namespace "gc-2599"
  I0719 13:22:52.866992 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fnqrd" in namespace "gc-2599"
  I0719 13:22:52.880813 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fw7kv" in namespace "gc-2599"
  I0719 13:22:52.893694 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g8qz9" in namespace "gc-2599"
  I0719 13:22:52.911040 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gc27c" in namespace "gc-2599"
  I0719 13:22:52.927534 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gjqqt" in namespace "gc-2599"
  I0719 13:22:52.939882 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-h946g" in namespace "gc-2599"
  I0719 13:22:52.954727 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hg9c6" in namespace "gc-2599"
  I0719 13:22:52.972224 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hp7cq" in namespace "gc-2599"
  I0719 13:22:52.995068 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hs8kn" in namespace "gc-2599"
  I0719 13:22:53.010111 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-j5dhn" in namespace "gc-2599"
  I0719 13:22:53.025518 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jbk4f" in namespace "gc-2599"
  I0719 13:22:53.040098 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-k8s2w" in namespace "gc-2599"
  I0719 13:22:53.054944 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-kcbxs" in namespace "gc-2599"
  I0719 13:22:53.069288 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-kcj5c" in namespace "gc-2599"
  I0719 13:22:53.088762 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-kmk45" in namespace "gc-2599"
  I0719 13:22:53.101794 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ks2vx" in namespace "gc-2599"
  I0719 13:22:53.116688 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2599" for this suite. @ 07/19/25 13:22:53.124
• [17.384 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:153
  STEP: Creating a kubernetes client @ 07/19/25 13:22:53.133
  I0719 13:22:53.133945 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename dns @ 07/19/25 13:22:53.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:22:53.163
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:22:53.175
  STEP: Creating a test headless service @ 07/19/25 13:22:53.187
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-889.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-889.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-889.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-889.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-889.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-889.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-889.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-889.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-889.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-889.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-889.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-889.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 51.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.51_udp@PTR;check="$$(dig +tcp +noall +answer +search 51.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.51_tcp@PTR;sleep 1; done
   @ 07/19/25 13:22:53.216
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-889.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-889.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-889.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-889.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-889.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-889.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-889.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-889.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-889.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-889.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-889.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-889.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 51.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.51_udp@PTR;check="$$(dig +tcp +noall +answer +search 51.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.51_tcp@PTR;sleep 1; done
   @ 07/19/25 13:22:53.216
  STEP: creating a pod to probe DNS @ 07/19/25 13:22:53.216
  STEP: submitting the pod to kubernetes @ 07/19/25 13:22:53.216
  E0719 13:22:53.564690      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:22:54.565562      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:22:55.566011      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:22:56.566081      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/19/25 13:22:57.259
  STEP: looking for the results for each expected name from probers @ 07/19/25 13:22:57.264
  I0719 13:22:57.271205 21 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-889.svc.cluster.local from pod dns-889/dns-test-f15c3a56-8633-474d-905a-2809eefee044: the server could not find the requested resource (get pods dns-test-f15c3a56-8633-474d-905a-2809eefee044)
  I0719 13:22:57.275641 21 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-889.svc.cluster.local from pod dns-889/dns-test-f15c3a56-8633-474d-905a-2809eefee044: the server could not find the requested resource (get pods dns-test-f15c3a56-8633-474d-905a-2809eefee044)
  I0719 13:22:57.281409 21 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-889.svc.cluster.local from pod dns-889/dns-test-f15c3a56-8633-474d-905a-2809eefee044: the server could not find the requested resource (get pods dns-test-f15c3a56-8633-474d-905a-2809eefee044)
  I0719 13:22:57.286812 21 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-889.svc.cluster.local from pod dns-889/dns-test-f15c3a56-8633-474d-905a-2809eefee044: the server could not find the requested resource (get pods dns-test-f15c3a56-8633-474d-905a-2809eefee044)
  I0719 13:22:57.312679 21 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-889.svc.cluster.local from pod dns-889/dns-test-f15c3a56-8633-474d-905a-2809eefee044: the server could not find the requested resource (get pods dns-test-f15c3a56-8633-474d-905a-2809eefee044)
  I0719 13:22:57.318219 21 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-889.svc.cluster.local from pod dns-889/dns-test-f15c3a56-8633-474d-905a-2809eefee044: the server could not find the requested resource (get pods dns-test-f15c3a56-8633-474d-905a-2809eefee044)
  I0719 13:22:57.322656 21 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-889.svc.cluster.local from pod dns-889/dns-test-f15c3a56-8633-474d-905a-2809eefee044: the server could not find the requested resource (get pods dns-test-f15c3a56-8633-474d-905a-2809eefee044)
  I0719 13:22:57.328490 21 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-889.svc.cluster.local from pod dns-889/dns-test-f15c3a56-8633-474d-905a-2809eefee044: the server could not find the requested resource (get pods dns-test-f15c3a56-8633-474d-905a-2809eefee044)
  I0719 13:22:57.348485 21 dns_common.go:506] Lookups using dns-889/dns-test-f15c3a56-8633-474d-905a-2809eefee044 failed for: [agnhost_udp@dns-test-service.dns-889.svc.cluster.local agnhost_tcp@dns-test-service.dns-889.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-889.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-889.svc.cluster.local jessie_udp@dns-test-service.dns-889.svc.cluster.local jessie_tcp@dns-test-service.dns-889.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-889.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-889.svc.cluster.local]

  I0719 13:22:57.357416 21 dns_common.go:514] Pod client logs for webserver: 
  I0719 13:22:57.365151 21 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0719 13:22:57.374764 21 dns_common.go:514] Pod client logs for jessie-querier: 
  E0719 13:22:57.567134      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:22:58.567257      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:22:59.567316      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:23:00.567510      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:23:01.568562      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:23:02.343484 21 dns_common.go:546] DNS probes using dns-889/dns-test-f15c3a56-8633-474d-905a-2809eefee044 succeeded

  STEP: deleting the pod @ 07/19/25 13:23:02.343
  STEP: deleting the test service @ 07/19/25 13:23:02.363
  STEP: deleting the test headless service @ 07/19/25 13:23:02.398
  I0719 13:23:02.415132 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-889" for this suite. @ 07/19/25 13:23:02.422
• [9.296 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 07/19/25 13:23:02.429
  I0719 13:23:02.429797 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename crd-watch @ 07/19/25 13:23:02.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:23:02.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:23:02.444
  I0719 13:23:02.447431 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  E0719 13:23:02.569104      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:23:03.569128      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:23:04.569238      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 07/19/25 13:23:04.989
  I0719 13:23:04.995095 21 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-07-19T13:23:04Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-07-19T13:23:04Z]] name:name1 resourceVersion:34434 uid:7f9e81ca-bb70-4b39-ae39-3b8b5760e786] num:map[num1:9223372036854775807 num2:1000000]]}
  E0719 13:23:05.569385      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:23:06.569600      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:23:07.569843      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:23:08.570010      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:23:09.570131      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:23:10.570376      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:23:11.570603      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:23:12.570675      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:23:13.570806      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:23:14.570896      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 07/19/25 13:23:14.995
  I0719 13:23:15.003688 21 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-07-19T13:23:14Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-07-19T13:23:14Z]] name:name2 resourceVersion:34474 uid:5b5aa8f0-7e4d-4445-b14d-61f0022c8eef] num:map[num1:9223372036854775807 num2:1000000]]}
  E0719 13:23:15.571314      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:23:16.571450      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:23:17.571510      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:23:18.571602      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:23:19.571751      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:23:20.571863      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:23:21.572002      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:23:22.572172      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:23:23.572315      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:23:24.572517      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 07/19/25 13:23:25.003
  I0719 13:23:25.011885 21 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-07-19T13:23:04Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-07-19T13:23:25Z]] name:name1 resourceVersion:34496 uid:7f9e81ca-bb70-4b39-ae39-3b8b5760e786] num:map[num1:9223372036854775807 num2:1000000]]}
  E0719 13:23:25.572556      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:23:26.572787      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:23:27.572877      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:23:28.573078      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:23:29.573179      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:23:30.573335      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:23:31.573584      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:23:32.573672      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:23:33.573783      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:23:34.573883      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 07/19/25 13:23:35.012
  I0719 13:23:35.020872 21 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-07-19T13:23:14Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-07-19T13:23:35Z]] name:name2 resourceVersion:34517 uid:5b5aa8f0-7e4d-4445-b14d-61f0022c8eef] num:map[num1:9223372036854775807 num2:1000000]]}
  E0719 13:23:35.574023      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:23:36.574136      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:23:37.574379      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:23:38.574723      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:23:39.574788      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:23:40.574929      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:23:41.575145      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:23:42.575287      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:23:43.575446      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:23:44.575539      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 07/19/25 13:23:45.02
  I0719 13:23:45.030878 21 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-07-19T13:23:04Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-07-19T13:23:25Z]] name:name1 resourceVersion:34536 uid:7f9e81ca-bb70-4b39-ae39-3b8b5760e786] num:map[num1:9223372036854775807 num2:1000000]]}
  E0719 13:23:45.575620      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:23:46.575806      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:23:47.575925      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:23:48.576004      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:23:49.576144      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:23:50.576558      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:23:51.576771      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:23:52.576807      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:23:53.576896      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:23:54.576977      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 07/19/25 13:23:55.031
  I0719 13:23:55.041012 21 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-07-19T13:23:14Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-07-19T13:23:35Z]] name:name2 resourceVersion:34558 uid:5b5aa8f0-7e4d-4445-b14d-61f0022c8eef] num:map[num1:9223372036854775807 num2:1000000]]}
  E0719 13:23:55.577560      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:23:56.577633      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:23:57.577751      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:23:58.577849      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:23:59.577969      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:24:00.578055      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:24:01.578199      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:24:02.578284      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:24:03.578511      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:24:04.578566      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:24:05.558505 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-188" for this suite. @ 07/19/25 13:24:05.563
• [63.144 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 07/19/25 13:24:05.574
  I0719 13:24:05.574412 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename replicaset @ 07/19/25 13:24:05.574
  E0719 13:24:05.579199      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:24:05.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:24:05.59
  I0719 13:24:05.593324 21 replica_set.go:192] Creating ReplicaSet my-hostname-basic-0e753894-c7d4-4693-a271-487bdd11a456
  I0719 13:24:05.604714 21 resource.go:81] Pod name my-hostname-basic-0e753894-c7d4-4693-a271-487bdd11a456: Found 0 pods out of 1
  E0719 13:24:06.579406      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:24:07.579529      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:24:08.579649      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:24:09.579729      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:24:10.580044      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:24:10.610455 21 resource.go:81] Pod name my-hostname-basic-0e753894-c7d4-4693-a271-487bdd11a456: Found 1 pods out of 1
  I0719 13:24:10.610495 21 replica_set.go:205] Ensuring a pod for ReplicaSet "my-hostname-basic-0e753894-c7d4-4693-a271-487bdd11a456" is running
  I0719 13:24:10.613782 21 replica_set.go:221] Pod "my-hostname-basic-0e753894-c7d4-4693-a271-487bdd11a456-bf8r4" is running (conditions: [{Type:PodReadyToStartContainers ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-19 13:24:06 +0000 UTC Reason: Message:} {Type:Initialized ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-19 13:24:05 +0000 UTC Reason: Message:} {Type:Ready ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-19 13:24:06 +0000 UTC Reason: Message:} {Type:ContainersReady ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-19 13:24:06 +0000 UTC Reason: Message:} {Type:PodScheduled ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-19 13:24:05 +0000 UTC Reason: Message:}])
  I0719 13:24:10.613805 21 replica_set.go:229] Trying to dial the pod
  STEP: trying to dial each unique pod @ 07/19/25 13:24:10.613
  I0719 13:24:10.626023 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2258" for this suite. @ 07/19/25 13:24:10.63
• [5.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 07/19/25 13:24:10.638
  I0719 13:24:10.638880 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename pods @ 07/19/25 13:24:10.639
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:24:10.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:24:10.654
  STEP: creating the pod @ 07/19/25 13:24:10.656
  STEP: submitting the pod to kubernetes @ 07/19/25 13:24:10.656
  E0719 13:24:11.580108      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:24:12.580322      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 07/19/25 13:24:12.685
  STEP: updating the pod @ 07/19/25 13:24:12.691
  I0719 13:24:13.205203 21 pod_client.go:173] Successfully updated pod "pod-update-cf4ced33-bb7b-4c49-9c82-41a9478ecc06"
  STEP: verifying the updated pod is in kubernetes @ 07/19/25 13:24:13.209
  I0719 13:24:13.214981 21 pods.go:391] Pod update OK
  I0719 13:24:13.215110 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9445" for this suite. @ 07/19/25 13:24:13.219
• [2.589 seconds]
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 07/19/25 13:24:13.227
  I0719 13:24:13.227639 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename podtemplate @ 07/19/25 13:24:13.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:24:13.242
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:24:13.245
  STEP: Create set of pod templates @ 07/19/25 13:24:13.247
  I0719 13:24:13.254059 21 podtemplates.go:143] created test-podtemplate-1
  I0719 13:24:13.260177 21 podtemplates.go:143] created test-podtemplate-2
  I0719 13:24:13.264974 21 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 07/19/25 13:24:13.264
  STEP: delete collection of pod templates @ 07/19/25 13:24:13.268
  I0719 13:24:13.268981 21 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 07/19/25 13:24:13.291
  I0719 13:24:13.291281 21 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0719 13:24:13.295892 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-9447" for this suite. @ 07/19/25 13:24:13.32
• [0.103 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 07/19/25 13:24:13.33
  I0719 13:24:13.330397 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename subpath @ 07/19/25 13:24:13.331
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:24:13.341
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:24:13.344
  STEP: Setting up data @ 07/19/25 13:24:13.346
  STEP: Creating pod pod-subpath-test-configmap-b2z5 @ 07/19/25 13:24:13.357
  STEP: Creating a pod to test atomic-volume-subpath @ 07/19/25 13:24:13.357
  E0719 13:24:13.580387      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:24:14.580526      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:24:15.580581      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:24:16.580806      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:24:17.580861      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:24:18.580946      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:24:19.581568      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:24:20.581662      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:24:21.582661      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:24:22.582732      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:24:23.582870      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:24:24.583127      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:24:25.583826      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:24:26.584047      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:24:27.584878      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:24:28.584951      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:24:29.585975      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:24:30.587026      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:24:31.588066      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:24:32.588178      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:24:33.588560      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:24:34.589555      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:24:35.590555      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:24:36.590689      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/19/25 13:24:37.442
  I0719 13:24:37.447224 21 output.go:207] Trying to get logs from node ip-172-31-42-177 pod pod-subpath-test-configmap-b2z5 container test-container-subpath-configmap-b2z5: <nil>
  STEP: delete the pod @ 07/19/25 13:24:37.466
  STEP: Deleting pod pod-subpath-test-configmap-b2z5 @ 07/19/25 13:24:37.483
  I0719 13:24:37.483182 21 delete.go:62] Deleting pod "pod-subpath-test-configmap-b2z5" in namespace "subpath-3472"
  I0719 13:24:37.488079 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3472" for this suite. @ 07/19/25 13:24:37.492
• [24.170 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:311
  STEP: Creating a kubernetes client @ 07/19/25 13:24:37.5
  I0719 13:24:37.500446 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/19/25 13:24:37.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:24:37.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:24:37.518
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 07/19/25 13:24:37.52
  I0719 13:24:37.521125 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  E0719 13:24:37.591055      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:24:38.591065      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:24:39.591688      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:24:40.592408      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:24:41.592998      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 07/19/25 13:24:42.532
  I0719 13:24:42.532636 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  E0719 13:24:42.593945      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:24:43.594802      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:24:43.765053 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  E0719 13:24:44.595824      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:24:45.595934      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:24:46.597003      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:24:47.598060      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:24:48.599143      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:24:48.807646 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-22" for this suite. @ 07/19/25 13:24:48.817
• [11.326 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 07/19/25 13:24:48.826
  I0719 13:24:48.826667 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename secrets @ 07/19/25 13:24:48.827
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:24:48.84
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:24:48.843
  STEP: Creating secret with name secret-test-3456618d-c372-467c-a741-11adb7ac14b2 @ 07/19/25 13:24:48.864
  STEP: Creating a pod to test consume secrets @ 07/19/25 13:24:48.87
  E0719 13:24:49.599198      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:24:50.599274      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:24:51.599419      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:24:52.599643      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/19/25 13:24:52.897
  I0719 13:24:52.902922 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod pod-secrets-19edac6f-dd58-43ce-a20c-bcec2c14f730 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/19/25 13:24:52.915
  I0719 13:24:52.931858 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2062" for this suite. @ 07/19/25 13:24:52.937
  STEP: Destroying namespace "secret-namespace-722" for this suite. @ 07/19/25 13:24:52.947
• [4.129 seconds]
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 07/19/25 13:24:52.956
  I0719 13:24:52.956017 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename aggregateddiscovery @ 07/19/25 13:24:52.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:24:52.972
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:24:52.974
  I0719 13:24:52.977009 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  E0719 13:24:53.600638      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:24:54.600749      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:24:55.601589      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:24:56.028613 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-1369" for this suite. @ 07/19/25 13:24:56.035
• [3.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:892
  STEP: Creating a kubernetes client @ 07/19/25 13:24:56.043
  I0719 13:24:56.043587 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename job @ 07/19/25 13:24:56.044
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:24:56.057
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:24:56.06
  STEP: Creating a job @ 07/19/25 13:24:56.062
  STEP: Ensuring active pods == parallelism @ 07/19/25 13:24:56.068
  E0719 13:24:56.601711      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:24:57.601888      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete a job @ 07/19/25 13:24:58.08
  STEP: deleting Job.batch foo in namespace job-7932, will wait for the garbage collector to delete the pods @ 07/19/25 13:24:58.08
  I0719 13:24:58.144041 21 resources.go:139] Deleting Job.batch foo took: 7.945769ms
  I0719 13:24:58.245104 21 resources.go:163] Terminating Job.batch foo pods took: 101.06032ms
  E0719 13:24:58.602057      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:24:59.602455      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 07/19/25 13:24:59.645
  I0719 13:24:59.650655 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7932" for this suite. @ 07/19/25 13:24:59.657
• [3.623 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:109
  STEP: Creating a kubernetes client @ 07/19/25 13:24:59.666
  I0719 13:24:59.666932 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename emptydir @ 07/19/25 13:24:59.667
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:24:59.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:24:59.683
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 07/19/25 13:24:59.686
  E0719 13:25:00.602603      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:25:01.603666      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/19/25 13:25:01.707
  I0719 13:25:01.711282 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod pod-e40e5ba5-e838-40d1-b18d-582e5bb11258 container test-container: <nil>
  STEP: delete the pod @ 07/19/25 13:25:01.719
  I0719 13:25:01.741773 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9857" for this suite. @ 07/19/25 13:25:01.75
• [2.093 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1003
  STEP: Creating a kubernetes client @ 07/19/25 13:25:01.76
  I0719 13:25:01.760233 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename resourcequota @ 07/19/25 13:25:01.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:25:01.773
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:25:01.775
  STEP: Creating a ResourceQuota @ 07/19/25 13:25:01.778
  STEP: Getting a ResourceQuota @ 07/19/25 13:25:01.784
  STEP: Listing all ResourceQuotas with LabelSelector @ 07/19/25 13:25:01.787
  STEP: Patching the ResourceQuota @ 07/19/25 13:25:01.791
  STEP: Deleting a Collection of ResourceQuotas @ 07/19/25 13:25:01.797
  STEP: Verifying the deleted ResourceQuota @ 07/19/25 13:25:01.808
  I0719 13:25:01.811865 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6874" for this suite. @ 07/19/25 13:25:01.851
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:208
  STEP: Creating a kubernetes client @ 07/19/25 13:25:01.859
  I0719 13:25:01.859422 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename downward-api @ 07/19/25 13:25:01.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:25:01.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:25:01.874
  STEP: Creating a pod to test downward API volume plugin @ 07/19/25 13:25:01.876
  E0719 13:25:02.604006      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:25:03.604215      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/19/25 13:25:03.901
  I0719 13:25:03.904843 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod downwardapi-volume-864052bc-f7c5-49c5-a8fb-d36e6c1bcfb8 container client-container: <nil>
  STEP: delete the pod @ 07/19/25 13:25:03.916
  I0719 13:25:03.941257 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3253" for this suite. @ 07/19/25 13:25:03.947
• [2.099 seconds]
------------------------------
SS
------------------------------
[sig-apps] Job should allow to use a pod failure policy to ignore failure matching on DisruptionTarget condition [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:199
  STEP: Creating a kubernetes client @ 07/19/25 13:25:03.958
  I0719 13:25:03.958217 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename job @ 07/19/25 13:25:03.958
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:25:03.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:25:03.972
  STEP: Looking for a node to schedule job pods @ 07/19/25 13:25:03.975
  STEP: Creating a job @ 07/19/25 13:25:04.048
  STEP: Waiting for all the pods to be ready @ 07/19/25 13:25:04.056
  E0719 13:25:04.604357      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:25:05.604559      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:25:06.604637      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:25:07.604754      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Fetch all running pods @ 07/19/25 13:25:08.071
  STEP: Evict all the Pods @ 07/19/25 13:25:08.076
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-0-5hzg5/job-6580 @ 07/19/25 13:25:08.076
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-1-l96rf/job-6580 @ 07/19/25 13:25:08.076
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-2-vvfxr/job-6580 @ 07/19/25 13:25:08.076
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-1-l96rf/job-6580 to be deleted @ 07/19/25 13:25:08.1
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-0-5hzg5/job-6580 to be deleted @ 07/19/25 13:25:08.108
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-2-vvfxr/job-6580 to be deleted @ 07/19/25 13:25:08.108
  E0719 13:25:08.605638      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:25:09.606255      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:25:10.606776      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:25:11.607486      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring job reaches completions @ 07/19/25 13:25:12.122
  E0719 13:25:12.608569      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:25:13.608800      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:25:14.609731      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:25:15.610045      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:25:16.610165      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:25:17.611115      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:25:18.611966      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:25:19.612544      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:25:20.612668      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:25:21.612785      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:25:22.613029      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:25:23.613242      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:25:24.613475      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:25:25.613557      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:25:26.614451      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:25:27.614494      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:25:28.615400      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:25:29.615474      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:25:30.615685      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:25:31.616537      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:25:32.617537      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:25:33.617702      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:25:34.618699      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:25:35.619160      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:25:36.620158      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:25:37.620375      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:25:38.621370      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:25:39.621472      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:25:40.622548      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:25:41.622741      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:25:42.622989      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:25:43.623246      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:25:44.623384      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:25:45.623581      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:25:46.623692      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:25:47.623887      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:25:48.624630      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:25:49.625532      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:25:50.625621      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:25:51.625761      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:25:52.626658      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:25:53.627556      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:25:54.254749 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6580" for this suite. @ 07/19/25 13:25:54.26
• [50.311 seconds]
------------------------------
SS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 07/19/25 13:25:54.269
  I0719 13:25:54.269754 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename var-expansion @ 07/19/25 13:25:54.27
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:25:54.282
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:25:54.286
  E0719 13:25:54.628037      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:25:55.628115      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:25:56.312864 21 delete.go:62] Deleting pod "var-expansion-3e088f52-ec6b-4f85-bde8-98b76dfce7b2" in namespace "var-expansion-4431"
  I0719 13:25:56.324195 21 delete.go:70] Wait up to 5m0s for pod "var-expansion-3e088f52-ec6b-4f85-bde8-98b76dfce7b2" to be fully deleted
  E0719 13:25:56.628576      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:25:57.628667      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:25:58.334161 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4431" for this suite. @ 07/19/25 13:25:58.34
• [4.080 seconds]
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 07/19/25 13:25:58.349
  I0719 13:25:58.349444 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename secrets @ 07/19/25 13:25:58.35
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:25:58.363
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:25:58.365
  I0719 13:25:58.414162 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2384" for this suite. @ 07/19/25 13:25:58.442
• [0.102 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1861
  STEP: Creating a kubernetes client @ 07/19/25 13:25:58.451
  I0719 13:25:58.451838 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename kubectl @ 07/19/25 13:25:58.452
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:25:58.464
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:25:58.467
  STEP: Starting the proxy @ 07/19/25 13:25:58.471
  I0719 13:25:58.471512 21 util.go:541] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-96 proxy --unix-socket=/tmp/kubectl-proxy-unix1751769869/test'
  STEP: retrieving proxy /api/ output @ 07/19/25 13:25:58.502
  I0719 13:25:58.503410 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-96" for this suite. @ 07/19/25 13:25:58.542
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 07/19/25 13:25:58.552
  I0719 13:25:58.552076 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename pv @ 07/19/25 13:25:58.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:25:58.564
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:25:58.567
  STEP: Creating initial PV and PVC @ 07/19/25 13:25:58.569
  I0719 13:25:58.569986 21 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-949" @ 07/19/25 13:25:58.59
  STEP: Listing PVCs in namespace "pv-949" @ 07/19/25 13:25:58.594
  STEP: Reading "pvc-vp9hv" Status @ 07/19/25 13:25:58.6
  STEP: Reading "pv-949-zrqkt" Status @ 07/19/25 13:25:58.604
  STEP: Patching "pvc-vp9hv" Status @ 07/19/25 13:25:58.612
  E0719 13:25:58.629265      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Patching "pv-949-zrqkt" Status @ 07/19/25 13:25:58.629
  STEP: Updating "pvc-vp9hv" Status @ 07/19/25 13:25:58.636
  STEP: Updating "pv-949-zrqkt" Status @ 07/19/25 13:25:58.648
  I0719 13:25:58.660309 21 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0719 13:25:58.660330 21 pv.go:205] Deleting PersistentVolumeClaim "pvc-vp9hv"
  I0719 13:25:58.669624 21 pv.go:193] Deleting PersistentVolume "pv-949-zrqkt"
  I0719 13:25:58.682808 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-949" for this suite. @ 07/19/25 13:25:58.688
• [0.145 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 07/19/25 13:25:58.696
  I0719 13:25:58.696812 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename apf @ 07/19/25 13:25:58.697
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:25:58.708
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:25:58.711
  STEP: getting /apis @ 07/19/25 13:25:58.713
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 07/19/25 13:25:58.716
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 07/19/25 13:25:58.718
  STEP: creating @ 07/19/25 13:25:58.719
  STEP: getting @ 07/19/25 13:25:58.739
  STEP: listing @ 07/19/25 13:25:58.745
  STEP: watching @ 07/19/25 13:25:58.748
  I0719 13:25:58.748135 21 flowcontrol.go:394] starting watch
  STEP: patching @ 07/19/25 13:25:58.749
  STEP: updating @ 07/19/25 13:25:58.756
  I0719 13:25:58.765773 21 flowcontrol.go:422] waiting for watch events with expected annotations
  STEP: getting /status @ 07/19/25 13:25:58.765
  STEP: patching /status @ 07/19/25 13:25:58.769
  STEP: updating /status @ 07/19/25 13:25:58.777
  STEP: deleting @ 07/19/25 13:25:58.809
  STEP: deleting a collection @ 07/19/25 13:25:58.827
  I0719 13:25:58.850790 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-2696" for this suite. @ 07/19/25 13:25:58.855
• [0.168 seconds]
------------------------------
SSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 07/19/25 13:25:58.865
  I0719 13:25:58.865094 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename events @ 07/19/25 13:25:58.865
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:25:58.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:25:58.879
  STEP: Create set of events @ 07/19/25 13:25:58.881
  I0719 13:25:58.887567 21 core_events.go:198] created test-event-1
  I0719 13:25:58.892126 21 core_events.go:198] created test-event-2
  I0719 13:25:58.896325 21 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 07/19/25 13:25:58.896
  STEP: delete collection of events @ 07/19/25 13:25:58.9
  I0719 13:25:58.900509 21 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 07/19/25 13:25:58.928
  I0719 13:25:58.928731 21 core_events.go:230] requesting list of events to confirm quantity
  I0719 13:25:58.932421 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8600" for this suite. @ 07/19/25 13:25:58.956
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should terminate job execution when the number of failed indexes exceeds maxFailedIndexes [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:643
  STEP: Creating a kubernetes client @ 07/19/25 13:25:58.966
  I0719 13:25:58.966169 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename job @ 07/19/25 13:25:58.966
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:25:58.979
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:25:58.981
  STEP: Creating an indexed job with backoffLimit per index and maxFailedIndexes @ 07/19/25 13:25:58.984
  STEP: Awaiting for the job to fail as the number of max failed indexes is exceeded @ 07/19/25 13:25:58.992
  E0719 13:25:59.629503      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:26:00.629734      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:26:01.630508      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:26:02.630724      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the Job status fields to ensure early termination of the job @ 07/19/25 13:26:03.007
  I0719 13:26:03.012461 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7872" for this suite. @ 07/19/25 13:26:03.018
• [4.062 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 07/19/25 13:26:03.028
  I0719 13:26:03.028191 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename limitrange @ 07/19/25 13:26:03.028
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:26:03.042
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:26:03.044
  STEP: Creating a LimitRange @ 07/19/25 13:26:03.047
  STEP: Setting up watch @ 07/19/25 13:26:03.047
  STEP: Submitting a LimitRange @ 07/19/25 13:26:03.152
  STEP: Verifying LimitRange creation was observed @ 07/19/25 13:26:03.159
  STEP: Fetching the LimitRange to ensure it has proper values @ 07/19/25 13:26:03.159
  I0719 13:26:03.163878 21 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0719 13:26:03.163905 21 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 07/19/25 13:26:03.163
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 07/19/25 13:26:03.171
  I0719 13:26:03.174937 21 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0719 13:26:03.174959 21 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 07/19/25 13:26:03.174
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 07/19/25 13:26:03.183
  I0719 13:26:03.192997 21 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0719 13:26:03.193020 21 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 07/19/25 13:26:03.193
  STEP: Failing to create a Pod with more than max resources @ 07/19/25 13:26:03.194
  STEP: Updating a LimitRange @ 07/19/25 13:26:03.196
  STEP: Verifying LimitRange updating is effective @ 07/19/25 13:26:03.201
  E0719 13:26:03.631449      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:26:04.631614      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 07/19/25 13:26:05.206
  STEP: Failing to create a Pod with more than max resources @ 07/19/25 13:26:05.212
  STEP: Deleting a LimitRange @ 07/19/25 13:26:05.214
  STEP: Verifying the LimitRange was deleted @ 07/19/25 13:26:05.227
  E0719 13:26:05.632615      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:26:06.632845      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:26:07.632989      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:26:08.633072      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:26:09.633266      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:26:10.234298 21 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 07/19/25 13:26:10.234
  I0719 13:26:10.245554 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-2693" for this suite. @ 07/19/25 13:26:10.256
• [7.237 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 07/19/25 13:26:10.265
  I0719 13:26:10.265400 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/19/25 13:26:10.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:26:10.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:26:10.28
  STEP: fetching the /apis discovery document @ 07/19/25 13:26:10.283
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 07/19/25 13:26:10.284
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 07/19/25 13:26:10.284
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 07/19/25 13:26:10.284
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 07/19/25 13:26:10.285
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 07/19/25 13:26:10.285
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 07/19/25 13:26:10.286
  I0719 13:26:10.286950 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5451" for this suite. @ 07/19/25 13:26:10.356
• [0.100 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3404
  STEP: Creating a kubernetes client @ 07/19/25 13:26:10.365
  I0719 13:26:10.365694 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename services @ 07/19/25 13:26:10.366
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:26:10.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:26:10.381
  STEP: creating a Service @ 07/19/25 13:26:10.389
  STEP: watching for the Service to be added @ 07/19/25 13:26:10.414
  I0719 13:26:10.415973 21 service.go:3456] Found Service test-service-hmppt in namespace services-5876 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 31272}]
  I0719 13:26:10.416002 21 service.go:3463] Service test-service-hmppt created
  STEP: Getting /status @ 07/19/25 13:26:10.416
  I0719 13:26:10.421808 21 service.go:3474] Service test-service-hmppt has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 07/19/25 13:26:10.421
  STEP: watching for the Service to be patched @ 07/19/25 13:26:10.427
  I0719 13:26:10.429079 21 service.go:3497] observed Service test-service-hmppt in namespace services-5876 with annotations: map[] & LoadBalancer: {[]}
  I0719 13:26:10.429104 21 service.go:3500] Found Service test-service-hmppt in namespace services-5876 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc001354d50 []}]}
  I0719 13:26:10.429114 21 service.go:3507] Service test-service-hmppt has service status patched
  STEP: updating the ServiceStatus @ 07/19/25 13:26:10.429
  I0719 13:26:10.440807 21 service.go:3527] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 07/19/25 13:26:10.44
  I0719 13:26:10.442075 21 service.go:3538] Observed Service test-service-hmppt in namespace services-5876 with annotations: map[] & Conditions: []
  I0719 13:26:10.442114 21 service.go:3549] Observed Service test-service-hmppt in namespace services-5876 with annotations: map[patchedstatus:true] & Conditions: []
  I0719 13:26:10.442168 21 service.go:3545] Found Service test-service-hmppt in namespace services-5876 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0719 13:26:10.442179 21 service.go:3556] Service test-service-hmppt has service status updated
  STEP: patching the service @ 07/19/25 13:26:10.442
  STEP: watching for the Service to be patched @ 07/19/25 13:26:10.452
  I0719 13:26:10.453793 21 service.go:3579] observed Service test-service-hmppt in namespace services-5876 with labels: map[test-service-static:true]
  I0719 13:26:10.453819 21 service.go:3579] observed Service test-service-hmppt in namespace services-5876 with labels: map[test-service-static:true]
  I0719 13:26:10.453829 21 service.go:3579] observed Service test-service-hmppt in namespace services-5876 with labels: map[test-service-static:true]
  I0719 13:26:10.453847 21 service.go:3582] Found Service test-service-hmppt in namespace services-5876 with labels: map[test-service:patched test-service-static:true]
  I0719 13:26:10.453860 21 service.go:3589] Service test-service-hmppt patched
  STEP: deleting the service @ 07/19/25 13:26:10.453
  STEP: watching for the Service to be deleted @ 07/19/25 13:26:10.481
  I0719 13:26:10.483166 21 service.go:3613] Observed event: ADDED
  I0719 13:26:10.483251 21 service.go:3613] Observed event: MODIFIED
  I0719 13:26:10.483266 21 service.go:3613] Observed event: MODIFIED
  I0719 13:26:10.483447 21 service.go:3613] Observed event: MODIFIED
  I0719 13:26:10.483476 21 service.go:3609] Found Service test-service-hmppt in namespace services-5876 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0719 13:26:10.483522 21 service.go:3618] Service test-service-hmppt deleted
  I0719 13:26:10.483727 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5876" for this suite. @ 07/19/25 13:26:10.489
• [0.131 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:750
  STEP: Creating a kubernetes client @ 07/19/25 13:26:10.497
  I0719 13:26:10.497308 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename resourcequota @ 07/19/25 13:26:10.497
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:26:10.51
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:26:10.512
  STEP: Creating a ResourceQuota with terminating scope @ 07/19/25 13:26:10.515
  STEP: Ensuring ResourceQuota status is calculated @ 07/19/25 13:26:10.521
  E0719 13:26:10.633873      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:26:11.634090      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 07/19/25 13:26:12.526
  STEP: Ensuring ResourceQuota status is calculated @ 07/19/25 13:26:12.534
  E0719 13:26:12.634784      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:26:13.634868      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 07/19/25 13:26:14.54
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 07/19/25 13:26:14.557
  E0719 13:26:14.635713      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:26:15.635788      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 07/19/25 13:26:16.563
  E0719 13:26:16.636014      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:26:17.636233      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 07/19/25 13:26:18.569
  STEP: Ensuring resource quota status released the pod usage @ 07/19/25 13:26:18.582
  E0719 13:26:18.636284      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:26:19.637325      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 07/19/25 13:26:20.587
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 07/19/25 13:26:20.599
  E0719 13:26:20.637405      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:26:21.637521      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 07/19/25 13:26:22.604
  E0719 13:26:22.638173      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:26:23.638580      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 07/19/25 13:26:24.609
  STEP: Ensuring resource quota status released the pod usage @ 07/19/25 13:26:24.622
  E0719 13:26:24.638624      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:26:25.638845      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:26:26.629126 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1692" for this suite. @ 07/19/25 13:26:26.635
  E0719 13:26:26.639424      21 retrywatcher.go:169] "Watch failed" err="context canceled"
• [16.145 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 07/19/25 13:26:26.642
  I0719 13:26:26.642634 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename webhook @ 07/19/25 13:26:26.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:26:26.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:26:26.66
  STEP: Setting up server cert @ 07/19/25 13:26:26.681
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/19/25 13:26:26.914
  STEP: Deploying the webhook pod @ 07/19/25 13:26:26.922
  STEP: Wait for the deployment to be ready @ 07/19/25 13:26:26.937
  I0719 13:26:26.949090 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0719 13:26:27.639661      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:26:28.639731      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/19/25 13:26:28.963
  STEP: Verifying the service has paired with the endpoint @ 07/19/25 13:26:28.982
  E0719 13:26:29.640666      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:26:29.983040 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 07/19/25 13:26:29.99
  STEP: create a pod that should be updated by the webhook @ 07/19/25 13:26:30.004
  I0719 13:26:30.085160 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9225" for this suite. @ 07/19/25 13:26:30.089
  STEP: Destroying namespace "webhook-markers-2356" for this suite. @ 07/19/25 13:26:30.096
• [3.463 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 07/19/25 13:26:30.105
  I0719 13:26:30.105779 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename daemonsets @ 07/19/25 13:26:30.106
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:26:30.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:26:30.119
  I0719 13:26:30.201604 21 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/19/25 13:26:30.207
  I0719 13:26:30.291482 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-3-129 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 13:26:30.291521 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-39-138 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 13:26:30.296708 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0719 13:26:30.296729 21 fixtures.go:131] Node ip-172-31-42-177 is running 0 daemon pod, expected 1
  E0719 13:26:30.641114      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:26:31.214456 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-3-129 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 13:26:31.214542 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-39-138 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 13:26:31.219927 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0719 13:26:31.219963 21 fixtures.go:131] Node ip-172-31-42-177 is running 0 daemon pod, expected 1
  E0719 13:26:31.641536      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:26:32.214525 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-3-129 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 13:26:32.214566 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-39-138 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 13:26:32.219596 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0719 13:26:32.219617 21 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 07/19/25 13:26:32.235
  STEP: Check that daemon pods images are updated. @ 07/19/25 13:26:32.314
  I0719 13:26:32.320740 21 daemon_set.go:1193] Wrong image for pod: daemon-set-8t2b6. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0719 13:26:32.320767 21 daemon_set.go:1193] Wrong image for pod: daemon-set-9flr9. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0719 13:26:32.415892 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-3-129 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 13:26:32.415935 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-39-138 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0719 13:26:32.642092      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:26:33.325750 21 daemon_set.go:1198] Pod daemon-set-49ltz is not available
  I0719 13:26:33.325782 21 daemon_set.go:1193] Wrong image for pod: daemon-set-8t2b6. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0719 13:26:33.325791 21 daemon_set.go:1193] Wrong image for pod: daemon-set-9flr9. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0719 13:26:33.332209 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-3-129 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 13:26:33.332242 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-39-138 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0719 13:26:33.642596      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:26:34.319917 21 daemon_set.go:1193] Wrong image for pod: daemon-set-9flr9. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0719 13:26:34.319953 21 daemon_set.go:1198] Pod daemon-set-c59bx is not available
  I0719 13:26:34.325141 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-3-129 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 13:26:34.325162 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-39-138 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0719 13:26:34.642638      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:26:35.320063 21 daemon_set.go:1198] Pod daemon-set-s76tt is not available
  I0719 13:26:35.324255 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-3-129 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 13:26:35.324282 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-39-138 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 07/19/25 13:26:35.324
  I0719 13:26:35.328953 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-3-129 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 13:26:35.328978 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-39-138 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 13:26:35.333477 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0719 13:26:35.333498 21 fixtures.go:131] Node ip-172-31-6-59 is running 0 daemon pod, expected 1
  E0719 13:26:35.642784      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:26:36.331743 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-3-129 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 13:26:36.331784 21 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-39-138 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0719 13:26:36.336447 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0719 13:26:36.336469 21 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 07/19/25 13:26:36.359
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1299, will wait for the garbage collector to delete the pods @ 07/19/25 13:26:36.359
  I0719 13:26:36.425097 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 9.145914ms
  I0719 13:26:36.525422 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.320353ms
  E0719 13:26:36.642947      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:26:37.643406      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:26:37.830086 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0719 13:26:37.830123 21 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0719 13:26:37.836259 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"35994"},"items":null}

  I0719 13:26:37.840817 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"35994"},"items":null}

  I0719 13:26:37.856988 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1299" for this suite. @ 07/19/25 13:26:37.861
• [7.766 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 07/19/25 13:26:37.872
  I0719 13:26:37.872452 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename kubelet-test @ 07/19/25 13:26:37.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:26:37.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:26:37.888
  E0719 13:26:38.643520      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:26:39.643715      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:26:40.643880      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:26:41.644009      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:26:41.914585 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-359" for this suite. @ 07/19/25 13:26:41.92
• [4.058 seconds]
------------------------------
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:980
  STEP: Creating a kubernetes client @ 07/19/25 13:26:41.93
  I0719 13:26:41.930234 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename statefulset @ 07/19/25 13:26:41.93
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:26:41.943
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:26:41.946
  STEP: Creating service test in namespace statefulset-8785 @ 07/19/25 13:26:41.949
  I0719 13:26:41.968890 21 wait.go:44] Found 0 stateful pods, waiting for 1
  E0719 13:26:42.644501      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:26:43.644630      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:26:44.644737      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:26:45.644825      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:26:46.644949      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:26:47.645024      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:26:48.645149      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:26:49.645399      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:26:50.645717      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:26:51.645812      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:26:51.971771 21 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 07/19/25 13:26:51.979
  I0719 13:26:52.002752 21 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0719 13:26:52.002772 21 wait.go:54] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
  E0719 13:26:52.646473      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:26:53.646518      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:26:54.647568      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:26:55.647636      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:26:56.647772      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:26:57.647833      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:26:58.647957      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:26:59.648047      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:27:00.648199      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:27:01.648537      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:27:02.001176 21 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0719 13:27:02.001208 21 wait.go:54] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 07/19/25 13:27:02.009
  STEP: Delete all of the StatefulSets @ 07/19/25 13:27:02.015
  STEP: Verify that StatefulSets have been deleted @ 07/19/25 13:27:02.025
  I0719 13:27:02.029943 21 statefulset.go:138] Deleting all statefulset in ns statefulset-8785
  I0719 13:27:02.049075 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8785" for this suite. @ 07/19/25 13:27:02.056
• [20.132 seconds]
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 07/19/25 13:27:02.062
  I0719 13:27:02.062632 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 07/19/25 13:27:02.063
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:27:02.076
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:27:02.079
  STEP: create the container to handle the HTTPGet hook request. @ 07/19/25 13:27:02.156
  E0719 13:27:02.649326      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:27:03.650018      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 07/19/25 13:27:04.187
  E0719 13:27:04.650129      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:27:05.650223      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 07/19/25 13:27:06.212
  STEP: delete the pod with lifecycle hook @ 07/19/25 13:27:06.223
  E0719 13:27:06.650817      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:27:07.650883      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:27:08.244405 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1105" for this suite. @ 07/19/25 13:27:08.25
• [6.196 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 07/19/25 13:27:08.258
  I0719 13:27:08.258874 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 07/19/25 13:27:08.259
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:27:08.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:27:08.274
  STEP: create the container to handle the HTTPGet hook request. @ 07/19/25 13:27:08.351
  E0719 13:27:08.650981      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:27:09.651114      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 07/19/25 13:27:10.38
  E0719 13:27:10.651369      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:27:11.651516      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 07/19/25 13:27:12.4
  E0719 13:27:12.651595      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:27:13.651862      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 07/19/25 13:27:14.419
  I0719 13:27:14.440895 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7914" for this suite. @ 07/19/25 13:27:14.447
• [6.197 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:477
  STEP: Creating a kubernetes client @ 07/19/25 13:27:14.455
  I0719 13:27:14.455700 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename sched-preemption @ 07/19/25 13:27:14.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:27:14.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:27:14.474
  I0719 13:27:14.493523 21 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0719 13:27:14.652203      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:27:15.652494      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:27:16.652514      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:27:17.652647      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:27:18.652998      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:27:19.653097      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:27:20.653204      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:27:21.653414      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:27:22.654197      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:27:23.654442      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:27:24.654998      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:27:25.655205      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:27:26.655891      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:27:27.655971      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:27:28.656816      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:27:29.657567      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:27:30.658586      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:27:31.658680      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:27:32.658786      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:27:33.658861      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:27:34.658993      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:27:35.659069      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:27:36.659209      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:27:37.659302      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:27:38.659589      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:27:39.660571      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:27:40.660670      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:27:41.660744      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:27:42.661423      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:27:43.661653      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:27:44.661830      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:27:45.661848      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:27:46.662325      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:27:47.662621      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:27:48.663312      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:27:49.663488      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:27:50.664118      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:27:51.664321      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:27:52.664685      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:27:53.664799      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:27:54.665748      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:27:55.665827      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:27:56.666232      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:27:57.666853      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:27:58.666969      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:27:59.667049      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:28:00.668112      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:28:01.668590      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:28:02.669121      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:28:03.669932      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:28:04.670440      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:28:05.670581      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:28:06.671470      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:28:07.671661      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:28:08.672062      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:28:09.672215      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:28:10.672996      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:28:11.673115      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:28:12.673194      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:28:13.673420      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:28:14.501731 21 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 07/19/25 13:28:14.507
  STEP: Adding a custom resource @ 07/19/25 13:28:14.507
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 07/19/25 13:28:14.515
  I0719 13:28:14.528217 21 preemption.go:511] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 07/19/25 13:28:14.528
  E0719 13:28:14.673810      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:28:15.673913      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 07/19/25 13:28:16.54
  I0719 13:28:16.549141 21 preemption.go:529] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 07/19/25 13:28:16.549
  E0719 13:28:16.674176      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:28:17.674577      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the pod has the pod disruption condition @ 07/19/25 13:28:18.557
  I0719 13:28:18.562785 21 pod_client.go:383] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  E0719 13:28:18.675063      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:28:19.080276 21 pod_client.go:173] Successfully updated pod "victim-pod"
  STEP: Removing a custom resource @ 07/19/25 13:28:19.105
  STEP: Removing a custom resource @ 07/19/25 13:28:19.119
  STEP: Removing a custom resource @ 07/19/25 13:28:19.128
  I0719 13:28:19.137242 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-6608" for this suite. @ 07/19/25 13:28:19.141
• [64.693 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1627
  STEP: Creating a kubernetes client @ 07/19/25 13:28:19.148
  I0719 13:28:19.148957 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename kubectl @ 07/19/25 13:28:19.149
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:28:19.163
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:28:19.165
  STEP: creating the pod @ 07/19/25 13:28:19.168
  I0719 13:28:19.168612 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-7937 create -f -'
  I0719 13:28:19.258016 21 builder.go:146] stderr: ""
  I0719 13:28:19.258050 21 builder.go:147] stdout: "pod/pause created\n"
  E0719 13:28:19.676099      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:28:20.676178      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 07/19/25 13:28:21.268
  I0719 13:28:21.268599 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-7937 label pods pause testing-label=testing-label-value'
  I0719 13:28:21.321888 21 builder.go:146] stderr: ""
  I0719 13:28:21.321928 21 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 07/19/25 13:28:21.321
  I0719 13:28:21.322054 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-7937 get pod pause -L testing-label'
  I0719 13:28:21.366102 21 builder.go:146] stderr: ""
  I0719 13:28:21.366139 21 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 07/19/25 13:28:21.366
  I0719 13:28:21.366213 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-7937 label pods pause testing-label-'
  I0719 13:28:21.420843 21 builder.go:146] stderr: ""
  I0719 13:28:21.420877 21 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 07/19/25 13:28:21.42
  I0719 13:28:21.420951 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-7937 get pod pause -L testing-label'
  I0719 13:28:21.462580 21 builder.go:146] stderr: ""
  I0719 13:28:21.462621 21 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 07/19/25 13:28:21.462
  I0719 13:28:21.462749 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-7937 delete --grace-period=0 --force -f -'
  I0719 13:28:21.518331 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0719 13:28:21.518383 21 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I0719 13:28:21.518424 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-7937 get rc,svc -l name=pause --no-headers'
  I0719 13:28:21.567873 21 builder.go:146] stderr: "No resources found in kubectl-7937 namespace.\n"
  I0719 13:28:21.567914 21 builder.go:147] stdout: ""
  I0719 13:28:21.567953 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-7937 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0719 13:28:21.610387 21 builder.go:146] stderr: ""
  I0719 13:28:21.610423 21 builder.go:147] stdout: ""
  I0719 13:28:21.610547 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7937" for this suite. @ 07/19/25 13:28:21.616
• [2.477 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:351
  STEP: Creating a kubernetes client @ 07/19/25 13:28:21.625
  I0719 13:28:21.625740 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename kubectl @ 07/19/25 13:28:21.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:28:21.639
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:28:21.642
  STEP: creating a replication controller @ 07/19/25 13:28:21.644
  I0719 13:28:21.645005 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-7542 create -f -'
  E0719 13:28:21.676496      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:28:21.734941 21 builder.go:146] stderr: ""
  I0719 13:28:21.734973 21 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 07/19/25 13:28:21.734
  I0719 13:28:21.735042 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-7542 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0719 13:28:21.781254 21 builder.go:146] stderr: ""
  I0719 13:28:21.781284 21 builder.go:147] stdout: "update-demo-nautilus-m7dmw update-demo-nautilus-s8qdl "
  I0719 13:28:21.781335 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-7542 get pods update-demo-nautilus-m7dmw -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0719 13:28:21.823235 21 builder.go:146] stderr: ""
  I0719 13:28:21.823265 21 builder.go:147] stdout: ""
  I0719 13:28:21.823274 21 kubectl.go:2505] update-demo-nautilus-m7dmw is created but not running
  E0719 13:28:22.676991      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:28:23.677564      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:28:24.678568      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:28:25.678649      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:28:26.678782      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:28:26.823976 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-7542 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0719 13:28:26.870381 21 builder.go:146] stderr: ""
  I0719 13:28:26.870416 21 builder.go:147] stdout: "update-demo-nautilus-m7dmw update-demo-nautilus-s8qdl "
  I0719 13:28:26.870453 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-7542 get pods update-demo-nautilus-m7dmw -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0719 13:28:26.915283 21 builder.go:146] stderr: ""
  I0719 13:28:26.915320 21 builder.go:147] stdout: "true"
  I0719 13:28:26.915378 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-7542 get pods update-demo-nautilus-m7dmw -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0719 13:28:26.957805 21 builder.go:146] stderr: ""
  I0719 13:28:26.957849 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0719 13:28:26.957860 21 kubectl.go:2396] validating pod update-demo-nautilus-m7dmw
  I0719 13:28:26.965557 21 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0719 13:28:26.965613 21 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0719 13:28:26.965626 21 kubectl.go:2523] update-demo-nautilus-m7dmw is verified up and running
  I0719 13:28:26.965661 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-7542 get pods update-demo-nautilus-s8qdl -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0719 13:28:27.008658 21 builder.go:146] stderr: ""
  I0719 13:28:27.008694 21 builder.go:147] stdout: "true"
  I0719 13:28:27.008731 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-7542 get pods update-demo-nautilus-s8qdl -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0719 13:28:27.052441 21 builder.go:146] stderr: ""
  I0719 13:28:27.052473 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0719 13:28:27.052487 21 kubectl.go:2396] validating pod update-demo-nautilus-s8qdl
  I0719 13:28:27.059762 21 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0719 13:28:27.059803 21 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0719 13:28:27.059812 21 kubectl.go:2523] update-demo-nautilus-s8qdl is verified up and running
  STEP: scaling down the replication controller @ 07/19/25 13:28:27.059
  I0719 13:28:27.060582 21 kubectl.go:320] scanned /root for discovery docs: <nil>
  I0719 13:28:27.060612 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-7542 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E0719 13:28:27.679661      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:28:28.120890 21 builder.go:146] stderr: ""
  I0719 13:28:28.120927 21 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 07/19/25 13:28:28.12
  I0719 13:28:28.121020 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-7542 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0719 13:28:28.165416 21 builder.go:146] stderr: ""
  I0719 13:28:28.165469 21 builder.go:147] stdout: "update-demo-nautilus-s8qdl "
  I0719 13:28:28.165541 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-7542 get pods update-demo-nautilus-s8qdl -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0719 13:28:28.206867 21 builder.go:146] stderr: ""
  I0719 13:28:28.206903 21 builder.go:147] stdout: "true"
  I0719 13:28:28.206959 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-7542 get pods update-demo-nautilus-s8qdl -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0719 13:28:28.251225 21 builder.go:146] stderr: ""
  I0719 13:28:28.251263 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0719 13:28:28.251274 21 kubectl.go:2396] validating pod update-demo-nautilus-s8qdl
  I0719 13:28:28.255944 21 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0719 13:28:28.255998 21 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0719 13:28:28.256011 21 kubectl.go:2523] update-demo-nautilus-s8qdl is verified up and running
  STEP: scaling up the replication controller @ 07/19/25 13:28:28.256
  I0719 13:28:28.256821 21 kubectl.go:320] scanned /root for discovery docs: <nil>
  I0719 13:28:28.256850 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-7542 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E0719 13:28:28.680673      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:28:29.315725 21 builder.go:146] stderr: ""
  I0719 13:28:29.315763 21 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 07/19/25 13:28:29.315
  I0719 13:28:29.315847 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-7542 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0719 13:28:29.368799 21 builder.go:146] stderr: ""
  I0719 13:28:29.368834 21 builder.go:147] stdout: "update-demo-nautilus-6xczc update-demo-nautilus-s8qdl "
  I0719 13:28:29.368874 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-7542 get pods update-demo-nautilus-6xczc -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0719 13:28:29.412594 21 builder.go:146] stderr: ""
  I0719 13:28:29.412629 21 builder.go:147] stdout: "true"
  I0719 13:28:29.412667 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-7542 get pods update-demo-nautilus-6xczc -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0719 13:28:29.456121 21 builder.go:146] stderr: ""
  I0719 13:28:29.456156 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0719 13:28:29.456165 21 kubectl.go:2396] validating pod update-demo-nautilus-6xczc
  I0719 13:28:29.463734 21 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0719 13:28:29.463776 21 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0719 13:28:29.463786 21 kubectl.go:2523] update-demo-nautilus-6xczc is verified up and running
  I0719 13:28:29.463829 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-7542 get pods update-demo-nautilus-s8qdl -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0719 13:28:29.507026 21 builder.go:146] stderr: ""
  I0719 13:28:29.507055 21 builder.go:147] stdout: "true"
  I0719 13:28:29.507092 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-7542 get pods update-demo-nautilus-s8qdl -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0719 13:28:29.552789 21 builder.go:146] stderr: ""
  I0719 13:28:29.552824 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0719 13:28:29.552835 21 kubectl.go:2396] validating pod update-demo-nautilus-s8qdl
  I0719 13:28:29.558921 21 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0719 13:28:29.558963 21 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0719 13:28:29.558983 21 kubectl.go:2523] update-demo-nautilus-s8qdl is verified up and running
  STEP: using delete to clean up resources @ 07/19/25 13:28:29.558
  I0719 13:28:29.559091 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-7542 delete --grace-period=0 --force -f -'
  I0719 13:28:29.608829 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0719 13:28:29.608874 21 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0719 13:28:29.608922 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-7542 get rc,svc -l name=update-demo --no-headers'
  I0719 13:28:29.676958 21 builder.go:146] stderr: "No resources found in kubectl-7542 namespace.\n"
  I0719 13:28:29.677007 21 builder.go:147] stdout: ""
  I0719 13:28:29.677051 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-7542 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  E0719 13:28:29.681153      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:28:29.752178 21 builder.go:146] stderr: ""
  I0719 13:28:29.752219 21 builder.go:147] stdout: ""
  I0719 13:28:29.752363 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7542" for this suite. @ 07/19/25 13:28:29.758
• [8.149 seconds]
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:191
  STEP: Creating a kubernetes client @ 07/19/25 13:28:29.775
  I0719 13:28:29.775022 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename svcaccounts @ 07/19/25 13:28:29.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:28:29.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:28:29.795
  I0719 13:28:29.824238 21 service_accounts.go:281] created pod pod-service-account-defaultsa
  I0719 13:28:29.824267 21 service_accounts.go:295] pod pod-service-account-defaultsa service account token volume mount: true
  I0719 13:28:29.830846 21 service_accounts.go:281] created pod pod-service-account-mountsa
  I0719 13:28:29.830867 21 service_accounts.go:295] pod pod-service-account-mountsa service account token volume mount: true
  I0719 13:28:29.838562 21 service_accounts.go:281] created pod pod-service-account-nomountsa
  I0719 13:28:29.838580 21 service_accounts.go:295] pod pod-service-account-nomountsa service account token volume mount: false
  I0719 13:28:29.846555 21 service_accounts.go:281] created pod pod-service-account-defaultsa-mountspec
  I0719 13:28:29.846628 21 service_accounts.go:295] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0719 13:28:29.857032 21 service_accounts.go:281] created pod pod-service-account-mountsa-mountspec
  I0719 13:28:29.857061 21 service_accounts.go:295] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0719 13:28:29.867058 21 service_accounts.go:281] created pod pod-service-account-nomountsa-mountspec
  I0719 13:28:29.867080 21 service_accounts.go:295] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0719 13:28:29.879249 21 service_accounts.go:281] created pod pod-service-account-defaultsa-nomountspec
  I0719 13:28:29.879269 21 service_accounts.go:295] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0719 13:28:29.886577 21 service_accounts.go:281] created pod pod-service-account-mountsa-nomountspec
  I0719 13:28:29.886596 21 service_accounts.go:295] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0719 13:28:29.895022 21 service_accounts.go:281] created pod pod-service-account-nomountsa-nomountspec
  I0719 13:28:29.895045 21 service_accounts.go:295] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0719 13:28:29.895133 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1399" for this suite. @ 07/19/25 13:28:29.905
• [0.145 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:71
  STEP: Creating a kubernetes client @ 07/19/25 13:28:29.92
  I0719 13:28:29.920157 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename replication-controller @ 07/19/25 13:28:29.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:28:29.932
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:28:29.934
  STEP: Creating replication controller my-hostname-basic-9182a845-4aa8-47da-8ef4-431dad942668 @ 07/19/25 13:28:29.938
  I0719 13:28:29.951486 21 resource.go:81] Pod name my-hostname-basic-9182a845-4aa8-47da-8ef4-431dad942668: Found 0 pods out of 1
  E0719 13:28:30.681245      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:28:31.681371      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:28:32.681496      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:28:33.681572      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:28:34.682578      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:28:34.956600 21 resource.go:81] Pod name my-hostname-basic-9182a845-4aa8-47da-8ef4-431dad942668: Found 1 pods out of 1
  I0719 13:28:34.956635 21 rc.go:509] Ensuring all pods for ReplicationController "my-hostname-basic-9182a845-4aa8-47da-8ef4-431dad942668" are running
  I0719 13:28:34.960914 21 rc.go:525] Pod "my-hostname-basic-9182a845-4aa8-47da-8ef4-431dad942668-kgp7d" is running and ready(conditions: [{Type:PodReadyToStartContainers ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-19 13:28:30 +0000 UTC Reason: Message:} {Type:Initialized ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-19 13:28:29 +0000 UTC Reason: Message:} {Type:Ready ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-19 13:28:30 +0000 UTC Reason: Message:} {Type:ContainersReady ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-19 13:28:30 +0000 UTC Reason: Message:} {Type:PodScheduled ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-19 13:28:29 +0000 UTC Reason: Message:}])
  I0719 13:28:34.960936 21 rc.go:533] Trying to dial the pod
  STEP: trying to dial each unique pod @ 07/19/25 13:28:34.96
  I0719 13:28:35.047402 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6571" for this suite. @ 07/19/25 13:28:35.051
• [5.139 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:99
  STEP: Creating a kubernetes client @ 07/19/25 13:28:35.059
  I0719 13:28:35.059713 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename aggregator @ 07/19/25 13:28:35.06
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:28:35.073
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:28:35.077
  I0719 13:28:35.082680 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Registering the sample API server. @ 07/19/25 13:28:35.083
  I0719 13:28:35.505838 21 helpers.go:184] Found ClusterRoles; assuming RBAC is enabled.
  I0719 13:28:35.537960 21 deployment.go:223] deployment "sample-apiserver-deployment" doesn't have the required revision set
  E0719 13:28:35.683111      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:28:36.683321      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:28:37.597548 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 19, 13, 28, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 19, 13, 28, 35, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 19, 13, 28, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 19, 13, 28, 35, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0719 13:28:37.683763      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:28:38.683996      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:28:39.604315 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 19, 13, 28, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 19, 13, 28, 35, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 19, 13, 28, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 19, 13, 28, 35, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0719 13:28:39.684627      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:28:40.684705      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:28:41.603722 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 19, 13, 28, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 19, 13, 28, 35, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 19, 13, 28, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 19, 13, 28, 35, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0719 13:28:41.684823      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:28:42.684992      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:28:43.603267 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 19, 13, 28, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 19, 13, 28, 35, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 19, 13, 28, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 19, 13, 28, 35, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0719 13:28:43.685377      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:28:44.685511      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:28:45.604523 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 19, 13, 28, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 19, 13, 28, 35, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 19, 13, 28, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 19, 13, 28, 35, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0719 13:28:45.685594      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:28:46.685679      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:28:47.604283 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 19, 13, 28, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 19, 13, 28, 35, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 19, 13, 28, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 19, 13, 28, 35, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0719 13:28:47.686494      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:28:48.686573      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:28:49.603611 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 19, 13, 28, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 19, 13, 28, 35, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 19, 13, 28, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 19, 13, 28, 35, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0719 13:28:49.686771      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:28:50.687572      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:28:51.604248 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 19, 13, 28, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 19, 13, 28, 35, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 19, 13, 28, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 19, 13, 28, 35, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0719 13:28:51.688465      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:28:52.688602      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:28:53.603991 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 19, 13, 28, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 19, 13, 28, 35, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 19, 13, 28, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 19, 13, 28, 35, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0719 13:28:53.689144      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:28:54.689425      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:28:55.602517 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 19, 13, 28, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 19, 13, 28, 35, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 19, 13, 28, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 19, 13, 28, 35, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0719 13:28:55.689731      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:28:56.689944      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:28:57.605211 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 19, 13, 28, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 19, 13, 28, 35, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 19, 13, 28, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 19, 13, 28, 35, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0719 13:28:57.690456      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:28:58.690568      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:28:59.691449      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:28:59.727710 21 aggregator.go:756] Waited 115.541551ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 07/19/25 13:28:59.764
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 07/19/25 13:28:59.769
  STEP: List APIServices @ 07/19/25 13:28:59.778
  I0719 13:28:59.782020 21 aggregator.go:557] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 07/19/25 13:28:59.782
  I0719 13:28:59.794769 21 aggregator.go:582] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 07/19/25 13:28:59.794
  I0719 13:28:59.808396 21 aggregator.go:608] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2025, time.July, 19, 13, 28, 59, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 07/19/25 13:28:59.808
  I0719 13:28:59.812444 21 aggregator.go:626] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2025-07-19 13:28:59 +0000 UTC Passed all checks passed}
  I0719 13:28:59.812467 21 aggregator.go:622] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0719 13:28:59.812477 21 aggregator.go:632] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 07/19/25 13:28:59.812
  I0719 13:28:59.823016 21 aggregator.go:648] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-1542095380" @ 07/19/25 13:28:59.823
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 07/19/25 13:28:59.833
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 07/19/25 13:28:59.839
  STEP: Patch APIService Status @ 07/19/25 13:28:59.844
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 07/19/25 13:28:59.852
  I0719 13:28:59.856525 21 aggregator.go:726] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2025-07-19 13:28:59 +0000 UTC Passed all checks passed}
  I0719 13:28:59.856550 21 aggregator.go:726] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0719 13:28:59.856560 21 aggregator.go:722] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0719 13:28:59.856572 21 aggregator.go:732] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 07/19/25 13:28:59.856
  STEP: Confirm that the generated APIService has been deleted @ 07/19/25 13:28:59.866
  I0719 13:28:59.866594 21 aggregator.go:793] Requesting list of APIServices to confirm quantity
  I0719 13:28:59.870408 21 aggregator.go:803] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0719 13:28:59.870429 21 aggregator.go:745] APIService v1alpha1.wardle.example.com has been deleted.
  I0719 13:28:59.994489 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-3186" for this suite. @ 07/19/25 13:29:00
• [24.949 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 07/19/25 13:29:00.008
  I0719 13:29:00.008689 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename kubectl-logs @ 07/19/25 13:29:00.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:29:00.021
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:29:00.023
  STEP: creating a pod @ 07/19/25 13:29:00.026
  I0719 13:29:00.026946 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-logs-4366 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.53 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0719 13:29:00.082183 21 builder.go:146] stderr: ""
  I0719 13:29:00.082215 21 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 07/19/25 13:29:00.082
  I0719 13:29:00.082299 21 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E0719 13:29:00.691557      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:29:01.691634      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:29:02.091335 21 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 07/19/25 13:29:02.091
  I0719 13:29:02.091446 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-logs-4366 logs logs-generator logs-generator'
  I0719 13:29:02.154179 21 builder.go:146] stderr: ""
  I0719 13:29:02.154218 21 builder.go:147] stdout: "I0719 13:29:00.650871       1 logs_generator.go:76] 0 GET /api/v1/namespaces/kube-system/pods/xgz 269\nI0719 13:29:00.851254       1 logs_generator.go:76] 1 POST /api/v1/namespaces/ns/pods/bkz 581\nI0719 13:29:01.051626       1 logs_generator.go:76] 2 GET /api/v1/namespaces/ns/pods/ckv 349\nI0719 13:29:01.251923       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/default/pods/crkf 537\nI0719 13:29:01.451302       1 logs_generator.go:76] 4 POST /api/v1/namespaces/default/pods/fzm2 443\nI0719 13:29:01.651568       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/ns/pods/cbn7 387\nI0719 13:29:01.851876       1 logs_generator.go:76] 6 GET /api/v1/namespaces/default/pods/hs2 216\nI0719 13:29:02.051196       1 logs_generator.go:76] 7 POST /api/v1/namespaces/ns/pods/rkj 573\n"
  STEP: limiting log lines @ 07/19/25 13:29:02.154
  I0719 13:29:02.154326 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-logs-4366 logs logs-generator logs-generator --tail=1'
  I0719 13:29:02.215745 21 builder.go:146] stderr: ""
  I0719 13:29:02.215788 21 builder.go:147] stdout: "I0719 13:29:02.051196       1 logs_generator.go:76] 7 POST /api/v1/namespaces/ns/pods/rkj 573\n"
  I0719 13:29:02.215798 21 logs.go:180] got output "I0719 13:29:02.051196       1 logs_generator.go:76] 7 POST /api/v1/namespaces/ns/pods/rkj 573\n"
  STEP: limiting log bytes @ 07/19/25 13:29:02.215
  I0719 13:29:02.215886 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-logs-4366 logs logs-generator logs-generator --limit-bytes=1'
  I0719 13:29:02.268741 21 builder.go:146] stderr: ""
  I0719 13:29:02.268771 21 builder.go:147] stdout: "I"
  I0719 13:29:02.268779 21 logs.go:186] got output "I"
  STEP: exposing timestamps @ 07/19/25 13:29:02.268
  I0719 13:29:02.268845 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-logs-4366 logs logs-generator logs-generator --tail=1 --timestamps'
  I0719 13:29:02.319258 21 builder.go:146] stderr: ""
  I0719 13:29:02.319293 21 builder.go:147] stdout: "2025-07-19T13:29:02.251592118Z I0719 13:29:02.251488       1 logs_generator.go:76] 8 POST /api/v1/namespaces/ns/pods/ghd 547\n"
  I0719 13:29:02.319303 21 logs.go:192] got output "2025-07-19T13:29:02.251592118Z I0719 13:29:02.251488       1 logs_generator.go:76] 8 POST /api/v1/namespaces/ns/pods/ghd 547\n"
  STEP: restricting to a time range @ 07/19/25 13:29:02.319
  E0719 13:29:02.692698      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:29:03.693560      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:29:04.693729      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:29:04.819947 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-logs-4366 logs logs-generator logs-generator --since=1s'
  I0719 13:29:04.874159 21 builder.go:146] stderr: ""
  I0719 13:29:04.874210 21 builder.go:147] stdout: "I0719 13:29:04.051594       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/ns/pods/6v7 577\nI0719 13:29:04.250984       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/ns/pods/blf 518\nI0719 13:29:04.451297       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/ns/pods/2wk 399\nI0719 13:29:04.651633       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/default/pods/fgm 310\nI0719 13:29:04.850896       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/default/pods/n4tp 439\n"
  I0719 13:29:04.874271 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-logs-4366 logs logs-generator logs-generator --since=24h'
  I0719 13:29:04.928294 21 builder.go:146] stderr: ""
  I0719 13:29:04.928361 21 builder.go:147] stdout: "I0719 13:29:00.650871       1 logs_generator.go:76] 0 GET /api/v1/namespaces/kube-system/pods/xgz 269\nI0719 13:29:00.851254       1 logs_generator.go:76] 1 POST /api/v1/namespaces/ns/pods/bkz 581\nI0719 13:29:01.051626       1 logs_generator.go:76] 2 GET /api/v1/namespaces/ns/pods/ckv 349\nI0719 13:29:01.251923       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/default/pods/crkf 537\nI0719 13:29:01.451302       1 logs_generator.go:76] 4 POST /api/v1/namespaces/default/pods/fzm2 443\nI0719 13:29:01.651568       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/ns/pods/cbn7 387\nI0719 13:29:01.851876       1 logs_generator.go:76] 6 GET /api/v1/namespaces/default/pods/hs2 216\nI0719 13:29:02.051196       1 logs_generator.go:76] 7 POST /api/v1/namespaces/ns/pods/rkj 573\nI0719 13:29:02.251488       1 logs_generator.go:76] 8 POST /api/v1/namespaces/ns/pods/ghd 547\nI0719 13:29:02.451830       1 logs_generator.go:76] 9 POST /api/v1/namespaces/ns/pods/wjtw 564\nI0719 13:29:02.651256       1 logs_generator.go:76] 10 GET /api/v1/namespaces/kube-system/pods/8j2 273\nI0719 13:29:02.851601       1 logs_generator.go:76] 11 POST /api/v1/namespaces/ns/pods/jbhk 490\nI0719 13:29:03.051889       1 logs_generator.go:76] 12 GET /api/v1/namespaces/default/pods/drf 544\nI0719 13:29:03.251193       1 logs_generator.go:76] 13 POST /api/v1/namespaces/default/pods/4cm7 314\nI0719 13:29:03.451569       1 logs_generator.go:76] 14 POST /api/v1/namespaces/kube-system/pods/2ck 470\nI0719 13:29:03.650958       1 logs_generator.go:76] 15 GET /api/v1/namespaces/kube-system/pods/qqd 476\nI0719 13:29:03.851278       1 logs_generator.go:76] 16 GET /api/v1/namespaces/kube-system/pods/84g5 264\nI0719 13:29:04.051594       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/ns/pods/6v7 577\nI0719 13:29:04.250984       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/ns/pods/blf 518\nI0719 13:29:04.451297       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/ns/pods/2wk 399\nI0719 13:29:04.651633       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/default/pods/fgm 310\nI0719 13:29:04.850896       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/default/pods/n4tp 439\n"
  I0719 13:29:04.928482 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-logs-4366 delete pod logs-generator'
  E0719 13:29:05.693775      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:29:06.065600 21 builder.go:146] stderr: ""
  I0719 13:29:06.065639 21 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I0719 13:29:06.065754 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-4366" for this suite. @ 07/19/25 13:29:06.071
• [6.072 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:640
  STEP: Creating a kubernetes client @ 07/19/25 13:29:06.081
  I0719 13:29:06.081264 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename webhook @ 07/19/25 13:29:06.081
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:29:06.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:29:06.096
  STEP: Setting up server cert @ 07/19/25 13:29:06.119
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/19/25 13:29:06.511
  STEP: Deploying the webhook pod @ 07/19/25 13:29:06.518
  STEP: Wait for the deployment to be ready @ 07/19/25 13:29:06.536
  I0719 13:29:06.546488 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0719 13:29:06.694691      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:29:07.694785      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/19/25 13:29:08.563
  STEP: Verifying the service has paired with the endpoint @ 07/19/25 13:29:08.582
  E0719 13:29:08.695530      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:29:09.582484 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 07/19/25 13:29:09.668
  STEP: Creating a configMap that should be mutated @ 07/19/25 13:29:09.679
  E0719 13:29:09.695868      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the collection of validation webhooks @ 07/19/25 13:29:09.709
  STEP: Creating a configMap that should not be mutated @ 07/19/25 13:29:09.776
  I0719 13:29:09.842301 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5561" for this suite. @ 07/19/25 13:29:09.846
  STEP: Destroying namespace "webhook-markers-6548" for this suite. @ 07/19/25 13:29:09.856
• [3.782 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:275
  STEP: Creating a kubernetes client @ 07/19/25 13:29:09.863
  I0719 13:29:09.863433 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename namespaces @ 07/19/25 13:29:09.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:29:09.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:29:09.878
  STEP: creating a Namespace @ 07/19/25 13:29:09.882
  STEP: patching the Namespace @ 07/19/25 13:29:09.894
  STEP: get the Namespace and ensuring it has the label @ 07/19/25 13:29:09.899
  I0719 13:29:09.905843 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8870" for this suite. @ 07/19/25 13:29:09.947
  STEP: Destroying namespace "nspatchtest-972216cd-7d5c-4f24-8cfa-7ee496c47300-1617" for this suite. @ 07/19/25 13:29:09.956
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:236
  STEP: Creating a kubernetes client @ 07/19/25 13:29:09.964
  I0719 13:29:09.964884 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename downward-api @ 07/19/25 13:29:09.965
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:29:09.979
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:29:09.981
  STEP: Creating a pod to test downward API volume plugin @ 07/19/25 13:29:09.983
  E0719 13:29:10.696084      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:29:11.696929      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:29:12.697039      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:29:13.697571      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/19/25 13:29:14.012
  I0719 13:29:14.017637 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod downwardapi-volume-00441ff0-04c4-45a8-9a4a-9eeec524150c container client-container: <nil>
  STEP: delete the pod @ 07/19/25 13:29:14.025
  I0719 13:29:14.042793 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8532" for this suite. @ 07/19/25 13:29:14.047
• [4.090 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 07/19/25 13:29:14.054
  I0719 13:29:14.054744 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename kubelet-test @ 07/19/25 13:29:14.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:29:14.07
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:29:14.072
  STEP: Waiting for pod completion @ 07/19/25 13:29:14.085
  E0719 13:29:14.698307      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:29:15.698496      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:29:16.698602      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:29:17.699576      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:29:18.113522 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8574" for this suite. @ 07/19/25 13:29:18.119
• [4.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:468
  STEP: Creating a kubernetes client @ 07/19/25 13:29:18.126
  I0719 13:29:18.126741 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename sched-pred @ 07/19/25 13:29:18.127
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:29:18.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:29:18.142
  I0719 13:29:18.144756 21 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0719 13:29:18.225058 21 util.go:390] Waiting for terminating namespaces to be deleted...
  I0719 13:29:18.229937 21 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-42-177 before test
  I0719 13:29:18.234616 21 predicates.go:958] nginx-ingress-controller-kubernetes-worker-75jzt from ingress-nginx-kubernetes-worker started at 2025-07-19 12:06:52 +0000 UTC (1 container statuses recorded)
  I0719 13:29:18.234637 21 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0719 13:29:18.234644 21 predicates.go:958] calico-node-tv24k from kube-system started at 2025-07-19 12:08:17 +0000 UTC (1 container statuses recorded)
  I0719 13:29:18.234650 21 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0719 13:29:18.234657 21 predicates.go:958] sonobuoy-e2e-job-c9d8c2a4e5e24525 from sonobuoy started at 2025-07-19 12:13:46 +0000 UTC (2 container statuses recorded)
  I0719 13:29:18.234662 21 predicates.go:960] 	Container e2e ready: true, restart count 0
  I0719 13:29:18.234667 21 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0719 13:29:18.234673 21 predicates.go:958] sonobuoy-systemd-logs-daemon-set-9ce81a3003f64498-fgps6 from sonobuoy started at 2025-07-19 12:13:47 +0000 UTC (2 container statuses recorded)
  I0719 13:29:18.234685 21 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0719 13:29:18.234690 21 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0719 13:29:18.234696 21 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-6-59 before test
  I0719 13:29:18.239678 21 predicates.go:958] nginx-ingress-controller-kubernetes-worker-ttnnm from ingress-nginx-kubernetes-worker started at 2025-07-19 12:40:56 +0000 UTC (1 container statuses recorded)
  I0719 13:29:18.239695 21 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0719 13:29:18.239703 21 predicates.go:958] calico-node-9fhxn from kube-system started at 2025-07-19 12:11:42 +0000 UTC (1 container statuses recorded)
  I0719 13:29:18.239708 21 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0719 13:29:18.239715 21 predicates.go:958] agnhost-host-aliasesb419464e-4a81-4500-b899-1452638d22cf from kubelet-test-8574 started at 2025-07-19 13:29:14 +0000 UTC (1 container statuses recorded)
  I0719 13:29:18.239719 21 predicates.go:960] 	Container agnhost-container ready: false, restart count 0
  I0719 13:29:18.239725 21 predicates.go:958] sonobuoy from sonobuoy started at 2025-07-19 12:13:45 +0000 UTC (1 container statuses recorded)
  I0719 13:29:18.239730 21 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0719 13:29:18.239735 21 predicates.go:958] sonobuoy-systemd-logs-daemon-set-9ce81a3003f64498-n6kv8 from sonobuoy started at 2025-07-19 12:13:46 +0000 UTC (2 container statuses recorded)
  I0719 13:29:18.239741 21 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0719 13:29:18.239746 21 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0719 13:29:18.239758 21 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-64-234 before test
  I0719 13:29:18.244088 21 predicates.go:958] nginx-ingress-controller-kubernetes-worker-7rrx5 from ingress-nginx-kubernetes-worker started at 2025-07-19 11:54:23 +0000 UTC (1 container statuses recorded)
  I0719 13:29:18.244104 21 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0719 13:29:18.244109 21 predicates.go:958] calico-node-lkdps from kube-system started at 2025-07-19 12:11:57 +0000 UTC (1 container statuses recorded)
  I0719 13:29:18.244112 21 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0719 13:29:18.244116 21 predicates.go:958] coredns-5d946bb58-nbpbm from kube-system started at 2025-07-19 11:54:23 +0000 UTC (1 container statuses recorded)
  I0719 13:29:18.244120 21 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0719 13:29:18.244123 21 predicates.go:958] kube-state-metrics-b84f44f45-2nqrm from kube-system started at 2025-07-19 11:54:23 +0000 UTC (1 container statuses recorded)
  I0719 13:29:18.244126 21 predicates.go:960] 	Container kube-state-metrics ready: true, restart count 2
  I0719 13:29:18.244130 21 predicates.go:958] metrics-server-v0.7.2-7d878b47f8-gcczm from kube-system started at 2025-07-19 11:54:23 +0000 UTC (2 container statuses recorded)
  I0719 13:29:18.244132 21 predicates.go:960] 	Container metrics-server ready: true, restart count 0
  I0719 13:29:18.244135 21 predicates.go:960] 	Container metrics-server-nanny ready: true, restart count 0
  I0719 13:29:18.244139 21 predicates.go:958] dashboard-metrics-scraper-5cf87bc988-79lk5 from kubernetes-dashboard started at 2025-07-19 11:54:23 +0000 UTC (1 container statuses recorded)
  I0719 13:29:18.244141 21 predicates.go:960] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I0719 13:29:18.244145 21 predicates.go:958] kubernetes-dashboard-6858576c98-4jkn6 from kubernetes-dashboard started at 2025-07-19 11:54:23 +0000 UTC (1 container statuses recorded)
  I0719 13:29:18.244148 21 predicates.go:960] 	Container kubernetes-dashboard ready: true, restart count 2
  I0719 13:29:18.244152 21 predicates.go:958] sonobuoy-systemd-logs-daemon-set-9ce81a3003f64498-9xxjq from sonobuoy started at 2025-07-19 12:13:47 +0000 UTC (2 container statuses recorded)
  I0719 13:29:18.244155 21 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0719 13:29:18.244158 21 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 07/19/25 13:29:18.244
  E0719 13:29:18.700178      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:29:19.700269      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 07/19/25 13:29:20.272
  STEP: Trying to apply a random label on the found node. @ 07/19/25 13:29:20.297
  STEP: verifying the node has the label kubernetes.io/e2e-55b96545-6313-4bfe-a83d-81a0b3693362 42 @ 07/19/25 13:29:20.312
  STEP: Trying to relaunch the pod, now with labels. @ 07/19/25 13:29:20.316
  E0719 13:29:20.701283      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:29:21.701422      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-55b96545-6313-4bfe-a83d-81a0b3693362 off the node ip-172-31-6-59 @ 07/19/25 13:29:22.345
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-55b96545-6313-4bfe-a83d-81a0b3693362 @ 07/19/25 13:29:22.359
  I0719 13:29:22.362261 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-5927" for this suite. @ 07/19/25 13:29:22.367
• [4.251 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 07/19/25 13:29:22.377
  I0719 13:29:22.377603 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename projected @ 07/19/25 13:29:22.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:29:22.392
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:29:22.394
  STEP: Creating secret with name projected-secret-test-372a4377-97a6-44fb-a2e0-48827283d5a5 @ 07/19/25 13:29:22.397
  STEP: Creating a pod to test consume secrets @ 07/19/25 13:29:22.404
  E0719 13:29:22.701887      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:29:23.702036      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:29:24.702817      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:29:25.703604      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/19/25 13:29:26.432
  I0719 13:29:26.435952 21 output.go:207] Trying to get logs from node ip-172-31-42-177 pod pod-projected-secrets-1ad479d1-e439-4549-bc30-061e291ca87e container secret-volume-test: <nil>
  STEP: delete the pod @ 07/19/25 13:29:26.448
  I0719 13:29:26.469301 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3854" for this suite. @ 07/19/25 13:29:26.473
• [4.103 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2244
  STEP: Creating a kubernetes client @ 07/19/25 13:29:26.481
  I0719 13:29:26.481753 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename services @ 07/19/25 13:29:26.482
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:29:26.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:29:26.501
  STEP: creating service in namespace services-3569 @ 07/19/25 13:29:26.504
  STEP: creating service affinity-nodeport-transition in namespace services-3569 @ 07/19/25 13:29:26.504
  I0719 13:29:26.538185 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0719 13:29:26.703866      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:29:27.704000      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:29:28.566736 21 resource.go:361] Creating new exec pod
  E0719 13:29:28.704617      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:29:29.704646      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:29:30.600319 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-3569 exec execpod-affinitysflfm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I0719 13:29:30.690337 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition (10.152.183.144) 80 port [tcp/http] succeeded!\n"
  I0719 13:29:30.690404 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0719 13:29:30.690495 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-3569 exec execpod-affinitysflfm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.144 80'
  E0719 13:29:30.704845      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:29:30.770563 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.144 80\nConnection to 10.152.183.144 80 port [tcp/http] succeeded!\n"
  I0719 13:29:30.770602 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0719 13:29:30.770694 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-3569 exec execpod-affinitysflfm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.42.177 32165'
  I0719 13:29:30.857592 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.42.177 32165\nConnection to 172.31.42.177 32165 port [tcp/*] succeeded!\n"
  I0719 13:29:30.857631 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0719 13:29:30.857706 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-3569 exec execpod-affinitysflfm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.6.59 32165'
  I0719 13:29:30.935610 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.6.59 32165\nConnection to 172.31.6.59 32165 port [tcp/*] succeeded!\n"
  I0719 13:29:30.935651 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0719 13:29:30.947661 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-3569 exec execpod-affinitysflfm -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://172.31.42.177:32165/ ; done'
  I0719 13:29:31.141780 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.42.177:32165/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.42.177:32165/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.42.177:32165/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.42.177:32165/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.42.177:32165/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.42.177:32165/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.42.177:32165/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.42.177:32165/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.42.177:32165/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.42.177:32165/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.42.177:32165/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.42.177:32165/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.42.177:32165/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.42.177:32165/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.42.177:32165/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.42.177:32165/\n"
  I0719 13:29:31.141833 21 builder.go:147] stdout: "\naffinity-nodeport-transition-7d57658b6c-k6mz8\naffinity-nodeport-transition-7d57658b6c-rq7kz\naffinity-nodeport-transition-7d57658b6c-k6mz8\naffinity-nodeport-transition-7d57658b6c-jkdtn\naffinity-nodeport-transition-7d57658b6c-jkdtn\naffinity-nodeport-transition-7d57658b6c-jkdtn\naffinity-nodeport-transition-7d57658b6c-jkdtn\naffinity-nodeport-transition-7d57658b6c-jkdtn\naffinity-nodeport-transition-7d57658b6c-k6mz8\naffinity-nodeport-transition-7d57658b6c-rq7kz\naffinity-nodeport-transition-7d57658b6c-jkdtn\naffinity-nodeport-transition-7d57658b6c-jkdtn\naffinity-nodeport-transition-7d57658b6c-jkdtn\naffinity-nodeport-transition-7d57658b6c-k6mz8\naffinity-nodeport-transition-7d57658b6c-k6mz8\naffinity-nodeport-transition-7d57658b6c-rq7kz"
  I0719 13:29:31.141844 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-k6mz8
  I0719 13:29:31.141854 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-rq7kz
  I0719 13:29:31.141862 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-k6mz8
  I0719 13:29:31.141868 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-jkdtn
  I0719 13:29:31.141875 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-jkdtn
  I0719 13:29:31.141881 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-jkdtn
  I0719 13:29:31.141886 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-jkdtn
  I0719 13:29:31.141892 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-jkdtn
  I0719 13:29:31.141900 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-k6mz8
  I0719 13:29:31.141906 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-rq7kz
  I0719 13:29:31.141911 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-jkdtn
  I0719 13:29:31.141915 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-jkdtn
  I0719 13:29:31.141921 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-jkdtn
  I0719 13:29:31.141954 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-k6mz8
  I0719 13:29:31.141960 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-k6mz8
  I0719 13:29:31.141966 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-rq7kz
  I0719 13:29:31.153890 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-3569 exec execpod-affinitysflfm -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://172.31.42.177:32165/ ; done'
  I0719 13:29:31.340602 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.42.177:32165/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.42.177:32165/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.42.177:32165/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.42.177:32165/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.42.177:32165/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.42.177:32165/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.42.177:32165/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.42.177:32165/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.42.177:32165/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.42.177:32165/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.42.177:32165/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.42.177:32165/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.42.177:32165/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.42.177:32165/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.42.177:32165/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.42.177:32165/\n"
  I0719 13:29:31.340648 21 builder.go:147] stdout: "\naffinity-nodeport-transition-7d57658b6c-jkdtn\naffinity-nodeport-transition-7d57658b6c-jkdtn\naffinity-nodeport-transition-7d57658b6c-jkdtn\naffinity-nodeport-transition-7d57658b6c-jkdtn\naffinity-nodeport-transition-7d57658b6c-jkdtn\naffinity-nodeport-transition-7d57658b6c-jkdtn\naffinity-nodeport-transition-7d57658b6c-jkdtn\naffinity-nodeport-transition-7d57658b6c-jkdtn\naffinity-nodeport-transition-7d57658b6c-jkdtn\naffinity-nodeport-transition-7d57658b6c-jkdtn\naffinity-nodeport-transition-7d57658b6c-jkdtn\naffinity-nodeport-transition-7d57658b6c-jkdtn\naffinity-nodeport-transition-7d57658b6c-jkdtn\naffinity-nodeport-transition-7d57658b6c-jkdtn\naffinity-nodeport-transition-7d57658b6c-jkdtn\naffinity-nodeport-transition-7d57658b6c-jkdtn"
  I0719 13:29:31.340664 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-jkdtn
  I0719 13:29:31.340688 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-jkdtn
  I0719 13:29:31.340695 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-jkdtn
  I0719 13:29:31.340700 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-jkdtn
  I0719 13:29:31.340705 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-jkdtn
  I0719 13:29:31.340710 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-jkdtn
  I0719 13:29:31.340720 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-jkdtn
  I0719 13:29:31.340726 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-jkdtn
  I0719 13:29:31.340733 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-jkdtn
  I0719 13:29:31.340742 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-jkdtn
  I0719 13:29:31.340747 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-jkdtn
  I0719 13:29:31.340760 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-jkdtn
  I0719 13:29:31.340768 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-jkdtn
  I0719 13:29:31.340773 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-jkdtn
  I0719 13:29:31.340778 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-jkdtn
  I0719 13:29:31.340783 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-jkdtn
  I0719 13:29:31.340850 21 service.go:4352] Cleaning up the exec pod
  I0719 13:29:31.410065 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3569" for this suite. @ 07/19/25 13:29:31.415
• [4.942 seconds]
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 07/19/25 13:29:31.423
  I0719 13:29:31.423833 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename deployment @ 07/19/25 13:29:31.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:29:31.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:29:31.439
  I0719 13:29:31.442369 21 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0719 13:29:31.454680 21 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  E0719 13:29:31.704965      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:29:32.705087      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:29:33.705300      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:29:34.705407      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:29:35.706274      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:29:36.459802 21 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/19/25 13:29:36.459
  I0719 13:29:36.459872 21 deployment.go:769] Creating deployment "test-rolling-update-deployment"
  I0719 13:29:36.466444 21 deployment.go:775] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0719 13:29:36.476323 21 deployment.go:223] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E0719 13:29:36.706588      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:29:37.706679      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:29:38.486649 21 deployment.go:779] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0719 13:29:38.491626 21 deployment.go:784] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0719 13:29:38.504833 21 deployment.go:632] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6138",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fe50f4a5-4d3d-4e10-835c-49756770d8c0",
      ResourceVersion: (string) (len=5) "37712",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888528576,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888528576,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888528577,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888528576,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888528576,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888528577,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888528576,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-6ff565599d\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0719 13:29:38.510608 21 deployment.go:40] New ReplicaSet "test-rolling-update-deployment-6ff565599d" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6138",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f9ccd38b-fcaf-467e-af6a-5b352010162d",
      ResourceVersion: (string) (len=5) "37701",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888528576,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "fe50f4a5-4d3d-4e10-835c-49756770d8c0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888528576,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 65 35 30 66 34  61 35 2d 34 64 33 64 2d  |\"fe50f4a5-4d3d-|
              00000120  34 65 31 30 2d 38 33 35  63 2d 34 39 37 35 36 37  |4e10-835c-497567|
              00000130  37 30 64 38 63 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |70d8c0\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888528577,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d",
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0719 13:29:38.511144 21 deployment.go:45] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0719 13:29:38.511332 21 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6138",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "515d90d7-ba60-42cc-9d2c-5067f2658ba8",
      ResourceVersion: (string) (len=5) "37711",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888528571,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "fe50f4a5-4d3d-4e10-835c-49756770d8c0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888528571,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888528577,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 66 65 35 30 66 34 61  |"uid\":\"fe50f4a|
              000000b0  35 2d 34 64 33 64 2d 34  65 31 30 2d 38 33 35 63  |5-4d3d-4e10-835c|
              000000c0  2d 34 39 37 35 36 37 37  30 64 38 63 30 5c 22 7d  |-49756770d8c0\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888528577,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0719 13:29:38.516715 21 deployment.go:68] Pod "test-rolling-update-deployment-6ff565599d-bcnmq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-6ff565599d-bcnmq",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-6ff565599d-",
      Namespace: (string) (len=15) "deployment-6138",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3e691657-daab-40da-876f-6ab472b70c0a",
      ResourceVersion: (string) (len=5) "37700",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888528576,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
          UID: (types.UID) (len=36) "f9ccd38b-fcaf-467e-af6a-5b352010162d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888528576,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 39  63 63 64 33 38 62 2d 66  |d\":\"f9ccd38b-f|
              00000090  63 61 66 2d 34 36 37 65  2d 61 66 36 61 2d 35 62  |caf-467e-af6a-5b|
              000000a0  33 35 32 30 31 30 31 36  32 64 5c 22 7d 22 3a 7b  |352010162d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888528577,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 30  36 2e 32 30 38 5c 22 7d  |2.168.206.208\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dkkcq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dkkcq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-6-59",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888528577,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888528576,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888528577,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888528577,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63888528576,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.6.59",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.6.59"
        }
      },
      PodIP: (string) (len=15) "192.168.206.208",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.206.208"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63888528576,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63888528577,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://57fc9b3246bda2fb51b6a5f0c18844d2570188c3ca9bbd90244685bdf36c8237",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-dkkcq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0719 13:29:38.517899 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6138" for this suite. @ 07/19/25 13:29:38.524
• [7.111 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 07/19/25 13:29:38.534
  I0719 13:29:38.534750 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/19/25 13:29:38.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:29:38.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:29:38.55
  I0719 13:29:38.552517 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  E0719 13:29:38.707722      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:29:39.708194      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:29:40.708712      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:29:41.709032      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:29:42.710020      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:29:43.711085      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:29:44.711908      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:29:44.778862 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1650" for this suite. @ 07/19/25 13:29:44.785
• [6.260 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 07/19/25 13:29:44.794
  I0719 13:29:44.794895 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename webhook @ 07/19/25 13:29:44.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:29:44.807
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:29:44.81
  STEP: Setting up server cert @ 07/19/25 13:29:44.836
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/19/25 13:29:45.221
  STEP: Deploying the webhook pod @ 07/19/25 13:29:45.228
  STEP: Wait for the deployment to be ready @ 07/19/25 13:29:45.244
  I0719 13:29:45.254546 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0719 13:29:45.711979      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:29:46.712106      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/19/25 13:29:47.27
  STEP: Verifying the service has paired with the endpoint @ 07/19/25 13:29:47.292
  E0719 13:29:47.713092      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:29:48.292610 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 07/19/25 13:29:48.299
  STEP: create a pod that should be denied by the webhook @ 07/19/25 13:29:48.313
  STEP: create a pod that causes the webhook to hang @ 07/19/25 13:29:48.329
  E0719 13:29:48.713209      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:29:49.713331      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:29:50.713575      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:29:51.713761      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:29:52.713943      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:29:53.714038      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:29:54.714237      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:29:55.714334      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:29:56.714591      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:29:57.714801      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create a configmap that should be denied by the webhook @ 07/19/25 13:29:58.337
  STEP: create a configmap that should be admitted by the webhook @ 07/19/25 13:29:58.369
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 07/19/25 13:29:58.38
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 07/19/25 13:29:58.394
  STEP: create a namespace that bypass the webhook @ 07/19/25 13:29:58.4
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 07/19/25 13:29:58.41
  I0719 13:29:58.476574 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3057" for this suite. @ 07/19/25 13:29:58.483
  STEP: Destroying namespace "webhook-markers-7502" for this suite. @ 07/19/25 13:29:58.493
  STEP: Destroying namespace "exempted-namespace-4181" for this suite. @ 07/19/25 13:29:58.5
• [13.712 seconds]
------------------------------
S
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1049
  STEP: Creating a kubernetes client @ 07/19/25 13:29:58.507
  I0719 13:29:58.507425 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename statefulset @ 07/19/25 13:29:58.507
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:29:58.519
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:29:58.522
  STEP: Creating service test in namespace statefulset-9228 @ 07/19/25 13:29:58.524
  STEP: Creating statefulset ss in namespace statefulset-9228 @ 07/19/25 13:29:58.536
  I0719 13:29:58.550480 21 wait.go:44] Found 0 stateful pods, waiting for 1
  E0719 13:29:58.715836      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:29:59.716660      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:30:00.717575      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:30:01.717642      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:30:02.717767      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:30:03.717839      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:30:04.717939      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:30:05.718547      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:30:06.719547      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:30:07.719838      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:30:08.549615 21 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 07/19/25 13:30:08.557
  STEP: Getting /status @ 07/19/25 13:30:08.564
  I0719 13:30:08.568805 21 statefulset.go:1085] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 07/19/25 13:30:08.568
  I0719 13:30:08.581126 21 statefulset.go:1105] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 07/19/25 13:30:08.581
  I0719 13:30:08.582605 21 statefulset.go:1133] Observed &StatefulSet event: ADDED
  I0719 13:30:08.582630 21 statefulset.go:1126] Found Statefulset ss in namespace statefulset-9228 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0719 13:30:08.582640 21 statefulset.go:1137] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 07/19/25 13:30:08.582
  I0719 13:30:08.582662 21 statefulset.go:1141] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0719 13:30:08.590303 21 statefulset.go:1145] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 07/19/25 13:30:08.59
  I0719 13:30:08.591653 21 statefulset.go:1170] Observed &StatefulSet event: ADDED
  I0719 13:30:08.591705 21 statefulset.go:138] Deleting all statefulset in ns statefulset-9228
  I0719 13:30:08.596655 21 rest.go:153] Scaling statefulset ss to 0
  E0719 13:30:08.720946      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:30:09.721079      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:30:10.721177      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:30:11.721383      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:30:12.721499      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:30:13.722586      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:30:14.722678      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:30:15.723693      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:30:16.723894      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:30:17.724130      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:30:18.613916 21 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0719 13:30:18.618661 21 rest.go:91] Deleting statefulset ss
  I0719 13:30:18.635600 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9228" for this suite. @ 07/19/25 13:30:18.641
• [20.143 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 07/19/25 13:30:18.65
  I0719 13:30:18.650552 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename container-probe @ 07/19/25 13:30:18.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:30:18.662
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:30:18.665
  STEP: Creating pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122 @ 07/19/25 13:30:18.668
  E0719 13:30:18.724863      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:30:19.725714      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/19/25 13:30:20.69
  I0719 13:30:20.694980 21 container_probe.go:1748] Initial restart count of pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 is 0
  I0719 13:30:20.703012 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:30:20.726199      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:30:21.726688      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:30:22.709594 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:30:22.727678      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:30:23.727781      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:30:24.715174 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:30:24.728288      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:30:25.728505      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:30:26.722206 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:30:26.729256      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:30:27.729469      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:30:28.727918 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:30:28.729954      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:30:29.730141      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:30:30.730642      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:30:30.734665 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:30:31.731729      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:30:32.731914      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:30:32.740839 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:30:33.732092      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:30:34.732167      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:30:34.746826 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:30:35.732523      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:30:36.732587      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:30:36.752026 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:30:37.732630      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:30:38.732819      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:30:38.759946 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:30:39.733077      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:30:40.733267      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:30:40.766272 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:30:41.733334      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:30:42.733473      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:30:42.771211 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:30:43.734249      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:30:44.734406      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:30:44.777980 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:30:45.734961      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:30:46.736046      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:30:46.783289 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:30:47.736143      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:30:48.736243      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:30:48.789095 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:30:49.737032      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:30:50.737518      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:30:50.795169 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:30:51.737610      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:30:52.738580      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:30:52.800301 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:30:53.739580      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:30:54.739692      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:30:54.805324 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:30:55.739824      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:30:56.740015      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:30:56.812433 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:30:57.740376      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:30:58.740567      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:30:58.818507 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:30:59.740636      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:31:00.740825      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:31:00.823976 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:31:01.740939      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:31:02.741137      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:31:02.831078 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:31:03.742061      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:31:04.742186      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:31:04.836547 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:31:05.742528      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:31:06.742720      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:31:06.843151 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:31:07.743115      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:31:08.743300      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:31:08.849162 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:31:09.744365      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:31:10.744477      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:31:10.855014 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:31:11.744594      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:31:12.744747      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:31:12.861745 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:31:13.745790      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:31:14.746554      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:31:14.868065 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:31:15.746657      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:31:16.747536      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:31:16.873315 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:31:17.747633      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:31:18.748545      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:31:18.879119 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:31:19.749200      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:31:20.749398      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:31:20.884240 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:31:21.749478      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:31:22.749659      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:31:22.889585 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:31:23.750619      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:31:24.750730      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:31:24.895367 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:31:25.751261      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:31:26.751482      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:31:26.901138 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:31:27.752072      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:31:28.752261      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:31:28.906493 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:31:29.752471      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:31:30.752620      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:31:30.912055 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:31:31.752776      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:31:32.752963      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:31:32.919238 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:31:33.753077      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:31:34.753180      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:31:34.924868 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:31:35.753296      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:31:36.753499      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:31:36.930748 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:31:37.754557      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:31:38.755677      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:31:38.937288 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:31:39.755707      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:31:40.756606      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:31:40.942659 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:31:41.757533      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:31:42.758554      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:31:42.949560 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:31:43.759583      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:31:44.760547      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:31:44.955123 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:31:45.760659      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:31:46.760848      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:31:46.960863 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:31:47.761676      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:31:48.761866      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:31:48.966734 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:31:49.761984      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:31:50.762172      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:31:50.972606 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:31:51.762474      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:31:52.762667      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:31:52.976762 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:31:53.763657      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:31:54.763742      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:31:54.982221 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:31:55.763908      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:31:56.764123      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:31:56.987596 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:31:57.764471      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:31:58.764490      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:31:58.992724 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:31:59.765548      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:32:00.765632      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:32:00.998818 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:32:01.766586      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:32:02.766677      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:32:03.005127 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:32:03.767546      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:32:04.767651      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:32:05.010883 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:32:05.768552      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:32:06.768642      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:32:07.016806 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:32:07.769533      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:32:08.769721      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:32:09.022417 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:32:09.770221      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:32:10.770450      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:32:11.027134 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:32:11.770543      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:32:12.770732      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:32:13.034081 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:32:13.770864      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:32:14.770989      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:32:15.039560 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:32:15.771392      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:32:16.771481      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:32:17.044247 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:32:17.771602      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:32:18.771797      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:32:19.051305 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:32:19.771917      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:32:20.772106      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:32:21.056320 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:32:21.773107      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:32:22.773220      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:32:23.062039 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:32:23.773483      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:32:24.773744      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:32:25.069205 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:32:25.774653      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:32:26.774765      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:32:27.075227 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:32:27.774963      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:32:28.775097      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:32:29.080413 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:32:29.775130      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:32:30.775216      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:32:31.086319 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:32:31.776123      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:32:32.776871      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:32:33.091737 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:32:33.776970      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:32:34.777574      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:32:35.096714 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:32:35.777846      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:32:36.778685      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:32:37.104106 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:32:37.778708      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:32:38.778819      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:32:39.110316 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:32:39.778922      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:32:40.779710      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:32:41.117199 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:32:41.779861      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:32:42.780033      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:32:43.123189 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:32:43.781058      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:32:44.781259      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:32:45.128746 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:32:45.781398      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:32:46.781480      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:32:47.135929 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:32:47.781577      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:32:48.781763      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:32:49.140910 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:32:49.782684      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:32:50.782792      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:32:51.146827 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:32:51.782964      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:32:52.783158      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:32:53.152059 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:32:53.783718      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:32:54.783783      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:32:55.157087 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:32:55.783842      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:32:56.784037      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:32:57.162854 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:32:57.784575      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:32:58.784600      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:32:59.167916 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:32:59.784683      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:33:00.784858      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:33:01.172564 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:33:01.785252      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:33:02.785476      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:33:03.178795 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:33:03.786472      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:33:04.786503      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:33:05.185380 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:33:05.786581      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:33:06.787545      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:33:07.190676 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:33:07.788113      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:33:08.788531      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:33:09.197190 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:33:09.788627      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:33:10.789546      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:33:11.202843 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:33:11.790465      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:33:12.790660      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:33:13.208500 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:33:13.791230      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:33:14.791440      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:33:15.214208 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:33:15.791557      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:33:16.791771      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:33:17.220885 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:33:17.792570      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:33:18.792678      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:33:19.225688 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:33:19.793438      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:33:20.793625      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:33:21.230903 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:33:21.793712      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:33:22.793906      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:33:23.235382 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:33:23.794549      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:33:24.794721      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:33:25.240302 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:33:25.794823      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:33:26.795057      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:33:27.245729 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:33:27.796012      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:33:28.796770      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:33:29.251139 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:33:29.797535      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:33:30.797638      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:33:31.257549 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:33:31.798147      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:33:32.798546      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:33:33.262140 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:33:33.798646      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:33:34.799545      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:33:35.267751 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:33:35.800464      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:33:36.800648      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:33:37.273986 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:33:37.801582      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:33:38.801757      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:33:39.279991 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:33:39.802633      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:33:40.802739      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:33:41.285691 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:33:41.803269      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:33:42.803488      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:33:43.290603 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:33:43.804275      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:33:44.804428      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:33:45.296275 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:33:45.805072      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:33:46.805287      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:33:47.302112 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:33:47.805502      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:33:48.805617      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:33:49.307234 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:33:49.805730      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:33:50.806689      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:33:51.313324 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:33:51.807543      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:33:52.808538      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:33:53.318784 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:33:53.809443      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:33:54.809485      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:33:55.324569 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:33:55.810213      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:33:56.810475      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:33:57.330225 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:33:57.810709      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:33:58.810892      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:33:59.336001 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:33:59.811560      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:34:00.811652      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:34:01.342211 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:34:01.811793      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:34:02.812669      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:34:03.348145 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:34:03.812702      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:34:04.812784      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:34:05.353492 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:34:05.812884      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:34:06.813071      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:34:07.359664 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:34:07.813178      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:34:08.813303      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:34:09.365202 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:34:09.813402      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:34:10.813672      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:34:11.372417 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:34:11.813857      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:34:12.813950      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:34:13.378607 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:34:13.814090      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:34:14.814233      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:34:15.385050 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:34:15.814519      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:34:16.814586      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:34:17.390087 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:34:17.815578      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:34:18.815749      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:34:19.396378 21 container_probe.go:1758] Get pod test-grpc-e708aef2-8345-4c52-9c7f-70205e14ca84 in namespace container-probe-8122
  E0719 13:34:19.815850      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:34:20.815921      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 07/19/25 13:34:21.396
  I0719 13:34:21.411772 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8122" for this suite. @ 07/19/25 13:34:21.416
• [242.776 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:79
  STEP: Creating a kubernetes client @ 07/19/25 13:34:21.427
  I0719 13:34:21.427090 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename svcaccounts @ 07/19/25 13:34:21.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:34:21.44
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:34:21.442
  E0719 13:34:21.816042      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:34:22.816107      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 07/19/25 13:34:23.478
  I0719 13:34:23.478218 21 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-4889 pod-service-account-3c3b30f9-4553-40ed-8fcd-8293347ca765 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 07/19/25 13:34:23.555
  I0719 13:34:23.555774 21 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-4889 pod-service-account-3c3b30f9-4553-40ed-8fcd-8293347ca765 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 07/19/25 13:34:23.636
  I0719 13:34:23.636589 21 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-4889 pod-service-account-3c3b30f9-4553-40ed-8fcd-8293347ca765 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0719 13:34:23.723675 21 service_accounts.go:119] Got root ca configmap in namespace "svcaccounts-4889"
  I0719 13:34:23.725636 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4889" for this suite. @ 07/19/25 13:34:23.73
• [2.312 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:401
  STEP: Creating a kubernetes client @ 07/19/25 13:34:23.738
  I0719 13:34:23.738913 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename namespaces @ 07/19/25 13:34:23.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:34:23.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:34:23.754
  STEP: Creating namespace "e2e-ns-fc6q8" @ 07/19/25 13:34:23.757
  I0719 13:34:23.768038 21 namespace.go:412] Namespace "e2e-ns-fc6q8-9967" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-fc6q8-9967" @ 07/19/25 13:34:23.768
  I0719 13:34:23.778658 21 namespace.go:435] Namespace "e2e-ns-fc6q8-9967" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-fc6q8-9967" @ 07/19/25 13:34:23.778
  I0719 13:34:23.786897 21 namespace.go:464] Namespace "e2e-ns-fc6q8-9967" has []v1.FinalizerName{"kubernetes"}
  I0719 13:34:23.786999 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0719 13:34:23.817160      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "namespaces-814" for this suite. @ 07/19/25 13:34:23.831
  STEP: Destroying namespace "e2e-ns-fc6q8-9967" for this suite. @ 07/19/25 13:34:23.841
• [0.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 07/19/25 13:34:23.85
  I0719 13:34:23.850125 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename svc-latency @ 07/19/25 13:34:23.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:34:23.863
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:34:23.867
  I0719 13:34:23.869591 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  I0719 13:34:23.884108 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0719 13:34:24.817275      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:34:25.817547      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:34:25.890771      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0719 13:34:25.891961      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0719 13:34:26.011174 21 service_latency.go:351] Created: latency-svc-ftpw7
  I0719 13:34:26.019598 21 service_latency.go:358] Got endpoints: latency-svc-ftpw7 [29.45541ms]
  I0719 13:34:26.040472 21 service_latency.go:351] Created: latency-svc-pp2tk
  I0719 13:34:26.049798 21 service_latency.go:351] Created: latency-svc-t5hmp
  I0719 13:34:26.050219 21 service_latency.go:358] Got endpoints: latency-svc-pp2tk [30.166898ms]
  I0719 13:34:26.056092 21 service_latency.go:351] Created: latency-svc-858mq
  I0719 13:34:26.056380 21 service_latency.go:358] Got endpoints: latency-svc-t5hmp [36.479506ms]
  I0719 13:34:26.063691 21 service_latency.go:358] Got endpoints: latency-svc-858mq [43.554939ms]
  I0719 13:34:26.067929 21 service_latency.go:351] Created: latency-svc-g78v8
  I0719 13:34:26.078306 21 service_latency.go:358] Got endpoints: latency-svc-g78v8 [58.104734ms]
  I0719 13:34:26.080047 21 service_latency.go:351] Created: latency-svc-k4qb4
  I0719 13:34:26.083712 21 service_latency.go:358] Got endpoints: latency-svc-k4qb4 [63.445475ms]
  I0719 13:34:26.092927 21 service_latency.go:351] Created: latency-svc-z5hmn
  I0719 13:34:26.097757 21 service_latency.go:351] Created: latency-svc-ww4n2
  I0719 13:34:26.101734 21 service_latency.go:358] Got endpoints: latency-svc-z5hmn [81.997147ms]
  I0719 13:34:26.107067 21 service_latency.go:358] Got endpoints: latency-svc-ww4n2 [86.440273ms]
  I0719 13:34:26.113829 21 service_latency.go:351] Created: latency-svc-zjp8n
  I0719 13:34:26.117447 21 service_latency.go:358] Got endpoints: latency-svc-zjp8n [96.993474ms]
  I0719 13:34:26.120361 21 service_latency.go:351] Created: latency-svc-lrgx8
  I0719 13:34:26.126359 21 service_latency.go:358] Got endpoints: latency-svc-lrgx8 [106.064118ms]
  I0719 13:34:26.220814 21 service_latency.go:351] Created: latency-svc-g4vqs
  I0719 13:34:26.222731 21 service_latency.go:351] Created: latency-svc-bzhfc
  I0719 13:34:26.225517 21 service_latency.go:351] Created: latency-svc-8jgp4
  I0719 13:34:26.225517 21 service_latency.go:351] Created: latency-svc-hqh66
  I0719 13:34:26.225583 21 service_latency.go:351] Created: latency-svc-xfdsj
  I0719 13:34:26.228221 21 service_latency.go:351] Created: latency-svc-5blrd
  I0719 13:34:26.229427 21 service_latency.go:351] Created: latency-svc-bmm9x
  I0719 13:34:26.231982 21 service_latency.go:351] Created: latency-svc-lqthg
  I0719 13:34:26.233443 21 service_latency.go:351] Created: latency-svc-cxprq
  I0719 13:34:26.233504 21 service_latency.go:351] Created: latency-svc-tjn65
  I0719 13:34:26.233864 21 service_latency.go:351] Created: latency-svc-wpnmn
  I0719 13:34:26.235506 21 service_latency.go:351] Created: latency-svc-45pr5
  I0719 13:34:26.236728 21 service_latency.go:358] Got endpoints: latency-svc-g4vqs [216.407612ms]
  I0719 13:34:26.238430 21 service_latency.go:358] Got endpoints: latency-svc-bzhfc [218.011081ms]
  I0719 13:34:26.238441 21 service_latency.go:351] Created: latency-svc-bqjkh
  I0719 13:34:26.239468 21 service_latency.go:351] Created: latency-svc-59pkt
  I0719 13:34:26.240935 21 service_latency.go:351] Created: latency-svc-gvgrn
  I0719 13:34:26.245748 21 service_latency.go:358] Got endpoints: latency-svc-8jgp4 [225.15444ms]
  I0719 13:34:26.246193 21 service_latency.go:358] Got endpoints: latency-svc-5blrd [128.720699ms]
  I0719 13:34:26.246465 21 service_latency.go:358] Got endpoints: latency-svc-hqh66 [182.46346ms]
  I0719 13:34:26.256846 21 service_latency.go:358] Got endpoints: latency-svc-wpnmn [149.74689ms]
  I0719 13:34:26.257015 21 service_latency.go:358] Got endpoints: latency-svc-xfdsj [173.281598ms]
  I0719 13:34:26.261989 21 service_latency.go:358] Got endpoints: latency-svc-lqthg [211.72069ms]
  I0719 13:34:26.262010 21 service_latency.go:358] Got endpoints: latency-svc-45pr5 [160.251524ms]
  I0719 13:34:26.262019 21 service_latency.go:358] Got endpoints: latency-svc-bmm9x [241.653881ms]
  I0719 13:34:26.265089 21 service_latency.go:358] Got endpoints: latency-svc-cxprq [186.761004ms]
  I0719 13:34:26.266877 21 service_latency.go:351] Created: latency-svc-ntdbj
  I0719 13:34:26.267427 21 service_latency.go:358] Got endpoints: latency-svc-tjn65 [246.950837ms]
  I0719 13:34:26.273405 21 service_latency.go:358] Got endpoints: latency-svc-gvgrn [253.010098ms]
  I0719 13:34:26.276877 21 service_latency.go:351] Created: latency-svc-k785z
  I0719 13:34:26.278902 21 service_latency.go:358] Got endpoints: latency-svc-bqjkh [152.510748ms]
  I0719 13:34:26.282737 21 service_latency.go:358] Got endpoints: latency-svc-59pkt [226.335136ms]
  I0719 13:34:26.285607 21 service_latency.go:358] Got endpoints: latency-svc-k785z [47.144131ms]
  I0719 13:34:26.287487 21 service_latency.go:358] Got endpoints: latency-svc-ntdbj [50.732418ms]
  I0719 13:34:26.384844 21 service_latency.go:351] Created: latency-svc-4wln2
  I0719 13:34:26.385319 21 service_latency.go:351] Created: latency-svc-zbztf
  I0719 13:34:26.390022 21 service_latency.go:351] Created: latency-svc-p6dwf
  I0719 13:34:26.390022 21 service_latency.go:351] Created: latency-svc-fmlsr
  I0719 13:34:26.390303 21 service_latency.go:351] Created: latency-svc-l9dmh
  I0719 13:34:26.391469 21 service_latency.go:351] Created: latency-svc-tr6zf
  I0719 13:34:26.391497 21 service_latency.go:351] Created: latency-svc-7rn9l
  I0719 13:34:26.391523 21 service_latency.go:351] Created: latency-svc-wxgm2
  I0719 13:34:26.391526 21 service_latency.go:351] Created: latency-svc-shbzj
  I0719 13:34:26.391538 21 service_latency.go:351] Created: latency-svc-dmlmj
  I0719 13:34:26.395566 21 service_latency.go:351] Created: latency-svc-9ndbj
  I0719 13:34:26.395654 21 service_latency.go:351] Created: latency-svc-cj6kz
  I0719 13:34:26.397042 21 service_latency.go:351] Created: latency-svc-m9xlt
  I0719 13:34:26.397042 21 service_latency.go:351] Created: latency-svc-4kllb
  I0719 13:34:26.397086 21 service_latency.go:351] Created: latency-svc-65w47
  I0719 13:34:26.397456 21 service_latency.go:358] Got endpoints: latency-svc-zbztf [140.58376ms]
  I0719 13:34:26.397652 21 service_latency.go:358] Got endpoints: latency-svc-4wln2 [118.720417ms]
  I0719 13:34:26.404434 21 service_latency.go:358] Got endpoints: latency-svc-p6dwf [139.315598ms]
  I0719 13:34:26.409076 21 service_latency.go:358] Got endpoints: latency-svc-fmlsr [147.013532ms]
  I0719 13:34:26.411326 21 service_latency.go:358] Got endpoints: latency-svc-wxgm2 [143.879038ms]
  I0719 13:34:26.413854 21 service_latency.go:358] Got endpoints: latency-svc-dmlmj [168.076028ms]
  I0719 13:34:26.419181 21 service_latency.go:358] Got endpoints: latency-svc-7rn9l [156.969843ms]
  I0719 13:34:26.421868 21 service_latency.go:358] Got endpoints: latency-svc-shbzj [175.649731ms]
  I0719 13:34:26.423660 21 service_latency.go:358] Got endpoints: latency-svc-cj6kz [150.229389ms]
  I0719 13:34:26.423689 21 service_latency.go:358] Got endpoints: latency-svc-tr6zf [177.153362ms]
  I0719 13:34:26.426406 21 service_latency.go:358] Got endpoints: latency-svc-l9dmh [138.89209ms]
  I0719 13:34:26.438565 21 service_latency.go:351] Created: latency-svc-qv6qp
  I0719 13:34:26.441203 21 service_latency.go:351] Created: latency-svc-kxv9d
  I0719 13:34:26.451719 21 service_latency.go:351] Created: latency-svc-zf4pv
  I0719 13:34:26.455666 21 service_latency.go:351] Created: latency-svc-9jztc
  I0719 13:34:26.464113 21 service_latency.go:351] Created: latency-svc-2tn2m
  I0719 13:34:26.469518 21 service_latency.go:358] Got endpoints: latency-svc-9ndbj [212.353551ms]
  I0719 13:34:26.475436 21 service_latency.go:351] Created: latency-svc-hx4cc
  I0719 13:34:26.483036 21 service_latency.go:351] Created: latency-svc-rhvgz
  I0719 13:34:26.491319 21 service_latency.go:351] Created: latency-svc-lqz5m
  I0719 13:34:26.500401 21 service_latency.go:351] Created: latency-svc-4n9tw
  I0719 13:34:26.507500 21 service_latency.go:351] Created: latency-svc-4gd76
  I0719 13:34:26.513974 21 service_latency.go:351] Created: latency-svc-lt7q6
  I0719 13:34:26.522842 21 service_latency.go:358] Got endpoints: latency-svc-m9xlt [240.075724ms]
  I0719 13:34:26.524207 21 service_latency.go:351] Created: latency-svc-xsbbw
  I0719 13:34:26.540308 21 service_latency.go:351] Created: latency-svc-sftvx
  I0719 13:34:26.572609 21 service_latency.go:358] Got endpoints: latency-svc-65w47 [310.478899ms]
  I0719 13:34:26.588367 21 service_latency.go:351] Created: latency-svc-qbv56
  I0719 13:34:26.620520 21 service_latency.go:358] Got endpoints: latency-svc-4kllb [334.888578ms]
  I0719 13:34:26.637955 21 service_latency.go:351] Created: latency-svc-q9gpx
  I0719 13:34:26.672321 21 service_latency.go:358] Got endpoints: latency-svc-qv6qp [274.642844ms]
  I0719 13:34:26.691072 21 service_latency.go:351] Created: latency-svc-kvlls
  I0719 13:34:26.721787 21 service_latency.go:358] Got endpoints: latency-svc-kxv9d [324.309184ms]
  I0719 13:34:26.739185 21 service_latency.go:351] Created: latency-svc-cl88v
  I0719 13:34:26.768993 21 service_latency.go:358] Got endpoints: latency-svc-zf4pv [364.534381ms]
  I0719 13:34:26.785327 21 service_latency.go:351] Created: latency-svc-8pwqh
  E0719 13:34:26.817829      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:34:26.821731 21 service_latency.go:358] Got endpoints: latency-svc-9jztc [412.623419ms]
  I0719 13:34:26.841481 21 service_latency.go:351] Created: latency-svc-994mf
  I0719 13:34:26.871198 21 service_latency.go:358] Got endpoints: latency-svc-2tn2m [459.825648ms]
  I0719 13:34:26.888162 21 service_latency.go:351] Created: latency-svc-ccltk
  I0719 13:34:26.920209 21 service_latency.go:358] Got endpoints: latency-svc-hx4cc [506.33178ms]
  I0719 13:34:26.939961 21 service_latency.go:351] Created: latency-svc-b89vh
  I0719 13:34:26.972912 21 service_latency.go:358] Got endpoints: latency-svc-rhvgz [553.701679ms]
  I0719 13:34:26.990574 21 service_latency.go:351] Created: latency-svc-6mkk4
  I0719 13:34:27.021799 21 service_latency.go:358] Got endpoints: latency-svc-lqz5m [599.903697ms]
  I0719 13:34:27.042860 21 service_latency.go:351] Created: latency-svc-kdcmh
  I0719 13:34:27.068536 21 service_latency.go:358] Got endpoints: latency-svc-4n9tw [644.85402ms]
  I0719 13:34:27.087464 21 service_latency.go:351] Created: latency-svc-c2d7d
  I0719 13:34:27.119639 21 service_latency.go:358] Got endpoints: latency-svc-4gd76 [695.930155ms]
  I0719 13:34:27.137586 21 service_latency.go:351] Created: latency-svc-p2xm9
  I0719 13:34:27.171110 21 service_latency.go:358] Got endpoints: latency-svc-lt7q6 [744.677935ms]
  I0719 13:34:27.187269 21 service_latency.go:351] Created: latency-svc-qh6ht
  I0719 13:34:27.221633 21 service_latency.go:358] Got endpoints: latency-svc-xsbbw [752.082095ms]
  I0719 13:34:27.238384 21 service_latency.go:351] Created: latency-svc-6bpxw
  I0719 13:34:27.271642 21 service_latency.go:358] Got endpoints: latency-svc-sftvx [748.765514ms]
  I0719 13:34:27.290912 21 service_latency.go:351] Created: latency-svc-fvth5
  I0719 13:34:27.321835 21 service_latency.go:358] Got endpoints: latency-svc-qbv56 [749.192629ms]
  I0719 13:34:27.339188 21 service_latency.go:351] Created: latency-svc-g4cdw
  I0719 13:34:27.371634 21 service_latency.go:358] Got endpoints: latency-svc-q9gpx [751.083392ms]
  I0719 13:34:27.388571 21 service_latency.go:351] Created: latency-svc-8krfn
  I0719 13:34:27.421027 21 service_latency.go:358] Got endpoints: latency-svc-kvlls [748.658303ms]
  I0719 13:34:27.439554 21 service_latency.go:351] Created: latency-svc-nwlz6
  I0719 13:34:27.471002 21 service_latency.go:358] Got endpoints: latency-svc-cl88v [749.184126ms]
  I0719 13:34:27.488211 21 service_latency.go:351] Created: latency-svc-h9q94
  I0719 13:34:27.521174 21 service_latency.go:358] Got endpoints: latency-svc-8pwqh [752.144486ms]
  I0719 13:34:27.538431 21 service_latency.go:351] Created: latency-svc-qr9l2
  I0719 13:34:27.568686 21 service_latency.go:358] Got endpoints: latency-svc-994mf [746.922768ms]
  I0719 13:34:27.585307 21 service_latency.go:351] Created: latency-svc-cgj2s
  I0719 13:34:27.621300 21 service_latency.go:358] Got endpoints: latency-svc-ccltk [750.068489ms]
  I0719 13:34:27.639588 21 service_latency.go:351] Created: latency-svc-5wfkn
  I0719 13:34:27.671200 21 service_latency.go:358] Got endpoints: latency-svc-b89vh [750.952632ms]
  I0719 13:34:27.688834 21 service_latency.go:351] Created: latency-svc-sbpm4
  I0719 13:34:27.720669 21 service_latency.go:358] Got endpoints: latency-svc-6mkk4 [747.696606ms]
  I0719 13:34:27.739452 21 service_latency.go:351] Created: latency-svc-dhqqq
  I0719 13:34:27.772129 21 service_latency.go:358] Got endpoints: latency-svc-kdcmh [750.191371ms]
  I0719 13:34:27.790021 21 service_latency.go:351] Created: latency-svc-flkrz
  E0719 13:34:27.818690      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:34:27.822293 21 service_latency.go:358] Got endpoints: latency-svc-c2d7d [753.72439ms]
  I0719 13:34:27.840825 21 service_latency.go:351] Created: latency-svc-68rd6
  I0719 13:34:27.869767 21 service_latency.go:358] Got endpoints: latency-svc-p2xm9 [750.090385ms]
  I0719 13:34:27.887324 21 service_latency.go:351] Created: latency-svc-4zn42
  I0719 13:34:27.924112 21 service_latency.go:358] Got endpoints: latency-svc-qh6ht [752.967665ms]
  I0719 13:34:27.941855 21 service_latency.go:351] Created: latency-svc-qvrrk
  I0719 13:34:27.975321 21 service_latency.go:358] Got endpoints: latency-svc-6bpxw [753.648184ms]
  I0719 13:34:27.991578 21 service_latency.go:351] Created: latency-svc-nc8bs
  I0719 13:34:28.026791 21 service_latency.go:358] Got endpoints: latency-svc-fvth5 [755.107437ms]
  I0719 13:34:28.045095 21 service_latency.go:351] Created: latency-svc-6lwq7
  I0719 13:34:28.071393 21 service_latency.go:358] Got endpoints: latency-svc-g4cdw [749.519748ms]
  I0719 13:34:28.088909 21 service_latency.go:351] Created: latency-svc-7kbcd
  I0719 13:34:28.121580 21 service_latency.go:358] Got endpoints: latency-svc-8krfn [749.918252ms]
  I0719 13:34:28.139593 21 service_latency.go:351] Created: latency-svc-srf9v
  I0719 13:34:28.170571 21 service_latency.go:358] Got endpoints: latency-svc-nwlz6 [749.509831ms]
  I0719 13:34:28.186172 21 service_latency.go:351] Created: latency-svc-b7vvk
  I0719 13:34:28.223129 21 service_latency.go:358] Got endpoints: latency-svc-h9q94 [752.091117ms]
  I0719 13:34:28.239133 21 service_latency.go:351] Created: latency-svc-fj5r7
  I0719 13:34:28.271994 21 service_latency.go:358] Got endpoints: latency-svc-qr9l2 [750.769772ms]
  I0719 13:34:28.290505 21 service_latency.go:351] Created: latency-svc-pfbqd
  I0719 13:34:28.320004 21 service_latency.go:358] Got endpoints: latency-svc-cgj2s [751.282552ms]
  I0719 13:34:28.338552 21 service_latency.go:351] Created: latency-svc-b2qq4
  I0719 13:34:28.371289 21 service_latency.go:358] Got endpoints: latency-svc-5wfkn [749.899783ms]
  I0719 13:34:28.390321 21 service_latency.go:351] Created: latency-svc-hn454
  I0719 13:34:28.420935 21 service_latency.go:358] Got endpoints: latency-svc-sbpm4 [749.698608ms]
  I0719 13:34:28.438862 21 service_latency.go:351] Created: latency-svc-ncpgc
  I0719 13:34:28.471745 21 service_latency.go:358] Got endpoints: latency-svc-dhqqq [751.007502ms]
  I0719 13:34:28.490445 21 service_latency.go:351] Created: latency-svc-lpddf
  I0719 13:34:28.521864 21 service_latency.go:358] Got endpoints: latency-svc-flkrz [749.674773ms]
  I0719 13:34:28.538417 21 service_latency.go:351] Created: latency-svc-hdx5k
  I0719 13:34:28.569080 21 service_latency.go:358] Got endpoints: latency-svc-68rd6 [746.6985ms]
  I0719 13:34:28.587368 21 service_latency.go:351] Created: latency-svc-qb4mw
  I0719 13:34:28.620917 21 service_latency.go:358] Got endpoints: latency-svc-4zn42 [751.112221ms]
  I0719 13:34:28.639011 21 service_latency.go:351] Created: latency-svc-72pwq
  I0719 13:34:28.670639 21 service_latency.go:358] Got endpoints: latency-svc-qvrrk [746.411737ms]
  I0719 13:34:28.689527 21 service_latency.go:351] Created: latency-svc-fzbp7
  I0719 13:34:28.718619 21 service_latency.go:358] Got endpoints: latency-svc-nc8bs [743.237809ms]
  I0719 13:34:28.736937 21 service_latency.go:351] Created: latency-svc-8btwr
  I0719 13:34:28.772201 21 service_latency.go:358] Got endpoints: latency-svc-6lwq7 [745.374326ms]
  I0719 13:34:28.790321 21 service_latency.go:351] Created: latency-svc-jgjhj
  E0719 13:34:28.819721      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:34:28.821780 21 service_latency.go:358] Got endpoints: latency-svc-7kbcd [750.354925ms]
  I0719 13:34:28.840266 21 service_latency.go:351] Created: latency-svc-9nnl7
  I0719 13:34:28.870785 21 service_latency.go:358] Got endpoints: latency-svc-srf9v [749.172705ms]
  I0719 13:34:28.888064 21 service_latency.go:351] Created: latency-svc-4n4js
  I0719 13:34:28.918964 21 service_latency.go:358] Got endpoints: latency-svc-b7vvk [748.349709ms]
  I0719 13:34:28.936028 21 service_latency.go:351] Created: latency-svc-rzd2h
  I0719 13:34:28.971996 21 service_latency.go:358] Got endpoints: latency-svc-fj5r7 [748.822508ms]
  I0719 13:34:28.991198 21 service_latency.go:351] Created: latency-svc-crdrw
  I0719 13:34:29.021403 21 service_latency.go:358] Got endpoints: latency-svc-pfbqd [749.369682ms]
  I0719 13:34:29.038945 21 service_latency.go:351] Created: latency-svc-dhx95
  I0719 13:34:29.070621 21 service_latency.go:358] Got endpoints: latency-svc-b2qq4 [750.571102ms]
  I0719 13:34:29.088619 21 service_latency.go:351] Created: latency-svc-4prbs
  I0719 13:34:29.119934 21 service_latency.go:358] Got endpoints: latency-svc-hn454 [748.464705ms]
  I0719 13:34:29.137797 21 service_latency.go:351] Created: latency-svc-4l2wg
  I0719 13:34:29.169774 21 service_latency.go:358] Got endpoints: latency-svc-ncpgc [748.792386ms]
  I0719 13:34:29.187133 21 service_latency.go:351] Created: latency-svc-qgjs6
  I0719 13:34:29.220021 21 service_latency.go:358] Got endpoints: latency-svc-lpddf [748.237764ms]
  I0719 13:34:29.238189 21 service_latency.go:351] Created: latency-svc-bs29r
  I0719 13:34:29.270239 21 service_latency.go:358] Got endpoints: latency-svc-hdx5k [748.339267ms]
  I0719 13:34:29.289896 21 service_latency.go:351] Created: latency-svc-gljlh
  I0719 13:34:29.319923 21 service_latency.go:358] Got endpoints: latency-svc-qb4mw [750.804421ms]
  I0719 13:34:29.338988 21 service_latency.go:351] Created: latency-svc-kfl48
  I0719 13:34:29.371462 21 service_latency.go:358] Got endpoints: latency-svc-72pwq [750.510688ms]
  I0719 13:34:29.389539 21 service_latency.go:351] Created: latency-svc-x4gvf
  I0719 13:34:29.420324 21 service_latency.go:358] Got endpoints: latency-svc-fzbp7 [749.530721ms]
  I0719 13:34:29.439647 21 service_latency.go:351] Created: latency-svc-qtz7v
  I0719 13:34:29.470221 21 service_latency.go:358] Got endpoints: latency-svc-8btwr [751.565291ms]
  I0719 13:34:29.488455 21 service_latency.go:351] Created: latency-svc-h9p62
  I0719 13:34:29.520680 21 service_latency.go:358] Got endpoints: latency-svc-jgjhj [748.444608ms]
  I0719 13:34:29.541399 21 service_latency.go:351] Created: latency-svc-jzm9j
  I0719 13:34:29.571805 21 service_latency.go:358] Got endpoints: latency-svc-9nnl7 [749.992581ms]
  I0719 13:34:29.589229 21 service_latency.go:351] Created: latency-svc-bkgcg
  I0719 13:34:29.621094 21 service_latency.go:358] Got endpoints: latency-svc-4n4js [750.272138ms]
  I0719 13:34:29.638015 21 service_latency.go:351] Created: latency-svc-78sf9
  I0719 13:34:29.672294 21 service_latency.go:358] Got endpoints: latency-svc-rzd2h [753.295682ms]
  I0719 13:34:29.691949 21 service_latency.go:351] Created: latency-svc-dzrhv
  I0719 13:34:29.721073 21 service_latency.go:358] Got endpoints: latency-svc-crdrw [749.030834ms]
  I0719 13:34:29.737999 21 service_latency.go:351] Created: latency-svc-hl547
  I0719 13:34:29.771141 21 service_latency.go:358] Got endpoints: latency-svc-dhx95 [749.704179ms]
  I0719 13:34:29.790676 21 service_latency.go:351] Created: latency-svc-bxvzb
  E0719 13:34:29.819812      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:34:29.821376 21 service_latency.go:358] Got endpoints: latency-svc-4prbs [750.72835ms]
  I0719 13:34:29.840413 21 service_latency.go:351] Created: latency-svc-77t86
  I0719 13:34:29.868215 21 service_latency.go:358] Got endpoints: latency-svc-4l2wg [748.24572ms]
  I0719 13:34:29.889689 21 service_latency.go:351] Created: latency-svc-sc2sv
  I0719 13:34:29.921772 21 service_latency.go:358] Got endpoints: latency-svc-qgjs6 [751.961698ms]
  I0719 13:34:29.939829 21 service_latency.go:351] Created: latency-svc-t8m6f
  I0719 13:34:29.971555 21 service_latency.go:358] Got endpoints: latency-svc-bs29r [751.50307ms]
  I0719 13:34:29.989712 21 service_latency.go:351] Created: latency-svc-q9w9t
  I0719 13:34:30.022241 21 service_latency.go:358] Got endpoints: latency-svc-gljlh [751.910146ms]
  I0719 13:34:30.040541 21 service_latency.go:351] Created: latency-svc-xk59g
  I0719 13:34:30.070498 21 service_latency.go:358] Got endpoints: latency-svc-kfl48 [750.510405ms]
  I0719 13:34:30.089760 21 service_latency.go:351] Created: latency-svc-dc6h8
  I0719 13:34:30.122661 21 service_latency.go:358] Got endpoints: latency-svc-x4gvf [751.156279ms]
  I0719 13:34:30.141222 21 service_latency.go:351] Created: latency-svc-hsvfj
  I0719 13:34:30.171072 21 service_latency.go:358] Got endpoints: latency-svc-qtz7v [750.691398ms]
  I0719 13:34:30.189777 21 service_latency.go:351] Created: latency-svc-2vg2r
  I0719 13:34:30.220978 21 service_latency.go:358] Got endpoints: latency-svc-h9p62 [750.72413ms]
  I0719 13:34:30.237276 21 service_latency.go:351] Created: latency-svc-46blq
  I0719 13:34:30.271481 21 service_latency.go:358] Got endpoints: latency-svc-jzm9j [750.770893ms]
  I0719 13:34:30.289551 21 service_latency.go:351] Created: latency-svc-46q57
  I0719 13:34:30.320717 21 service_latency.go:358] Got endpoints: latency-svc-bkgcg [748.866526ms]
  I0719 13:34:30.338906 21 service_latency.go:351] Created: latency-svc-s2dz5
  I0719 13:34:30.371050 21 service_latency.go:358] Got endpoints: latency-svc-78sf9 [749.915438ms]
  I0719 13:34:30.389996 21 service_latency.go:351] Created: latency-svc-jwkqs
  I0719 13:34:30.421927 21 service_latency.go:358] Got endpoints: latency-svc-dzrhv [749.597391ms]
  I0719 13:34:30.441595 21 service_latency.go:351] Created: latency-svc-2ftpz
  I0719 13:34:30.471512 21 service_latency.go:358] Got endpoints: latency-svc-hl547 [750.312655ms]
  I0719 13:34:30.490421 21 service_latency.go:351] Created: latency-svc-cl76b
  I0719 13:34:30.519432 21 service_latency.go:358] Got endpoints: latency-svc-bxvzb [748.252853ms]
  I0719 13:34:30.536330 21 service_latency.go:351] Created: latency-svc-6t6x8
  I0719 13:34:30.572931 21 service_latency.go:358] Got endpoints: latency-svc-77t86 [751.52385ms]
  I0719 13:34:30.593104 21 service_latency.go:351] Created: latency-svc-twv7h
  I0719 13:34:30.622325 21 service_latency.go:358] Got endpoints: latency-svc-sc2sv [754.073155ms]
  I0719 13:34:30.640921 21 service_latency.go:351] Created: latency-svc-bgtjh
  I0719 13:34:30.673493 21 service_latency.go:358] Got endpoints: latency-svc-t8m6f [751.688136ms]
  I0719 13:34:30.692863 21 service_latency.go:351] Created: latency-svc-x2x82
  I0719 13:34:30.719698 21 service_latency.go:358] Got endpoints: latency-svc-q9w9t [748.102848ms]
  I0719 13:34:30.738453 21 service_latency.go:351] Created: latency-svc-d27pc
  I0719 13:34:30.768712 21 service_latency.go:358] Got endpoints: latency-svc-xk59g [746.424867ms]
  I0719 13:34:30.787835 21 service_latency.go:351] Created: latency-svc-294gc
  E0719 13:34:30.819952      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:34:30.823422 21 service_latency.go:358] Got endpoints: latency-svc-dc6h8 [752.856158ms]
  I0719 13:34:30.841916 21 service_latency.go:351] Created: latency-svc-zdqpg
  I0719 13:34:30.871570 21 service_latency.go:358] Got endpoints: latency-svc-hsvfj [748.878408ms]
  I0719 13:34:30.891681 21 service_latency.go:351] Created: latency-svc-jrlpw
  I0719 13:34:30.922131 21 service_latency.go:358] Got endpoints: latency-svc-2vg2r [751.021822ms]
  I0719 13:34:30.941052 21 service_latency.go:351] Created: latency-svc-p6txd
  I0719 13:34:30.969834 21 service_latency.go:358] Got endpoints: latency-svc-46blq [748.820056ms]
  I0719 13:34:30.987321 21 service_latency.go:351] Created: latency-svc-gg9n4
  I0719 13:34:31.021834 21 service_latency.go:358] Got endpoints: latency-svc-46q57 [750.313213ms]
  I0719 13:34:31.042537 21 service_latency.go:351] Created: latency-svc-97jzm
  I0719 13:34:31.071884 21 service_latency.go:358] Got endpoints: latency-svc-s2dz5 [751.130581ms]
  I0719 13:34:31.089236 21 service_latency.go:351] Created: latency-svc-nn54t
  I0719 13:34:31.122734 21 service_latency.go:358] Got endpoints: latency-svc-jwkqs [751.595676ms]
  I0719 13:34:31.139430 21 service_latency.go:351] Created: latency-svc-s66mz
  I0719 13:34:31.171448 21 service_latency.go:358] Got endpoints: latency-svc-2ftpz [749.231377ms]
  I0719 13:34:31.191305 21 service_latency.go:351] Created: latency-svc-zjprn
  I0719 13:34:31.221277 21 service_latency.go:358] Got endpoints: latency-svc-cl76b [749.727659ms]
  I0719 13:34:31.239680 21 service_latency.go:351] Created: latency-svc-rtgmq
  I0719 13:34:31.271550 21 service_latency.go:358] Got endpoints: latency-svc-6t6x8 [752.082053ms]
  I0719 13:34:31.290224 21 service_latency.go:351] Created: latency-svc-qbskb
  I0719 13:34:31.320912 21 service_latency.go:358] Got endpoints: latency-svc-twv7h [747.79131ms]
  I0719 13:34:31.338227 21 service_latency.go:351] Created: latency-svc-2kghc
  I0719 13:34:31.370723 21 service_latency.go:358] Got endpoints: latency-svc-bgtjh [748.339504ms]
  I0719 13:34:31.390199 21 service_latency.go:351] Created: latency-svc-fqqlv
  I0719 13:34:31.422153 21 service_latency.go:358] Got endpoints: latency-svc-x2x82 [748.620535ms]
  I0719 13:34:31.441213 21 service_latency.go:351] Created: latency-svc-shqjm
  I0719 13:34:31.471520 21 service_latency.go:358] Got endpoints: latency-svc-d27pc [751.776536ms]
  I0719 13:34:31.491101 21 service_latency.go:351] Created: latency-svc-2qp4m
  I0719 13:34:31.520064 21 service_latency.go:358] Got endpoints: latency-svc-294gc [751.310176ms]
  I0719 13:34:31.539400 21 service_latency.go:351] Created: latency-svc-hzhg4
  I0719 13:34:31.572096 21 service_latency.go:358] Got endpoints: latency-svc-zdqpg [748.637972ms]
  I0719 13:34:31.589761 21 service_latency.go:351] Created: latency-svc-gd5hc
  I0719 13:34:31.620328 21 service_latency.go:358] Got endpoints: latency-svc-jrlpw [748.704482ms]
  I0719 13:34:31.639024 21 service_latency.go:351] Created: latency-svc-tq58r
  I0719 13:34:31.671142 21 service_latency.go:358] Got endpoints: latency-svc-p6txd [748.970008ms]
  I0719 13:34:31.689972 21 service_latency.go:351] Created: latency-svc-2jbsm
  I0719 13:34:31.720787 21 service_latency.go:358] Got endpoints: latency-svc-gg9n4 [750.91643ms]
  I0719 13:34:31.740540 21 service_latency.go:351] Created: latency-svc-bf8dk
  I0719 13:34:31.771730 21 service_latency.go:358] Got endpoints: latency-svc-97jzm [749.851933ms]
  I0719 13:34:31.792243 21 service_latency.go:351] Created: latency-svc-gmkn7
  E0719 13:34:31.820568      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:34:31.821310 21 service_latency.go:358] Got endpoints: latency-svc-nn54t [749.212797ms]
  I0719 13:34:31.839695 21 service_latency.go:351] Created: latency-svc-7b584
  I0719 13:34:31.871840 21 service_latency.go:358] Got endpoints: latency-svc-s66mz [749.065397ms]
  I0719 13:34:31.890264 21 service_latency.go:351] Created: latency-svc-2jmhp
  I0719 13:34:31.921921 21 service_latency.go:358] Got endpoints: latency-svc-zjprn [750.429434ms]
  I0719 13:34:31.941942 21 service_latency.go:351] Created: latency-svc-szz6c
  I0719 13:34:31.970966 21 service_latency.go:358] Got endpoints: latency-svc-rtgmq [749.643127ms]
  I0719 13:34:31.990638 21 service_latency.go:351] Created: latency-svc-ccxd4
  I0719 13:34:32.022125 21 service_latency.go:358] Got endpoints: latency-svc-qbskb [750.53881ms]
  I0719 13:34:32.043192 21 service_latency.go:351] Created: latency-svc-7lwnn
  I0719 13:34:32.070571 21 service_latency.go:358] Got endpoints: latency-svc-2kghc [749.625337ms]
  I0719 13:34:32.089313 21 service_latency.go:351] Created: latency-svc-s5ln9
  I0719 13:34:32.120223 21 service_latency.go:358] Got endpoints: latency-svc-fqqlv [749.458629ms]
  I0719 13:34:32.140138 21 service_latency.go:351] Created: latency-svc-7p4cz
  I0719 13:34:32.173090 21 service_latency.go:358] Got endpoints: latency-svc-shqjm [750.900626ms]
  I0719 13:34:32.194647 21 service_latency.go:351] Created: latency-svc-95rtn
  I0719 13:34:32.221592 21 service_latency.go:358] Got endpoints: latency-svc-2qp4m [749.996669ms]
  I0719 13:34:32.240287 21 service_latency.go:351] Created: latency-svc-2zng4
  I0719 13:34:32.271482 21 service_latency.go:358] Got endpoints: latency-svc-hzhg4 [751.383843ms]
  I0719 13:34:32.290981 21 service_latency.go:351] Created: latency-svc-lnsjp
  I0719 13:34:32.321278 21 service_latency.go:358] Got endpoints: latency-svc-gd5hc [749.147423ms]
  I0719 13:34:32.338775 21 service_latency.go:351] Created: latency-svc-6dnd2
  I0719 13:34:32.371405 21 service_latency.go:358] Got endpoints: latency-svc-tq58r [751.021826ms]
  I0719 13:34:32.390734 21 service_latency.go:351] Created: latency-svc-9tzxd
  I0719 13:34:32.421561 21 service_latency.go:358] Got endpoints: latency-svc-2jbsm [750.378447ms]
  I0719 13:34:32.441150 21 service_latency.go:351] Created: latency-svc-qswtj
  I0719 13:34:32.471059 21 service_latency.go:358] Got endpoints: latency-svc-bf8dk [750.2403ms]
  I0719 13:34:32.489971 21 service_latency.go:351] Created: latency-svc-lpmvn
  I0719 13:34:32.520477 21 service_latency.go:358] Got endpoints: latency-svc-gmkn7 [748.712072ms]
  I0719 13:34:32.540080 21 service_latency.go:351] Created: latency-svc-2tdrv
  I0719 13:34:32.570446 21 service_latency.go:358] Got endpoints: latency-svc-7b584 [749.104953ms]
  I0719 13:34:32.589934 21 service_latency.go:351] Created: latency-svc-2fm2l
  I0719 13:34:32.621244 21 service_latency.go:358] Got endpoints: latency-svc-2jmhp [749.377684ms]
  I0719 13:34:32.640440 21 service_latency.go:351] Created: latency-svc-ssglt
  I0719 13:34:32.670238 21 service_latency.go:358] Got endpoints: latency-svc-szz6c [748.2807ms]
  I0719 13:34:32.689522 21 service_latency.go:351] Created: latency-svc-jdbds
  I0719 13:34:32.720765 21 service_latency.go:358] Got endpoints: latency-svc-ccxd4 [749.544065ms]
  I0719 13:34:32.739540 21 service_latency.go:351] Created: latency-svc-7s4rn
  I0719 13:34:32.771675 21 service_latency.go:358] Got endpoints: latency-svc-7lwnn [749.521481ms]
  I0719 13:34:32.790746 21 service_latency.go:351] Created: latency-svc-2vxgh
  E0719 13:34:32.821068      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:34:32.821120 21 service_latency.go:358] Got endpoints: latency-svc-s5ln9 [750.516893ms]
  I0719 13:34:32.840514 21 service_latency.go:351] Created: latency-svc-kkxrt
  I0719 13:34:32.868490 21 service_latency.go:358] Got endpoints: latency-svc-7p4cz [748.228935ms]
  I0719 13:34:32.887599 21 service_latency.go:351] Created: latency-svc-fcgkc
  I0719 13:34:32.923022 21 service_latency.go:358] Got endpoints: latency-svc-95rtn [749.857024ms]
  I0719 13:34:32.940872 21 service_latency.go:351] Created: latency-svc-4tjg5
  I0719 13:34:32.972286 21 service_latency.go:358] Got endpoints: latency-svc-2zng4 [750.659821ms]
  I0719 13:34:32.991120 21 service_latency.go:351] Created: latency-svc-9gx6v
  I0719 13:34:33.022158 21 service_latency.go:358] Got endpoints: latency-svc-lnsjp [750.635646ms]
  I0719 13:34:33.045493 21 service_latency.go:351] Created: latency-svc-kqmr4
  I0719 13:34:33.071937 21 service_latency.go:358] Got endpoints: latency-svc-6dnd2 [750.62156ms]
  I0719 13:34:33.091702 21 service_latency.go:351] Created: latency-svc-r7z54
  I0719 13:34:33.123066 21 service_latency.go:358] Got endpoints: latency-svc-9tzxd [751.631624ms]
  I0719 13:34:33.142728 21 service_latency.go:351] Created: latency-svc-gnqcc
  I0719 13:34:33.170736 21 service_latency.go:358] Got endpoints: latency-svc-qswtj [749.140355ms]
  I0719 13:34:33.190412 21 service_latency.go:351] Created: latency-svc-jcg2q
  I0719 13:34:33.222493 21 service_latency.go:358] Got endpoints: latency-svc-lpmvn [751.399373ms]
  I0719 13:34:33.241415 21 service_latency.go:351] Created: latency-svc-9fq2m
  I0719 13:34:33.272177 21 service_latency.go:358] Got endpoints: latency-svc-2tdrv [751.656651ms]
  I0719 13:34:33.292499 21 service_latency.go:351] Created: latency-svc-f6csl
  I0719 13:34:33.321232 21 service_latency.go:358] Got endpoints: latency-svc-2fm2l [750.738166ms]
  I0719 13:34:33.340704 21 service_latency.go:351] Created: latency-svc-bd27s
  I0719 13:34:33.371256 21 service_latency.go:358] Got endpoints: latency-svc-ssglt [749.978574ms]
  I0719 13:34:33.389704 21 service_latency.go:351] Created: latency-svc-hbfk6
  I0719 13:34:33.420902 21 service_latency.go:358] Got endpoints: latency-svc-jdbds [750.621584ms]
  I0719 13:34:33.439966 21 service_latency.go:351] Created: latency-svc-jb46t
  I0719 13:34:33.471816 21 service_latency.go:358] Got endpoints: latency-svc-7s4rn [751.010398ms]
  I0719 13:34:33.491510 21 service_latency.go:351] Created: latency-svc-hvdlv
  I0719 13:34:33.521455 21 service_latency.go:358] Got endpoints: latency-svc-2vxgh [749.739317ms]
  I0719 13:34:33.541527 21 service_latency.go:351] Created: latency-svc-kcvxj
  I0719 13:34:33.570121 21 service_latency.go:358] Got endpoints: latency-svc-kkxrt [748.976011ms]
  I0719 13:34:33.590437 21 service_latency.go:351] Created: latency-svc-7rrt9
  I0719 13:34:33.619399 21 service_latency.go:358] Got endpoints: latency-svc-fcgkc [750.871832ms]
  I0719 13:34:33.638322 21 service_latency.go:351] Created: latency-svc-ndhtf
  I0719 13:34:33.671967 21 service_latency.go:358] Got endpoints: latency-svc-4tjg5 [748.911155ms]
  I0719 13:34:33.690454 21 service_latency.go:351] Created: latency-svc-zg74f
  I0719 13:34:33.720487 21 service_latency.go:358] Got endpoints: latency-svc-9gx6v [748.124751ms]
  I0719 13:34:33.739583 21 service_latency.go:351] Created: latency-svc-2bm87
  I0719 13:34:33.771280 21 service_latency.go:358] Got endpoints: latency-svc-kqmr4 [749.089666ms]
  I0719 13:34:33.788856 21 service_latency.go:351] Created: latency-svc-xtgzs
  E0719 13:34:33.820983      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:34:33.821298 21 service_latency.go:358] Got endpoints: latency-svc-r7z54 [749.327634ms]
  I0719 13:34:33.838996 21 service_latency.go:351] Created: latency-svc-cz7lz
  I0719 13:34:33.870722 21 service_latency.go:358] Got endpoints: latency-svc-gnqcc [747.618301ms]
  I0719 13:34:33.921674 21 service_latency.go:358] Got endpoints: latency-svc-jcg2q [750.90163ms]
  I0719 13:34:33.971565 21 service_latency.go:358] Got endpoints: latency-svc-9fq2m [749.035163ms]
  I0719 13:34:34.022127 21 service_latency.go:358] Got endpoints: latency-svc-f6csl [749.913907ms]
  I0719 13:34:34.073445 21 service_latency.go:358] Got endpoints: latency-svc-bd27s [752.174924ms]
  I0719 13:34:34.122008 21 service_latency.go:358] Got endpoints: latency-svc-hbfk6 [750.719999ms]
  I0719 13:34:34.173033 21 service_latency.go:358] Got endpoints: latency-svc-jb46t [752.089607ms]
  I0719 13:34:34.221069 21 service_latency.go:358] Got endpoints: latency-svc-hvdlv [749.203579ms]
  I0719 13:34:34.275742 21 service_latency.go:358] Got endpoints: latency-svc-kcvxj [754.246751ms]
  I0719 13:34:34.322334 21 service_latency.go:358] Got endpoints: latency-svc-7rrt9 [752.174469ms]
  I0719 13:34:34.372309 21 service_latency.go:358] Got endpoints: latency-svc-ndhtf [752.848052ms]
  I0719 13:34:34.422458 21 service_latency.go:358] Got endpoints: latency-svc-zg74f [750.441865ms]
  I0719 13:34:34.472665 21 service_latency.go:358] Got endpoints: latency-svc-2bm87 [752.043427ms]
  I0719 13:34:34.525650 21 service_latency.go:358] Got endpoints: latency-svc-xtgzs [754.324693ms]
  I0719 13:34:34.573633 21 service_latency.go:358] Got endpoints: latency-svc-cz7lz [752.304737ms]
  I0719 13:34:34.573740 21 service_latency.go:114] Latencies: [30.166898ms 36.479506ms 43.554939ms 47.144131ms 50.732418ms 58.104734ms 63.445475ms 81.997147ms 86.440273ms 96.993474ms 106.064118ms 118.720417ms 128.720699ms 138.89209ms 139.315598ms 140.58376ms 143.879038ms 147.013532ms 149.74689ms 150.229389ms 152.510748ms 156.969843ms 160.251524ms 168.076028ms 173.281598ms 175.649731ms 177.153362ms 182.46346ms 186.761004ms 211.72069ms 212.353551ms 216.407612ms 218.011081ms 225.15444ms 226.335136ms 240.075724ms 241.653881ms 246.950837ms 253.010098ms 274.642844ms 310.478899ms 324.309184ms 334.888578ms 364.534381ms 412.623419ms 459.825648ms 506.33178ms 553.701679ms 599.903697ms 644.85402ms 695.930155ms 743.237809ms 744.677935ms 745.374326ms 746.411737ms 746.424867ms 746.6985ms 746.922768ms 747.618301ms 747.696606ms 747.79131ms 748.102848ms 748.124751ms 748.228935ms 748.237764ms 748.24572ms 748.252853ms 748.2807ms 748.339267ms 748.339504ms 748.349709ms 748.444608ms 748.464705ms 748.620535ms 748.637972ms 748.658303ms 748.704482ms 748.712072ms 748.765514ms 748.792386ms 748.820056ms 748.822508ms 748.866526ms 748.878408ms 748.911155ms 748.970008ms 748.976011ms 749.030834ms 749.035163ms 749.065397ms 749.089666ms 749.104953ms 749.140355ms 749.147423ms 749.172705ms 749.184126ms 749.192629ms 749.203579ms 749.212797ms 749.231377ms 749.327634ms 749.369682ms 749.377684ms 749.458629ms 749.509831ms 749.519748ms 749.521481ms 749.530721ms 749.544065ms 749.597391ms 749.625337ms 749.643127ms 749.674773ms 749.698608ms 749.704179ms 749.727659ms 749.739317ms 749.851933ms 749.857024ms 749.899783ms 749.913907ms 749.915438ms 749.918252ms 749.978574ms 749.992581ms 749.996669ms 750.068489ms 750.090385ms 750.191371ms 750.2403ms 750.272138ms 750.312655ms 750.313213ms 750.354925ms 750.378447ms 750.429434ms 750.441865ms 750.510405ms 750.510688ms 750.516893ms 750.53881ms 750.571102ms 750.62156ms 750.621584ms 750.635646ms 750.659821ms 750.691398ms 750.719999ms 750.72413ms 750.72835ms 750.738166ms 750.769772ms 750.770893ms 750.804421ms 750.871832ms 750.900626ms 750.90163ms 750.91643ms 750.952632ms 751.007502ms 751.010398ms 751.021822ms 751.021826ms 751.083392ms 751.112221ms 751.130581ms 751.156279ms 751.282552ms 751.310176ms 751.383843ms 751.399373ms 751.50307ms 751.52385ms 751.565291ms 751.595676ms 751.631624ms 751.656651ms 751.688136ms 751.776536ms 751.910146ms 751.961698ms 752.043427ms 752.082053ms 752.082095ms 752.089607ms 752.091117ms 752.144486ms 752.174469ms 752.174924ms 752.304737ms 752.848052ms 752.856158ms 752.967665ms 753.295682ms 753.648184ms 753.72439ms 754.073155ms 754.246751ms 754.324693ms 755.107437ms]
  I0719 13:34:34.573922 21 service_latency.go:118] 50 %ile: 749.327634ms
  I0719 13:34:34.573931 21 service_latency.go:119] 90 %ile: 751.961698ms
  I0719 13:34:34.573937 21 service_latency.go:120] 99 %ile: 754.324693ms
  I0719 13:34:34.573943 21 service_latency.go:121] Total sample count: 200
  I0719 13:34:34.574121 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-1188" for this suite. @ 07/19/25 13:34:34.579
• [10.748 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:388
  STEP: Creating a kubernetes client @ 07/19/25 13:34:34.598
  I0719 13:34:34.598529 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename gc @ 07/19/25 13:34:34.599
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:34:34.612
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:34:34.614
  STEP: create the rc @ 07/19/25 13:34:34.68
  I0719 13:34:34.689266      21 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  E0719 13:34:34.821534      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:34:35.833538      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:34:36.834250      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:34:37.834644      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:34:38.834953      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:34:39.835555      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the rc @ 07/19/25 13:34:40.694
  STEP: wait for the rc to be deleted @ 07/19/25 13:34:40.714
  E0719 13:34:40.836135      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:34:41.835777      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:34:42.835874      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:34:43.835972      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:34:44.836060      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 07/19/25 13:34:45.722
  E0719 13:34:45.836548      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:34:46.836617      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:34:47.836718      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:34:48.836804      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:34:49.837819      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:34:50.838580      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:34:51.838684      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:34:52.838828      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:34:53.839015      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:34:54.839540      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:34:55.840540      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:34:56.840763      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:34:57.841576      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:34:58.841752      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:34:59.842571      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:35:00.842665      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:35:01.843533      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:35:02.843705      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:35:03.843891      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:35:04.843990      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:35:05.844177      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:35:06.845094      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:35:07.845181      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:35:08.845579      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:35:09.845675      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:35:10.846685      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:35:11.847536      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:35:12.848558      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:35:13.848751      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:35:14.849549      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 07/19/25 13:35:15.746
  W0719 13:35:15.756039      21 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0719 13:35:15.756078 21 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0719 13:35:15.756124 21 delete.go:95] Deleting pod "simpletest.rc-259m2" in namespace "gc-3972"
  I0719 13:35:15.774716 21 delete.go:95] Deleting pod "simpletest.rc-2jrcp" in namespace "gc-3972"
  I0719 13:35:15.792441 21 delete.go:95] Deleting pod "simpletest.rc-2p2pq" in namespace "gc-3972"
  I0719 13:35:15.812796 21 delete.go:95] Deleting pod "simpletest.rc-2vmwk" in namespace "gc-3972"
  I0719 13:35:15.828714 21 delete.go:95] Deleting pod "simpletest.rc-4b8n2" in namespace "gc-3972"
  I0719 13:35:15.841049 21 delete.go:95] Deleting pod "simpletest.rc-4dx7c" in namespace "gc-3972"
  E0719 13:35:15.850276      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:35:15.855809 21 delete.go:95] Deleting pod "simpletest.rc-4fc9s" in namespace "gc-3972"
  I0719 13:35:15.870076 21 delete.go:95] Deleting pod "simpletest.rc-4x5bq" in namespace "gc-3972"
  I0719 13:35:15.884541 21 delete.go:95] Deleting pod "simpletest.rc-555g6" in namespace "gc-3972"
  I0719 13:35:15.898235 21 delete.go:95] Deleting pod "simpletest.rc-577n7" in namespace "gc-3972"
  I0719 13:35:15.911075 21 delete.go:95] Deleting pod "simpletest.rc-58t22" in namespace "gc-3972"
  I0719 13:35:15.923277 21 delete.go:95] Deleting pod "simpletest.rc-5cvwq" in namespace "gc-3972"
  I0719 13:35:15.940583 21 delete.go:95] Deleting pod "simpletest.rc-5hpcb" in namespace "gc-3972"
  I0719 13:35:15.956225 21 delete.go:95] Deleting pod "simpletest.rc-5wqzg" in namespace "gc-3972"
  I0719 13:35:15.972324 21 delete.go:95] Deleting pod "simpletest.rc-6p6ff" in namespace "gc-3972"
  I0719 13:35:15.985649 21 delete.go:95] Deleting pod "simpletest.rc-6slj6" in namespace "gc-3972"
  I0719 13:35:15.999443 21 delete.go:95] Deleting pod "simpletest.rc-6trjm" in namespace "gc-3972"
  I0719 13:35:16.012086 21 delete.go:95] Deleting pod "simpletest.rc-7blfd" in namespace "gc-3972"
  I0719 13:35:16.025609 21 delete.go:95] Deleting pod "simpletest.rc-7dvfc" in namespace "gc-3972"
  I0719 13:35:16.039386 21 delete.go:95] Deleting pod "simpletest.rc-7rrsv" in namespace "gc-3972"
  I0719 13:35:16.053740 21 delete.go:95] Deleting pod "simpletest.rc-7t6q4" in namespace "gc-3972"
  I0719 13:35:16.067928 21 delete.go:95] Deleting pod "simpletest.rc-7z7w7" in namespace "gc-3972"
  I0719 13:35:16.082643 21 delete.go:95] Deleting pod "simpletest.rc-8cbbp" in namespace "gc-3972"
  I0719 13:35:16.096752 21 delete.go:95] Deleting pod "simpletest.rc-8fz6s" in namespace "gc-3972"
  I0719 13:35:16.109496 21 delete.go:95] Deleting pod "simpletest.rc-8mjwd" in namespace "gc-3972"
  I0719 13:35:16.124565 21 delete.go:95] Deleting pod "simpletest.rc-8sbvg" in namespace "gc-3972"
  I0719 13:35:16.139143 21 delete.go:95] Deleting pod "simpletest.rc-96n7j" in namespace "gc-3972"
  I0719 13:35:16.154582 21 delete.go:95] Deleting pod "simpletest.rc-99gh2" in namespace "gc-3972"
  I0719 13:35:16.169013 21 delete.go:95] Deleting pod "simpletest.rc-9dk4g" in namespace "gc-3972"
  I0719 13:35:16.182257 21 delete.go:95] Deleting pod "simpletest.rc-9jtp5" in namespace "gc-3972"
  I0719 13:35:16.195477 21 delete.go:95] Deleting pod "simpletest.rc-9qjf5" in namespace "gc-3972"
  I0719 13:35:16.210585 21 delete.go:95] Deleting pod "simpletest.rc-b2ldr" in namespace "gc-3972"
  I0719 13:35:16.227817 21 delete.go:95] Deleting pod "simpletest.rc-b7bbv" in namespace "gc-3972"
  I0719 13:35:16.241498 21 delete.go:95] Deleting pod "simpletest.rc-bl5r9" in namespace "gc-3972"
  I0719 13:35:16.257361 21 delete.go:95] Deleting pod "simpletest.rc-bn4v4" in namespace "gc-3972"
  I0719 13:35:16.272318 21 delete.go:95] Deleting pod "simpletest.rc-bwpf8" in namespace "gc-3972"
  I0719 13:35:16.291123 21 delete.go:95] Deleting pod "simpletest.rc-bwrdj" in namespace "gc-3972"
  I0719 13:35:16.303999 21 delete.go:95] Deleting pod "simpletest.rc-bxwtw" in namespace "gc-3972"
  I0719 13:35:16.328029 21 delete.go:95] Deleting pod "simpletest.rc-c5hhz" in namespace "gc-3972"
  I0719 13:35:16.347688 21 delete.go:95] Deleting pod "simpletest.rc-c77fz" in namespace "gc-3972"
  I0719 13:35:16.362492 21 delete.go:95] Deleting pod "simpletest.rc-cpnwb" in namespace "gc-3972"
  I0719 13:35:16.386607 21 delete.go:95] Deleting pod "simpletest.rc-cx8mk" in namespace "gc-3972"
  I0719 13:35:16.402033 21 delete.go:95] Deleting pod "simpletest.rc-fhqsq" in namespace "gc-3972"
  I0719 13:35:16.417652 21 delete.go:95] Deleting pod "simpletest.rc-fks58" in namespace "gc-3972"
  I0719 13:35:16.432396 21 delete.go:95] Deleting pod "simpletest.rc-fmht6" in namespace "gc-3972"
  I0719 13:35:16.447854 21 delete.go:95] Deleting pod "simpletest.rc-frz4j" in namespace "gc-3972"
  I0719 13:35:16.462005 21 delete.go:95] Deleting pod "simpletest.rc-gpx5h" in namespace "gc-3972"
  I0719 13:35:16.479753 21 delete.go:95] Deleting pod "simpletest.rc-gtd4v" in namespace "gc-3972"
  I0719 13:35:16.494648 21 delete.go:95] Deleting pod "simpletest.rc-gwd2b" in namespace "gc-3972"
  I0719 13:35:16.508433 21 delete.go:95] Deleting pod "simpletest.rc-h4npb" in namespace "gc-3972"
  I0719 13:35:16.521476 21 delete.go:95] Deleting pod "simpletest.rc-h7bn5" in namespace "gc-3972"
  I0719 13:35:16.535566 21 delete.go:95] Deleting pod "simpletest.rc-hnfqq" in namespace "gc-3972"
  I0719 13:35:16.547819 21 delete.go:95] Deleting pod "simpletest.rc-hpck4" in namespace "gc-3972"
  I0719 13:35:16.561438 21 delete.go:95] Deleting pod "simpletest.rc-hrnn8" in namespace "gc-3972"
  I0719 13:35:16.576566 21 delete.go:95] Deleting pod "simpletest.rc-j5c8j" in namespace "gc-3972"
  I0719 13:35:16.590699 21 delete.go:95] Deleting pod "simpletest.rc-js7zr" in namespace "gc-3972"
  I0719 13:35:16.603474 21 delete.go:95] Deleting pod "simpletest.rc-ksh9x" in namespace "gc-3972"
  I0719 13:35:16.620260 21 delete.go:95] Deleting pod "simpletest.rc-lmmw2" in namespace "gc-3972"
  I0719 13:35:16.641675 21 delete.go:95] Deleting pod "simpletest.rc-m2jj6" in namespace "gc-3972"
  I0719 13:35:16.656021 21 delete.go:95] Deleting pod "simpletest.rc-m7j6t" in namespace "gc-3972"
  I0719 13:35:16.679818 21 delete.go:95] Deleting pod "simpletest.rc-mmztr" in namespace "gc-3972"
  I0719 13:35:16.695467 21 delete.go:95] Deleting pod "simpletest.rc-nkh97" in namespace "gc-3972"
  I0719 13:35:16.709546 21 delete.go:95] Deleting pod "simpletest.rc-p628s" in namespace "gc-3972"
  I0719 13:35:16.724389 21 delete.go:95] Deleting pod "simpletest.rc-pg78t" in namespace "gc-3972"
  I0719 13:35:16.738142 21 delete.go:95] Deleting pod "simpletest.rc-phjxn" in namespace "gc-3972"
  I0719 13:35:16.753854 21 delete.go:95] Deleting pod "simpletest.rc-pt54k" in namespace "gc-3972"
  I0719 13:35:16.767094 21 delete.go:95] Deleting pod "simpletest.rc-q29wq" in namespace "gc-3972"
  I0719 13:35:16.780073 21 delete.go:95] Deleting pod "simpletest.rc-qcjrv" in namespace "gc-3972"
  I0719 13:35:16.792468 21 delete.go:95] Deleting pod "simpletest.rc-qdgq5" in namespace "gc-3972"
  I0719 13:35:16.805801 21 delete.go:95] Deleting pod "simpletest.rc-qp2j2" in namespace "gc-3972"
  I0719 13:35:16.838025 21 delete.go:95] Deleting pod "simpletest.rc-qv4s7" in namespace "gc-3972"
  E0719 13:35:16.853201      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:35:16.888699 21 delete.go:95] Deleting pod "simpletest.rc-r5vdv" in namespace "gc-3972"
  I0719 13:35:16.943007 21 delete.go:95] Deleting pod "simpletest.rc-rhq5d" in namespace "gc-3972"
  I0719 13:35:16.992675 21 delete.go:95] Deleting pod "simpletest.rc-rqmcn" in namespace "gc-3972"
  I0719 13:35:17.037850 21 delete.go:95] Deleting pod "simpletest.rc-s7fdj" in namespace "gc-3972"
  I0719 13:35:17.088569 21 delete.go:95] Deleting pod "simpletest.rc-sb2jj" in namespace "gc-3972"
  I0719 13:35:17.138149 21 delete.go:95] Deleting pod "simpletest.rc-t42vj" in namespace "gc-3972"
  I0719 13:35:17.189604 21 delete.go:95] Deleting pod "simpletest.rc-tkhjt" in namespace "gc-3972"
  I0719 13:35:17.240184 21 delete.go:95] Deleting pod "simpletest.rc-tkn9v" in namespace "gc-3972"
  I0719 13:35:17.292647 21 delete.go:95] Deleting pod "simpletest.rc-v22zm" in namespace "gc-3972"
  I0719 13:35:17.341311 21 delete.go:95] Deleting pod "simpletest.rc-v4hfd" in namespace "gc-3972"
  I0719 13:35:17.391619 21 delete.go:95] Deleting pod "simpletest.rc-vbh82" in namespace "gc-3972"
  I0719 13:35:17.438759 21 delete.go:95] Deleting pod "simpletest.rc-vjts7" in namespace "gc-3972"
  I0719 13:35:17.486798 21 delete.go:95] Deleting pod "simpletest.rc-vq4fs" in namespace "gc-3972"
  I0719 13:35:17.537168 21 delete.go:95] Deleting pod "simpletest.rc-w4527" in namespace "gc-3972"
  I0719 13:35:17.586538 21 delete.go:95] Deleting pod "simpletest.rc-w8bzj" in namespace "gc-3972"
  I0719 13:35:17.637409 21 delete.go:95] Deleting pod "simpletest.rc-w9l4q" in namespace "gc-3972"
  I0719 13:35:17.685678 21 delete.go:95] Deleting pod "simpletest.rc-wct6c" in namespace "gc-3972"
  I0719 13:35:17.737211 21 delete.go:95] Deleting pod "simpletest.rc-wf264" in namespace "gc-3972"
  I0719 13:35:17.788223 21 delete.go:95] Deleting pod "simpletest.rc-wpdsd" in namespace "gc-3972"
  I0719 13:35:17.842373 21 delete.go:95] Deleting pod "simpletest.rc-wr8c6" in namespace "gc-3972"
  E0719 13:35:17.851936      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:35:17.887687 21 delete.go:95] Deleting pod "simpletest.rc-wvslr" in namespace "gc-3972"
  I0719 13:35:17.938587 21 delete.go:95] Deleting pod "simpletest.rc-xftgs" in namespace "gc-3972"
  I0719 13:35:17.989054 21 delete.go:95] Deleting pod "simpletest.rc-xh5w8" in namespace "gc-3972"
  I0719 13:35:18.038417 21 delete.go:95] Deleting pod "simpletest.rc-xkqx4" in namespace "gc-3972"
  I0719 13:35:18.091528 21 delete.go:95] Deleting pod "simpletest.rc-xlhzf" in namespace "gc-3972"
  I0719 13:35:18.140808 21 delete.go:95] Deleting pod "simpletest.rc-xz9sf" in namespace "gc-3972"
  I0719 13:35:18.192296 21 delete.go:95] Deleting pod "simpletest.rc-zd8xw" in namespace "gc-3972"
  I0719 13:35:18.246652 21 delete.go:95] Deleting pod "simpletest.rc-zw87w" in namespace "gc-3972"
  I0719 13:35:18.290521 21 delete.go:95] Deleting pod "simpletest.rc-zzvxx" in namespace "gc-3972"
  I0719 13:35:18.333826 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3972" for this suite. @ 07/19/25 13:35:18.381
• [43.837 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 07/19/25 13:35:18.436
  I0719 13:35:18.436553 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename server-version @ 07/19/25 13:35:18.437
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:35:18.453
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:35:18.456
  STEP: Request ServerVersion @ 07/19/25 13:35:18.46
  STEP: Confirm major version @ 07/19/25 13:35:18.464
  I0719 13:35:18.464315 21 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 07/19/25 13:35:18.464
  I0719 13:35:18.464451 21 server_version.go:58] cleanMinorVersion: 33
  I0719 13:35:18.464591 21 server_version.go:62] Minor version: 33
  I0719 13:35:18.465064 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-3072" for this suite. @ 07/19/25 13:35:18.482
• [0.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:817
  STEP: Creating a kubernetes client @ 07/19/25 13:35:18.494
  I0719 13:35:18.494550 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename webhook @ 07/19/25 13:35:18.495
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:35:18.51
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:35:18.516
  STEP: Setting up server cert @ 07/19/25 13:35:18.546
  E0719 13:35:18.852180      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:35:19.874336      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:35:20.874483      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/19/25 13:35:20.973
  STEP: Deploying the webhook pod @ 07/19/25 13:35:20.978
  STEP: Wait for the deployment to be ready @ 07/19/25 13:35:20.993
  I0719 13:35:21.000250 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0719 13:35:21.875573      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:35:22.875791      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/19/25 13:35:23.015
  STEP: Verifying the service has paired with the endpoint @ 07/19/25 13:35:23.034
  E0719 13:35:23.876501      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:35:24.034780 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 07/19/25 13:35:24.04
  I0719 13:35:24.096671 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1812" for this suite. @ 07/19/25 13:35:24.1
  STEP: Destroying namespace "webhook-markers-2677" for this suite. @ 07/19/25 13:35:24.112
• [5.627 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:159
  STEP: Creating a kubernetes client @ 07/19/25 13:35:24.121
  I0719 13:35:24.121645 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename emptydir @ 07/19/25 13:35:24.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:35:24.134
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:35:24.137
  STEP: Creating a pod to test emptydir volume type on node default medium @ 07/19/25 13:35:24.14
  E0719 13:35:24.876604      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:35:25.876663      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:35:26.877560      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:35:27.877624      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/19/25 13:35:28.168
  I0719 13:35:28.172945 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod pod-ead529e9-d080-4d07-a559-1be84679c45e container test-container: <nil>
  STEP: delete the pod @ 07/19/25 13:35:28.191
  I0719 13:35:28.210076 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9973" for this suite. @ 07/19/25 13:35:28.215
• [4.102 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:99
  STEP: Creating a kubernetes client @ 07/19/25 13:35:28.223
  I0719 13:35:28.223260 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename projected @ 07/19/25 13:35:28.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:35:28.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:35:28.238
  STEP: Creating configMap with name projected-configmap-test-volume-map-f009f702-5ce5-4c42-9f46-85bc7da2d1da @ 07/19/25 13:35:28.241
  STEP: Creating a pod to test consume configMaps @ 07/19/25 13:35:28.246
  E0719 13:35:28.878578      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:35:29.878716      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/19/25 13:35:30.264
  I0719 13:35:30.268396 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod pod-projected-configmaps-1fdf06df-f232-43c7-949a-130ffe72b0a1 container agnhost-container: <nil>
  STEP: delete the pod @ 07/19/25 13:35:30.277
  I0719 13:35:30.292799 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1895" for this suite. @ 07/19/25 13:35:30.299
• [2.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:488
  STEP: Creating a kubernetes client @ 07/19/25 13:35:30.307
  I0719 13:35:30.307220 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename gc @ 07/19/25 13:35:30.307
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:35:30.321
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:35:30.323
  STEP: create the deployment @ 07/19/25 13:35:30.326
  I0719 13:35:30.332971      21 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: Wait for the Deployment to create new ReplicaSet @ 07/19/25 13:35:30.333
  STEP: delete the deployment @ 07/19/25 13:35:30.34
  STEP: wait for all rs to be garbage collected @ 07/19/25 13:35:30.355
  STEP: expected 0 rs, got 1 rs @ 07/19/25 13:35:30.373
  STEP: expected 0 pods, got 2 pods @ 07/19/25 13:35:30.382
  STEP: Gathering metrics @ 07/19/25 13:35:30.869
  W0719 13:35:30.873522      21 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0719 13:35:30.873548 21 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0719 13:35:30.873678 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0719 13:35:30.878717      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "gc-5246" for this suite. @ 07/19/25 13:35:30.878
• [0.581 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:229
  STEP: Creating a kubernetes client @ 07/19/25 13:35:30.888
  I0719 13:35:30.888617 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename emptydir @ 07/19/25 13:35:30.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:35:30.899
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:35:30.902
  STEP: Creating Pod @ 07/19/25 13:35:30.904
  E0719 13:35:31.879727      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:35:32.879792      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 07/19/25 13:35:32.927
  I0719 13:35:32.927282 21 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-7051 PodName:pod-sharedvolume-6c160fad-ba43-46ef-84f5-d2c6683ff158 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0719 13:35:32.927298 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0719 13:35:32.927337 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/emptydir-7051/pods/pod-sharedvolume-6c160fad-ba43-46ef-84f5-d2c6683ff158/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&stderr=true&stdout=true)
  I0719 13:35:32.984593 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0719 13:35:32.984633 21 exec_util.go:112] Exec stderr: ""
  I0719 13:35:32.984735 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7051" for this suite. @ 07/19/25 13:35:32.99
• [2.110 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:743
  STEP: Creating a kubernetes client @ 07/19/25 13:35:32.998
  I0719 13:35:32.998280 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename services @ 07/19/25 13:35:32.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:35:33.011
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:35:33.013
  I0719 13:35:33.019397 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-356" for this suite. @ 07/19/25 13:35:33.09
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] ServiceCIDR and IPAddress API should support IPAddress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_cidrs.go:223
  STEP: Creating a kubernetes client @ 07/19/25 13:35:33.099
  I0719 13:35:33.099727 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename servicecidr @ 07/19/25 13:35:33.1
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:35:33.113
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:35:33.116
  STEP: creating @ 07/19/25 13:35:33.119
  STEP: patching @ 07/19/25 13:35:33.132
  STEP: updating @ 07/19/25 13:35:33.137
  STEP: getting @ 07/19/25 13:35:33.146
  STEP: listing @ 07/19/25 13:35:33.149
  STEP: watching @ 07/19/25 13:35:33.153
  STEP: deleting @ 07/19/25 13:35:33.154
  STEP: deleting a collection @ 07/19/25 13:35:33.16
  I0719 13:35:33.174303 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "servicecidr-9516" for this suite. @ 07/19/25 13:35:33.191
• [0.099 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1726
  STEP: Creating a kubernetes client @ 07/19/25 13:35:33.199
  I0719 13:35:33.199187 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename kubectl @ 07/19/25 13:35:33.199
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:35:33.212
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:35:33.215
  I0719 13:35:33.217711 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-9384 version'
  I0719 13:35:33.254284 21 builder.go:146] stderr: ""
  I0719 13:35:33.254312 21 builder.go:147] stdout: "Client Version: v1.33.3\nKustomize Version: v5.6.0\nServer Version: v1.33.3\n"
  I0719 13:35:33.254540 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9384" for this suite. @ 07/19/25 13:35:33.291
• [0.100 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 07/19/25 13:35:33.299
  I0719 13:35:33.299662 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename ingressclass @ 07/19/25 13:35:33.3
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:35:33.312
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:35:33.314
  STEP: getting /apis @ 07/19/25 13:35:33.317
  STEP: getting /apis/networking.k8s.io @ 07/19/25 13:35:33.32
  STEP: getting /apis/networking.k8s.iov1 @ 07/19/25 13:35:33.321
  STEP: creating @ 07/19/25 13:35:33.322
  STEP: getting @ 07/19/25 13:35:33.341
  STEP: listing @ 07/19/25 13:35:33.345
  STEP: watching @ 07/19/25 13:35:33.348
  I0719 13:35:33.348469 21 ingressclass.go:348] starting watch
  STEP: patching @ 07/19/25 13:35:33.349
  STEP: updating @ 07/19/25 13:35:33.354
  I0719 13:35:33.359943 21 ingressclass.go:364] waiting for watch events with expected annotations
  I0719 13:35:33.359979 21 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 07/19/25 13:35:33.36
  STEP: deleting a collection @ 07/19/25 13:35:33.374
  I0719 13:35:33.392463 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-5446" for this suite. @ 07/19/25 13:35:33.4
• [0.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:262
  STEP: Creating a kubernetes client @ 07/19/25 13:35:33.413
  I0719 13:35:33.413083 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename downward-api @ 07/19/25 13:35:33.413
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:35:33.423
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:35:33.426
  STEP: Creating a pod to test downward API volume plugin @ 07/19/25 13:35:33.429
  E0719 13:35:33.880836      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:35:34.881571      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/19/25 13:35:35.449
  I0719 13:35:35.453467 21 output.go:207] Trying to get logs from node ip-172-31-42-177 pod downwardapi-volume-904e553f-3756-495e-ba52-b3c1d6b77f5b container client-container: <nil>
  STEP: delete the pod @ 07/19/25 13:35:35.47
  I0719 13:35:35.488954 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2913" for this suite. @ 07/19/25 13:35:35.494
• [2.091 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 07/19/25 13:35:35.503
  I0719 13:35:35.503905 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename proxy @ 07/19/25 13:35:35.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:35:35.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:35:35.516
  STEP: starting an echo server on multiple ports @ 07/19/25 13:35:35.535
  I0719 13:35:35.552396 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0719 13:35:35.881833      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:35:36.882071      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:35:37.572462      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0719 13:35:37.572519 21 proxy.go:273] setup took 2.053745981s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 07/19/25 13:35:37.572
  I0719 13:35:37.578901 21 proxy.go:601] (0) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:162/proxy/: bar (200; 6.22774ms)
  I0719 13:35:37.578931 21 proxy.go:601] (0) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/r... (200; 6.34722ms)
  I0719 13:35:37.579638 21 proxy.go:601] (0) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:160/proxy/: foo (200; 6.669443ms)
  I0719 13:35:37.581027 21 proxy.go:601] (0) /api/v1/namespaces/proxy-9334/services/http:proxy-service-jkgtm:portname1/proxy/: foo (200; 8.121533ms)
  I0719 13:35:37.581707 21 proxy.go:601] (0) /api/v1/namespaces/proxy-9334/services/http:proxy-service-jkgtm:portname2/proxy/: bar (200; 8.693797ms)
  I0719 13:35:37.581729 21 proxy.go:601] (0) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/rewrit... (200; 8.92552ms)
  I0719 13:35:37.581742 21 proxy.go:601] (0) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:160/proxy/: foo (200; 8.697583ms)
  I0719 13:35:37.581753 21 proxy.go:601] (0) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d/proxy/rewriteme">... (200; 8.888696ms)
  I0719 13:35:37.581983 21 proxy.go:601] (0) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:162/proxy/: bar (200; 8.68557ms)
  I0719 13:35:37.583504 21 proxy.go:601] (0) /api/v1/namespaces/proxy-9334/services/https:proxy-service-jkgtm:tlsportname2/proxy/: tls qux (200; 10.668639ms)
  I0719 13:35:37.584093 21 proxy.go:601] (0) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:462/proxy/: tls qux (200; 11.207473ms)
  I0719 13:35:37.584432 21 proxy.go:601] (0) /api/v1/namespaces/proxy-9334/services/proxy-service-jkgtm:portname1/proxy/: foo (200; 11.653474ms)
  I0719 13:35:37.585869 21 proxy.go:601] (0) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:443/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:443/proxy/t... (200; 13.133871ms)
  I0719 13:35:37.585892 21 proxy.go:601] (0) /api/v1/namespaces/proxy-9334/services/https:proxy-service-jkgtm:tlsportname1/proxy/: tls baz (200; 12.970325ms)
  I0719 13:35:37.585974 21 proxy.go:601] (0) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:460/proxy/: tls baz (200; 13.218706ms)
  I0719 13:35:37.586215 21 proxy.go:601] (0) /api/v1/namespaces/proxy-9334/services/proxy-service-jkgtm:portname2/proxy/: bar (200; 13.269859ms)
  I0719 13:35:37.589977 21 proxy.go:601] (1) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/rewrit... (200; 3.600786ms)
  I0719 13:35:37.590313 21 proxy.go:601] (1) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:160/proxy/: foo (200; 3.919154ms)
  I0719 13:35:37.590681 21 proxy.go:601] (1) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:443/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:443/proxy/t... (200; 4.355411ms)
  I0719 13:35:37.590683 21 proxy.go:601] (1) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:162/proxy/: bar (200; 4.392585ms)
  I0719 13:35:37.591336 21 proxy.go:601] (1) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/r... (200; 4.695981ms)
  I0719 13:35:37.591928 21 proxy.go:601] (1) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:160/proxy/: foo (200; 5.435052ms)
  I0719 13:35:37.592225 21 proxy.go:601] (1) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:162/proxy/: bar (200; 5.811691ms)
  I0719 13:35:37.592240 21 proxy.go:601] (1) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:462/proxy/: tls qux (200; 5.624806ms)
  I0719 13:35:37.592795 21 proxy.go:601] (1) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:460/proxy/: tls baz (200; 6.532889ms)
  I0719 13:35:37.593044 21 proxy.go:601] (1) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d/proxy/rewriteme">... (200; 6.465002ms)
  I0719 13:35:37.593718 21 proxy.go:601] (1) /api/v1/namespaces/proxy-9334/services/proxy-service-jkgtm:portname1/proxy/: foo (200; 7.203325ms)
  I0719 13:35:37.593939 21 proxy.go:601] (1) /api/v1/namespaces/proxy-9334/services/proxy-service-jkgtm:portname2/proxy/: bar (200; 7.508393ms)
  I0719 13:35:37.594007 21 proxy.go:601] (1) /api/v1/namespaces/proxy-9334/services/http:proxy-service-jkgtm:portname2/proxy/: bar (200; 7.538003ms)
  I0719 13:35:37.594401 21 proxy.go:601] (1) /api/v1/namespaces/proxy-9334/services/https:proxy-service-jkgtm:tlsportname2/proxy/: tls qux (200; 7.852486ms)
  I0719 13:35:37.594942 21 proxy.go:601] (1) /api/v1/namespaces/proxy-9334/services/http:proxy-service-jkgtm:portname1/proxy/: foo (200; 8.282708ms)
  I0719 13:35:37.595758 21 proxy.go:601] (1) /api/v1/namespaces/proxy-9334/services/https:proxy-service-jkgtm:tlsportname1/proxy/: tls baz (200; 9.161522ms)
  I0719 13:35:37.599740 21 proxy.go:601] (2) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:162/proxy/: bar (200; 3.895877ms)
  I0719 13:35:37.600206 21 proxy.go:601] (2) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/rewrit... (200; 4.160451ms)
  I0719 13:35:37.601526 21 proxy.go:601] (2) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:160/proxy/: foo (200; 5.387307ms)
  I0719 13:35:37.601527 21 proxy.go:601] (2) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/r... (200; 5.518067ms)
  I0719 13:35:37.601540 21 proxy.go:601] (2) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:443/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:443/proxy/t... (200; 5.515389ms)
  I0719 13:35:37.601875 21 proxy.go:601] (2) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:162/proxy/: bar (200; 5.715387ms)
  I0719 13:35:37.602081 21 proxy.go:601] (2) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d/proxy/rewriteme">... (200; 6.153657ms)
  I0719 13:35:37.602137 21 proxy.go:601] (2) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:462/proxy/: tls qux (200; 6.171608ms)
  I0719 13:35:37.602694 21 proxy.go:601] (2) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:160/proxy/: foo (200; 6.572007ms)
  I0719 13:35:37.602796 21 proxy.go:601] (2) /api/v1/namespaces/proxy-9334/services/https:proxy-service-jkgtm:tlsportname1/proxy/: tls baz (200; 6.811485ms)
  I0719 13:35:37.602921 21 proxy.go:601] (2) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:460/proxy/: tls baz (200; 7.139763ms)
  I0719 13:35:37.603281 21 proxy.go:601] (2) /api/v1/namespaces/proxy-9334/services/http:proxy-service-jkgtm:portname2/proxy/: bar (200; 7.180009ms)
  I0719 13:35:37.603281 21 proxy.go:601] (2) /api/v1/namespaces/proxy-9334/services/http:proxy-service-jkgtm:portname1/proxy/: foo (200; 7.309333ms)
  I0719 13:35:37.603891 21 proxy.go:601] (2) /api/v1/namespaces/proxy-9334/services/proxy-service-jkgtm:portname1/proxy/: foo (200; 8.01792ms)
  I0719 13:35:37.604058 21 proxy.go:601] (2) /api/v1/namespaces/proxy-9334/services/https:proxy-service-jkgtm:tlsportname2/proxy/: tls qux (200; 8.158758ms)
  I0719 13:35:37.604380 21 proxy.go:601] (2) /api/v1/namespaces/proxy-9334/services/proxy-service-jkgtm:portname2/proxy/: bar (200; 8.293789ms)
  I0719 13:35:37.608967 21 proxy.go:601] (3) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d/proxy/rewriteme">... (200; 4.252473ms)
  I0719 13:35:37.609400 21 proxy.go:601] (3) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/rewrit... (200; 4.791861ms)
  I0719 13:35:37.610027 21 proxy.go:601] (3) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:162/proxy/: bar (200; 5.383334ms)
  I0719 13:35:37.610057 21 proxy.go:601] (3) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:160/proxy/: foo (200; 5.43164ms)
  I0719 13:35:37.610114 21 proxy.go:601] (3) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:460/proxy/: tls baz (200; 5.455298ms)
  I0719 13:35:37.610316 21 proxy.go:601] (3) /api/v1/namespaces/proxy-9334/services/http:proxy-service-jkgtm:portname2/proxy/: bar (200; 5.858538ms)
  I0719 13:35:37.610357 21 proxy.go:601] (3) /api/v1/namespaces/proxy-9334/services/http:proxy-service-jkgtm:portname1/proxy/: foo (200; 5.928728ms)
  I0719 13:35:37.610643 21 proxy.go:601] (3) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:162/proxy/: bar (200; 6.065113ms)
  I0719 13:35:37.610854 21 proxy.go:601] (3) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:443/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:443/proxy/t... (200; 6.261306ms)
  I0719 13:35:37.610892 21 proxy.go:601] (3) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:160/proxy/: foo (200; 6.413421ms)
  I0719 13:35:37.610905 21 proxy.go:601] (3) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/r... (200; 6.351589ms)
  I0719 13:35:37.610982 21 proxy.go:601] (3) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:462/proxy/: tls qux (200; 6.236563ms)
  I0719 13:35:37.611427 21 proxy.go:601] (3) /api/v1/namespaces/proxy-9334/services/proxy-service-jkgtm:portname1/proxy/: foo (200; 6.695457ms)
  I0719 13:35:37.611608 21 proxy.go:601] (3) /api/v1/namespaces/proxy-9334/services/proxy-service-jkgtm:portname2/proxy/: bar (200; 7.210325ms)
  I0719 13:35:37.611770 21 proxy.go:601] (3) /api/v1/namespaces/proxy-9334/services/https:proxy-service-jkgtm:tlsportname2/proxy/: tls qux (200; 7.082852ms)
  I0719 13:35:37.613424 21 proxy.go:601] (3) /api/v1/namespaces/proxy-9334/services/https:proxy-service-jkgtm:tlsportname1/proxy/: tls baz (200; 8.921353ms)
  I0719 13:35:37.618059 21 proxy.go:601] (4) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:162/proxy/: bar (200; 4.583ms)
  I0719 13:35:37.619000 21 proxy.go:601] (4) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:162/proxy/: bar (200; 5.353474ms)
  I0719 13:35:37.619000 21 proxy.go:601] (4) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:460/proxy/: tls baz (200; 5.235943ms)
  I0719 13:35:37.619028 21 proxy.go:601] (4) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:160/proxy/: foo (200; 5.297723ms)
  I0719 13:35:37.619038 21 proxy.go:601] (4) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/rewrit... (200; 5.361055ms)
  I0719 13:35:37.619048 21 proxy.go:601] (4) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d/proxy/rewriteme">... (200; 5.257675ms)
  I0719 13:35:37.619071 21 proxy.go:601] (4) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:160/proxy/: foo (200; 5.361352ms)
  I0719 13:35:37.620183 21 proxy.go:601] (4) /api/v1/namespaces/proxy-9334/services/http:proxy-service-jkgtm:portname1/proxy/: foo (200; 6.61092ms)
  I0719 13:35:37.620713 21 proxy.go:601] (4) /api/v1/namespaces/proxy-9334/services/http:proxy-service-jkgtm:portname2/proxy/: bar (200; 7.020785ms)
  I0719 13:35:37.621125 21 proxy.go:601] (4) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:462/proxy/: tls qux (200; 7.588561ms)
  I0719 13:35:37.621139 21 proxy.go:601] (4) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:443/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:443/proxy/t... (200; 7.477904ms)
  I0719 13:35:37.621451 21 proxy.go:601] (4) /api/v1/namespaces/proxy-9334/services/https:proxy-service-jkgtm:tlsportname2/proxy/: tls qux (200; 7.672296ms)
  I0719 13:35:37.621477 21 proxy.go:601] (4) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/r... (200; 7.859015ms)
  I0719 13:35:37.622064 21 proxy.go:601] (4) /api/v1/namespaces/proxy-9334/services/proxy-service-jkgtm:portname2/proxy/: bar (200; 8.541125ms)
  I0719 13:35:37.622143 21 proxy.go:601] (4) /api/v1/namespaces/proxy-9334/services/proxy-service-jkgtm:portname1/proxy/: foo (200; 8.399381ms)
  I0719 13:35:37.622590 21 proxy.go:601] (4) /api/v1/namespaces/proxy-9334/services/https:proxy-service-jkgtm:tlsportname1/proxy/: tls baz (200; 8.989227ms)
  I0719 13:35:37.636444 21 proxy.go:601] (5) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:162/proxy/: bar (200; 13.744436ms)
  I0719 13:35:37.643243 21 proxy.go:601] (5) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:160/proxy/: foo (200; 20.453078ms)
  I0719 13:35:37.648553 21 proxy.go:601] (5) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/r... (200; 25.9356ms)
  I0719 13:35:37.648585 21 proxy.go:601] (5) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/rewrit... (200; 25.823909ms)
  I0719 13:35:37.648602 21 proxy.go:601] (5) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d/proxy/rewriteme">... (200; 25.638706ms)
  I0719 13:35:37.648581 21 proxy.go:601] (5) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:160/proxy/: foo (200; 25.707361ms)
  I0719 13:35:37.648612 21 proxy.go:601] (5) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:462/proxy/: tls qux (200; 25.630021ms)
  I0719 13:35:37.648623 21 proxy.go:601] (5) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:162/proxy/: bar (200; 25.812152ms)
  I0719 13:35:37.648624 21 proxy.go:601] (5) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:460/proxy/: tls baz (200; 25.73037ms)
  I0719 13:35:37.649385 21 proxy.go:601] (5) /api/v1/namespaces/proxy-9334/services/https:proxy-service-jkgtm:tlsportname1/proxy/: tls baz (200; 26.353108ms)
  I0719 13:35:37.652497 21 proxy.go:601] (5) /api/v1/namespaces/proxy-9334/services/proxy-service-jkgtm:portname2/proxy/: bar (200; 29.66118ms)
  I0719 13:35:37.652505 21 proxy.go:601] (5) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:443/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:443/proxy/t... (200; 29.775183ms)
  I0719 13:35:37.652532 21 proxy.go:601] (5) /api/v1/namespaces/proxy-9334/services/http:proxy-service-jkgtm:portname2/proxy/: bar (200; 29.678032ms)
  I0719 13:35:37.653044 21 proxy.go:601] (5) /api/v1/namespaces/proxy-9334/services/proxy-service-jkgtm:portname1/proxy/: foo (200; 30.126632ms)
  I0719 13:35:37.653060 21 proxy.go:601] (5) /api/v1/namespaces/proxy-9334/services/https:proxy-service-jkgtm:tlsportname2/proxy/: tls qux (200; 30.115809ms)
  I0719 13:35:37.653938 21 proxy.go:601] (5) /api/v1/namespaces/proxy-9334/services/http:proxy-service-jkgtm:portname1/proxy/: foo (200; 30.926783ms)
  I0719 13:35:37.660426 21 proxy.go:601] (6) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:160/proxy/: foo (200; 6.412795ms)
  I0719 13:35:37.664848 21 proxy.go:601] (6) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:460/proxy/: tls baz (200; 10.523503ms)
  I0719 13:35:37.667450 21 proxy.go:601] (6) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:162/proxy/: bar (200; 13.266489ms)
  I0719 13:35:37.667449 21 proxy.go:601] (6) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:160/proxy/: foo (200; 13.172241ms)
  I0719 13:35:37.668239 21 proxy.go:601] (6) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:162/proxy/: bar (200; 14.19063ms)
  I0719 13:35:37.668898 21 proxy.go:601] (6) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:462/proxy/: tls qux (200; 14.807157ms)
  I0719 13:35:37.670160 21 proxy.go:601] (6) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/rewrit... (200; 15.90396ms)
  I0719 13:35:37.670176 21 proxy.go:601] (6) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:443/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:443/proxy/t... (200; 15.956368ms)
  I0719 13:35:37.670160 21 proxy.go:601] (6) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d/proxy/rewriteme">... (200; 16.199592ms)
  I0719 13:35:37.670967 21 proxy.go:601] (6) /api/v1/namespaces/proxy-9334/services/proxy-service-jkgtm:portname2/proxy/: bar (200; 16.77394ms)
  I0719 13:35:37.673873 21 proxy.go:601] (6) /api/v1/namespaces/proxy-9334/services/http:proxy-service-jkgtm:portname1/proxy/: foo (200; 19.757806ms)
  I0719 13:35:37.673874 21 proxy.go:601] (6) /api/v1/namespaces/proxy-9334/services/http:proxy-service-jkgtm:portname2/proxy/: bar (200; 19.639557ms)
  I0719 13:35:37.673893 21 proxy.go:601] (6) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/r... (200; 19.733152ms)
  I0719 13:35:37.673901 21 proxy.go:601] (6) /api/v1/namespaces/proxy-9334/services/proxy-service-jkgtm:portname1/proxy/: foo (200; 19.602359ms)
  I0719 13:35:37.673911 21 proxy.go:601] (6) /api/v1/namespaces/proxy-9334/services/https:proxy-service-jkgtm:tlsportname2/proxy/: tls qux (200; 19.575578ms)
  I0719 13:35:37.673915 21 proxy.go:601] (6) /api/v1/namespaces/proxy-9334/services/https:proxy-service-jkgtm:tlsportname1/proxy/: tls baz (200; 19.781011ms)
  I0719 13:35:37.686767 21 proxy.go:601] (7) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/r... (200; 12.780076ms)
  I0719 13:35:37.686757 21 proxy.go:601] (7) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:162/proxy/: bar (200; 12.730011ms)
  I0719 13:35:37.691959 21 proxy.go:601] (7) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:160/proxy/: foo (200; 18.019363ms)
  I0719 13:35:37.694049 21 proxy.go:601] (7) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:460/proxy/: tls baz (200; 19.835407ms)
  I0719 13:35:37.694550 21 proxy.go:601] (7) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:443/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:443/proxy/t... (200; 20.503294ms)
  I0719 13:35:37.695908 21 proxy.go:601] (7) /api/v1/namespaces/proxy-9334/services/http:proxy-service-jkgtm:portname2/proxy/: bar (200; 21.739396ms)
  I0719 13:35:37.697925 21 proxy.go:601] (7) /api/v1/namespaces/proxy-9334/services/http:proxy-service-jkgtm:portname1/proxy/: foo (200; 23.652562ms)
  I0719 13:35:37.697950 21 proxy.go:601] (7) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:162/proxy/: bar (200; 23.82647ms)
  I0719 13:35:37.698771 21 proxy.go:601] (7) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d/proxy/rewriteme">... (200; 24.583635ms)
  I0719 13:35:37.698771 21 proxy.go:601] (7) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:462/proxy/: tls qux (200; 24.479896ms)
  I0719 13:35:37.698790 21 proxy.go:601] (7) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/rewrit... (200; 24.705236ms)
  I0719 13:35:37.698800 21 proxy.go:601] (7) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:160/proxy/: foo (200; 24.694304ms)
  I0719 13:35:37.700394 21 proxy.go:601] (7) /api/v1/namespaces/proxy-9334/services/proxy-service-jkgtm:portname1/proxy/: foo (200; 26.159389ms)
  I0719 13:35:37.700392 21 proxy.go:601] (7) /api/v1/namespaces/proxy-9334/services/proxy-service-jkgtm:portname2/proxy/: bar (200; 26.250723ms)
  I0719 13:35:37.701465 21 proxy.go:601] (7) /api/v1/namespaces/proxy-9334/services/https:proxy-service-jkgtm:tlsportname1/proxy/: tls baz (200; 27.157562ms)
  I0719 13:35:37.701472 21 proxy.go:601] (7) /api/v1/namespaces/proxy-9334/services/https:proxy-service-jkgtm:tlsportname2/proxy/: tls qux (200; 27.218779ms)
  I0719 13:35:37.711138 21 proxy.go:601] (8) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:462/proxy/: tls qux (200; 9.600883ms)
  I0719 13:35:37.712167 21 proxy.go:601] (8) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/r... (200; 10.466245ms)
  I0719 13:35:37.712199 21 proxy.go:601] (8) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:162/proxy/: bar (200; 10.700442ms)
  I0719 13:35:37.712227 21 proxy.go:601] (8) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d/proxy/rewriteme">... (200; 10.395647ms)
  I0719 13:35:37.712750 21 proxy.go:601] (8) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:162/proxy/: bar (200; 11.015019ms)
  I0719 13:35:37.712757 21 proxy.go:601] (8) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:443/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:443/proxy/t... (200; 11.006537ms)
  I0719 13:35:37.713711 21 proxy.go:601] (8) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:160/proxy/: foo (200; 11.910863ms)
  I0719 13:35:37.714088 21 proxy.go:601] (8) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:460/proxy/: tls baz (200; 12.364736ms)
  I0719 13:35:37.715552 21 proxy.go:601] (8) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:160/proxy/: foo (200; 13.865784ms)
  I0719 13:35:37.719022 21 proxy.go:601] (8) /api/v1/namespaces/proxy-9334/services/https:proxy-service-jkgtm:tlsportname2/proxy/: tls qux (200; 17.210778ms)
  I0719 13:35:37.719022 21 proxy.go:601] (8) /api/v1/namespaces/proxy-9334/services/http:proxy-service-jkgtm:portname1/proxy/: foo (200; 17.423454ms)
  I0719 13:35:37.720624 21 proxy.go:601] (8) /api/v1/namespaces/proxy-9334/services/proxy-service-jkgtm:portname2/proxy/: bar (200; 18.982742ms)
  I0719 13:35:37.721392 21 proxy.go:601] (8) /api/v1/namespaces/proxy-9334/services/https:proxy-service-jkgtm:tlsportname1/proxy/: tls baz (200; 19.776359ms)
  I0719 13:35:37.721621 21 proxy.go:601] (8) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/rewrit... (200; 19.838655ms)
  I0719 13:35:37.721620 21 proxy.go:601] (8) /api/v1/namespaces/proxy-9334/services/http:proxy-service-jkgtm:portname2/proxy/: bar (200; 19.961385ms)
  I0719 13:35:37.721760 21 proxy.go:601] (8) /api/v1/namespaces/proxy-9334/services/proxy-service-jkgtm:portname1/proxy/: foo (200; 19.995097ms)
  I0719 13:35:37.732176 21 proxy.go:601] (9) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:460/proxy/: tls baz (200; 10.155383ms)
  I0719 13:35:37.732181 21 proxy.go:601] (9) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:162/proxy/: bar (200; 10.297428ms)
  I0719 13:35:37.733402 21 proxy.go:601] (9) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:160/proxy/: foo (200; 11.439715ms)
  I0719 13:35:37.733739 21 proxy.go:601] (9) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/r... (200; 11.663344ms)
  I0719 13:35:37.733958 21 proxy.go:601] (9) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d/proxy/rewriteme">... (200; 12.108233ms)
  I0719 13:35:37.734756 21 proxy.go:601] (9) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:443/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:443/proxy/t... (200; 12.635205ms)
  I0719 13:35:37.735470 21 proxy.go:601] (9) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:160/proxy/: foo (200; 13.687298ms)
  I0719 13:35:37.735491 21 proxy.go:601] (9) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:162/proxy/: bar (200; 13.389834ms)
  I0719 13:35:37.735486 21 proxy.go:601] (9) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/rewrit... (200; 13.351933ms)
  I0719 13:35:37.735724 21 proxy.go:601] (9) /api/v1/namespaces/proxy-9334/services/https:proxy-service-jkgtm:tlsportname1/proxy/: tls baz (200; 13.687681ms)
  I0719 13:35:37.735743 21 proxy.go:601] (9) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:462/proxy/: tls qux (200; 13.766279ms)
  I0719 13:35:37.735752 21 proxy.go:601] (9) /api/v1/namespaces/proxy-9334/services/https:proxy-service-jkgtm:tlsportname2/proxy/: tls qux (200; 13.666564ms)
  I0719 13:35:37.736086 21 proxy.go:601] (9) /api/v1/namespaces/proxy-9334/services/http:proxy-service-jkgtm:portname1/proxy/: foo (200; 14.091405ms)
  I0719 13:35:37.736135 21 proxy.go:601] (9) /api/v1/namespaces/proxy-9334/services/http:proxy-service-jkgtm:portname2/proxy/: bar (200; 14.205938ms)
  I0719 13:35:37.737103 21 proxy.go:601] (9) /api/v1/namespaces/proxy-9334/services/proxy-service-jkgtm:portname1/proxy/: foo (200; 15.044333ms)
  I0719 13:35:37.737323 21 proxy.go:601] (9) /api/v1/namespaces/proxy-9334/services/proxy-service-jkgtm:portname2/proxy/: bar (200; 15.411364ms)
  I0719 13:35:37.741557 21 proxy.go:601] (10) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d/proxy/rewriteme">... (200; 4.132148ms)
  I0719 13:35:37.742058 21 proxy.go:601] (10) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:162/proxy/: bar (200; 4.541462ms)
  I0719 13:35:37.742658 21 proxy.go:601] (10) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:160/proxy/: foo (200; 5.071281ms)
  I0719 13:35:37.742765 21 proxy.go:601] (10) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/r... (200; 5.264548ms)
  I0719 13:35:37.742955 21 proxy.go:601] (10) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:460/proxy/: tls baz (200; 5.5886ms)
  I0719 13:35:37.743279 21 proxy.go:601] (10) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/rewrit... (200; 5.725228ms)
  I0719 13:35:37.744168 21 proxy.go:601] (10) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:462/proxy/: tls qux (200; 6.72125ms)
  I0719 13:35:37.744176 21 proxy.go:601] (10) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:160/proxy/: foo (200; 6.540006ms)
  I0719 13:35:37.744212 21 proxy.go:601] (10) /api/v1/namespaces/proxy-9334/services/https:proxy-service-jkgtm:tlsportname2/proxy/: tls qux (200; 6.808928ms)
  I0719 13:35:37.744322 21 proxy.go:601] (10) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:443/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:443/proxy/t... (200; 6.790123ms)
  I0719 13:35:37.744809 21 proxy.go:601] (10) /api/v1/namespaces/proxy-9334/services/proxy-service-jkgtm:portname1/proxy/: foo (200; 7.446883ms)
  I0719 13:35:37.744969 21 proxy.go:601] (10) /api/v1/namespaces/proxy-9334/services/http:proxy-service-jkgtm:portname2/proxy/: bar (200; 7.364646ms)
  I0719 13:35:37.745106 21 proxy.go:601] (10) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:162/proxy/: bar (200; 7.48248ms)
  I0719 13:35:37.745305 21 proxy.go:601] (10) /api/v1/namespaces/proxy-9334/services/http:proxy-service-jkgtm:portname1/proxy/: foo (200; 7.846979ms)
  I0719 13:35:37.745948 21 proxy.go:601] (10) /api/v1/namespaces/proxy-9334/services/proxy-service-jkgtm:portname2/proxy/: bar (200; 8.378986ms)
  I0719 13:35:37.746790 21 proxy.go:601] (10) /api/v1/namespaces/proxy-9334/services/https:proxy-service-jkgtm:tlsportname1/proxy/: tls baz (200; 9.316418ms)
  I0719 13:35:37.750700 21 proxy.go:601] (11) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:462/proxy/: tls qux (200; 3.875932ms)
  I0719 13:35:37.751929 21 proxy.go:601] (11) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:460/proxy/: tls baz (200; 4.925531ms)
  I0719 13:35:37.751929 21 proxy.go:601] (11) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:162/proxy/: bar (200; 5.006973ms)
  I0719 13:35:37.753034 21 proxy.go:601] (11) /api/v1/namespaces/proxy-9334/services/proxy-service-jkgtm:portname2/proxy/: bar (200; 6.099494ms)
  I0719 13:35:37.753054 21 proxy.go:601] (11) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:162/proxy/: bar (200; 5.978289ms)
  I0719 13:35:37.753121 21 proxy.go:601] (11) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:443/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:443/proxy/t... (200; 5.96786ms)
  I0719 13:35:37.753314 21 proxy.go:601] (11) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/r... (200; 6.195645ms)
  I0719 13:35:37.753432 21 proxy.go:601] (11) /api/v1/namespaces/proxy-9334/services/https:proxy-service-jkgtm:tlsportname2/proxy/: tls qux (200; 6.391699ms)
  I0719 13:35:37.753527 21 proxy.go:601] (11) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/rewrit... (200; 6.391912ms)
  I0719 13:35:37.753573 21 proxy.go:601] (11) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:160/proxy/: foo (200; 6.388684ms)
  I0719 13:35:37.753580 21 proxy.go:601] (11) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:160/proxy/: foo (200; 6.595053ms)
  I0719 13:35:37.753586 21 proxy.go:601] (11) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d/proxy/rewriteme">... (200; 6.527ms)
  I0719 13:35:37.754466 21 proxy.go:601] (11) /api/v1/namespaces/proxy-9334/services/http:proxy-service-jkgtm:portname1/proxy/: foo (200; 7.566328ms)
  I0719 13:35:37.754869 21 proxy.go:601] (11) /api/v1/namespaces/proxy-9334/services/https:proxy-service-jkgtm:tlsportname1/proxy/: tls baz (200; 7.76613ms)
  I0719 13:35:37.754885 21 proxy.go:601] (11) /api/v1/namespaces/proxy-9334/services/http:proxy-service-jkgtm:portname2/proxy/: bar (200; 7.918558ms)
  I0719 13:35:37.756253 21 proxy.go:601] (11) /api/v1/namespaces/proxy-9334/services/proxy-service-jkgtm:portname1/proxy/: foo (200; 9.229778ms)
  I0719 13:35:37.761002 21 proxy.go:601] (12) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:460/proxy/: tls baz (200; 4.619568ms)
  I0719 13:35:37.761363 21 proxy.go:601] (12) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/r... (200; 4.889663ms)
  I0719 13:35:37.761804 21 proxy.go:601] (12) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:443/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:443/proxy/t... (200; 5.224174ms)
  I0719 13:35:37.761852 21 proxy.go:601] (12) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:462/proxy/: tls qux (200; 5.40409ms)
  I0719 13:35:37.762221 21 proxy.go:601] (12) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/rewrit... (200; 5.707375ms)
  I0719 13:35:37.762403 21 proxy.go:601] (12) /api/v1/namespaces/proxy-9334/services/http:proxy-service-jkgtm:portname2/proxy/: bar (200; 6.099446ms)
  I0719 13:35:37.763266 21 proxy.go:601] (12) /api/v1/namespaces/proxy-9334/services/proxy-service-jkgtm:portname1/proxy/: foo (200; 6.868241ms)
  I0719 13:35:37.763547 21 proxy.go:601] (12) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:162/proxy/: bar (200; 6.978739ms)
  I0719 13:35:37.763559 21 proxy.go:601] (12) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:160/proxy/: foo (200; 7.202339ms)
  I0719 13:35:37.763874 21 proxy.go:601] (12) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d/proxy/rewriteme">... (200; 7.442109ms)
  I0719 13:35:37.763887 21 proxy.go:601] (12) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:162/proxy/: bar (200; 7.341158ms)
  I0719 13:35:37.764379 21 proxy.go:601] (12) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:160/proxy/: foo (200; 7.851273ms)
  I0719 13:35:37.764387 21 proxy.go:601] (12) /api/v1/namespaces/proxy-9334/services/proxy-service-jkgtm:portname2/proxy/: bar (200; 7.778174ms)
  I0719 13:35:37.764468 21 proxy.go:601] (12) /api/v1/namespaces/proxy-9334/services/http:proxy-service-jkgtm:portname1/proxy/: foo (200; 7.973146ms)
  I0719 13:35:37.764826 21 proxy.go:601] (12) /api/v1/namespaces/proxy-9334/services/https:proxy-service-jkgtm:tlsportname1/proxy/: tls baz (200; 8.533209ms)
  I0719 13:35:37.765312 21 proxy.go:601] (12) /api/v1/namespaces/proxy-9334/services/https:proxy-service-jkgtm:tlsportname2/proxy/: tls qux (200; 8.898668ms)
  I0719 13:35:37.769265 21 proxy.go:601] (13) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/r... (200; 3.773038ms)
  I0719 13:35:37.770334 21 proxy.go:601] (13) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:162/proxy/: bar (200; 4.680419ms)
  I0719 13:35:37.770378 21 proxy.go:601] (13) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d/proxy/rewriteme">... (200; 4.79279ms)
  I0719 13:35:37.770423 21 proxy.go:601] (13) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:162/proxy/: bar (200; 4.872988ms)
  I0719 13:35:37.770523 21 proxy.go:601] (13) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:160/proxy/: foo (200; 5.020011ms)
  I0719 13:35:37.770751 21 proxy.go:601] (13) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:443/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:443/proxy/t... (200; 5.127203ms)
  I0719 13:35:37.771000 21 proxy.go:601] (13) /api/v1/namespaces/proxy-9334/services/proxy-service-jkgtm:portname2/proxy/: bar (200; 5.599285ms)
  I0719 13:35:37.771460 21 proxy.go:601] (13) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/rewrit... (200; 5.7951ms)
  I0719 13:35:37.772140 21 proxy.go:601] (13) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:462/proxy/: tls qux (200; 6.534534ms)
  I0719 13:35:37.772178 21 proxy.go:601] (13) /api/v1/namespaces/proxy-9334/services/proxy-service-jkgtm:portname1/proxy/: foo (200; 6.644029ms)
  I0719 13:35:37.772451 21 proxy.go:601] (13) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:160/proxy/: foo (200; 6.815493ms)
  I0719 13:35:37.772471 21 proxy.go:601] (13) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:460/proxy/: tls baz (200; 6.95246ms)
  I0719 13:35:37.772921 21 proxy.go:601] (13) /api/v1/namespaces/proxy-9334/services/http:proxy-service-jkgtm:portname1/proxy/: foo (200; 7.541972ms)
  I0719 13:35:37.773166 21 proxy.go:601] (13) /api/v1/namespaces/proxy-9334/services/https:proxy-service-jkgtm:tlsportname1/proxy/: tls baz (200; 7.736099ms)
  I0719 13:35:37.773180 21 proxy.go:601] (13) /api/v1/namespaces/proxy-9334/services/https:proxy-service-jkgtm:tlsportname2/proxy/: tls qux (200; 7.618548ms)
  I0719 13:35:37.773963 21 proxy.go:601] (13) /api/v1/namespaces/proxy-9334/services/http:proxy-service-jkgtm:portname2/proxy/: bar (200; 8.493718ms)
  I0719 13:35:37.778584 21 proxy.go:601] (14) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:462/proxy/: tls qux (200; 4.568696ms)
  I0719 13:35:37.778876 21 proxy.go:601] (14) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:160/proxy/: foo (200; 4.667895ms)
  I0719 13:35:37.778898 21 proxy.go:601] (14) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:162/proxy/: bar (200; 4.905085ms)
  I0719 13:35:37.778911 21 proxy.go:601] (14) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:162/proxy/: bar (200; 4.773068ms)
  I0719 13:35:37.779074 21 proxy.go:601] (14) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:443/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:443/proxy/t... (200; 4.906306ms)
  I0719 13:35:37.779673 21 proxy.go:601] (14) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:160/proxy/: foo (200; 5.430217ms)
  I0719 13:35:37.779791 21 proxy.go:601] (14) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d/proxy/rewriteme">... (200; 5.502172ms)
  I0719 13:35:37.780491 21 proxy.go:601] (14) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/r... (200; 6.370419ms)
  I0719 13:35:37.780562 21 proxy.go:601] (14) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/rewrit... (200; 6.371724ms)
  I0719 13:35:37.780597 21 proxy.go:601] (14) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:460/proxy/: tls baz (200; 6.369404ms)
  I0719 13:35:37.780682 21 proxy.go:601] (14) /api/v1/namespaces/proxy-9334/services/https:proxy-service-jkgtm:tlsportname2/proxy/: tls qux (200; 6.413714ms)
  I0719 13:35:37.780698 21 proxy.go:601] (14) /api/v1/namespaces/proxy-9334/services/proxy-service-jkgtm:portname2/proxy/: bar (200; 6.637519ms)
  I0719 13:35:37.781469 21 proxy.go:601] (14) /api/v1/namespaces/proxy-9334/services/http:proxy-service-jkgtm:portname2/proxy/: bar (200; 7.312837ms)
  I0719 13:35:37.781659 21 proxy.go:601] (14) /api/v1/namespaces/proxy-9334/services/https:proxy-service-jkgtm:tlsportname1/proxy/: tls baz (200; 7.555424ms)
  I0719 13:35:37.781772 21 proxy.go:601] (14) /api/v1/namespaces/proxy-9334/services/proxy-service-jkgtm:portname1/proxy/: foo (200; 7.515499ms)
  I0719 13:35:37.782713 21 proxy.go:601] (14) /api/v1/namespaces/proxy-9334/services/http:proxy-service-jkgtm:portname1/proxy/: foo (200; 8.628018ms)
  I0719 13:35:37.787585 21 proxy.go:601] (15) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:462/proxy/: tls qux (200; 4.84083ms)
  I0719 13:35:37.787636 21 proxy.go:601] (15) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:162/proxy/: bar (200; 4.90021ms)
  I0719 13:35:37.787874 21 proxy.go:601] (15) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/rewrit... (200; 4.899109ms)
  I0719 13:35:37.788013 21 proxy.go:601] (15) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d/proxy/rewriteme">... (200; 4.9868ms)
  I0719 13:35:37.788181 21 proxy.go:601] (15) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:162/proxy/: bar (200; 5.273988ms)
  I0719 13:35:37.789131 21 proxy.go:601] (15) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:160/proxy/: foo (200; 6.251906ms)
  I0719 13:35:37.789216 21 proxy.go:601] (15) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:443/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:443/proxy/t... (200; 6.290774ms)
  I0719 13:35:37.789930 21 proxy.go:601] (15) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/r... (200; 7.037133ms)
  I0719 13:35:37.789985 21 proxy.go:601] (15) /api/v1/namespaces/proxy-9334/services/https:proxy-service-jkgtm:tlsportname2/proxy/: tls qux (200; 6.97301ms)
  I0719 13:35:37.790004 21 proxy.go:601] (15) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:160/proxy/: foo (200; 7.013826ms)
  I0719 13:35:37.790062 21 proxy.go:601] (15) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:460/proxy/: tls baz (200; 7.12298ms)
  I0719 13:35:37.790074 21 proxy.go:601] (15) /api/v1/namespaces/proxy-9334/services/proxy-service-jkgtm:portname1/proxy/: foo (200; 7.112071ms)
  I0719 13:35:37.791026 21 proxy.go:601] (15) /api/v1/namespaces/proxy-9334/services/http:proxy-service-jkgtm:portname1/proxy/: foo (200; 8.187075ms)
  I0719 13:35:37.791056 21 proxy.go:601] (15) /api/v1/namespaces/proxy-9334/services/http:proxy-service-jkgtm:portname2/proxy/: bar (200; 8.239868ms)
  I0719 13:35:37.791445 21 proxy.go:601] (15) /api/v1/namespaces/proxy-9334/services/https:proxy-service-jkgtm:tlsportname1/proxy/: tls baz (200; 8.587511ms)
  I0719 13:35:37.791327 21 proxy.go:601] (15) /api/v1/namespaces/proxy-9334/services/proxy-service-jkgtm:portname2/proxy/: bar (200; 8.545639ms)
  I0719 13:35:37.794903 21 proxy.go:601] (16) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:162/proxy/: bar (200; 3.401183ms)
  I0719 13:35:37.795497 21 proxy.go:601] (16) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:160/proxy/: foo (200; 4.005592ms)
  I0719 13:35:37.796853 21 proxy.go:601] (16) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:443/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:443/proxy/t... (200; 4.957893ms)
  I0719 13:35:37.797169 21 proxy.go:601] (16) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/r... (200; 5.29867ms)
  I0719 13:35:37.797603 21 proxy.go:601] (16) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:462/proxy/: tls qux (200; 5.777872ms)
  I0719 13:35:37.797926 21 proxy.go:601] (16) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d/proxy/rewriteme">... (200; 6.114237ms)
  I0719 13:35:37.797981 21 proxy.go:601] (16) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:162/proxy/: bar (200; 6.136306ms)
  I0719 13:35:37.797996 21 proxy.go:601] (16) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/rewrit... (200; 6.112873ms)
  I0719 13:35:37.798289 21 proxy.go:601] (16) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:460/proxy/: tls baz (200; 6.51671ms)
  I0719 13:35:37.798375 21 proxy.go:601] (16) /api/v1/namespaces/proxy-9334/services/proxy-service-jkgtm:portname2/proxy/: bar (200; 6.635889ms)
  I0719 13:35:37.798406 21 proxy.go:601] (16) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:160/proxy/: foo (200; 6.495571ms)
  I0719 13:35:37.798495 21 proxy.go:601] (16) /api/v1/namespaces/proxy-9334/services/https:proxy-service-jkgtm:tlsportname1/proxy/: tls baz (200; 6.636529ms)
  I0719 13:35:37.798801 21 proxy.go:601] (16) /api/v1/namespaces/proxy-9334/services/http:proxy-service-jkgtm:portname2/proxy/: bar (200; 7.139864ms)
  I0719 13:35:37.799364 21 proxy.go:601] (16) /api/v1/namespaces/proxy-9334/services/http:proxy-service-jkgtm:portname1/proxy/: foo (200; 7.589329ms)
  I0719 13:35:37.799838 21 proxy.go:601] (16) /api/v1/namespaces/proxy-9334/services/proxy-service-jkgtm:portname1/proxy/: foo (200; 8.0524ms)
  I0719 13:35:37.800675 21 proxy.go:601] (16) /api/v1/namespaces/proxy-9334/services/https:proxy-service-jkgtm:tlsportname2/proxy/: tls qux (200; 8.875729ms)
  I0719 13:35:37.805880 21 proxy.go:601] (17) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:462/proxy/: tls qux (200; 5.171984ms)
  I0719 13:35:37.806793 21 proxy.go:601] (17) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:160/proxy/: foo (200; 5.683554ms)
  I0719 13:35:37.807451 21 proxy.go:601] (17) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d/proxy/rewriteme">... (200; 6.150557ms)
  I0719 13:35:37.807558 21 proxy.go:601] (17) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/rewrit... (200; 6.603225ms)
  I0719 13:35:37.808290 21 proxy.go:601] (17) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:162/proxy/: bar (200; 7.270283ms)
  I0719 13:35:37.808620 21 proxy.go:601] (17) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:460/proxy/: tls baz (200; 7.479848ms)
  I0719 13:35:37.808818 21 proxy.go:601] (17) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:162/proxy/: bar (200; 7.922704ms)
  I0719 13:35:37.809187 21 proxy.go:601] (17) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:160/proxy/: foo (200; 8.201782ms)
  I0719 13:35:37.809207 21 proxy.go:601] (17) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/r... (200; 8.354156ms)
  I0719 13:35:37.809421 21 proxy.go:601] (17) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:443/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:443/proxy/t... (200; 8.492193ms)
  I0719 13:35:37.809897 21 proxy.go:601] (17) /api/v1/namespaces/proxy-9334/services/http:proxy-service-jkgtm:portname1/proxy/: foo (200; 9.120182ms)
  I0719 13:35:37.810231 21 proxy.go:601] (17) /api/v1/namespaces/proxy-9334/services/https:proxy-service-jkgtm:tlsportname2/proxy/: tls qux (200; 8.576342ms)
  I0719 13:35:37.810573 21 proxy.go:601] (17) /api/v1/namespaces/proxy-9334/services/proxy-service-jkgtm:portname1/proxy/: foo (200; 9.400497ms)
  I0719 13:35:37.810595 21 proxy.go:601] (17) /api/v1/namespaces/proxy-9334/services/https:proxy-service-jkgtm:tlsportname1/proxy/: tls baz (200; 9.779185ms)
  I0719 13:35:37.810611 21 proxy.go:601] (17) /api/v1/namespaces/proxy-9334/services/http:proxy-service-jkgtm:portname2/proxy/: bar (200; 9.537173ms)
  I0719 13:35:37.810623 21 proxy.go:601] (17) /api/v1/namespaces/proxy-9334/services/proxy-service-jkgtm:portname2/proxy/: bar (200; 9.577367ms)
  I0719 13:35:37.816506 21 proxy.go:601] (18) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:460/proxy/: tls baz (200; 5.64345ms)
  I0719 13:35:37.816713 21 proxy.go:601] (18) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:162/proxy/: bar (200; 5.422397ms)
  I0719 13:35:37.816734 21 proxy.go:601] (18) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:162/proxy/: bar (200; 5.396444ms)
  I0719 13:35:37.818074 21 proxy.go:601] (18) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d/proxy/rewriteme">... (200; 7.105104ms)
  I0719 13:35:37.818755 21 proxy.go:601] (18) /api/v1/namespaces/proxy-9334/services/http:proxy-service-jkgtm:portname1/proxy/: foo (200; 8.035704ms)
  I0719 13:35:37.818879 21 proxy.go:601] (18) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:443/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:443/proxy/t... (200; 7.815715ms)
  I0719 13:35:37.819305 21 proxy.go:601] (18) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:160/proxy/: foo (200; 8.120004ms)
  I0719 13:35:37.819327 21 proxy.go:601] (18) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/r... (200; 8.015592ms)
  I0719 13:35:37.819429 21 proxy.go:601] (18) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/rewrit... (200; 8.271791ms)
  I0719 13:35:37.819465 21 proxy.go:601] (18) /api/v1/namespaces/proxy-9334/services/proxy-service-jkgtm:portname2/proxy/: bar (200; 8.823811ms)
  I0719 13:35:37.819482 21 proxy.go:601] (18) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:462/proxy/: tls qux (200; 8.482809ms)
  I0719 13:35:37.819495 21 proxy.go:601] (18) /api/v1/namespaces/proxy-9334/services/https:proxy-service-jkgtm:tlsportname2/proxy/: tls qux (200; 8.562151ms)
  I0719 13:35:37.819530 21 proxy.go:601] (18) /api/v1/namespaces/proxy-9334/services/https:proxy-service-jkgtm:tlsportname1/proxy/: tls baz (200; 8.277698ms)
  I0719 13:35:37.819545 21 proxy.go:601] (18) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:160/proxy/: foo (200; 8.722798ms)
  I0719 13:35:37.822662 21 proxy.go:601] (18) /api/v1/namespaces/proxy-9334/services/http:proxy-service-jkgtm:portname2/proxy/: bar (200; 11.694008ms)
  I0719 13:35:37.822706 21 proxy.go:601] (18) /api/v1/namespaces/proxy-9334/services/proxy-service-jkgtm:portname1/proxy/: foo (200; 11.804651ms)
  I0719 13:35:37.826571 21 proxy.go:601] (19) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:162/proxy/: bar (200; 3.834164ms)
  I0719 13:35:37.827105 21 proxy.go:601] (19) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:460/proxy/: tls baz (200; 4.33524ms)
  I0719 13:35:37.827627 21 proxy.go:601] (19) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:160/proxy/: foo (200; 4.24791ms)
  I0719 13:35:37.827928 21 proxy.go:601] (19) /api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/http:proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/r... (200; 4.701953ms)
  I0719 13:35:37.829096 21 proxy.go:601] (19) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:162/proxy/: bar (200; 5.829611ms)
  I0719 13:35:37.829142 21 proxy.go:601] (19) /api/v1/namespaces/proxy-9334/services/proxy-service-jkgtm:portname1/proxy/: foo (200; 6.160216ms)
  I0719 13:35:37.829480 21 proxy.go:601] (19) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:1080/proxy/rewrit... (200; 6.165221ms)
  I0719 13:35:37.829502 21 proxy.go:601] (19) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:443/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:443/proxy/t... (200; 6.631437ms)
  I0719 13:35:37.829788 21 proxy.go:601] (19) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d/proxy/: <a href="/api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d/proxy/rewriteme">... (200; 6.699794ms)
  I0719 13:35:37.829813 21 proxy.go:601] (19) /api/v1/namespaces/proxy-9334/services/https:proxy-service-jkgtm:tlsportname1/proxy/: tls baz (200; 6.63023ms)
  I0719 13:35:37.829830 21 proxy.go:601] (19) /api/v1/namespaces/proxy-9334/pods/proxy-service-jkgtm-f884ccc7d-lc48d:160/proxy/: foo (200; 6.344856ms)
  I0719 13:35:37.830028 21 proxy.go:601] (19) /api/v1/namespaces/proxy-9334/pods/https:proxy-service-jkgtm-f884ccc7d-lc48d:462/proxy/: tls qux (200; 6.907851ms)
  I0719 13:35:37.830953 21 proxy.go:601] (19) /api/v1/namespaces/proxy-9334/services/proxy-service-jkgtm:portname2/proxy/: bar (200; 7.487405ms)
  I0719 13:35:37.832396 21 proxy.go:601] (19) /api/v1/namespaces/proxy-9334/services/http:proxy-service-jkgtm:portname2/proxy/: bar (200; 8.975638ms)
  I0719 13:35:37.832423 21 proxy.go:601] (19) /api/v1/namespaces/proxy-9334/services/http:proxy-service-jkgtm:portname1/proxy/: foo (200; 9.266857ms)
  I0719 13:35:37.832459 21 proxy.go:601] (19) /api/v1/namespaces/proxy-9334/services/https:proxy-service-jkgtm:tlsportname2/proxy/: tls qux (200; 9.432983ms)
  I0719 13:35:37.840139 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-9334" for this suite. @ 07/19/25 13:35:37.846
• [2.353 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:54
  STEP: Creating a kubernetes client @ 07/19/25 13:35:37.856
  I0719 13:35:37.856952 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename projected @ 07/19/25 13:35:37.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:35:37.871
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:35:37.874
  STEP: Creating a pod to test downward API volume plugin @ 07/19/25 13:35:37.876
  E0719 13:35:37.882410      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:35:38.882505      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:35:39.882758      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:35:40.882867      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:35:41.882947      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/19/25 13:35:41.911
  I0719 13:35:41.914823 21 output.go:207] Trying to get logs from node ip-172-31-42-177 pod downwardapi-volume-e6cbcadb-af3a-4cff-b9a0-28ba6dd3b066 container client-container: <nil>
  STEP: delete the pod @ 07/19/25 13:35:41.923
  I0719 13:35:41.944215 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1058" for this suite. @ 07/19/25 13:35:41.95
• [4.103 seconds]
------------------------------
SSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:308
  STEP: Creating a kubernetes client @ 07/19/25 13:35:41.959
  I0719 13:35:41.959647 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename dns @ 07/19/25 13:35:41.96
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:35:41.972
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:35:41.974
  STEP: Creating a test headless service @ 07/19/25 13:35:41.977
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3325.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-querier-2.dns-test-service-2.dns-3325.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3325.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-querier-2.dns-test-service-2.dns-3325.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-3325.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service-2.dns-3325.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-3325.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service-2.dns-3325.svc.cluster.local;sleep 1; done
   @ 07/19/25 13:35:41.983
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3325.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-3325.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3325.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-3325.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-3325.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-3325.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-3325.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-3325.svc.cluster.local;sleep 1; done
   @ 07/19/25 13:35:41.983
  STEP: creating a pod to probe DNS @ 07/19/25 13:35:41.983
  STEP: submitting the pod to kubernetes @ 07/19/25 13:35:41.983
  E0719 13:35:42.883126      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:35:43.883373      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/19/25 13:35:44.011
  STEP: looking for the results for each expected name from probers @ 07/19/25 13:35:44.015
  I0719 13:35:44.022408 21 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-3325.svc.cluster.local from pod dns-3325/dns-test-f0dc90df-a129-494c-8df4-5db9ffddd754: the server could not find the requested resource (get pods dns-test-f0dc90df-a129-494c-8df4-5db9ffddd754)
  I0719 13:35:44.026332 21 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-3325.svc.cluster.local from pod dns-3325/dns-test-f0dc90df-a129-494c-8df4-5db9ffddd754: the server could not find the requested resource (get pods dns-test-f0dc90df-a129-494c-8df4-5db9ffddd754)
  I0719 13:35:44.032189 21 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-3325.svc.cluster.local from pod dns-3325/dns-test-f0dc90df-a129-494c-8df4-5db9ffddd754: the server could not find the requested resource (get pods dns-test-f0dc90df-a129-494c-8df4-5db9ffddd754)
  I0719 13:35:44.037235 21 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-3325.svc.cluster.local from pod dns-3325/dns-test-f0dc90df-a129-494c-8df4-5db9ffddd754: the server could not find the requested resource (get pods dns-test-f0dc90df-a129-494c-8df4-5db9ffddd754)
  I0719 13:35:44.041505 21 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-3325.svc.cluster.local from pod dns-3325/dns-test-f0dc90df-a129-494c-8df4-5db9ffddd754: the server could not find the requested resource (get pods dns-test-f0dc90df-a129-494c-8df4-5db9ffddd754)
  I0719 13:35:44.047045 21 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-3325.svc.cluster.local from pod dns-3325/dns-test-f0dc90df-a129-494c-8df4-5db9ffddd754: the server could not find the requested resource (get pods dns-test-f0dc90df-a129-494c-8df4-5db9ffddd754)
  I0719 13:35:44.052314 21 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-3325.svc.cluster.local from pod dns-3325/dns-test-f0dc90df-a129-494c-8df4-5db9ffddd754: the server could not find the requested resource (get pods dns-test-f0dc90df-a129-494c-8df4-5db9ffddd754)
  I0719 13:35:44.056913 21 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-3325.svc.cluster.local from pod dns-3325/dns-test-f0dc90df-a129-494c-8df4-5db9ffddd754: the server could not find the requested resource (get pods dns-test-f0dc90df-a129-494c-8df4-5db9ffddd754)
  I0719 13:35:44.056938 21 dns_common.go:506] Lookups using dns-3325/dns-test-f0dc90df-a129-494c-8df4-5db9ffddd754 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-3325.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-3325.svc.cluster.local agnhost_udp@dns-test-service-2.dns-3325.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-3325.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-3325.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-3325.svc.cluster.local jessie_udp@dns-test-service-2.dns-3325.svc.cluster.local jessie_tcp@dns-test-service-2.dns-3325.svc.cluster.local]

  I0719 13:35:44.064744 21 dns_common.go:514] Pod client logs for webserver: 
  I0719 13:35:44.071874 21 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0719 13:35:44.080178 21 dns_common.go:514] Pod client logs for jessie-querier: 
  E0719 13:35:44.883594      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:35:45.883834      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:35:46.884037      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:35:47.884197      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:35:48.884547      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:35:49.058852 21 dns_common.go:546] DNS probes using dns-3325/dns-test-f0dc90df-a129-494c-8df4-5db9ffddd754 succeeded

  STEP: deleting the pod @ 07/19/25 13:35:49.058
  STEP: deleting the test headless service @ 07/19/25 13:35:49.072
  I0719 13:35:49.090236 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3325" for this suite. @ 07/19/25 13:35:49.094
• [7.142 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:163
  STEP: Creating a kubernetes client @ 07/19/25 13:35:49.101
  I0719 13:35:49.101762 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename downward-api @ 07/19/25 13:35:49.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:35:49.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:35:49.117
  STEP: Creating the pod @ 07/19/25 13:35:49.12
  E0719 13:35:49.884660      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:35:50.884834      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:35:51.671754 21 pod_client.go:173] Successfully updated pod "annotationupdate63065e3a-f0d5-48b0-bd4f-03169417ed86"
  E0719 13:35:51.885709      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:35:52.886613      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:35:53.887480      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:35:54.887574      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:35:55.701182 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4629" for this suite. @ 07/19/25 13:35:55.706
• [6.613 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 07/19/25 13:35:55.714
  I0719 13:35:55.714812 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename webhook @ 07/19/25 13:35:55.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:35:55.728
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:35:55.731
  STEP: Setting up server cert @ 07/19/25 13:35:55.754
  E0719 13:35:55.887687      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/19/25 13:35:56.744
  STEP: Deploying the webhook pod @ 07/19/25 13:35:56.75
  STEP: Wait for the deployment to be ready @ 07/19/25 13:35:56.764
  I0719 13:35:56.774492 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0719 13:35:56.888589      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:35:57.888733      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/19/25 13:35:58.79
  STEP: Verifying the service has paired with the endpoint @ 07/19/25 13:35:58.811
  E0719 13:35:58.889574      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:35:59.811519 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0719 13:35:59.818709 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  E0719 13:35:59.890209      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9114-crds.webhook.example.com via the AdmissionRegistration API @ 07/19/25 13:36:00.327
  STEP: Creating a custom resource that should be mutated by the webhook @ 07/19/25 13:36:00.342
  E0719 13:36:00.890653      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:36:01.890768      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:36:02.891810      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:36:02.950514 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9232" for this suite. @ 07/19/25 13:36:02.955
  STEP: Destroying namespace "webhook-markers-5359" for this suite. @ 07/19/25 13:36:02.963
• [7.258 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 07/19/25 13:36:02.972
  I0719 13:36:02.972752 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename webhook @ 07/19/25 13:36:02.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:36:02.985
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:36:02.988
  STEP: Setting up server cert @ 07/19/25 13:36:03.012
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/19/25 13:36:03.498
  STEP: Deploying the webhook pod @ 07/19/25 13:36:03.505
  STEP: Wait for the deployment to be ready @ 07/19/25 13:36:03.519
  I0719 13:36:03.529318 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0719 13:36:03.891848      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:36:04.891968      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/19/25 13:36:05.544
  STEP: Verifying the service has paired with the endpoint @ 07/19/25 13:36:05.559
  E0719 13:36:05.892062      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:36:06.560452 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0719 13:36:06.566303 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  E0719 13:36:06.892565      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-5586-crds.webhook.example.com via the AdmissionRegistration API @ 07/19/25 13:36:07.078
  STEP: Creating a custom resource while v1 is storage version @ 07/19/25 13:36:07.095
  E0719 13:36:07.893585      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:36:08.893802      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 07/19/25 13:36:09.125
  STEP: Patching the custom resource while v2 is storage version @ 07/19/25 13:36:09.14
  I0719 13:36:09.740288 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7387" for this suite. @ 07/19/25 13:36:09.746
  STEP: Destroying namespace "webhook-markers-6832" for this suite. @ 07/19/25 13:36:09.754
• [6.790 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:189
  STEP: Creating a kubernetes client @ 07/19/25 13:36:09.762
  I0719 13:36:09.762979 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename emptydir @ 07/19/25 13:36:09.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:36:09.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:36:09.778
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 07/19/25 13:36:09.781
  E0719 13:36:09.894334      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:36:10.894519      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:36:11.894631      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:36:12.894697      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/19/25 13:36:13.811
  I0719 13:36:13.814729 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod pod-8b9e3068-15e2-4b22-88f7-59279844b323 container test-container: <nil>
  STEP: delete the pod @ 07/19/25 13:36:13.824
  I0719 13:36:13.847999 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1874" for this suite. @ 07/19/25 13:36:13.853
• [4.100 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:109
  STEP: Creating a kubernetes client @ 07/19/25 13:36:13.862
  I0719 13:36:13.862762 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename projected @ 07/19/25 13:36:13.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:36:13.875
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:36:13.878
  STEP: Creating configMap with name projected-configmap-test-volume-map-161d8eb2-0186-4bf1-ab15-797cfa26923f @ 07/19/25 13:36:13.881
  STEP: Creating a pod to test consume configMaps @ 07/19/25 13:36:13.885
  E0719 13:36:13.895298      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:36:14.895673      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:36:15.895764      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:36:16.896504      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:36:17.896583      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/19/25 13:36:17.912
  I0719 13:36:17.917729 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod pod-projected-configmaps-d05fe22f-c2e0-4274-b602-b4efba7ad99c container agnhost-container: <nil>
  STEP: delete the pod @ 07/19/25 13:36:17.926
  I0719 13:36:17.943786 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4472" for this suite. @ 07/19/25 13:36:17.949
• [4.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 07/19/25 13:36:17.957
  I0719 13:36:17.957298 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename disruption @ 07/19/25 13:36:17.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:36:17.972
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:36:17.975
  STEP: Waiting for the pdb to be processed @ 07/19/25 13:36:17.983
  E0719 13:36:18.896700      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:36:19.896772      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 07/19/25 13:36:20.016
  I0719 13:36:20.022458 21 disruption.go:691] running pods: 0 < 3
  E0719 13:36:20.897581      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:36:21.898575      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:36:22.027090 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8301" for this suite. @ 07/19/25 13:36:22.032
• [4.085 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:353
  STEP: Creating a kubernetes client @ 07/19/25 13:36:22.042
  I0719 13:36:22.042530 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename dns @ 07/19/25 13:36:22.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:36:22.055
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:36:22.058
  STEP: Creating a test externalName service @ 07/19/25 13:36:22.062
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2967.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-2967.svc.cluster.local; sleep 1; done
   @ 07/19/25 13:36:22.066
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2967.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-2967.svc.cluster.local; sleep 1; done
   @ 07/19/25 13:36:22.066
  STEP: creating a pod to probe DNS @ 07/19/25 13:36:22.066
  STEP: submitting the pod to kubernetes @ 07/19/25 13:36:22.067
  E0719 13:36:22.898653      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:36:23.898728      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/19/25 13:36:24.091
  STEP: looking for the results for each expected name from probers @ 07/19/25 13:36:24.094
  I0719 13:36:24.106055 21 dns_common.go:571] DNS probes using dns-test-b808372c-8fea-436a-9105-8d25a4fb6e10 succeeded

  STEP: changing the externalName to bar.example.com @ 07/19/25 13:36:24.106
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2967.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-2967.svc.cluster.local; sleep 1; done
   @ 07/19/25 13:36:24.119
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2967.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-2967.svc.cluster.local; sleep 1; done
   @ 07/19/25 13:36:24.119
  STEP: creating a second pod to probe DNS @ 07/19/25 13:36:24.119
  STEP: submitting the pod to kubernetes @ 07/19/25 13:36:24.119
  E0719 13:36:24.898851      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:36:25.899536      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/19/25 13:36:26.138
  STEP: looking for the results for each expected name from probers @ 07/19/25 13:36:26.142
  I0719 13:36:26.149277 21 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-2967.svc.cluster.local from pod  dns-2967/dns-test-4dca24a1-45ca-4236-aad9-879c63e453e4 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0719 13:36:26.154644 21 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-2967.svc.cluster.local from pod  dns-2967/dns-test-4dca24a1-45ca-4236-aad9-879c63e453e4 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0719 13:36:26.154673 21 dns_common.go:506] Lookups using dns-2967/dns-test-4dca24a1-45ca-4236-aad9-879c63e453e4 failed for: [agnhost_udp@dns-test-service-3.dns-2967.svc.cluster.local jessie_udp@dns-test-service-3.dns-2967.svc.cluster.local]

  I0719 13:36:26.162636 21 dns_common.go:514] Pod client logs for webserver: 
  I0719 13:36:26.171016 21 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0719 13:36:26.178389 21 dns_common.go:514] Pod client logs for jessie-querier: 
  E0719 13:36:26.899658      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:36:27.899738      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:36:28.899870      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:36:29.899957      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:36:30.900175      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:36:31.153642 21 dns_common.go:571] DNS probes using dns-test-4dca24a1-45ca-4236-aad9-879c63e453e4 succeeded

  STEP: changing the service to type=ClusterIP @ 07/19/25 13:36:31.153
  I0719 13:36:31.178629      21 warnings.go:110] "Warning: spec.externalName is ignored when spec.type is not \"ExternalName\""
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2967.svc.cluster.local A > /results/agnhost_udp@dns-test-service-3.dns-2967.svc.cluster.local; sleep 1; done
   @ 07/19/25 13:36:31.178
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2967.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-2967.svc.cluster.local; sleep 1; done
   @ 07/19/25 13:36:31.178
  STEP: creating a third pod to probe DNS @ 07/19/25 13:36:31.178
  STEP: submitting the pod to kubernetes @ 07/19/25 13:36:31.185
  E0719 13:36:31.900269      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:36:32.900382      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/19/25 13:36:33.203
  STEP: looking for the results for each expected name from probers @ 07/19/25 13:36:33.208
  I0719 13:36:33.220043 21 dns_common.go:571] DNS probes using dns-test-dbbe2e1f-3219-4671-a041-3095b0507fa1 succeeded

  STEP: deleting the pod @ 07/19/25 13:36:33.22
  STEP: deleting the pod @ 07/19/25 13:36:33.238
  STEP: deleting the pod @ 07/19/25 13:36:33.253
  STEP: deleting the test externalName service @ 07/19/25 13:36:33.266
  I0719 13:36:33.289782 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2967" for this suite. @ 07/19/25 13:36:33.294
• [11.260 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:108
  STEP: Creating a kubernetes client @ 07/19/25 13:36:33.302
  I0719 13:36:33.302696 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename runtimeclass @ 07/19/25 13:36:33.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:36:33.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:36:33.318
  E0719 13:36:33.900594      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:36:34.900727      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:36:35.357848 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3655" for this suite. @ 07/19/25 13:36:35.367
• [2.075 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 07/19/25 13:36:35.378
  I0719 13:36:35.378840 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/19/25 13:36:35.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:36:35.392
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:36:35.395
  I0719 13:36:35.399125 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  E0719 13:36:35.900850      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:36:36.420787 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9623" for this suite. @ 07/19/25 13:36:36.425
• [1.055 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 07/19/25 13:36:36.433
  I0719 13:36:36.433869 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename crd-webhook @ 07/19/25 13:36:36.434
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:36:36.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:36:36.451
  STEP: Setting up server cert @ 07/19/25 13:36:36.454
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 07/19/25 13:36:36.628
  STEP: Deploying the custom resource conversion webhook pod @ 07/19/25 13:36:36.635
  STEP: Wait for the deployment to be ready @ 07/19/25 13:36:36.65
  I0719 13:36:36.658573 21 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0719 13:36:36.901895      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:36:37.902099      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/19/25 13:36:38.671
  STEP: Verifying the service has paired with the endpoint @ 07/19/25 13:36:38.689
  E0719 13:36:38.902596      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:36:39.689386 21 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0719 13:36:39.696497 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  E0719 13:36:39.902755      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:36:40.902941      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:36:41.903039      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 07/19/25 13:36:42.251
  STEP: v2 custom resource should be converted @ 07/19/25 13:36:42.258
  I0719 13:36:42.832433 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-917" for this suite. @ 07/19/25 13:36:42.839
• [6.413 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 07/19/25 13:36:42.847
  I0719 13:36:42.847116 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename container-probe @ 07/19/25 13:36:42.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:36:42.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:36:42.861
  STEP: Creating pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584 @ 07/19/25 13:36:42.863
  E0719 13:36:42.903810      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:36:43.904031      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/19/25 13:36:44.887
  I0719 13:36:44.891704 21 container_probe.go:1748] Initial restart count of pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf is 0
  I0719 13:36:44.895558 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:36:44.904728      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:36:45.904953      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:36:46.901791 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:36:46.905875      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:36:47.906064      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:36:48.906177      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:36:48.907263 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:36:49.906356      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:36:50.906519      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:36:50.913216 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:36:51.906628      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:36:52.906688      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:36:52.919133 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:36:53.906814      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:36:54.907570      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:36:54.924230 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:36:55.908261      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:36:56.908375      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:36:56.930777 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:36:57.908806      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:36:58.908880      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:36:58.936608 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:36:59.909508      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:37:00.910578      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:37:00.942393 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:37:01.911399      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:37:02.911501      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:37:02.947902 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:37:03.911645      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:37:04.911738      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:37:04.955030 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  I0719 13:37:04.955067 21 container_probe.go:1762] Restart count of pod container-probe-7584/liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf is now 1 (20.063336863s elapsed)
  E0719 13:37:05.911963      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:37:06.912033      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:37:06.961149 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:37:07.912154      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:37:08.912227      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:37:08.965287 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:37:09.912404      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:37:10.912487      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:37:10.971200 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:37:11.912614      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:37:12.912761      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:37:12.976552 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:37:13.913544      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:37:14.913593      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:37:14.983914 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:37:15.913816      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:37:16.913983      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:37:16.989764 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:37:17.914727      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:37:18.914941      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:37:18.995488 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:37:19.915265      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:37:20.915509      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:37:21.002219 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:37:21.915613      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:37:22.915740      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:37:23.008424 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:37:23.915873      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:37:24.915969      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:37:25.014051 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  I0719 13:37:25.014082 21 container_probe.go:1762] Restart count of pod container-probe-7584/liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf is now 2 (40.122351057s elapsed)
  E0719 13:37:25.916797      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:37:26.916862      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:37:27.020746 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:37:27.917495      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:37:28.917575      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:37:29.026807 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:37:29.917686      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:37:30.917755      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:37:31.033185 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:37:31.918119      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:37:32.918187      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:37:33.038037 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:37:33.918959      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:37:34.919189      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:37:35.042328 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:37:35.919389      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:37:36.919606      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:37:37.049244 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:37:37.919805      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:37:38.920023      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:37:39.056063 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:37:39.920570      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:37:40.920671      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:37:41.061546 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:37:41.920831      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:37:42.920922      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:37:43.068109 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:37:43.921057      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:37:44.921188      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:37:45.074050 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  I0719 13:37:45.074087 21 container_probe.go:1762] Restart count of pod container-probe-7584/liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf is now 3 (1m0.182356678s elapsed)
  E0719 13:37:45.921495      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:37:46.921608      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:37:47.080001 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:37:47.921776      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:37:48.921869      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:37:49.085395 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:37:49.922303      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:37:50.922522      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:37:51.091622 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:37:51.922678      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:37:52.922764      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:37:53.096911 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:37:53.922807      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:37:54.923617      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:37:55.102595 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:37:55.924597      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:37:56.925585      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:37:57.109324 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:37:57.925705      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:37:58.925738      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:37:59.116008 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:37:59.925819      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:38:00.925881      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:38:01.122289 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:38:01.925976      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:38:02.926058      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:38:03.129584 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:38:03.926182      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:38:04.926687      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:38:05.134941 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  I0719 13:38:05.134977 21 container_probe.go:1762] Restart count of pod container-probe-7584/liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf is now 4 (1m20.243246041s elapsed)
  E0719 13:38:05.927566      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:38:06.927637      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:38:07.141852 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:38:07.928581      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:38:08.928788      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:38:09.147446 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:38:09.929563      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:38:10.929780      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:38:11.153764 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:38:11.930563      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:38:12.930686      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:38:13.159597 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:38:13.930821      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:38:14.930984      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:38:15.164948 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:38:15.931528      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:38:16.931614      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:38:17.170227 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:38:17.932051      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:38:18.932270      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:38:19.176570 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:38:19.932401      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:38:20.932536      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:38:21.181914 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:38:21.932678      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:38:22.932746      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:38:23.187944 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:38:23.933834      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:38:24.933938      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:38:25.194302 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:38:25.934063      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:38:26.934156      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:38:27.199317 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:38:27.935207      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:38:28.935718      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:38:29.206037 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:38:29.936321      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:38:30.936512      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:38:31.211636 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:38:31.936575      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:38:32.936693      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:38:33.216681 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:38:33.937427      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:38:34.937536      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:38:35.223104 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:38:35.937749      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:38:36.937931      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:38:37.228518 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:38:37.937923      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:38:38.938570      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:38:39.234776 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:38:39.939544      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:38:40.939678      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:38:41.239589 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:38:41.940714      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:38:42.940804      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:38:43.244374 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:38:43.941087      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:38:44.941187      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:38:45.250903 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:38:45.941517      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:38:46.941699      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:38:47.255511 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:38:47.942331      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:38:48.942556      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:38:49.262008 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:38:49.942712      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:38:50.942896      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:38:51.266660 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:38:51.943014      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:38:52.943545      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:38:53.271442 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:38:53.943702      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:38:54.943795      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:38:55.279035 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:38:55.944815      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:38:56.944995      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:38:57.284583 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:38:57.945940      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:38:58.946037      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:38:59.290405 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:38:59.946823      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:39:00.946924      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:39:01.297633 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:39:01.947444      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:39:02.947490      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:39:03.303203 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  E0719 13:39:03.947585      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:39:04.947682      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:39:05.310247 21 container_probe.go:1758] Get pod liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf in namespace container-probe-7584
  I0719 13:39:05.310283 21 container_probe.go:1762] Restart count of pod container-probe-7584/liveness-a564fec9-ba5f-4f01-95c9-410c04b46caf is now 5 (2m20.418552183s elapsed)
  STEP: deleting the pod @ 07/19/25 13:39:05.31
  I0719 13:39:05.324678 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7584" for this suite. @ 07/19/25 13:39:05.33
• [142.493 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:194
  STEP: Creating a kubernetes client @ 07/19/25 13:39:05.34
  I0719 13:39:05.340153 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename projected @ 07/19/25 13:39:05.34
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:39:05.352
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:39:05.355
  STEP: Creating a pod to test downward API volume plugin @ 07/19/25 13:39:05.357
  E0719 13:39:05.947808      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:39:06.947879      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:39:07.948038      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:39:08.948112      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/19/25 13:39:09.387
  I0719 13:39:09.391101 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod downwardapi-volume-6be7be2c-217c-4c1d-9f9e-fd7284ea13c9 container client-container: <nil>
  STEP: delete the pod @ 07/19/25 13:39:09.404
  I0719 13:39:09.422738 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1720" for this suite. @ 07/19/25 13:39:09.427
• [4.096 seconds]
------------------------------
SS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:90
  STEP: Creating a kubernetes client @ 07/19/25 13:39:09.435
  I0719 13:39:09.435733 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename containers @ 07/19/25 13:39:09.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:39:09.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:39:09.451
  STEP: Creating a pod to test override all @ 07/19/25 13:39:09.453
  E0719 13:39:09.948171      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:39:10.948292      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:39:11.949163      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:39:12.949366      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/19/25 13:39:13.483
  I0719 13:39:13.486822 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod client-containers-f3d7436a-1b01-438b-aee9-91a3bf501d45 container agnhost-container: <nil>
  STEP: delete the pod @ 07/19/25 13:39:13.496
  I0719 13:39:13.518527 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-9619" for this suite. @ 07/19/25 13:39:13.524
• [4.099 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 07/19/25 13:39:13.534
  I0719 13:39:13.534729 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename configmap @ 07/19/25 13:39:13.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:39:13.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:39:13.547
  STEP: creating a ConfigMap @ 07/19/25 13:39:13.55
  STEP: fetching the ConfigMap @ 07/19/25 13:39:13.554
  STEP: patching the ConfigMap @ 07/19/25 13:39:13.557
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 07/19/25 13:39:13.562
  STEP: deleting the ConfigMap by collection with a label selector @ 07/19/25 13:39:13.566
  STEP: listing all ConfigMaps in test namespace @ 07/19/25 13:39:13.576
  I0719 13:39:13.579555 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4450" for this suite. @ 07/19/25 13:39:13.626
• [0.100 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 07/19/25 13:39:13.634
  I0719 13:39:13.634601 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename container-runtime @ 07/19/25 13:39:13.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:39:13.646
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:39:13.649
  STEP: create the container @ 07/19/25 13:39:13.651
  I0719 13:39:13.661880      21 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 07/19/25 13:39:13.661
  E0719 13:39:13.949504      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:39:14.949636      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: get the container status @ 07/19/25 13:39:15.678
  STEP: the container should be terminated @ 07/19/25 13:39:15.681
  STEP: the termination message should be set @ 07/19/25 13:39:15.681
  I0719 13:39:15.681996 21 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 07/19/25 13:39:15.682
  I0719 13:39:15.700545 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9236" for this suite. @ 07/19/25 13:39:15.705
• [2.080 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:109
  STEP: Creating a kubernetes client @ 07/19/25 13:39:15.714
  I0719 13:39:15.714857 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename configmap @ 07/19/25 13:39:15.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:39:15.731
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:39:15.733
  STEP: Creating configMap with name configmap-test-volume-map-343f8efa-ed3b-4580-894e-db3fe3fa13c3 @ 07/19/25 13:39:15.735
  STEP: Creating a pod to test consume configMaps @ 07/19/25 13:39:15.741
  E0719 13:39:15.949967      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:39:16.950053      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/19/25 13:39:17.763
  I0719 13:39:17.767592 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod pod-configmaps-3617a9dd-5be3-4d28-8e31-8a390c76eb99 container agnhost-container: <nil>
  STEP: delete the pod @ 07/19/25 13:39:17.777
  I0719 13:39:17.798324 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6632" for this suite. @ 07/19/25 13:39:17.803
• [2.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 07/19/25 13:39:17.815
  I0719 13:39:17.815859 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename var-expansion @ 07/19/25 13:39:17.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:39:17.828
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:39:17.831
  E0719 13:39:17.950081      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:39:18.950195      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:39:19.860483 21 delete.go:62] Deleting pod "var-expansion-94a34755-2f50-4af9-a848-c77ac779911e" in namespace "var-expansion-2730"
  I0719 13:39:19.870722 21 delete.go:70] Wait up to 5m0s for pod "var-expansion-94a34755-2f50-4af9-a848-c77ac779911e" to be fully deleted
  E0719 13:39:19.951018      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:39:20.951131      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:39:21.882572 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2730" for this suite. @ 07/19/25 13:39:21.887
• [4.079 seconds]
------------------------------
S
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:194
  STEP: Creating a kubernetes client @ 07/19/25 13:39:21.898
  I0719 13:39:21.899011 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename downward-api @ 07/19/25 13:39:21.899
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:39:21.914
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:39:21.917
  STEP: Creating a pod to test downward api env vars @ 07/19/25 13:39:21.919
  E0719 13:39:21.951802      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:39:22.952025      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:39:23.952684      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:39:24.952825      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/19/25 13:39:25.947
  I0719 13:39:25.952453 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod downward-api-2b03046a-d7e8-427b-811e-d537410efbf3 container dapi-container: <nil>
  E0719 13:39:25.953545      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the pod @ 07/19/25 13:39:25.962
  I0719 13:39:25.979151 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-535" for this suite. @ 07/19/25 13:39:25.984
• [4.094 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:394
  STEP: Creating a kubernetes client @ 07/19/25 13:39:25.993
  I0719 13:39:25.993173 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename kubectl @ 07/19/25 13:39:25.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:39:26.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:39:26.008
  STEP: creating all guestbook components @ 07/19/25 13:39:26.011
  I0719 13:39:26.011309 21 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0719 13:39:26.011406 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-1171 create -f -'
  I0719 13:39:26.110579 21 builder.go:146] stderr: ""
  I0719 13:39:26.110816 21 builder.go:147] stdout: "service/agnhost-replica created\n"
  I0719 13:39:26.110957 21 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0719 13:39:26.111112 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-1171 create -f -'
  I0719 13:39:26.211606 21 builder.go:146] stderr: ""
  I0719 13:39:26.211644 21 builder.go:147] stdout: "service/agnhost-primary created\n"
  I0719 13:39:26.211686 21 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0719 13:39:26.211755 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-1171 create -f -'
  I0719 13:39:26.306657 21 builder.go:146] stderr: ""
  I0719 13:39:26.306695 21 builder.go:147] stdout: "service/frontend created\n"
  I0719 13:39:26.306763 21 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0719 13:39:26.306829 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-1171 create -f -'
  I0719 13:39:26.369452 21 builder.go:146] stderr: ""
  I0719 13:39:26.369486 21 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I0719 13:39:26.369565 21 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0719 13:39:26.369681 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-1171 create -f -'
  I0719 13:39:26.442881 21 builder.go:146] stderr: ""
  I0719 13:39:26.442919 21 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I0719 13:39:26.443071 21 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0719 13:39:26.443186 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-1171 create -f -'
  I0719 13:39:26.501745 21 builder.go:146] stderr: ""
  I0719 13:39:26.501783 21 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 07/19/25 13:39:26.501
  I0719 13:39:26.501824 21 kubectl.go:2275] Waiting for all frontend pods to be Running.
  E0719 13:39:26.953760      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:39:27.954331      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:39:28.954529      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:39:29.954713      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:39:30.954798      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:39:31.552303 21 kubectl.go:2279] Waiting for frontend to serve content.
  I0719 13:39:31.565449 21 kubectl.go:2284] Trying to add a new entry to the guestbook.
  I0719 13:39:31.583876 21 kubectl.go:2289] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 07/19/25 13:39:31.596
  I0719 13:39:31.596115 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-1171 delete --grace-period=0 --force -f -'
  I0719 13:39:31.662499 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0719 13:39:31.662534 21 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 07/19/25 13:39:31.662
  I0719 13:39:31.662630 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-1171 delete --grace-period=0 --force -f -'
  I0719 13:39:31.731247 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0719 13:39:31.731277 21 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 07/19/25 13:39:31.731
  I0719 13:39:31.731407 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-1171 delete --grace-period=0 --force -f -'
  I0719 13:39:31.798650 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0719 13:39:31.798680 21 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 07/19/25 13:39:31.798
  I0719 13:39:31.798834 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-1171 delete --grace-period=0 --force -f -'
  I0719 13:39:31.845484 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0719 13:39:31.845514 21 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 07/19/25 13:39:31.845
  I0719 13:39:31.845669 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-1171 delete --grace-period=0 --force -f -'
  I0719 13:39:31.901752 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0719 13:39:31.901847 21 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 07/19/25 13:39:31.901
  I0719 13:39:31.902024 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-1171 delete --grace-period=0 --force -f -'
  E0719 13:39:31.955783      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:39:31.963457 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0719 13:39:31.963485 21 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I0719 13:39:31.963594 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1171" for this suite. @ 07/19/25 13:39:31.969
• [5.985 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 07/19/25 13:39:31.978
  I0719 13:39:31.978032 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename webhook @ 07/19/25 13:39:31.979
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:39:31.993
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:39:31.995
  STEP: Setting up server cert @ 07/19/25 13:39:32.019
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/19/25 13:39:32.841
  STEP: Deploying the webhook pod @ 07/19/25 13:39:32.848
  STEP: Wait for the deployment to be ready @ 07/19/25 13:39:32.861
  I0719 13:39:32.870242 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0719 13:39:32.956423      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:39:33.956511      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/19/25 13:39:34.884
  STEP: Verifying the service has paired with the endpoint @ 07/19/25 13:39:34.902
  E0719 13:39:34.957238      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:39:35.903002 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 07/19/25 13:39:35.908
  STEP: create a namespace for the webhook @ 07/19/25 13:39:35.924
  STEP: create a configmap should be unconditionally rejected by the webhook @ 07/19/25 13:39:35.936
  E0719 13:39:35.957795      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:39:36.001371 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-166" for this suite. @ 07/19/25 13:39:36.007
  STEP: Destroying namespace "webhook-markers-1628" for this suite. @ 07/19/25 13:39:36.015
  STEP: Destroying namespace "fail-closed-namespace-6706" for this suite. @ 07/19/25 13:39:36.023
• [4.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 07/19/25 13:39:36.03
  I0719 13:39:36.030757 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename secrets @ 07/19/25 13:39:36.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:39:36.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:39:36.048
  STEP: Creating projection with secret that has name secret-emptykey-test-ccd0287e-9a07-4442-bfa4-b54a682f01fc @ 07/19/25 13:39:36.051
  I0719 13:39:36.052851 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6387" for this suite. @ 07/19/25 13:39:36.107
• [0.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 07/19/25 13:39:36.116
  I0719 13:39:36.116378 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename pv @ 07/19/25 13:39:36.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:39:36.128
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:39:36.131
  STEP: Creating initial PV and PVC @ 07/19/25 13:39:36.134
  I0719 13:39:36.134129 21 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-6230" @ 07/19/25 13:39:36.148
  STEP: Listing PVCs in namespace "pv-6230" @ 07/19/25 13:39:36.155
  STEP: Patching the PV "pv-6230-zc8t9" @ 07/19/25 13:39:36.162
  STEP: Patching the PVC "pvc-xt9kp" @ 07/19/25 13:39:36.174
  STEP: Getting PV "pv-6230-zc8t9" @ 07/19/25 13:39:36.187
  STEP: Getting PVC "pvc-xt9kp" @ 07/19/25 13:39:36.191
  STEP: Deleting PVC "pvc-xt9kp" @ 07/19/25 13:39:36.195
  STEP: Confirm deletion of PVC "pvc-xt9kp" @ 07/19/25 13:39:36.204
  E0719 13:39:36.958592      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:39:37.959550      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-6230-zc8t9" @ 07/19/25 13:39:38.214
  STEP: Confirm deletion of PV "pv-6230-zc8t9" @ 07/19/25 13:39:38.223
  E0719 13:39:38.959689      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:39:39.959862      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Recreating another PV & PVC @ 07/19/25 13:39:40.234
  I0719 13:39:40.234450 21 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-6230-52pnc" @ 07/19/25 13:39:40.247
  STEP: Updating the PVC "pvc-l9826" @ 07/19/25 13:39:40.281
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-l9826=updated" @ 07/19/25 13:39:40.292
  STEP: Deleting PVC "pvc-l9826" via DeleteCollection @ 07/19/25 13:39:40.296
  STEP: Confirm deletion of PVC "pvc-l9826" @ 07/19/25 13:39:40.308
  E0719 13:39:40.960882      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:39:41.961069      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-6230-52pnc" via DeleteCollection @ 07/19/25 13:39:42.318
  STEP: Confirm deletion of PV "pv-6230-52pnc" @ 07/19/25 13:39:42.33
  E0719 13:39:42.961238      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:39:43.961330      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:39:44.341009 21 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0719 13:39:44.341037 21 pv.go:205] Deleting PersistentVolumeClaim "pvc-l9826"
  I0719 13:39:44.345960 21 pv.go:193] Deleting PersistentVolume "pv-6230-52pnc"
  I0719 13:39:44.350191 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-6230" for this suite. @ 07/19/25 13:39:44.357
• [8.249 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 07/19/25 13:39:44.365
  I0719 13:39:44.365383 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename var-expansion @ 07/19/25 13:39:44.365
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:39:44.377
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:39:44.38
  STEP: Creating a pod to test substitution in container's command @ 07/19/25 13:39:44.382
  E0719 13:39:44.961534      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:39:45.961610      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:39:46.962653      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:39:47.962854      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/19/25 13:39:48.411
  I0719 13:39:48.415691 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod var-expansion-82f8a4fb-8160-4f61-8e75-8854706df800 container dapi-container: <nil>
  STEP: delete the pod @ 07/19/25 13:39:48.424
  I0719 13:39:48.445374 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3527" for this suite. @ 07/19/25 13:39:48.449
• [4.093 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:74
  STEP: Creating a kubernetes client @ 07/19/25 13:39:48.458
  I0719 13:39:48.458787 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename configmap @ 07/19/25 13:39:48.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:39:48.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:39:48.474
  STEP: Creating configMap with name configmap-test-volume-be99a273-6ace-4061-9deb-2f88d1e0d669 @ 07/19/25 13:39:48.477
  STEP: Creating a pod to test consume configMaps @ 07/19/25 13:39:48.483
  E0719 13:39:48.963599      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:39:49.963700      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:39:50.963823      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:39:51.963938      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/19/25 13:39:52.508
  I0719 13:39:52.512505 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod pod-configmaps-b0255c54-3f47-468a-bf44-73f79f1bb669 container agnhost-container: <nil>
  STEP: delete the pod @ 07/19/25 13:39:52.521
  I0719 13:39:52.542697 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4140" for this suite. @ 07/19/25 13:39:52.548
• [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 07/19/25 13:39:52.556
  I0719 13:39:52.556601 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 07/19/25 13:39:52.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:39:52.568
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:39:52.57
  STEP: create the container to handle the HTTPGet hook request. @ 07/19/25 13:39:52.649
  E0719 13:39:52.964905      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:39:53.965964      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 07/19/25 13:39:54.677
  E0719 13:39:54.966675      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:39:55.967556      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 07/19/25 13:39:56.698
  E0719 13:39:56.967944      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:39:57.968015      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 07/19/25 13:39:58.717
  I0719 13:39:58.731515 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-6440" for this suite. @ 07/19/25 13:39:58.739
• [6.192 seconds]
------------------------------
SSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 07/19/25 13:39:58.748
  I0719 13:39:58.748487 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename cronjob @ 07/19/25 13:39:58.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:39:58.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:39:58.764
  STEP: Creating a suspended cronjob @ 07/19/25 13:39:58.767
  STEP: Ensuring no jobs are scheduled @ 07/19/25 13:39:58.772
  E0719 13:39:58.968563      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:39:59.968651      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:00.969560      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:01.969768      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:02.970114      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:03.970230      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:04.970586      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:05.970673      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:06.971712      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:07.971922      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:08.972480      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:09.972654      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:10.973124      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:11.973228      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:12.974127      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:13.974198      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:14.975238      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:15.975490      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:16.975796      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:17.975886      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:18.976398      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:19.976510      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:20.977099      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:21.977941      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:22.978463      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:23.978676      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:24.979649      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:25.979752      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:26.980578      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:27.981542      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:28.981682      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:29.981776      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:30.982813      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:31.982991      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:32.983866      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:33.983950      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:34.984196      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:35.984492      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:36.985144      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:37.985930      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:38.986632      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:39.986743      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:40.987455      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:41.987480      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:42.988135      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:43.988226      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:44.988437      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:45.988474      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:46.988938      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:47.989034      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:48.989452      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:49.989551      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:50.990416      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:51.990478      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:52.991534      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:53.991721      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:54.992735      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:55.992911      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:56.993688      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:57.993873      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:58.994697      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:40:59.994803      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:00.995450      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:01.996539      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:02.997054      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:03.997244      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:04.997263      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:05.997799      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:06.998451      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:07.998557      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:08.998568      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:09.998685      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:10.998718      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:11.999534      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:13.000233      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:14.000495      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:15.000503      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:16.000668      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:17.001568      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:18.001691      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:19.002114      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:20.002231      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:21.002431      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:22.002585      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:23.003538      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:24.004066      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:25.004242      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:26.005108      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:27.005288      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:28.005665      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:29.006613      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:30.007474      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:31.008533      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:32.008652      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:33.008849      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:34.009724      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:35.009813      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:36.010608      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:37.010782      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:38.010952      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:39.011692      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:40.012723      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:41.012825      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:42.012963      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:43.013055      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:44.013116      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:45.013337      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:46.013732      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:47.013825      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:48.013975      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:49.014139      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:50.014821      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:51.014897      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:52.015001      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:53.015064      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:54.016102      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:55.016792      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:56.017508      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:57.017595      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:58.018568      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:41:59.018594      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:00.018688      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:01.018908      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:02.019679      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:03.020560      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:04.021098      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:05.021176      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:06.021315      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:07.021472      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:08.021622      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:09.021767      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:10.022507      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:11.023558      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:12.023699      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:13.023815      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:14.024237      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:15.024357      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:16.024480      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:17.024593      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:18.024716      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:19.025087      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:20.025192      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:21.025256      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:22.026101      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:23.026195      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:24.026645      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:25.026715      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:26.027572      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:27.027640      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:28.028581      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:29.029081      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:30.030022      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:31.030186      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:32.030943      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:33.031560      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:34.032116      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:35.032227      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:36.032517      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:37.033061      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:38.033977      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:39.034160      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:40.034375      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:41.034488      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:42.034845      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:43.035027      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:44.036035      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:45.036145      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:46.036927      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:47.037531      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:48.038565      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:49.038712      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:50.038798      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:51.039023      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:52.039480      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:53.039654      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:54.040678      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:55.040803      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:56.041471      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:57.041649      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:58.042489      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:42:59.043072      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:00.044061      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:01.044173      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:02.044909      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:03.045715      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:04.046449      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:05.046487      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:06.047543      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:07.048533      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:08.048959      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:09.049017      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:10.049137      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:11.049551      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:12.049709      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:13.049898      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:14.050004      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:15.050185      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:16.050372      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:17.050572      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:18.051621      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:19.052148      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:20.052372      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:21.052561      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:22.053030      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:23.053212      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:24.054191      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:25.054389      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:26.054493      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:27.054655      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:28.054743      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:29.055100      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:30.055796      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:31.056521      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:32.057167      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:33.057255      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:34.057952      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:35.058049      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:36.058145      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:37.058567      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:38.058778      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:39.059095      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:40.059599      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:41.059797      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:42.060742      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:43.060864      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:44.061329      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:45.061474      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:46.061634      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:47.061833      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:48.062774      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:49.063166      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:50.063268      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:51.063508      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:52.063608      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:53.063789      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:54.064168      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:55.064371      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:56.064482      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:57.064673      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:58.064776      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:43:59.065684      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:00.066271      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:01.066385      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:02.066485      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:03.067537      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:04.067868      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:05.067964      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:06.068054      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:07.068537      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:08.069547      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:09.070211      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:10.070581      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:11.070593      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:12.071143      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:13.071339      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:14.071870      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:15.071993      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:16.072308      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:17.072511      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:18.072610      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:19.073680      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:20.073817      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:21.073936      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:22.075013      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:23.076054      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:24.076638      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:25.077537      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:26.077633      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:27.078541      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:28.078839      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:29.079734      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:30.080423      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:31.080616      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:32.081105      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:33.081544      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:34.081653      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:35.081864      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:36.082096      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:37.082243      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:38.082587      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:39.083200      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:40.083429      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:41.083481      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:42.083676      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:43.084549      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:44.084604      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:45.084724      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:46.084821      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:47.085542      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:48.086434      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:49.087327      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:50.088102      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:51.088538      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:52.089006      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:53.089183      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:54.090199      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:55.090331      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:56.090632      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:57.090810      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:44:58.090940      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 07/19/25 13:44:58.773
  STEP: Removing cronjob @ 07/19/25 13:44:58.781
  I0719 13:44:58.789960 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2903" for this suite. @ 07/19/25 13:44:58.796
• [300.055 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:458
  STEP: Creating a kubernetes client @ 07/19/25 13:44:58.804
  I0719 13:44:58.804108 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename resourcequota @ 07/19/25 13:44:58.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:44:58.817
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:44:58.82
  STEP: Counting existing ResourceQuota @ 07/19/25 13:44:58.822
  E0719 13:44:59.091917      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:45:00.092572      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:45:01.092674      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:45:02.092724      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:45:03.093362      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/19/25 13:45:03.829
  STEP: Ensuring resource quota status is calculated @ 07/19/25 13:45:03.836
  E0719 13:45:04.093720      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:45:05.093791      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 07/19/25 13:45:05.841
  STEP: Ensuring resource quota status captures replicaset creation @ 07/19/25 13:45:05.856
  E0719 13:45:06.094265      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:45:07.094509      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 07/19/25 13:45:07.862
  STEP: Ensuring resource quota status released usage @ 07/19/25 13:45:07.869
  E0719 13:45:08.095311      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:45:09.095509      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:45:09.875178 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3909" for this suite. @ 07/19/25 13:45:09.881
• [11.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:99
  STEP: Creating a kubernetes client @ 07/19/25 13:45:09.889
  I0719 13:45:09.889859 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename configmap @ 07/19/25 13:45:09.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:45:09.902
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:45:09.904
  STEP: Creating configMap with name configmap-test-volume-map-27b7b6e6-0515-4abe-9b97-1dddea46f2f3 @ 07/19/25 13:45:09.907
  STEP: Creating a pod to test consume configMaps @ 07/19/25 13:45:09.913
  E0719 13:45:10.095622      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:45:11.095725      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:45:12.096567      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:45:13.096643      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/19/25 13:45:13.939
  I0719 13:45:13.944567 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod pod-configmaps-c8b4f742-b407-4a8b-9100-d4b5e0310d87 container agnhost-container: <nil>
  STEP: delete the pod @ 07/19/25 13:45:13.961
  I0719 13:45:13.979570 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4077" for this suite. @ 07/19/25 13:45:13.984
• [4.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:306
  STEP: Creating a kubernetes client @ 07/19/25 13:45:13.991
  I0719 13:45:13.991987 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename namespaces @ 07/19/25 13:45:13.992
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:45:14.004
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:45:14.006
  STEP: Read namespace status @ 07/19/25 13:45:14.009
  I0719 13:45:14.014546 21 namespace.go:319] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 07/19/25 13:45:14.014
  I0719 13:45:14.023270 21 namespace.go:339] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 07/19/25 13:45:14.023
  I0719 13:45:14.032364 21 namespace.go:364] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0719 13:45:14.032442 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7175" for this suite. @ 07/19/25 13:45:14.085
  E0719 13:45:14.097201      21 retrywatcher.go:169] "Watch failed" err="context canceled"
• [0.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:250
  STEP: Creating a kubernetes client @ 07/19/25 13:45:14.098
  I0719 13:45:14.098096 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename downward-api @ 07/19/25 13:45:14.098
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:45:14.112
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:45:14.114
  STEP: Creating a pod to test downward API volume plugin @ 07/19/25 13:45:14.117
  E0719 13:45:15.097501      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:45:16.097570      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:45:17.097720      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:45:18.097791      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/19/25 13:45:18.144
  I0719 13:45:18.148786 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod downwardapi-volume-38f43253-2f63-497c-be8d-77cbcccb5269 container client-container: <nil>
  STEP: delete the pod @ 07/19/25 13:45:18.156
  I0719 13:45:18.172804 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3121" for this suite. @ 07/19/25 13:45:18.177
• [4.086 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2185
  STEP: Creating a kubernetes client @ 07/19/25 13:45:18.184
  I0719 13:45:18.184466 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename services @ 07/19/25 13:45:18.184
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:45:18.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:45:18.2
  STEP: creating service in namespace services-2274 @ 07/19/25 13:45:18.202
  STEP: creating service affinity-clusterip in namespace services-2274 @ 07/19/25 13:45:18.202
  I0719 13:45:18.233413 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0719 13:45:19.098179      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:45:20.098262      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:45:20.257244 21 resource.go:361] Creating new exec pod
  E0719 13:45:21.098522      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:45:22.099559      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:45:22.288526 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-2274 exec execpod-affinityv98kl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I0719 13:45:22.382651 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip (10.152.183.24) 80 port [tcp/http] succeeded!\n"
  I0719 13:45:22.382697 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0719 13:45:22.382767 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-2274 exec execpod-affinityv98kl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.24 80'
  I0719 13:45:22.464312 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.24 80\nConnection to 10.152.183.24 80 port [tcp/http] succeeded!\n"
  I0719 13:45:22.464354 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0719 13:45:22.464418 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-2274 exec execpod-affinityv98kl -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.24:80/ ; done'
  I0719 13:45:22.598872 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.24:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.24:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.24:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.24:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.24:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.24:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.24:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.24:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.24:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.24:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.24:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.24:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.24:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.24:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.24:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.24:80/\n"
  I0719 13:45:22.598929 21 builder.go:147] stdout: "\naffinity-clusterip-6dd57cf8dc-l4lsp\naffinity-clusterip-6dd57cf8dc-l4lsp\naffinity-clusterip-6dd57cf8dc-l4lsp\naffinity-clusterip-6dd57cf8dc-l4lsp\naffinity-clusterip-6dd57cf8dc-l4lsp\naffinity-clusterip-6dd57cf8dc-l4lsp\naffinity-clusterip-6dd57cf8dc-l4lsp\naffinity-clusterip-6dd57cf8dc-l4lsp\naffinity-clusterip-6dd57cf8dc-l4lsp\naffinity-clusterip-6dd57cf8dc-l4lsp\naffinity-clusterip-6dd57cf8dc-l4lsp\naffinity-clusterip-6dd57cf8dc-l4lsp\naffinity-clusterip-6dd57cf8dc-l4lsp\naffinity-clusterip-6dd57cf8dc-l4lsp\naffinity-clusterip-6dd57cf8dc-l4lsp\naffinity-clusterip-6dd57cf8dc-l4lsp"
  I0719 13:45:22.598944 21 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-l4lsp
  I0719 13:45:22.598952 21 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-l4lsp
  I0719 13:45:22.598957 21 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-l4lsp
  I0719 13:45:22.598962 21 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-l4lsp
  I0719 13:45:22.598968 21 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-l4lsp
  I0719 13:45:22.598974 21 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-l4lsp
  I0719 13:45:22.598979 21 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-l4lsp
  I0719 13:45:22.598984 21 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-l4lsp
  I0719 13:45:22.598989 21 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-l4lsp
  I0719 13:45:22.598994 21 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-l4lsp
  I0719 13:45:22.598999 21 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-l4lsp
  I0719 13:45:22.599005 21 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-l4lsp
  I0719 13:45:22.599010 21 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-l4lsp
  I0719 13:45:22.599015 21 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-l4lsp
  I0719 13:45:22.599019 21 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-l4lsp
  I0719 13:45:22.599024 21 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-l4lsp
  I0719 13:45:22.599087 21 service.go:4352] Cleaning up the exec pod
  I0719 13:45:22.650865 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2274" for this suite. @ 07/19/25 13:45:22.661
• [4.487 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:71
  STEP: Creating a kubernetes client @ 07/19/25 13:45:22.671
  I0719 13:45:22.671507 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/19/25 13:45:22.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:45:22.685
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:45:22.687
  I0719 13:45:22.690673 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  E0719 13:45:23.099659      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 07/19/25 13:45:23.985
  I0719 13:45:23.985205 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=crd-publish-openapi-5359 --namespace=crd-publish-openapi-5359 create -f -'
  I0719 13:45:24.046159 21 builder.go:146] stderr: ""
  I0719 13:45:24.046194 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2627-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0719 13:45:24.046234 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=crd-publish-openapi-5359 --namespace=crd-publish-openapi-5359 delete e2e-test-crd-publish-openapi-2627-crds test-foo'
  E0719 13:45:24.099671      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:45:24.108139 21 builder.go:146] stderr: ""
  I0719 13:45:24.108169 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2627-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I0719 13:45:24.108204 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=crd-publish-openapi-5359 --namespace=crd-publish-openapi-5359 apply -f -'
  I0719 13:45:24.161255 21 builder.go:146] stderr: ""
  I0719 13:45:24.161312 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2627-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0719 13:45:24.161455 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=crd-publish-openapi-5359 --namespace=crd-publish-openapi-5359 delete e2e-test-crd-publish-openapi-2627-crds test-foo'
  I0719 13:45:24.211550 21 builder.go:146] stderr: ""
  I0719 13:45:24.211594 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2627-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 07/19/25 13:45:24.211
  I0719 13:45:24.211658 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=crd-publish-openapi-5359 --namespace=crd-publish-openapi-5359 create -f -'
  I0719 13:45:24.252604 21 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 07/19/25 13:45:24.252
  I0719 13:45:24.252712 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=crd-publish-openapi-5359 --namespace=crd-publish-openapi-5359 create -f -'
  I0719 13:45:24.294377 21 builder.go:135] rc: 1
  I0719 13:45:24.294475 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=crd-publish-openapi-5359 --namespace=crd-publish-openapi-5359 apply -f -'
  I0719 13:45:24.341602 21 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 07/19/25 13:45:24.341
  I0719 13:45:24.341710 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=crd-publish-openapi-5359 --namespace=crd-publish-openapi-5359 create -f -'
  I0719 13:45:24.382602 21 builder.go:135] rc: 1
  I0719 13:45:24.382671 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=crd-publish-openapi-5359 --namespace=crd-publish-openapi-5359 apply -f -'
  I0719 13:45:24.433529 21 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 07/19/25 13:45:24.433
  I0719 13:45:24.433634 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=crd-publish-openapi-5359 explain e2e-test-crd-publish-openapi-2627-crds'
  I0719 13:45:24.473449 21 builder.go:146] stderr: ""
  I0719 13:45:24.473490 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-2627-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 07/19/25 13:45:24.473
  I0719 13:45:24.473719 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=crd-publish-openapi-5359 explain e2e-test-crd-publish-openapi-2627-crds.metadata'
  I0719 13:45:24.514618 21 builder.go:146] stderr: ""
  I0719 13:45:24.514743 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-2627-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0719 13:45:24.514910 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=crd-publish-openapi-5359 explain e2e-test-crd-publish-openapi-2627-crds.spec'
  I0719 13:45:24.554697 21 builder.go:146] stderr: ""
  I0719 13:45:24.554744 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-2627-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0719 13:45:24.554825 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=crd-publish-openapi-5359 explain e2e-test-crd-publish-openapi-2627-crds.spec.bars'
  I0719 13:45:24.594446 21 builder.go:146] stderr: ""
  I0719 13:45:24.594492 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-2627-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 07/19/25 13:45:24.594
  I0719 13:45:24.594749 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=crd-publish-openapi-5359 explain e2e-test-crd-publish-openapi-2627-crds.spec.bars2'
  I0719 13:45:24.636013 21 builder.go:135] rc: 1
  E0719 13:45:25.099862      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:45:25.925689 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5359" for this suite. @ 07/19/25 13:45:25.936
• [3.273 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:850
  STEP: Creating a kubernetes client @ 07/19/25 13:45:25.944
  I0719 13:45:25.944215 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename pods @ 07/19/25 13:45:25.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:45:25.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:45:25.962
  STEP: Create set of pods @ 07/19/25 13:45:25.965
  I0719 13:45:25.976437 21 pods.go:874] created test-pod-1
  I0719 13:45:25.984638 21 pods.go:874] created test-pod-2
  I0719 13:45:25.999039 21 pods.go:874] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 07/19/25 13:45:25.999
  E0719 13:45:26.099944      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:45:27.100014      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 07/19/25 13:45:28.042
  I0719 13:45:28.049215 21 pods.go:1139] Pod quantity 3 is different from expected quantity 0
  E0719 13:45:28.100286      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:45:29.047768 21 pods.go:1139] Pod quantity 3 is different from expected quantity 0
  E0719 13:45:29.100927      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:45:30.050699 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7778" for this suite. @ 07/19/25 13:45:30.056
• [4.123 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1251
  STEP: Creating a kubernetes client @ 07/19/25 13:45:30.067
  I0719 13:45:30.067318 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename services @ 07/19/25 13:45:30.067
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:45:30.084
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:45:30.087
  STEP: creating service nodeport-test with type=NodePort in namespace services-161 @ 07/19/25 13:45:30.09
  E0719 13:45:30.101815      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:45:30.133738 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0719 13:45:31.101981      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:45:32.102088      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:45:32.139982 21 resource.go:361] Creating new exec pod
  E0719 13:45:33.102518      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:45:34.102754      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:45:34.171297 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-161 exec execpodjjlcv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0719 13:45:34.258240 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.152.183.23) 80 port [tcp/http] succeeded!\n"
  I0719 13:45:34.258279 21 builder.go:147] stdout: "nodeport-test-5d7ddd994d-67qcx"
  I0719 13:45:34.258363 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-161 exec execpodjjlcv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.23 80'
  I0719 13:45:34.344440 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.23 80\nConnection to 10.152.183.23 80 port [tcp/http] succeeded!\n"
  I0719 13:45:34.344485 21 builder.go:147] stdout: "nodeport-test-5d7ddd994d-67qcx"
  I0719 13:45:34.344561 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-161 exec execpodjjlcv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.42.177 32019'
  I0719 13:45:34.428360 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.42.177 32019\nConnection to 172.31.42.177 32019 port [tcp/*] succeeded!\n"
  I0719 13:45:34.428399 21 builder.go:147] stdout: "nodeport-test-5d7ddd994d-2gzrs"
  I0719 13:45:34.428530 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-161 exec execpodjjlcv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.6.59 32019'
  I0719 13:45:34.508180 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.6.59 32019\nConnection to 172.31.6.59 32019 port [tcp/*] succeeded!\n"
  I0719 13:45:34.508226 21 builder.go:147] stdout: "nodeport-test-5d7ddd994d-2gzrs"
  I0719 13:45:34.508401 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-161" for this suite. @ 07/19/25 13:45:34.513
• [4.456 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 07/19/25 13:45:34.523
  I0719 13:45:34.523247 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename subjectreview @ 07/19/25 13:45:34.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:45:34.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:45:34.54
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-9313" @ 07/19/25 13:45:34.543
  I0719 13:45:34.548113 21 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-9313:e2e"
  I0719 13:45:34.548138 21 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-9313"}
  I0719 13:45:34.548156 21 subjectreviews.go:71] saUID: "e1608468-c5c5-4182-b837-7eadf08e4b0a"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-9313:e2e" @ 07/19/25 13:45:34.548
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-9313:e2e" @ 07/19/25 13:45:34.548
  I0719 13:45:34.550123 21 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-9313:e2e" api 'list' configmaps in "subjectreview-9313" namespace @ 07/19/25 13:45:34.55
  I0719 13:45:34.551816 21 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-9313:e2e" @ 07/19/25 13:45:34.551
  I0719 13:45:34.553821 21 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I0719 13:45:34.553839 21 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0719 13:45:34.553907 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-9313" for this suite. @ 07/19/25 13:45:34.559
• [0.048 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 07/19/25 13:45:34.571
  I0719 13:45:34.571466 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename secrets @ 07/19/25 13:45:34.571
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:45:34.582
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:45:34.585
  STEP: Creating secret with name secret-test-3f60c55d-3fa1-4086-a65e-9bb489e2c8f1 @ 07/19/25 13:45:34.588
  STEP: Creating a pod to test consume secrets @ 07/19/25 13:45:34.593
  E0719 13:45:35.103582      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:45:36.103666      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:45:37.103787      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:45:38.103893      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/19/25 13:45:38.623
  I0719 13:45:38.627246 21 output.go:207] Trying to get logs from node ip-172-31-42-177 pod pod-secrets-c1c22d3d-337d-4166-9f7b-ff40c534ac18 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/19/25 13:45:38.645
  I0719 13:45:38.667379 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6216" for this suite. @ 07/19/25 13:45:38.672
• [4.108 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 07/19/25 13:45:38.679
  I0719 13:45:38.679959 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename lease-test @ 07/19/25 13:45:38.68
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:45:38.695
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:45:38.698
  I0719 13:45:38.771398 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-3855" for this suite. @ 07/19/25 13:45:38.777
• [0.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:57
  STEP: Creating a kubernetes client @ 07/19/25 13:45:38.785
  I0719 13:45:38.785681 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename projected @ 07/19/25 13:45:38.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:45:38.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:45:38.803
  STEP: Creating configMap with name projected-configmap-test-volume-7c24f9c0-97d5-4fac-baa2-b302f806018d @ 07/19/25 13:45:38.806
  STEP: Creating a pod to test consume configMaps @ 07/19/25 13:45:38.811
  E0719 13:45:39.104875      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:45:40.105004      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:45:41.105121      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:45:42.105195      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/19/25 13:45:42.84
  I0719 13:45:42.844636 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod pod-projected-configmaps-7c24fdd2-d8f4-4dba-ac3f-dde2b590fe7b container agnhost-container: <nil>
  STEP: delete the pod @ 07/19/25 13:45:42.857
  I0719 13:45:42.878709 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5025" for this suite. @ 07/19/25 13:45:42.883
• [4.109 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:222
  STEP: Creating a kubernetes client @ 07/19/25 13:45:42.894
  I0719 13:45:42.894448 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename projected @ 07/19/25 13:45:42.894
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:45:42.907
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:45:42.91
  STEP: Creating a pod to test downward API volume plugin @ 07/19/25 13:45:42.913
  E0719 13:45:43.105744      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:45:44.105834      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:45:45.106657      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:45:46.106724      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/19/25 13:45:46.941
  I0719 13:45:46.945535 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod downwardapi-volume-e42c8731-2781-44b8-bc67-5da4ff98c2b9 container client-container: <nil>
  STEP: delete the pod @ 07/19/25 13:45:46.956
  I0719 13:45:46.979639 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6485" for this suite. @ 07/19/25 13:45:46.985
• [4.100 seconds]
------------------------------
[sig-auth] ServiceAccounts should create a serviceAccountToken and ensure a successful TokenReview [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:877
  STEP: Creating a kubernetes client @ 07/19/25 13:45:46.994
  I0719 13:45:46.994016 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename svcaccounts @ 07/19/25 13:45:46.994
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:45:47.008
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:45:47.011
  STEP: Creating a Serviceaccount "e2e-sa-2zkwk" in namespace "svcaccounts-6891" @ 07/19/25 13:45:47.014
  STEP: Creating a ServiceaccountToken "e2e-sa-2zkwk" in namespace "svcaccounts-6891" @ 07/19/25 13:45:47.021
  STEP: Creating a TokenReview for "e2e-sa-2zkwk" in namespace "svcaccounts-6891" @ 07/19/25 13:45:47.026
  I0719 13:45:47.029288 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6891" for this suite. @ 07/19/25 13:45:47.085
• [0.102 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Job should execute all indexes despite some failing when using backoffLimitPerIndex [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:609
  STEP: Creating a kubernetes client @ 07/19/25 13:45:47.095
  I0719 13:45:47.096011 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename job @ 07/19/25 13:45:47.096
  E0719 13:45:47.107330      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:45:47.109
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:45:47.112
  STEP: Creating an indexed job with backoffLimit per index and failing pods @ 07/19/25 13:45:47.116
  STEP: Awaiting for the job to fail as there are failed indexes @ 07/19/25 13:45:47.123
  E0719 13:45:48.107495      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:45:49.108623      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:45:50.108656      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:45:51.108739      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:45:52.108865      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:45:53.108960      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:45:54.109828      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:45:55.109930      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:45:56.110577      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:45:57.111574      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:45:58.111816      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:45:59.111983      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:00.112467      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:01.113538      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:02.113719      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:03.113923      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:04.114218      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:05.114459      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:06.114715      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:07.115703      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the Job status fields to ensure all indexes were executed @ 07/19/25 13:46:07.184
  I0719 13:46:07.190420 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6009" for this suite. @ 07/19/25 13:46:07.197
• [20.109 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1394
  STEP: Creating a kubernetes client @ 07/19/25 13:46:07.205
  I0719 13:46:07.205267 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename kubectl @ 07/19/25 13:46:07.205
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:46:07.22
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:46:07.223
  I0719 13:46:07.226662 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-2211 create -f -'
  I0719 13:46:07.310656 21 builder.go:146] stderr: ""
  I0719 13:46:07.310692 21 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I0719 13:46:07.310730 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-2211 create -f -'
  I0719 13:46:07.399060 21 builder.go:146] stderr: ""
  I0719 13:46:07.399101 21 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 07/19/25 13:46:07.399
  E0719 13:46:08.115799      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:46:08.405471 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0719 13:46:08.405501 21 framework.go:733] Found 1 / 1
  I0719 13:46:08.405515 21 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0719 13:46:08.409075 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0719 13:46:08.409093 21 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0719 13:46:08.409140 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-2211 describe pod agnhost-primary-nrr6k'
  I0719 13:46:08.464400 21 builder.go:146] stderr: ""
  I0719 13:46:08.464497 21 builder.go:147] stdout: "Name:             agnhost-primary-nrr6k\nNamespace:        kubectl-2211\nPriority:         0\nService Account:  default\nNode:             ip-172-31-6-59/172.31.6.59\nStart Time:       Sat, 19 Jul 2025 13:46:07 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               192.168.206.219\nIPs:\n  IP:           192.168.206.219\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://e0e55dbd25fde7f3fd4bec8b1a6d9874087bbd68ddc9e88d9a13243a12212db6\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.53\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sat, 19 Jul 2025 13:46:07 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-zch6r (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-zch6r:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    Optional:                false\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-2211/agnhost-primary-nrr6k to ip-172-31-6-59\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.53\" already present on machine\n  Normal  Created    1s    kubelet            Created container: agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  I0719 13:46:08.464561 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-2211 describe rc agnhost-primary'
  I0719 13:46:08.521605 21 builder.go:146] stderr: ""
  I0719 13:46:08.521660 21 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-2211\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.53\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  1s    replication-controller  Created pod: agnhost-primary-nrr6k\n"
  I0719 13:46:08.521808 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-2211 describe service agnhost-primary'
  I0719 13:46:08.573749 21 builder.go:146] stderr: ""
  I0719 13:46:08.573785 21 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-2211\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.152.183.50\nIPs:                      10.152.183.50\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                192.168.206.219:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I0719 13:46:08.579275 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-2211 describe node ip-172-31-3-129'
  I0719 13:46:08.644251 21 builder.go:146] stderr: ""
  I0719 13:46:08.644329 21 builder.go:147] stdout: "Name:               ip-172-31-3-129\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    juju-application=kubernetes-control-plane\n                    juju-charm=kubernetes-control-plane\n                    juju.io/cloud=ec2\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-3-129\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\n                    topology.kubernetes.io/zone=us-east-1a\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sat, 19 Jul 2025 11:52:24 +0000\nTaints:             node-role.kubernetes.io/control-plane:NoSchedule\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-3-129\n  AcquireTime:     <unset>\n  RenewTime:       Sat, 19 Jul 2025 13:45:58 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Sat, 19 Jul 2025 12:12:14 +0000   Sat, 19 Jul 2025 12:12:14 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Sat, 19 Jul 2025 13:41:10 +0000   Sat, 19 Jul 2025 11:52:24 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Sat, 19 Jul 2025 13:41:10 +0000   Sat, 19 Jul 2025 11:52:24 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Sat, 19 Jul 2025 13:41:10 +0000   Sat, 19 Jul 2025 11:52:24 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Sat, 19 Jul 2025 13:41:10 +0000   Sat, 19 Jul 2025 11:54:04 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  172.31.3.129\n  Hostname:    ip-172-31-3-129\nCapacity:\n  cpu:                2\n  ephemeral-storage:  15159300Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7967616Ki\n  pods:               110\nAllocatable:\n  cpu:                2\n  ephemeral-storage:  13970810857\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7865216Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 ec2221fce28943e25ad9784691823838\n  System UUID:                ec2221fc-e289-43e2-5ad9-784691823838\n  Boot ID:                    6ef8504e-dc31-4333-8248-77b8ef12d9fb\n  Kernel Version:             6.8.0-1030-aws\n  OS Image:                   Ubuntu 24.04.2 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.6.38\n  Kubelet Version:            v1.33.3\n  Kube-Proxy Version:         \nNon-terminated Pods:          (2 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 calico-node-76c2j                                          250m (12%)    0 (0%)      0 (0%)           0 (0%)         93m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-9ce81a3003f64498-6jckq    0 (0%)        0 (0%)      0 (0%)           0 (0%)         92m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                250m (12%)  0 (0%)\n  memory             0 (0%)      0 (0%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:              <none>\n"
  I0719 13:46:08.644440 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=kubectl-2211 describe namespace kubectl-2211'
  I0719 13:46:08.700199 21 builder.go:146] stderr: ""
  I0719 13:46:08.700251 21 builder.go:147] stdout: "Name:         kubectl-2211\nLabels:       e2e-framework=kubectl\n              e2e-run=37f7b574-4ada-4c29-9631-0d21e665751f\n              kubernetes.io/metadata.name=kubectl-2211\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0719 13:46:08.700374 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2211" for this suite. @ 07/19/25 13:46:08.704
• [1.507 seconds]
------------------------------
S
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 07/19/25 13:46:08.712
  I0719 13:46:08.712696 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename taint-single-pod @ 07/19/25 13:46:08.713
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:46:08.724
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:46:08.728
  I0719 13:46:08.731387 21 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0719 13:46:09.116631      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:10.116728      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:11.117591      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:12.117669      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:13.117766      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:14.117856      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:15.118603      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:16.118662      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:17.119580      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:18.119797      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:19.119927      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:20.120548      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:21.120678      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:22.120796      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:23.121761      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:24.122170      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:25.122870      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:26.122992      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:27.123021      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:28.123281      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:29.124327      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:30.124532      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:31.125287      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:32.125686      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:33.126547      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:34.127085      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:35.127547      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:36.127642      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:37.127737      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:38.128617      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:39.129117      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:40.129274      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:41.129415      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:42.129606      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:43.129774      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:44.130746      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:45.131778      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:46.131993      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:47.133038      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:48.133154      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:49.133227      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:50.133435      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:51.133484      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:52.133674      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:53.134568      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:54.135207      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:55.135245      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:56.135477      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:57.136160      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:58.136249      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:46:59.136882      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:00.136978      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:01.137412      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:02.137476      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:03.137670      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:04.138558      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:05.138665      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:06.138854      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:07.138972      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:08.139155      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:47:08.731789 21 util.go:390] Waiting for terminating namespaces to be deleted...
  I0719 13:47:08.738208 21 taints.go:144] Starting informer...
  STEP: Starting pod... @ 07/19/25 13:47:08.738
  I0719 13:47:08.952726 21 taints.go:294] Pod is running on ip-172-31-6-59. Tainting Node
  STEP: Trying to apply a taint on the Node @ 07/19/25 13:47:08.952
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 07/19/25 13:47:08.965
  STEP: Waiting short time to make sure Pod is queued for deletion @ 07/19/25 13:47:08.971
  I0719 13:47:08.971332 21 taints.go:313] Pod wasn't evicted. Proceeding
  I0719 13:47:08.971361 21 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 07/19/25 13:47:08.982
  STEP: Waiting some time to make sure that toleration time passed. @ 07/19/25 13:47:08.99
  E0719 13:47:09.139796      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:10.139896      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:11.140043      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:12.140557      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:13.140661      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:14.140804      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:15.140897      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:16.141035      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:17.141137      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:18.141288      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:19.141514      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:20.141615      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:21.141783      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:22.141912      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:23.142117      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:24.142209      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:25.142454      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:26.142577      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:27.142759      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:28.142949      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:29.143100      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:30.143298      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:31.143504      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:32.144574      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:33.144675      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:34.145039      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:35.146003      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:36.146125      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:37.146713      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:38.146804      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:39.147836      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:40.148537      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:41.148651      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:42.149529      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:43.149706      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:44.150247      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:45.150520      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:46.150712      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:47.150903      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:48.151104      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:49.151219      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:50.151467      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:51.151660      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:52.151843      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:53.152023      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:54.152154      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:55.152398      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:56.152578      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:57.152761      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:58.152954      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:47:59.153047      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:48:00.153229      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:48:01.153920      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:48:02.154100      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:48:03.154281      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:48:04.155206      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:48:05.155548      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:48:06.155735      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:48:07.156187      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:48:08.156288      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:48:09.157156      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:48:10.157240      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:48:11.157378      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:48:12.157503      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:48:13.157567      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:48:14.157704      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:48:15.157759      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:48:16.157881      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:48:17.157952      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:48:18.158077      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:48:19.158157      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:48:20.158379      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:48:21.158525      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:48:22.158667      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:48:23.159540      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:48:23.991427 21 taints.go:329] Pod wasn't evicted. Test successful
  I0719 13:48:23.991604 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-6994" for this suite. @ 07/19/25 13:48:23.998
• [135.297 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3630
  STEP: Creating a kubernetes client @ 07/19/25 13:48:24.009
  I0719 13:48:24.009562 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename services @ 07/19/25 13:48:24.01
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:48:24.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:48:24.023
  STEP: creating a collection of services @ 07/19/25 13:48:24.026
  I0719 13:48:24.026705 21 service.go:3666] Creating e2e-svc-a-w7qxd
  I0719 13:48:24.042639 21 service.go:3666] Creating e2e-svc-b-zdsch
  I0719 13:48:24.061289 21 service.go:3666] Creating e2e-svc-c-2v7wk
  STEP: deleting service collection @ 07/19/25 13:48:24.082
  I0719 13:48:24.127844 21 service.go:3701] Collection of services has been deleted
  I0719 13:48:24.127979 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9000" for this suite. @ 07/19/25 13:48:24.133
• [0.132 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1387
  STEP: Creating a kubernetes client @ 07/19/25 13:48:24.141
  I0719 13:48:24.141796 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename services @ 07/19/25 13:48:24.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:48:24.153
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:48:24.156
  E0719 13:48:24.159799      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-8169 @ 07/19/25 13:48:24.159
  STEP: changing the ExternalName service to type=ClusterIP @ 07/19/25 13:48:24.167
  I0719 13:48:24.200688 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0719 13:48:25.159999      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:48:26.160116      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:48:26.206521 21 resource.go:361] Creating new exec pod
  E0719 13:48:27.160285      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:48:28.160402      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:48:28.232306 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-8169 exec execpodxjkq8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0719 13:48:28.317939 21 builder.go:146] stderr: "+ nc -v -t -w 2+  externalname-service 80echo\n hostName\nConnection to externalname-service (10.152.183.165) 80 port [tcp/http] succeeded!\n"
  I0719 13:48:28.317989 21 builder.go:147] stdout: ""
  E0719 13:48:29.161109      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:48:29.233238 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-8169 exec execpodxjkq8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0719 13:48:29.311659 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.152.183.165) 80 port [tcp/http] succeeded!\n"
  I0719 13:48:29.311697 21 builder.go:147] stdout: "externalname-service-5c6b7954dd-v6t4p"
  I0719 13:48:29.311771 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-8169 exec execpodxjkq8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.165 80'
  I0719 13:48:29.389932 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.165 80\nConnection to 10.152.183.165 80 port [tcp/http] succeeded!\n"
  I0719 13:48:29.389971 21 builder.go:147] stdout: ""
  E0719 13:48:30.161474      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:48:30.312695 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2712053656 --namespace=services-8169 exec execpodxjkq8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.165 80'
  I0719 13:48:30.396093 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.165 80\nConnection to 10.152.183.165 80 port [tcp/http] succeeded!\n"
  I0719 13:48:30.396147 21 builder.go:147] stdout: "externalname-service-5c6b7954dd-nhwf4"
  I0719 13:48:30.396272 21 service.go:1396] Cleaning up the ExternalName to ClusterIP test service
  I0719 13:48:30.420858 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8169" for this suite. @ 07/19/25 13:48:30.427
• [6.295 seconds]
------------------------------
SS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 07/19/25 13:48:30.436
  I0719 13:48:30.436990 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename configmap @ 07/19/25 13:48:30.437
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:48:30.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:48:30.45
  STEP: Creating configMap configmap-5161/configmap-test-7e71fb60-cf38-4193-9c9d-316c9d3df4c7 @ 07/19/25 13:48:30.453
  STEP: Creating a pod to test consume configMaps @ 07/19/25 13:48:30.457
  E0719 13:48:31.161693      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:48:32.161820      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:48:33.161968      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:48:34.162087      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/19/25 13:48:34.48
  I0719 13:48:34.484434 21 output.go:207] Trying to get logs from node ip-172-31-42-177 pod pod-configmaps-43558dde-65a8-45aa-be88-c2bf69133b63 container env-test: <nil>
  STEP: delete the pod @ 07/19/25 13:48:34.496
  I0719 13:48:34.519199 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5161" for this suite. @ 07/19/25 13:48:34.524
• [4.095 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:423
  STEP: Creating a kubernetes client @ 07/19/25 13:48:34.532
  I0719 13:48:34.532294 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename configmap @ 07/19/25 13:48:34.532
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:48:34.546
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:48:34.55
  STEP: Creating configMap with name configmap-test-volume-8b49e14d-7ad5-4639-9fc0-2adaec555ee7 @ 07/19/25 13:48:34.553
  STEP: Creating a pod to test consume configMaps @ 07/19/25 13:48:34.558
  E0719 13:48:35.162627      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:48:36.163564      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/19/25 13:48:36.579
  I0719 13:48:36.582770 21 output.go:207] Trying to get logs from node ip-172-31-42-177 pod pod-configmaps-561537bf-56b7-496b-982e-4e46f9fd7b4a container configmap-volume-test: <nil>
  STEP: delete the pod @ 07/19/25 13:48:36.593
  I0719 13:48:36.615632 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5568" for this suite. @ 07/19/25 13:48:36.621
• [2.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:944
  STEP: Creating a kubernetes client @ 07/19/25 13:48:36.629
  I0719 13:48:36.629521 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename resourcequota @ 07/19/25 13:48:36.63
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:48:36.643
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:48:36.647
  STEP: Creating a ResourceQuota @ 07/19/25 13:48:36.65
  STEP: Getting a ResourceQuota @ 07/19/25 13:48:36.655
  STEP: Updating a ResourceQuota @ 07/19/25 13:48:36.658
  STEP: Verifying a ResourceQuota was modified @ 07/19/25 13:48:36.668
  STEP: Deleting a ResourceQuota @ 07/19/25 13:48:36.675
  STEP: Verifying the deleted ResourceQuota @ 07/19/25 13:48:36.683
  I0719 13:48:36.687415 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-20" for this suite. @ 07/19/25 13:48:36.722
• [0.101 seconds]
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 07/19/25 13:48:36.73
  I0719 13:48:36.730470 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename container-runtime @ 07/19/25 13:48:36.73
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:48:36.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:48:36.749
  STEP: create the container @ 07/19/25 13:48:36.752
  I0719 13:48:36.764887      21 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 07/19/25 13:48:36.764
  E0719 13:48:37.163670      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:48:38.164574      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:48:39.165027      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: get the container status @ 07/19/25 13:48:39.788
  STEP: the container should be terminated @ 07/19/25 13:48:39.792
  STEP: the termination message should be set @ 07/19/25 13:48:39.792
  I0719 13:48:39.792615 21 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 07/19/25 13:48:39.792
  I0719 13:48:39.810178 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2444" for this suite. @ 07/19/25 13:48:39.816
• [3.094 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:208
  STEP: Creating a kubernetes client @ 07/19/25 13:48:39.824
  I0719 13:48:39.824746 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename projected @ 07/19/25 13:48:39.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:48:39.833
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:48:39.837
  STEP: Creating a pod to test downward API volume plugin @ 07/19/25 13:48:39.84
  E0719 13:48:40.166072      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:48:41.166668      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:48:42.167583      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:48:43.167640      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/19/25 13:48:43.863
  I0719 13:48:43.867792 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod downwardapi-volume-4f4edf49-fde6-4850-8ff0-1eca7301669e container client-container: <nil>
  STEP: delete the pod @ 07/19/25 13:48:43.882
  I0719 13:48:43.903635 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2570" for this suite. @ 07/19/25 13:48:43.908
• [4.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 07/19/25 13:48:43.916
  I0719 13:48:43.916668 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename var-expansion @ 07/19/25 13:48:43.917
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:48:43.93
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:48:43.933
  STEP: creating the pod with failed condition @ 07/19/25 13:48:43.936
  E0719 13:48:44.168292      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:48:45.168396      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:48:46.168500      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:48:47.168600      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:48:48.168957      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:48:49.169153      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:48:50.169553      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:48:51.169636      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:48:52.170309      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:48:53.170534      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:48:54.170668      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:48:55.170739      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:48:56.171085      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:48:57.171153      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:48:58.171858      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:48:59.172054      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:00.173126      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:01.173307      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:02.174337      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:03.174705      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:04.175025      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:05.175210      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:06.175566      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:07.175631      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:08.175687      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:09.176207      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:10.176544      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:11.177540      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:12.178256      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:13.178542      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:14.179401      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:15.179493      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:16.179564      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:17.179758      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:18.180668      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:19.180836      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:20.181536      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:21.181722      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:22.182385      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:23.182583      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:24.182699      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:25.182877      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:26.182982      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:27.183175      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:28.183818      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:29.183936      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:30.184751      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:31.184944      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:32.185282      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:33.185477      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:34.186016      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:35.186108      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:36.186202      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:37.186612      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:38.187359      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:39.187458      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:40.188428      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:41.188489      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:42.188580      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:43.189546      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:44.189583      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:45.189777      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:46.190726      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:47.190838      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:48.191464      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:49.192253      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:50.192627      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:51.192806      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:52.192881      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:53.193064      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:54.194041      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:55.194229      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:56.195278      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:57.195385      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:58.196398      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:49:59.197247      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:00.197803      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:01.198582      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:02.199165      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:03.199315      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:04.200328      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:05.200523      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:06.200526      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:07.200712      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:08.200900      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:09.201802      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:10.201983      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:11.202529      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:12.202749      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:13.202844      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:14.203016      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:15.203855      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:16.203943      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:17.204086      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:18.204262      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:19.205255      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:20.205466      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:21.205988      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:22.206141      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:23.206600      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:24.207278      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:25.207504      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:26.207581      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:27.207719      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:28.207921      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:29.208259      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:30.208564      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:31.208692      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:32.208809      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:33.208972      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:34.209123      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:35.209686      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:36.210606      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:37.211576      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:38.211793      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:39.212256      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:40.212386      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:41.212759      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:42.212976      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:43.213105      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: updating the pod @ 07/19/25 13:50:43.95
  E0719 13:50:44.213221      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:50:44.467564 21 pod_client.go:173] Successfully updated pod "var-expansion-9c338f76-f140-43e3-b971-cae63331565f"
  STEP: waiting for pod running @ 07/19/25 13:50:44.467
  E0719 13:50:45.213360      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:46.213468      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 07/19/25 13:50:46.477
  I0719 13:50:46.477422 21 delete.go:62] Deleting pod "var-expansion-9c338f76-f140-43e3-b971-cae63331565f" in namespace "var-expansion-8911"
  I0719 13:50:46.489320 21 delete.go:70] Wait up to 5m0s for pod "var-expansion-9c338f76-f140-43e3-b971-cae63331565f" to be fully deleted
  E0719 13:50:47.213566      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:48.213761      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:49.214299      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:50.214415      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:51.214569      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:52.214784      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:53.214943      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:54.215053      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:55.215842      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:56.216562      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:57.217553      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:58.217614      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:50:59.218264      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:51:00.218380      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:51:01.218636      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:51:02.219612      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:51:03.219910      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:51:04.219925      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:51:05.219999      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:51:06.220183      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:51:07.220554      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:51:08.220739      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:51:09.221437      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:51:10.221620      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:51:11.221879      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:51:12.222555      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:51:13.222656      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:51:14.223398      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:51:15.223648      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:51:16.223838      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:51:17.224227      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:51:18.224433      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:51:18.583988 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8911" for this suite. @ 07/19/25 13:51:18.59
• [154.685 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 07/19/25 13:51:18.602
  I0719 13:51:18.602124 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename webhook @ 07/19/25 13:51:18.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:51:18.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:51:18.63
  STEP: Setting up server cert @ 07/19/25 13:51:18.653
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/19/25 13:51:18.841
  STEP: Deploying the webhook pod @ 07/19/25 13:51:18.848
  STEP: Wait for the deployment to be ready @ 07/19/25 13:51:18.865
  I0719 13:51:18.873384 21 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0719 13:51:19.225361      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:51:20.225417      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/19/25 13:51:20.89
  STEP: Verifying the service has paired with the endpoint @ 07/19/25 13:51:20.91
  E0719 13:51:21.225545      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:51:21.911156 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 07/19/25 13:51:21.916
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 07/19/25 13:51:21.918
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 07/19/25 13:51:21.918
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 07/19/25 13:51:21.918
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 07/19/25 13:51:21.919
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 07/19/25 13:51:21.92
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 07/19/25 13:51:21.921
  I0719 13:51:21.976464 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6369" for this suite. @ 07/19/25 13:51:21.981
  STEP: Destroying namespace "webhook-markers-9882" for this suite. @ 07/19/25 13:51:21.989
• [3.396 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:89
  STEP: Creating a kubernetes client @ 07/19/25 13:51:21.998
  I0719 13:51:21.998032 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename projected @ 07/19/25 13:51:21.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:51:22.011
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:51:22.014
  STEP: Creating configMap with name projected-configmap-test-volume-map-26037eba-d8fa-4db8-a045-3f00f31fc552 @ 07/19/25 13:51:22.017
  STEP: Creating a pod to test consume configMaps @ 07/19/25 13:51:22.022
  E0719 13:51:22.225957      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:51:23.226806      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:51:24.227113      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:51:25.227193      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/19/25 13:51:26.05
  I0719 13:51:26.054422 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod pod-projected-configmaps-5c54c1ff-4409-49eb-8825-e7993d421db7 container agnhost-container: <nil>
  STEP: delete the pod @ 07/19/25 13:51:26.072
  I0719 13:51:26.095416 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-364" for this suite. @ 07/19/25 13:51:26.101
• [4.112 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:678
  STEP: Creating a kubernetes client @ 07/19/25 13:51:26.109
  I0719 13:51:26.109745 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename validating-admission-policy @ 07/19/25 13:51:26.11
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:51:26.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:51:26.127
  STEP: getting /apis @ 07/19/25 13:51:26.137
  STEP: getting /apis/admissionregistration.k8s.io @ 07/19/25 13:51:26.141
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 07/19/25 13:51:26.142
  STEP: creating @ 07/19/25 13:51:26.143
  STEP: getting @ 07/19/25 13:51:26.16
  STEP: listing @ 07/19/25 13:51:26.164
  STEP: watching @ 07/19/25 13:51:26.167
  I0719 13:51:26.167840 21 validatingadmissionpolicy.go:773] starting watch
  STEP: patching @ 07/19/25 13:51:26.169
  STEP: updating @ 07/19/25 13:51:26.177
  I0719 13:51:26.186511 21 validatingadmissionpolicy.go:801] waiting for watch events with expected annotations
  STEP: deleting @ 07/19/25 13:51:26.186
  STEP: deleting a collection @ 07/19/25 13:51:26.204
  E0719 13:51:26.228094      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:51:26.233841 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-7197" for this suite. @ 07/19/25 13:51:26.24
• [0.139 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:190
  STEP: Creating a kubernetes client @ 07/19/25 13:51:26.248
  I0719 13:51:26.248918 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename emptydir-wrapper @ 07/19/25 13:51:26.249
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:51:26.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:51:26.265
  STEP: Creating 50 configmaps @ 07/19/25 13:51:26.268
  STEP: Creating RC which spawns configmap-volume pods @ 07/19/25 13:51:26.546
  I0719 13:51:26.645595 21 resource.go:81] Pod name wrapped-volume-race-5cfc230f-e2f0-44bd-87cf-60d5aa9733ab: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 07/19/25 13:51:26.645
  E0719 13:51:27.228513      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:51:28.229566      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 07/19/25 13:51:28.688
  I0719 13:51:28.702576 21 resource.go:81] Pod name wrapped-volume-race-b106ff36-aa39-4af2-8127-1fdd72138bdd: Found 0 pods out of 5
  E0719 13:51:29.230275      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:51:30.230382      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:51:31.230516      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:51:32.231565      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:51:33.231753      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:51:33.711211 21 resource.go:81] Pod name wrapped-volume-race-b106ff36-aa39-4af2-8127-1fdd72138bdd: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 07/19/25 13:51:33.711
  STEP: Creating RC which spawns configmap-volume pods @ 07/19/25 13:51:33.742
  I0719 13:51:33.763460 21 resource.go:81] Pod name wrapped-volume-race-6045cd96-2234-4e38-a593-2d77add0b69b: Found 1 pods out of 5
  E0719 13:51:34.232248      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:51:35.232473      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:51:36.232572      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:51:37.232711      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:51:38.232842      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:51:38.771268 21 resource.go:81] Pod name wrapped-volume-race-6045cd96-2234-4e38-a593-2d77add0b69b: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 07/19/25 13:51:38.771
  STEP: deleting ReplicationController wrapped-volume-race-6045cd96-2234-4e38-a593-2d77add0b69b in namespace emptydir-wrapper-2928, will wait for the garbage collector to delete the pods @ 07/19/25 13:51:38.794
  I0719 13:51:38.859014 21 resources.go:139] Deleting ReplicationController wrapped-volume-race-6045cd96-2234-4e38-a593-2d77add0b69b took: 9.416317ms
  I0719 13:51:38.959852 21 resources.go:163] Terminating ReplicationController wrapped-volume-race-6045cd96-2234-4e38-a593-2d77add0b69b pods took: 100.834062ms
  E0719 13:51:39.233741      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-b106ff36-aa39-4af2-8127-1fdd72138bdd in namespace emptydir-wrapper-2928, will wait for the garbage collector to delete the pods @ 07/19/25 13:51:40.16
  I0719 13:51:40.226152 21 resources.go:139] Deleting ReplicationController wrapped-volume-race-b106ff36-aa39-4af2-8127-1fdd72138bdd took: 9.882984ms
  E0719 13:51:40.234415      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:51:40.326765 21 resources.go:163] Terminating ReplicationController wrapped-volume-race-b106ff36-aa39-4af2-8127-1fdd72138bdd pods took: 100.606158ms
  E0719 13:51:41.234530      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-5cfc230f-e2f0-44bd-87cf-60d5aa9733ab in namespace emptydir-wrapper-2928, will wait for the garbage collector to delete the pods @ 07/19/25 13:51:41.927
  I0719 13:51:41.993084 21 resources.go:139] Deleting ReplicationController wrapped-volume-race-5cfc230f-e2f0-44bd-87cf-60d5aa9733ab took: 10.458806ms
  I0719 13:51:42.093706 21 resources.go:163] Terminating ReplicationController wrapped-volume-race-5cfc230f-e2f0-44bd-87cf-60d5aa9733ab pods took: 100.618505ms
  E0719 13:51:42.235385      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 07/19/25 13:51:43.194
  E0719 13:51:43.235421      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:51:43.582386 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-2928" for this suite. @ 07/19/25 13:51:43.587
• [17.347 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:194
  STEP: Creating a kubernetes client @ 07/19/25 13:51:43.596
  I0719 13:51:43.596501 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename runtimeclass @ 07/19/25 13:51:43.596
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:51:43.611
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:51:43.614
  STEP: getting /apis @ 07/19/25 13:51:43.617
  STEP: getting /apis/node.k8s.io @ 07/19/25 13:51:43.62
  STEP: getting /apis/node.k8s.io/v1 @ 07/19/25 13:51:43.622
  STEP: creating @ 07/19/25 13:51:43.623
  STEP: watching @ 07/19/25 13:51:43.642
  I0719 13:51:43.642681 21 runtimeclass.go:278] starting watch
  STEP: getting @ 07/19/25 13:51:43.649
  STEP: listing @ 07/19/25 13:51:43.652
  STEP: patching @ 07/19/25 13:51:43.657
  STEP: updating @ 07/19/25 13:51:43.664
  I0719 13:51:43.668933 21 runtimeclass.go:308] waiting for watch events with expected annotations
  STEP: deleting @ 07/19/25 13:51:43.668
  STEP: deleting a collection @ 07/19/25 13:51:43.687
  I0719 13:51:43.708285 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5937" for this suite. @ 07/19/25 13:51:43.715
• [0.128 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 07/19/25 13:51:43.724
  I0719 13:51:43.724700 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename disruption @ 07/19/25 13:51:43.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:51:43.737
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:51:43.74
  STEP: creating the pdb @ 07/19/25 13:51:43.743
  STEP: Waiting for the pdb to be processed @ 07/19/25 13:51:43.75
  E0719 13:51:44.235516      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:51:45.235676      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 07/19/25 13:51:45.756
  STEP: Waiting for the pdb to be processed @ 07/19/25 13:51:45.767
  STEP: patching the pdb @ 07/19/25 13:51:45.771
  STEP: Waiting for the pdb to be processed @ 07/19/25 13:51:45.783
  E0719 13:51:46.235823      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:51:47.236283      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be deleted @ 07/19/25 13:51:47.797
  I0719 13:51:47.801771 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7146" for this suite. @ 07/19/25 13:51:47.81
• [4.096 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1086
  STEP: Creating a kubernetes client @ 07/19/25 13:51:47.821
  I0719 13:51:47.821226 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename pods @ 07/19/25 13:51:47.821
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:51:47.833
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:51:47.836
  STEP: Create a pod @ 07/19/25 13:51:47.84
  E0719 13:51:48.237157      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:51:49.237235      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: patching /status @ 07/19/25 13:51:49.861
  I0719 13:51:49.872209 21 pods.go:1123] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0719 13:51:49.872311 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7916" for this suite. @ 07/19/25 13:51:49.879
• [2.067 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:129
  STEP: Creating a kubernetes client @ 07/19/25 13:51:49.888
  I0719 13:51:49.888301 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename emptydir @ 07/19/25 13:51:49.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:51:49.9
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:51:49.904
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 07/19/25 13:51:49.907
  E0719 13:51:50.238092      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:51:51.238202      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/19/25 13:51:51.929
  I0719 13:51:51.934378 21 output.go:207] Trying to get logs from node ip-172-31-42-177 pod pod-ca8aa7cc-f9ce-4ad8-a71a-d5a30389b694 container test-container: <nil>
  STEP: delete the pod @ 07/19/25 13:51:51.953
  I0719 13:51:51.977960 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8697" for this suite. @ 07/19/25 13:51:51.982
• [2.104 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:216
  STEP: Creating a kubernetes client @ 07/19/25 13:51:51.992
  I0719 13:51:51.992241 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename sched-preemption @ 07/19/25 13:51:51.992
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:51:52.005
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:51:52.008
  I0719 13:51:52.028007 21 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0719 13:51:52.238930      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:51:53.239037      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:51:54.239482      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:51:55.239588      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:51:56.240364      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:51:57.240478      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:51:58.240599      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:51:59.241294      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:52:00.241508      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:52:01.243493      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:52:02.243636      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:52:03.243831      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:52:04.244284      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:52:05.244423      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:52:06.245121      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:52:07.245223      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:52:08.246184      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:52:09.246241      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:52:10.247296      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:52:11.248193      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:52:12.249093      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:52:13.249230      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:52:14.250033      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:52:15.250217      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:52:16.250548      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:52:17.250731      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:52:18.251376      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:52:19.251478      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:52:20.252493      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:52:21.252633      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:52:22.253371      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:52:23.253487      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:52:24.253981      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:52:25.254122      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:52:26.254549      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:52:27.254661      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:52:28.255584      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:52:29.256189      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:52:30.256230      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:52:31.256736      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:52:32.257257      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:52:33.257549      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:52:34.258142      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:52:35.258263      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:52:36.258554      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:52:37.258656      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:52:38.259694      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:52:39.259850      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:52:40.259981      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:52:41.260491      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:52:42.261543      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:52:43.261810      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:52:44.262755      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:52:45.262941      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:52:46.263806      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:52:47.264001      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:52:48.264756      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:52:49.264895      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:52:50.265565      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:52:51.265641      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:52:52.035584 21 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 07/19/25 13:52:52.04
  STEP: Adding a custom resource @ 07/19/25 13:52:52.04
  I0719 13:52:52.062099 21 preemption.go:257] Created pod: pod0-0-sched-preemption-low-priority
  I0719 13:52:52.071870 21 preemption.go:257] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 07/19/25 13:52:52.071
  I0719 13:52:52.089554 21 preemption.go:257] Created pod: pod1-0-sched-preemption-medium-priority
  I0719 13:52:52.097488 21 preemption.go:257] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 07/19/25 13:52:52.097
  I0719 13:52:52.119481 21 preemption.go:257] Created pod: pod2-0-sched-preemption-medium-priority
  I0719 13:52:52.127822 21 preemption.go:257] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 07/19/25 13:52:52.127
  E0719 13:52:52.266061      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:52:53.266119      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 07/19/25 13:52:54.16
  E0719 13:52:54.267074      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:52:55.267177      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:52:56.267560      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:52:57.267640      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 07/19/25 13:52:58.266
  E0719 13:52:58.267808      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 07/19/25 13:52:58.28
  STEP: Removing a custom resource @ 07/19/25 13:52:58.292
  I0719 13:52:58.307096 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-6471" for this suite. @ 07/19/25 13:52:58.31
• [66.328 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:706
  STEP: Creating a kubernetes client @ 07/19/25 13:52:58.32
  I0719 13:52:58.320332 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename sched-pred @ 07/19/25 13:52:58.321
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:52:58.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:52:58.338
  I0719 13:52:58.342053 21 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0719 13:52:58.353606 21 util.go:390] Waiting for terminating namespaces to be deleted...
  I0719 13:52:58.357171 21 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-42-177 before test
  I0719 13:52:58.380328 21 predicates.go:958] nginx-ingress-controller-kubernetes-worker-75jzt from ingress-nginx-kubernetes-worker started at 2025-07-19 12:06:52 +0000 UTC (1 container statuses recorded)
  I0719 13:52:58.380442 21 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0719 13:52:58.380490 21 predicates.go:958] calico-node-tv24k from kube-system started at 2025-07-19 12:08:17 +0000 UTC (1 container statuses recorded)
  I0719 13:52:58.380521 21 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0719 13:52:58.380538 21 predicates.go:958] pod0-1-sched-preemption-medium-priority from sched-preemption-6471 started at 2025-07-19 13:52:52 +0000 UTC (1 container statuses recorded)
  I0719 13:52:58.380543 21 predicates.go:960] 	Container pod0-1-sched-preemption-medium-priority ready: true, restart count 0
  I0719 13:52:58.380597 21 predicates.go:958] sonobuoy-e2e-job-c9d8c2a4e5e24525 from sonobuoy started at 2025-07-19 12:13:46 +0000 UTC (2 container statuses recorded)
  I0719 13:52:58.380606 21 predicates.go:960] 	Container e2e ready: true, restart count 0
  I0719 13:52:58.380611 21 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0719 13:52:58.380616 21 predicates.go:958] sonobuoy-systemd-logs-daemon-set-9ce81a3003f64498-fgps6 from sonobuoy started at 2025-07-19 12:13:47 +0000 UTC (2 container statuses recorded)
  I0719 13:52:58.380620 21 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0719 13:52:58.380625 21 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0719 13:52:58.380691 21 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-6-59 before test
  I0719 13:52:58.384899 21 predicates.go:958] nginx-ingress-controller-kubernetes-worker-nxd2c from ingress-nginx-kubernetes-worker started at 2025-07-19 13:47:20 +0000 UTC (1 container statuses recorded)
  I0719 13:52:58.384918 21 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0719 13:52:58.384925 21 predicates.go:958] calico-node-9fhxn from kube-system started at 2025-07-19 12:11:42 +0000 UTC (1 container statuses recorded)
  I0719 13:52:58.384930 21 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0719 13:52:58.384936 21 predicates.go:958] pod1-0-sched-preemption-medium-priority from sched-preemption-6471 started at 2025-07-19 13:52:52 +0000 UTC (1 container statuses recorded)
  I0719 13:52:58.384941 21 predicates.go:960] 	Container pod1-0-sched-preemption-medium-priority ready: true, restart count 0
  I0719 13:52:58.384947 21 predicates.go:958] pod1-1-sched-preemption-medium-priority from sched-preemption-6471 started at 2025-07-19 13:52:52 +0000 UTC (1 container statuses recorded)
  I0719 13:52:58.384953 21 predicates.go:960] 	Container pod1-1-sched-preemption-medium-priority ready: true, restart count 0
  I0719 13:52:58.384958 21 predicates.go:958] sonobuoy from sonobuoy started at 2025-07-19 12:13:45 +0000 UTC (1 container statuses recorded)
  I0719 13:52:58.384964 21 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0719 13:52:58.384969 21 predicates.go:958] sonobuoy-systemd-logs-daemon-set-9ce81a3003f64498-n6kv8 from sonobuoy started at 2025-07-19 12:13:46 +0000 UTC (2 container statuses recorded)
  I0719 13:52:58.384974 21 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0719 13:52:58.384979 21 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0719 13:52:58.384984 21 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-64-234 before test
  I0719 13:52:58.464370 21 predicates.go:958] nginx-ingress-controller-kubernetes-worker-7rrx5 from ingress-nginx-kubernetes-worker started at 2025-07-19 11:54:23 +0000 UTC (1 container statuses recorded)
  I0719 13:52:58.464391 21 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0719 13:52:58.464398 21 predicates.go:958] calico-node-lkdps from kube-system started at 2025-07-19 12:11:57 +0000 UTC (1 container statuses recorded)
  I0719 13:52:58.464403 21 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0719 13:52:58.464407 21 predicates.go:958] coredns-5d946bb58-nbpbm from kube-system started at 2025-07-19 11:54:23 +0000 UTC (1 container statuses recorded)
  I0719 13:52:58.464411 21 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0719 13:52:58.464428 21 predicates.go:958] kube-state-metrics-b84f44f45-2nqrm from kube-system started at 2025-07-19 11:54:23 +0000 UTC (1 container statuses recorded)
  I0719 13:52:58.464433 21 predicates.go:960] 	Container kube-state-metrics ready: true, restart count 2
  I0719 13:52:58.464437 21 predicates.go:958] metrics-server-v0.7.2-7d878b47f8-gcczm from kube-system started at 2025-07-19 11:54:23 +0000 UTC (2 container statuses recorded)
  I0719 13:52:58.464442 21 predicates.go:960] 	Container metrics-server ready: true, restart count 0
  I0719 13:52:58.464446 21 predicates.go:960] 	Container metrics-server-nanny ready: true, restart count 0
  I0719 13:52:58.464450 21 predicates.go:958] dashboard-metrics-scraper-5cf87bc988-79lk5 from kubernetes-dashboard started at 2025-07-19 11:54:23 +0000 UTC (1 container statuses recorded)
  I0719 13:52:58.464454 21 predicates.go:960] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I0719 13:52:58.464459 21 predicates.go:958] kubernetes-dashboard-6858576c98-4jkn6 from kubernetes-dashboard started at 2025-07-19 11:54:23 +0000 UTC (1 container statuses recorded)
  I0719 13:52:58.464464 21 predicates.go:960] 	Container kubernetes-dashboard ready: true, restart count 2
  I0719 13:52:58.464469 21 predicates.go:958] pod2-0-sched-preemption-medium-priority from sched-preemption-6471 started at 2025-07-19 13:52:52 +0000 UTC (1 container statuses recorded)
  I0719 13:52:58.464480 21 predicates.go:960] 	Container pod2-0-sched-preemption-medium-priority ready: true, restart count 0
  I0719 13:52:58.464485 21 predicates.go:958] pod2-1-sched-preemption-medium-priority from sched-preemption-6471 started at 2025-07-19 13:52:52 +0000 UTC (1 container statuses recorded)
  I0719 13:52:58.464489 21 predicates.go:960] 	Container pod2-1-sched-preemption-medium-priority ready: true, restart count 0
  I0719 13:52:58.464508 21 predicates.go:958] sonobuoy-systemd-logs-daemon-set-9ce81a3003f64498-9xxjq from sonobuoy started at 2025-07-19 12:13:47 +0000 UTC (2 container statuses recorded)
  I0719 13:52:58.464512 21 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0719 13:52:58.464516 21 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 07/19/25 13:52:58.464
  E0719 13:52:59.268943      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:00.269037      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 07/19/25 13:53:00.496
  STEP: Trying to apply a random label on the found node. @ 07/19/25 13:53:00.513
  STEP: verifying the node has the label kubernetes.io/e2e-4d7a3e0b-6fad-4e5d-853f-61c6d1821429 95 @ 07/19/25 13:53:00.523
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 07/19/25 13:53:00.527
  E0719 13:53:01.269122      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:02.269221      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.6.59 on the node which pod4 resides and expect not scheduled @ 07/19/25 13:53:02.545
  E0719 13:53:03.269333      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:04.270364      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:05.270533      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:06.270654      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:07.270778      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:08.270868      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:09.271188      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:10.271282      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:11.271549      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:12.271640      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:13.271779      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:14.271880      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:15.272011      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:16.272173      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:17.272328      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:18.272561      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:19.273577      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:20.273695      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:21.273827      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:22.273992      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:23.274126      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:24.274258      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:25.274506      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:26.274622      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:27.274753      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:28.274939      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:29.275115      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:30.275584      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:31.276480      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:32.276557      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:33.276671      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:34.277561      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:35.277671      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:36.277733      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:37.277869      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:38.277941      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:39.278573      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:40.278647      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:41.278768      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:42.278850      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:43.278984      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:44.279087      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:45.279521      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:46.279736      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:47.280729      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:48.280838      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:49.281411      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:50.281484      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:51.282303      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:52.282512      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:53.282638      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:54.282689      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:55.282784      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:56.282847      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:57.282961      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:58.283040      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:53:59.283789      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:00.284009      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:01.284879      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:02.284966      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:03.285739      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:04.286759      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:05.287573      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:06.287647      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:07.288573      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:08.288659      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:09.289380      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:10.289473      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:11.290116      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:12.290322      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:13.290472      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:14.291490      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:15.291781      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:16.291865      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:17.292731      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:18.292893      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:19.293497      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:20.293716      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:21.293804      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:22.293899      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:23.294870      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:24.295052      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:25.295867      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:26.296602      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:27.296696      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:28.296769      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:29.297049      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:30.297569      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:31.298555      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:32.298641      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:33.299566      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:34.300432      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:35.301481      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:36.301576      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:37.301726      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:38.301818      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:39.301965      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:40.302225      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:41.302594      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:42.303543      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:43.303591      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:44.303700      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:45.304155      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:46.304389      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:47.305190      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:48.305262      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:49.305793      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:50.305905      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:51.305981      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:52.306057      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:53.307064      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:54.307930      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:55.308946      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:56.309025      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:57.309144      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:58.309231      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:54:59.310126      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:00.310390      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:01.311194      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:02.311431      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:03.311787      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:04.311911      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:05.312556      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:06.312769      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:07.313839      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:08.314086      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:09.314228      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:10.314368      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:11.315062      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:12.315183      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:13.315287      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:14.315412      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:15.315510      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:16.315530      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:17.315632      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:18.315706      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:19.316276      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:20.316365      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:21.317182      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:22.317269      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:23.317477      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:24.318352      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:25.318547      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:26.318649      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:27.319577      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:28.319832      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:29.319971      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:30.320603      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:31.321458      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:32.321669      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:33.322587      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:34.322701      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:35.323171      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:36.323403      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:37.323535      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:38.323743      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:39.324658      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:40.324874      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:41.324991      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:42.325095      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:43.325888      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:44.325995      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:45.326579      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:46.327565      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:47.328559      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:48.328756      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:49.329563      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:50.329767      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:51.330260      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:52.330380      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:53.330820      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:54.331470      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:55.331618      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:56.331674      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:57.331794      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:58.331888      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:55:59.331986      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:00.332204      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:01.333132      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:02.333568      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:03.334577      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:04.335616      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:05.336073      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:06.336143      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:07.336651      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:08.336715      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:09.336791      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:10.336858      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:11.336901      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:12.336998      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:13.337093      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:14.337155      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:15.338137      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:16.338368      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:17.339429      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:18.339607      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:19.340470      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:20.340665      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:21.341272      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:22.341439      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:23.342422      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:24.343464      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:25.343872      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:26.343975      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:27.345033      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:28.345114      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:29.345501      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:30.345592      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:31.346573      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:32.346649      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:33.346727      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:34.347379      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:35.347451      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:36.347508      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:37.348262      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:38.348329      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:39.349419      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:40.349735      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:41.350256      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:42.351274      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:43.352119      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:44.352330      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:45.353252      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:46.353398      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:47.354130      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:48.354321      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:49.354815      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:50.355771      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:51.356207      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:52.356760      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:53.357740      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:54.358474      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:55.358878      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:56.359005      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:57.359706      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:58.359917      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:56:59.360492      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:00.360688      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:01.361457      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:02.361577      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:03.362462      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:04.363537      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:05.363596      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:06.363800      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:07.364441      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:08.364576      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:09.364622      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:10.365553      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:11.366044      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:12.367019      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:13.367438      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:14.368405      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:15.369216      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:16.369374      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:17.370315      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:18.370489      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:19.371516      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:20.371692      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:21.372399      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:22.372588      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:23.373391      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:24.374510      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:25.375320      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:26.375508      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:27.376481      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:28.377540      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:29.378615      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:30.379476      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:31.380540      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:32.380686      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:33.380756      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:34.380882      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:35.381037      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:36.381883      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:37.381978      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:38.382130      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:39.382218      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:40.382718      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:41.382923      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:42.383413      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:43.383631      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:44.384500      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:45.384660      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:46.384807      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:47.384994      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:48.385109      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:49.385819      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:50.386511      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:51.386581      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:52.386708      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:53.386774      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:54.387417      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:55.387535      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:56.387650      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:57.387720      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:58.388499      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:57:59.389576      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:58:00.389702      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:58:01.389820      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:58:02.390284      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-4d7a3e0b-6fad-4e5d-853f-61c6d1821429 off the node ip-172-31-6-59 @ 07/19/25 13:58:02.554
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-4d7a3e0b-6fad-4e5d-853f-61c6d1821429 @ 07/19/25 13:58:02.57
  I0719 13:58:02.573835 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6954" for this suite. @ 07/19/25 13:58:02.579
• [304.270 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 07/19/25 13:58:02.59
  I0719 13:58:02.590412 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename podtemplate @ 07/19/25 13:58:02.59
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:58:02.601
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:58:02.605
  I0719 13:58:02.647177 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-5142" for this suite. @ 07/19/25 13:58:02.652
• [0.073 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:69
  STEP: Creating a kubernetes client @ 07/19/25 13:58:02.663
  I0719 13:58:02.663127 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename emptydir-wrapper @ 07/19/25 13:58:02.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:58:02.677
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:58:02.68
  E0719 13:58:03.390521      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:58:04.391504      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Cleaning up the secret @ 07/19/25 13:58:04.719
  STEP: Cleaning up the configmap @ 07/19/25 13:58:04.728
  STEP: Cleaning up the pod @ 07/19/25 13:58:04.735
  I0719 13:58:04.756387 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-6590" for this suite. @ 07/19/25 13:58:04.762
• [2.106 seconds]
------------------------------
S
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 07/19/25 13:58:04.769
  I0719 13:58:04.769650 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename hostport @ 07/19/25 13:58:04.77
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:58:04.782
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:58:04.785
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 07/19/25 13:58:04.862
  E0719 13:58:05.391638      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:58:06.391726      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.64.234 on the node which pod1 resides and expect scheduled @ 07/19/25 13:58:06.882
  E0719 13:58:07.392718      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:58:08.392819      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.64.234 but use UDP protocol on the node which pod2 resides @ 07/19/25 13:58:08.9
  E0719 13:58:09.393878      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:58:10.393972      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:58:11.394641      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:58:12.394716      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:58:13.394832      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:58:14.395025      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:58:15.395117      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:58:16.395239      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:58:17.395446      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:58:18.395536      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:58:19.395675      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:58:20.395783      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:58:21.396562      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:58:22.396654      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 07/19/25 13:58:22.971
  I0719 13:58:22.971731 21 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.64.234 http://127.0.0.1:54323/hostname] Namespace:hostport-9564 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0719 13:58:22.971745 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0719 13:58:22.971782 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/hostport-9564/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.64.234+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  I0719 13:58:23.019012 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.64.234, port: 54323 @ 07/19/25 13:58:23.019
  I0719 13:58:23.019087 21 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.64.234:54323/hostname] Namespace:hostport-9564 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0719 13:58:23.019094 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0719 13:58:23.019138 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/hostport-9564/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.64.234%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  I0719 13:58:23.065564 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.64.234, port: 54323 UDP @ 07/19/25 13:58:23.065
  I0719 13:58:23.065636 21 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.64.234 54323] Namespace:hostport-9564 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0719 13:58:23.065645 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0719 13:58:23.065685 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/hostport-9564/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.64.234+54323&container=e2e-host-exec&stderr=true&stdout=true)
  E0719 13:58:23.397223      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:58:24.397280      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:58:25.397436      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:58:26.397511      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:58:27.397571      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:58:28.105940 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0719 13:58:28.106072 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-9564" for this suite. @ 07/19/25 13:58:28.113
• [23.353 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 07/19/25 13:58:28.123
  I0719 13:58:28.123213 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename init-container @ 07/19/25 13:58:28.123
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:58:28.137
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:58:28.141
  STEP: creating the pod @ 07/19/25 13:58:28.144
  I0719 13:58:28.144529 21 init_container.go:499] PodSpec: initContainers in spec.initContainers
  E0719 13:58:28.398576      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:58:29.398717      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:58:30.398842      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:58:31.398936      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:58:31.556432 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-4546" for this suite. @ 07/19/25 13:58:31.562
• [3.447 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:921
  STEP: Creating a kubernetes client @ 07/19/25 13:58:31.57
  I0719 13:58:31.570556 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename job @ 07/19/25 13:58:31.571
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:58:31.584
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:58:31.587
  STEP: Creating a job @ 07/19/25 13:58:31.59
  STEP: Ensuring active pods == parallelism @ 07/19/25 13:58:31.595
  E0719 13:58:32.399658      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:58:33.399760      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 07/19/25 13:58:33.605
  I0719 13:58:34.125600 21 pod_client.go:173] Successfully updated pod "adopt-release-cnhxh"
  STEP: Checking that the Job readopts the Pod @ 07/19/25 13:58:34.125
  E0719 13:58:34.399896      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:58:35.399988      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 07/19/25 13:58:36.141
  E0719 13:58:36.400117      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:58:36.655282 21 pod_client.go:173] Successfully updated pod "adopt-release-cnhxh"
  STEP: Checking that the Job releases the Pod @ 07/19/25 13:58:36.655
  E0719 13:58:37.400238      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:58:38.400367      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:58:38.663238 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-89" for this suite. @ 07/19/25 13:58:38.668
• [7.104 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:492
  STEP: Creating a kubernetes client @ 07/19/25 13:58:38.675
  I0719 13:58:38.675156 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename webhook @ 07/19/25 13:58:38.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:58:38.687
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:58:38.691
  STEP: Setting up server cert @ 07/19/25 13:58:38.716
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/19/25 13:58:39.311
  STEP: Deploying the webhook pod @ 07/19/25 13:58:39.318
  STEP: Wait for the deployment to be ready @ 07/19/25 13:58:39.333
  I0719 13:58:39.343042 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0719 13:58:39.401133      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:58:40.401738      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/19/25 13:58:41.359
  STEP: Verifying the service has paired with the endpoint @ 07/19/25 13:58:41.379
  E0719 13:58:41.402191      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:58:42.379976 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 07/19/25 13:58:42.385
  E0719 13:58:42.402241      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 07/19/25 13:58:42.405
  STEP: Creating a configMap that should not be mutated @ 07/19/25 13:58:42.415
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 07/19/25 13:58:42.429
  STEP: Creating a configMap that should be mutated @ 07/19/25 13:58:42.436
  I0719 13:58:42.517534 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8397" for this suite. @ 07/19/25 13:58:42.526
  STEP: Destroying namespace "webhook-markers-1632" for this suite. @ 07/19/25 13:58:42.533
• [3.866 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:693
  STEP: Creating a kubernetes client @ 07/19/25 13:58:42.541
  I0719 13:58:42.541625 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename security-context-test @ 07/19/25 13:58:42.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:58:42.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:58:42.556
  E0719 13:58:43.402522      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:58:44.403571      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:58:45.404554      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:58:46.404683      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:58:46.608192 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-3232" for this suite. @ 07/19/25 13:58:46.613
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 07/19/25 13:58:46.621
  I0719 13:58:46.621997 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 07/19/25 13:58:46.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:58:46.636
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:58:46.641
  STEP: creating a target pod @ 07/19/25 13:58:46.645
  E0719 13:58:47.404780      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:58:48.404872      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 07/19/25 13:58:48.673
  E0719 13:58:49.404963      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:58:50.405041      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod's generation is 2 @ 07/19/25 13:58:50.692
  STEP: checking pod container endpoints @ 07/19/25 13:58:50.696
  I0719 13:58:50.696645 21 exec_util.go:63] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-3109 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0719 13:58:50.696662 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I0719 13:58:50.696697 21 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-3109/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0719 13:58:50.740636 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0719 13:58:50.740674 21 exec_util.go:112] Exec stderr: ""
  I0719 13:58:50.760086 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-3109" for this suite. @ 07/19/25 13:58:50.767
• [4.154 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 07/19/25 13:58:50.775
  I0719 13:58:50.775686 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename secrets @ 07/19/25 13:58:50.776
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:58:50.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:58:50.792
  STEP: creating secret secrets-459/secret-test-ad2f5f34-cadd-4d1b-acc0-bd57e1dfa804 @ 07/19/25 13:58:50.795
  STEP: Creating a pod to test consume secrets @ 07/19/25 13:58:50.8
  E0719 13:58:51.405680      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:58:52.405742      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/19/25 13:58:52.822
  I0719 13:58:52.826611 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod pod-configmaps-9738225c-088f-471e-b0c6-161f466bd908 container env-test: <nil>
  STEP: delete the pod @ 07/19/25 13:58:52.836
  I0719 13:58:52.858624 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-459" for this suite. @ 07/19/25 13:58:52.863
• [2.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:62
  STEP: Creating a kubernetes client @ 07/19/25 13:58:52.872
  I0719 13:58:52.872612 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename containers @ 07/19/25 13:58:52.873
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:58:52.886
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:58:52.889
  STEP: Creating a pod to test override arguments @ 07/19/25 13:58:52.892
  E0719 13:58:53.405839      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:58:54.406026      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:58:55.406584      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:58:56.407572      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/19/25 13:58:56.92
  I0719 13:58:56.924391 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod client-containers-1cd0f7c3-dad3-4e2a-aaf2-656570f10c6a container agnhost-container: <nil>
  STEP: delete the pod @ 07/19/25 13:58:56.935
  I0719 13:58:56.955651 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-4451" for this suite. @ 07/19/25 13:58:56.962
• [4.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 07/19/25 13:58:56.97
  I0719 13:58:56.970731 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename projected @ 07/19/25 13:58:56.971
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:58:56.984
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:58:56.987
  STEP: Creating projection with secret that has name projected-secret-test-f3fca00b-9b82-4a26-bb2c-99844e3285f5 @ 07/19/25 13:58:56.991
  STEP: Creating a pod to test consume secrets @ 07/19/25 13:58:56.995
  E0719 13:58:57.408058      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:58:58.408563      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:58:59.409397      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:59:00.409555      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/19/25 13:59:01.024
  I0719 13:59:01.028528 21 output.go:207] Trying to get logs from node ip-172-31-42-177 pod pod-projected-secrets-5cedc903-f469-483b-a701-46181af5b69d container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/19/25 13:59:01.039
  I0719 13:59:01.059085 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9377" for this suite. @ 07/19/25 13:59:01.064
• [4.101 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:444
  STEP: Creating a kubernetes client @ 07/19/25 13:59:01.071
  I0719 13:59:01.071630 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/19/25 13:59:01.072
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:59:01.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:59:01.091
  STEP: set up a multi version CRD @ 07/19/25 13:59:01.094
  I0719 13:59:01.094971 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  E0719 13:59:01.410189      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:59:02.410165      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:59:03.411068      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 07/19/25 13:59:04.27
  STEP: check the unserved version gets removed @ 07/19/25 13:59:04.292
  E0719 13:59:04.411255      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 07/19/25 13:59:05.086
  E0719 13:59:05.412099      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:59:06.412430      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:59:07.413046      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 13:59:07.523364 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2482" for this suite. @ 07/19/25 13:59:07.533
• [6.471 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 07/19/25 13:59:07.543
  I0719 13:59:07.543120 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename secrets @ 07/19/25 13:59:07.543
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:59:07.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:59:07.565
  STEP: Creating secret with name secret-test-80d1fab3-5470-4ab8-ad90-cf8a91c72110 @ 07/19/25 13:59:07.568
  STEP: Creating a pod to test consume secrets @ 07/19/25 13:59:07.574
  E0719 13:59:08.413514      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:59:09.414507      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/19/25 13:59:09.598
  I0719 13:59:09.603100 21 output.go:207] Trying to get logs from node ip-172-31-42-177 pod pod-secrets-f17281b1-4027-4ae3-b415-3688ecf128ba container secret-volume-test: <nil>
  STEP: delete the pod @ 07/19/25 13:59:09.609
  I0719 13:59:09.631537 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6253" for this suite. @ 07/19/25 13:59:09.637
• [2.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 07/19/25 13:59:09.645
  I0719 13:59:09.645260 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename cronjob @ 07/19/25 13:59:09.645
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 13:59:09.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 13:59:09.662
  STEP: Creating a ReplaceConcurrent cronjob @ 07/19/25 13:59:09.665
  STEP: Ensuring a job is scheduled @ 07/19/25 13:59:09.67
  E0719 13:59:10.415463      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:59:11.415514      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:59:12.415688      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:59:13.416712      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:59:14.417478      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:59:15.417591      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:59:16.418506      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:59:17.418717      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:59:18.419706      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:59:19.419827      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:59:20.420879      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:59:21.420993      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:59:22.421518      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:59:23.421625      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:59:24.422509      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:59:25.422581      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:59:26.422662      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:59:27.422772      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:59:28.423143      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:59:29.423256      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:59:30.423418      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:59:31.423604      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:59:32.423896      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:59:33.424633      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:59:34.425472      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:59:35.426084      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:59:36.426486      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:59:37.427533      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:59:38.428546      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:59:39.429520      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:59:40.430029      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:59:41.430222      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:59:42.431213      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:59:43.431332      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:59:44.432380      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:59:45.432565      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:59:46.432685      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:59:47.432868      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:59:48.433023      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:59:49.433023      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:59:50.433172      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:59:51.433248      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:59:52.433409      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:59:53.433483      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:59:54.433627      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:59:55.433723      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:59:56.434740      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:59:57.434811      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:59:58.435489      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 13:59:59.436489      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:00.436595      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:01.436672      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 07/19/25 14:00:01.675
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 07/19/25 14:00:01.683
  STEP: Ensuring the job is replaced with a new one @ 07/19/25 14:00:01.689
  E0719 14:00:02.437389      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:03.437499      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:04.437979      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:05.438641      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:06.438760      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:07.438835      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:08.439709      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:09.439817      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:10.440569      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:11.440663      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:12.440778      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:13.440976      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:14.441223      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:15.441305      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:16.441582      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:17.441780      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:18.441897      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:19.442071      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:20.442194      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:21.442386      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:22.442657      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:23.442742      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:24.442986      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:25.443053      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:26.443571      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:27.443662      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:28.444562      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:29.445546      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:30.446138      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:31.446210      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:32.447082      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:33.447147      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:34.447565      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:35.447712      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:36.447811      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:37.447885      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:38.448505      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:39.449488      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:40.449627      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:41.449706      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:42.449863      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:43.449978      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:44.450123      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:45.450213      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:46.450443      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:47.450554      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:48.450692      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:49.450773      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:50.450891      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:51.450961      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:52.451095      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:53.451218      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:54.452174      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:55.452294      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:56.452466      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:57.452680      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:58.452799      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:00:59.452874      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:01:00.453790      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:01:01.453929      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 07/19/25 14:01:01.694
  I0719 14:01:01.704571 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3284" for this suite. @ 07/19/25 14:01:01.711
• [112.076 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 07/19/25 14:01:01.721
  I0719 14:01:01.721785 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename projected @ 07/19/25 14:01:01.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 14:01:01.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 14:01:01.75
  STEP: Creating configMap with name configmap-projected-all-test-volume-9a62badc-194b-4754-87c9-7210df974f35 @ 07/19/25 14:01:01.754
  STEP: Creating secret with name secret-projected-all-test-volume-912e741b-4028-4390-b083-af31480d2bd5 @ 07/19/25 14:01:01.76
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 07/19/25 14:01:01.768
  I0719 14:01:01.779176      21 warnings.go:110] "Warning: volume \"podinfo\" (Projected): overlapping paths: \"podname\" (DownwardAPI) with \"podname\" (DownwardAPI)"
  E0719 14:01:02.454588      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:01:03.454797      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:01:04.454896      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:01:05.454959      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/19/25 14:01:05.793
  I0719 14:01:05.797270 21 output.go:207] Trying to get logs from node ip-172-31-6-59 pod projected-volume-e84c5df8-e4d8-4f8a-aca5-5365aefcdc29 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 07/19/25 14:01:05.809
  I0719 14:01:05.831032 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7108" for this suite. @ 07/19/25 14:01:05.837
• [4.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 07/19/25 14:01:05.845
  I0719 14:01:05.845559 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename field-validation @ 07/19/25 14:01:05.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 14:01:05.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 14:01:05.862
  I0719 14:01:05.865325 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  E0719 14:01:06.455608      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:01:07.455780      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 14:01:08.398652      21 warnings.go:110] "Warning: unknown field \"alpha\""
  I0719 14:01:08.398678      21 warnings.go:110] "Warning: unknown field \"beta\""
  I0719 14:01:08.398685      21 warnings.go:110] "Warning: unknown field \"delta\""
  I0719 14:01:08.398690      21 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0719 14:01:08.398697      21 warnings.go:110] "Warning: unknown field \"gamma\""
  E0719 14:01:08.456756      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 14:01:08.955470 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6959" for this suite. @ 07/19/25 14:01:08.96
• [3.126 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:920
  STEP: Creating a kubernetes client @ 07/19/25 14:01:08.971
  I0719 14:01:08.971427 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename statefulset @ 07/19/25 14:01:08.971
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 14:01:08.987
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 14:01:08.99
  STEP: Creating service test in namespace statefulset-6932 @ 07/19/25 14:01:08.993
  STEP: Creating statefulset ss in namespace statefulset-6932 @ 07/19/25 14:01:09.001
  I0719 14:01:09.014582 21 wait.go:44] Found 0 stateful pods, waiting for 1
  E0719 14:01:09.456896      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:01:10.456968      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:01:11.457074      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:01:12.457146      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:01:13.457276      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:01:14.457412      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:01:15.457477      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:01:16.457597      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:01:17.457670      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:01:18.457792      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 14:01:19.015881 21 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 07/19/25 14:01:19.025
  STEP: updating a scale subresource @ 07/19/25 14:01:19.028
  STEP: verifying the statefulset Spec.Replicas was modified @ 07/19/25 14:01:19.038
  STEP: Patch a scale subresource @ 07/19/25 14:01:19.045
  STEP: verifying the statefulset Spec.Replicas was modified @ 07/19/25 14:01:19.057
  I0719 14:01:19.061471 21 statefulset.go:138] Deleting all statefulset in ns statefulset-6932
  I0719 14:01:19.065206 21 rest.go:153] Scaling statefulset ss to 0
  E0719 14:01:19.458325      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:01:20.458557      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:01:21.458675      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:01:22.458732      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:01:23.458866      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:01:24.458973      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:01:25.459054      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:01:26.459192      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:01:27.459281      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:01:28.459496      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 14:01:29.110682 21 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0719 14:01:29.114420 21 rest.go:91] Deleting statefulset ss
  I0719 14:01:29.134042 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6932" for this suite. @ 07/19/25 14:01:29.139
• [20.179 seconds]
------------------------------
[sig-storage] VolumeAttachment Conformance should apply changes to a volumeattachment status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:180
  STEP: Creating a kubernetes client @ 07/19/25 14:01:29.15
  I0719 14:01:29.150091 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename volumeattachment @ 07/19/25 14:01:29.15
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 14:01:29.162
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 14:01:29.165
  STEP: Create VolumeAttachment "va-e2e-s7n5p" on node "ip-172-31-42-177" @ 07/19/25 14:01:29.24
  STEP: Patch VolumeAttachment "va-e2e-s7n5p" on node "ip-172-31-42-177" @ 07/19/25 14:01:29.246
  STEP: Reading "va-e2e-s7n5p" Status @ 07/19/25 14:01:29.253
  STEP: Patching "va-e2e-s7n5p" Status @ 07/19/25 14:01:29.258
  I0719 14:01:29.263147 21 volume_attachment.go:224] "va-e2e-s7n5p" Status.Attached: true
  STEP: Updating "va-e2e-s7n5p" Status @ 07/19/25 14:01:29.263
  I0719 14:01:29.275840 21 volume_attachment.go:240] "va-e2e-s7n5p" Status.Attached: false
  STEP: Delete VolumeAttachment "va-e2e-s7n5p" on node "ip-172-31-42-177" @ 07/19/25 14:01:29.275
  STEP: Confirm deletion of VolumeAttachment "va-e2e-s7n5p" on node "ip-172-31-42-177" @ 07/19/25 14:01:29.284
  I0719 14:01:29.289397 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-3452" for this suite. @ 07/19/25 14:01:29.341
• [0.201 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 07/19/25 14:01:29.351
  I0719 14:01:29.351542 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename secrets @ 07/19/25 14:01:29.352
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 14:01:29.365
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 14:01:29.368
  STEP: creating a secret @ 07/19/25 14:01:29.371
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 07/19/25 14:01:29.377
  STEP: patching the secret @ 07/19/25 14:01:29.382
  STEP: deleting the secret using a LabelSelector @ 07/19/25 14:01:29.392
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 07/19/25 14:01:29.403
  I0719 14:01:29.408744 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8503" for this suite. @ 07/19/25 14:01:29.442
• [0.101 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 07/19/25 14:01:29.452
  I0719 14:01:29.452297 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename csi-storageclass @ 07/19/25 14:01:29.452
  E0719 14:01:29.459552      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 14:01:29.468
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 14:01:29.472
  STEP: Creating a StorageClass @ 07/19/25 14:01:29.475
  STEP: Get StorageClass "e2e-rlsdc" @ 07/19/25 14:01:29.481
  STEP: Patching the StorageClass "e2e-rlsdc" @ 07/19/25 14:01:29.486
  STEP: Delete StorageClass "e2e-rlsdc" @ 07/19/25 14:01:29.492
  STEP: Confirm deletion of StorageClass "e2e-rlsdc" @ 07/19/25 14:01:29.5
  STEP: Create a replacement StorageClass @ 07/19/25 14:01:29.504
  STEP: Updating StorageClass "e2e-v2-spj4k" @ 07/19/25 14:01:29.509
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-spj4k=updated" @ 07/19/25 14:01:29.52
  STEP: Deleting StorageClass "e2e-v2-spj4k" via DeleteCollection @ 07/19/25 14:01:29.524
  STEP: Confirm deletion of StorageClass "e2e-v2-spj4k" @ 07/19/25 14:01:29.534
  I0719 14:01:29.539569 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-4408" for this suite. @ 07/19/25 14:01:29.544
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 07/19/25 14:01:29.553
  I0719 14:01:29.553564 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename discovery @ 07/19/25 14:01:29.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 14:01:29.566
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 14:01:29.569
  STEP: Setting up server cert @ 07/19/25 14:01:29.574
  STEP: Requesting APIResourceList from "/api/v1" @ 07/19/25 14:01:29.858
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 07/19/25 14:01:29.86
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 07/19/25 14:01:29.862
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 07/19/25 14:01:29.864
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 07/19/25 14:01:29.866
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 07/19/25 14:01:29.867
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 07/19/25 14:01:29.869
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 07/19/25 14:01:29.87
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 07/19/25 14:01:29.872
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 07/19/25 14:01:29.874
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 07/19/25 14:01:29.875
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 07/19/25 14:01:29.877
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 07/19/25 14:01:29.878
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 07/19/25 14:01:29.88
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 07/19/25 14:01:29.881
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 07/19/25 14:01:29.883
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 07/19/25 14:01:29.884
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 07/19/25 14:01:29.885
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 07/19/25 14:01:29.887
  I0719 14:01:29.889187 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-5274" for this suite. @ 07/19/25 14:01:29.896
• [0.352 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:393
  STEP: Creating a kubernetes client @ 07/19/25 14:01:29.905
  I0719 14:01:29.905968 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/19/25 14:01:29.906
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 14:01:29.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 14:01:29.922
  STEP: set up a multi version CRD @ 07/19/25 14:01:29.925
  I0719 14:01:29.926085 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  E0719 14:01:30.460324      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:01:31.460924      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:01:32.461293      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: rename a version @ 07/19/25 14:01:33.016
  STEP: check the new version name is served @ 07/19/25 14:01:33.029
  E0719 14:01:33.461439      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check the old version name is removed @ 07/19/25 14:01:33.81
  STEP: check the other version is not changed @ 07/19/25 14:01:34.433
  E0719 14:01:34.461533      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:01:35.462587      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:01:36.462646      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 14:01:36.963275 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5448" for this suite. @ 07/19/25 14:01:36.971
• [7.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:168
  STEP: Creating a kubernetes client @ 07/19/25 14:01:36.981
  I0719 14:01:36.981570 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename resourcequota @ 07/19/25 14:01:36.982
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 14:01:36.996
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 14:01:36.999
  STEP: Discovering how many secrets are in namespace by default @ 07/19/25 14:01:37.003
  E0719 14:01:37.463658      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:01:38.463749      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:01:39.464094      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:01:40.465102      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:01:41.465966      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 07/19/25 14:01:42.01
  E0719 14:01:42.466574      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:01:43.466680      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:01:44.467288      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:01:45.468018      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:01:46.468567      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/19/25 14:01:47.016
  STEP: Ensuring resource quota status is calculated @ 07/19/25 14:01:47.022
  E0719 14:01:47.469110      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:01:48.469607      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 07/19/25 14:01:49.027
  STEP: Ensuring resource quota status captures secret creation @ 07/19/25 14:01:49.04
  E0719 14:01:49.470631      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:01:50.470708      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 07/19/25 14:01:51.048
  STEP: Ensuring resource quota status released usage @ 07/19/25 14:01:51.057
  E0719 14:01:51.471602      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:01:52.471711      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0719 14:01:53.062548 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7485" for this suite. @ 07/19/25 14:01:53.067
• [16.096 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:264
  STEP: Creating a kubernetes client @ 07/19/25 14:01:53.077
  I0719 14:01:53.077511 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-2712053656
  STEP: Building a namespace api object, basename dns @ 07/19/25 14:01:53.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/19/25 14:01:53.09
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/19/25 14:01:53.094
  STEP: Creating a test headless service @ 07/19/25 14:01:53.097
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-8519.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-2.dns-test-service-2.dns-8519.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/agnhost_hosts@dns-querier-2;sleep 1; done
   @ 07/19/25 14:01:53.103
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-8519.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-8519.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 07/19/25 14:01:53.103
  STEP: creating a pod to probe DNS @ 07/19/25 14:01:53.103
  STEP: submitting the pod to kubernetes @ 07/19/25 14:01:53.103
  E0719 14:01:53.472577      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0719 14:01:54.472685      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/19/25 14:01:55.129
  STEP: looking for the results for each expected name from probers @ 07/19/25 14:01:55.134
  I0719 14:01:55.153454 21 dns_common.go:546] DNS probes using dns-8519/dns-test-f05e1bd0-e8fd-45ab-a552-fbe760bc8b96 succeeded

  STEP: deleting the pod @ 07/19/25 14:01:55.153
  STEP: deleting the test headless service @ 07/19/25 14:01:55.173
  I0719 14:01:55.192788 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8519" for this suite. @ 07/19/25 14:01:55.199
• [2.129 seconds]
------------------------------
SSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0719 14:01:55.206271 21 suites.go:34] Running AfterSuite actions on node 1
  I0719 14:01:55.206356 21 util.go:563] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:615
[ReportAfterSuite] PASSED [0.025 seconds]
------------------------------

Ran 419 of 6731 Specs in 6480.987 seconds
SUCCESS! -- 419 Passed | 0 Failed | 0 Pending | 6312 Skipped
PASS

Ginkgo ran 1 suite in 1h48m1.771278562s
Test Suite Passed
