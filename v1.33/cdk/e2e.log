  I0726 12:22:17.517756      23 e2e.go:109] Starting e2e run "fcb8c729-7b66-4bcf-9daa-e32cad6521b4" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1753532536 - will randomize all specs

Will run 419 of 6731 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:153
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0726 12:22:17.751033 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  I0726 12:22:17.752005 23 helper.go:51] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0726 12:22:17.781328 23 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0726 12:22:17.788236 23 e2e.go:153] 5 / 5 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  I0726 12:22:17.788272 23 e2e.go:245] e2e test version: v1.33.3
  I0726 12:22:17.789100 23 e2e.go:254] kube-apiserver version: v1.33.3
  I0726 12:22:17.789159 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  I0726 12:22:17.795001 23 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.044 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 07/26/25 12:22:17.957
  I0726 12:22:17.957076 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename server-version @ 07/26/25 12:22:17.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:22:17.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:22:17.977
  STEP: Request ServerVersion @ 07/26/25 12:22:17.982
  STEP: Confirm major version @ 07/26/25 12:22:17.983
  I0726 12:22:17.983433 23 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 07/26/25 12:22:17.983
  I0726 12:22:17.983717 23 server_version.go:58] cleanMinorVersion: 33
  I0726 12:22:17.983730 23 server_version.go:62] Minor version: 33
  I0726 12:22:17.984505 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-8555" for this suite. @ 07/26/25 12:22:17.989
• [0.042 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:74
  STEP: Creating a kubernetes client @ 07/26/25 12:22:17.998
  I0726 12:22:17.998873 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename projected @ 07/26/25 12:22:17.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:22:18.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:22:18.014
  STEP: Creating configMap with name projected-configmap-test-volume-ea3fdbfe-5ded-40f3-9bf3-b024285aff06 @ 07/26/25 12:22:18.016
  STEP: Creating a pod to test consume configMaps @ 07/26/25 12:22:18.023
  STEP: Saw pod success @ 07/26/25 12:22:30.074
  I0726 12:22:30.079728 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod pod-projected-configmaps-82378538-127b-49c1-879d-14071ed77d4e container agnhost-container: <nil>
  STEP: delete the pod @ 07/26/25 12:22:30.097
  I0726 12:22:30.121143 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-233" for this suite. @ 07/26/25 12:22:30.126
• [12.137 seconds]
------------------------------
S
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 07/26/25 12:22:30.136
  I0726 12:22:30.136040 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename ingressclass @ 07/26/25 12:22:30.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:22:30.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:22:30.149
  STEP: getting /apis @ 07/26/25 12:22:30.152
  STEP: getting /apis/networking.k8s.io @ 07/26/25 12:22:30.154
  STEP: getting /apis/networking.k8s.iov1 @ 07/26/25 12:22:30.154
  STEP: creating @ 07/26/25 12:22:30.155
  STEP: getting @ 07/26/25 12:22:30.171
  STEP: listing @ 07/26/25 12:22:30.174
  STEP: watching @ 07/26/25 12:22:30.179
  I0726 12:22:30.179693 23 ingressclass.go:348] starting watch
  STEP: patching @ 07/26/25 12:22:30.18
  STEP: updating @ 07/26/25 12:22:30.185
  I0726 12:22:30.191276 23 ingressclass.go:364] waiting for watch events with expected annotations
  I0726 12:22:30.191301 23 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 07/26/25 12:22:30.191
  STEP: deleting a collection @ 07/26/25 12:22:30.207
  I0726 12:22:30.228722 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-4278" for this suite. @ 07/26/25 12:22:30.232
• [0.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 07/26/25 12:22:30.24
  I0726 12:22:30.240893 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename webhook @ 07/26/25 12:22:30.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:22:30.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:22:30.257
  STEP: Setting up server cert @ 07/26/25 12:22:30.275
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/26/25 12:22:30.539
  STEP: Deploying the webhook pod @ 07/26/25 12:22:30.546
  STEP: Wait for the deployment to be ready @ 07/26/25 12:22:30.56
  I0726 12:22:30.569185 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/26/25 12:22:32.586
  STEP: Verifying the service has paired with the endpoint @ 07/26/25 12:22:32.607
  I0726 12:22:33.607734 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 07/26/25 12:22:33.613
  STEP: create a namespace for the webhook @ 07/26/25 12:22:33.626
  STEP: create a configmap should be unconditionally rejected by the webhook @ 07/26/25 12:22:33.637
  I0726 12:22:33.730891 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9714" for this suite. @ 07/26/25 12:22:33.735
  STEP: Destroying namespace "webhook-markers-8910" for this suite. @ 07/26/25 12:22:33.745
  STEP: Destroying namespace "fail-closed-namespace-5795" for this suite. @ 07/26/25 12:22:33.753
• [3.520 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 07/26/25 12:22:33.76
  I0726 12:22:33.760952 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename projected @ 07/26/25 12:22:33.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:22:33.778
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:22:33.781
  STEP: Creating configMap with name configmap-projected-all-test-volume-f9eca3ec-afe1-4f90-a05b-52e05ddded57 @ 07/26/25 12:22:33.782
  STEP: Creating secret with name secret-projected-all-test-volume-5573b345-3c74-4a57-93af-903c23198b4a @ 07/26/25 12:22:33.79
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 07/26/25 12:22:33.796
  I0726 12:22:33.810225      23 warnings.go:110] "Warning: volume \"podinfo\" (Projected): overlapping paths: \"podname\" (DownwardAPI) with \"podname\" (DownwardAPI)"
  STEP: Saw pod success @ 07/26/25 12:22:37.827
  I0726 12:22:37.832454 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod projected-volume-1a18e132-7d06-4f60-b717-3763a3ab7816 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 07/26/25 12:22:37.841
  I0726 12:22:37.865345 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8936" for this suite. @ 07/26/25 12:22:37.869
• [4.117 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1693
  STEP: Creating a kubernetes client @ 07/26/25 12:22:37.878
  I0726 12:22:37.878091 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename kubectl @ 07/26/25 12:22:37.878
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:22:37.895
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:22:37.896
  STEP: creating Agnhost RC @ 07/26/25 12:22:37.898
  I0726 12:22:37.898365 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-4028 create -f -'
  I0726 12:22:37.989011 23 builder.go:146] stderr: ""
  I0726 12:22:37.989041 23 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 07/26/25 12:22:37.989
  I0726 12:22:38.994907 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0726 12:22:38.994976 23 framework.go:733] Found 0 / 1
  I0726 12:22:39.994941 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0726 12:22:39.994977 23 framework.go:733] Found 1 / 1
  I0726 12:22:39.994990 23 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 07/26/25 12:22:39.995
  I0726 12:22:39.999306 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0726 12:22:39.999320 23 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0726 12:22:39.999361 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-4028 patch pod agnhost-primary-pfsg7 -p {"metadata":{"annotations":{"x":"y"}}}'
  I0726 12:22:40.047569 23 builder.go:146] stderr: ""
  I0726 12:22:40.047619 23 builder.go:147] stdout: "pod/agnhost-primary-pfsg7 patched\n"
  STEP: checking annotations @ 07/26/25 12:22:40.047
  I0726 12:22:40.052306 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0726 12:22:40.052322 23 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0726 12:22:40.052455 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4028" for this suite. @ 07/26/25 12:22:40.057
• [2.190 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 07/26/25 12:22:40.068
  I0726 12:22:40.068152 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename var-expansion @ 07/26/25 12:22:40.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:22:40.081
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:22:40.083
  STEP: creating the pod @ 07/26/25 12:22:40.084
  STEP: waiting for pod running @ 07/26/25 12:22:40.097
  STEP: creating a file in subpath @ 07/26/25 12:22:42.107
  I0726 12:22:42.112933 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-5527 PodName:var-expansion-2ad628ec-9367-48f8-bb10-9137e614ad21 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0726 12:22:42.112956 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0726 12:22:42.112996 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/var-expansion-5527/pods/var-expansion-2ad628ec-9367-48f8-bb10-9137e614ad21/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  I0726 12:22:42.156321 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: test for file in mounted path @ 07/26/25 12:22:42.156
  I0726 12:22:42.160173 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-5527 PodName:var-expansion-2ad628ec-9367-48f8-bb10-9137e614ad21 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0726 12:22:42.160193 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0726 12:22:42.160217 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/var-expansion-5527/pods/var-expansion-2ad628ec-9367-48f8-bb10-9137e614ad21/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  I0726 12:22:42.196455 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: updating the annotation value @ 07/26/25 12:22:42.196
  I0726 12:22:42.711215 23 pod_client.go:173] Successfully updated pod "var-expansion-2ad628ec-9367-48f8-bb10-9137e614ad21"
  STEP: waiting for annotated pod running @ 07/26/25 12:22:42.711
  STEP: deleting the pod gracefully @ 07/26/25 12:22:42.715
  I0726 12:22:42.715687 23 delete.go:62] Deleting pod "var-expansion-2ad628ec-9367-48f8-bb10-9137e614ad21" in namespace "var-expansion-5527"
  I0726 12:22:42.724667 23 delete.go:70] Wait up to 5m0s for pod "var-expansion-2ad628ec-9367-48f8-bb10-9137e614ad21" to be fully deleted
  I0726 12:23:14.817628 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5527" for this suite. @ 07/26/25 12:23:14.822
• [34.762 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 07/26/25 12:23:14.83
  I0726 12:23:14.830408 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename watch @ 07/26/25 12:23:14.83
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:23:14.844
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:23:14.846
  STEP: creating a watch on configmaps @ 07/26/25 12:23:14.848
  STEP: creating a new configmap @ 07/26/25 12:23:14.849
  STEP: modifying the configmap once @ 07/26/25 12:23:14.855
  STEP: closing the watch once it receives two notifications @ 07/26/25 12:23:14.864
  I0726 12:23:14.864847 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5091  08e23c62-ce27-476f-84e3-3ab47399edea 4832 0 2025-07-26 12:23:14 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-07-26 12:23:14 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0726 12:23:14.865002 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5091  08e23c62-ce27-476f-84e3-3ab47399edea 4833 0 2025-07-26 12:23:14 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-07-26 12:23:14 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 07/26/25 12:23:14.865
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 07/26/25 12:23:14.874
  STEP: deleting the configmap @ 07/26/25 12:23:14.874
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 07/26/25 12:23:14.882
  I0726 12:23:14.882940 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5091  08e23c62-ce27-476f-84e3-3ab47399edea 4835 0 2025-07-26 12:23:14 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-07-26 12:23:14 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0726 12:23:14.883023 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5091  08e23c62-ce27-476f-84e3-3ab47399edea 4836 0 2025-07-26 12:23:14 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-07-26 12:23:14 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0726 12:23:14.883091 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5091" for this suite. @ 07/26/25 12:23:14.922
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:884
  STEP: Creating a kubernetes client @ 07/26/25 12:23:14.932
  I0726 12:23:14.932559 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename kubectl @ 07/26/25 12:23:14.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:23:14.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:23:14.947
  STEP: validating api versions @ 07/26/25 12:23:14.949
  I0726 12:23:14.949226 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-8220 api-versions'
  I0726 12:23:14.986413 23 builder.go:146] stderr: ""
  I0726 12:23:14.986529 23 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I0726 12:23:14.986675 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8220" for this suite. @ 07/26/25 12:23:15.023
• [0.098 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:219
  STEP: Creating a kubernetes client @ 07/26/25 12:23:15.031
  I0726 12:23:15.031054 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename emptydir @ 07/26/25 12:23:15.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:23:15.044
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:23:15.046
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 07/26/25 12:23:15.048
  STEP: Saw pod success @ 07/26/25 12:23:19.075
  I0726 12:23:19.080822 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod pod-38f6ad50-24b0-4f0c-ac43-7972481ed103 container test-container: <nil>
  STEP: delete the pod @ 07/26/25 12:23:19.089
  I0726 12:23:19.112354 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7546" for this suite. @ 07/26/25 12:23:19.117
• [4.095 seconds]
------------------------------
S
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3220
  STEP: Creating a kubernetes client @ 07/26/25 12:23:19.126
  I0726 12:23:19.126389 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename services @ 07/26/25 12:23:19.126
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:23:19.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:23:19.14
  I0726 12:23:19.148461      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: creating an Endpoint @ 07/26/25 12:23:19.148
  I0726 12:23:19.154246      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: waiting for available Endpoint @ 07/26/25 12:23:19.154
  I0726 12:23:19.155094      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: listing all Endpoints @ 07/26/25 12:23:19.155
  I0726 12:23:19.159290      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: updating the Endpoint @ 07/26/25 12:23:19.159
  I0726 12:23:19.165178      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0726 12:23:19.166001      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 07/26/25 12:23:19.166
  I0726 12:23:19.169469      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: patching the Endpoint @ 07/26/25 12:23:19.169
  I0726 12:23:19.175432      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0726 12:23:19.176130      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 07/26/25 12:23:19.176
  I0726 12:23:19.180445      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: deleting the Endpoint by Collection @ 07/26/25 12:23:19.18
  I0726 12:23:19.190999      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: waiting for Endpoint deletion @ 07/26/25 12:23:19.191
  I0726 12:23:19.191730      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 07/26/25 12:23:19.191
  I0726 12:23:19.194723      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0726 12:23:19.194836 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2749" for this suite. @ 07/26/25 12:23:19.218
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1068
  STEP: Creating a kubernetes client @ 07/26/25 12:23:19.227
  I0726 12:23:19.227279 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename job @ 07/26/25 12:23:19.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:23:19.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:23:19.242
  STEP: Creating a job @ 07/26/25 12:23:19.246
  STEP: Ensure pods equal to parallelism count is attached to the job @ 07/26/25 12:23:19.252
  STEP: patching /status @ 07/26/25 12:23:21.265
  STEP: updating /status @ 07/26/25 12:23:21.272
  STEP: get /status @ 07/26/25 12:23:21.281
  I0726 12:23:21.286086 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-474" for this suite. @ 07/26/25 12:23:21.29
• [2.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 07/26/25 12:23:21.301
  I0726 12:23:21.301943 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename projected @ 07/26/25 12:23:21.302
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:23:21.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:23:21.316
  STEP: Creating projection with secret that has name projected-secret-test-map-eab3d356-9b19-471d-b2a0-18b01d46cb6d @ 07/26/25 12:23:21.317
  STEP: Creating a pod to test consume secrets @ 07/26/25 12:23:21.324
  STEP: Saw pod success @ 07/26/25 12:23:23.347
  I0726 12:23:23.352219 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod pod-projected-secrets-e46a12ae-c8a9-47a5-b297-56350d866778 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/26/25 12:23:23.361
  I0726 12:23:23.384277 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2624" for this suite. @ 07/26/25 12:23:23.388
• [2.096 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:743
  STEP: Creating a kubernetes client @ 07/26/25 12:23:23.397
  I0726 12:23:23.397705 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename services @ 07/26/25 12:23:23.398
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:23:23.41
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:23:23.413
  I0726 12:23:23.420765 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7059" for this suite. @ 07/26/25 12:23:23.489
• [0.101 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:190
  STEP: Creating a kubernetes client @ 07/26/25 12:23:23.498
  I0726 12:23:23.498580 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename emptydir-wrapper @ 07/26/25 12:23:23.499
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:23:23.512
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:23:23.514
  STEP: Creating 50 configmaps @ 07/26/25 12:23:23.516
  STEP: Creating RC which spawns configmap-volume pods @ 07/26/25 12:23:23.805
  I0726 12:23:23.876575 23 resource.go:81] Pod name wrapped-volume-race-ad827777-5526-43c2-9c1c-00db59339f35: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 07/26/25 12:23:23.876
  STEP: Creating RC which spawns configmap-volume pods @ 07/26/25 12:23:27.939
  I0726 12:23:27.954184 23 resource.go:81] Pod name wrapped-volume-race-edbeeb1d-f1c9-42ce-95a1-2c4dfe5ccb3b: Found 0 pods out of 5
  I0726 12:23:32.961966 23 resource.go:81] Pod name wrapped-volume-race-edbeeb1d-f1c9-42ce-95a1-2c4dfe5ccb3b: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 07/26/25 12:23:32.961
  STEP: Creating RC which spawns configmap-volume pods @ 07/26/25 12:23:32.988
  I0726 12:23:33.007611 23 resource.go:81] Pod name wrapped-volume-race-c6568141-f4d1-493c-9cd7-2fb3aaf3adbf: Found 1 pods out of 5
  I0726 12:23:38.013616 23 resource.go:81] Pod name wrapped-volume-race-c6568141-f4d1-493c-9cd7-2fb3aaf3adbf: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 07/26/25 12:23:38.013
  STEP: deleting ReplicationController wrapped-volume-race-c6568141-f4d1-493c-9cd7-2fb3aaf3adbf in namespace emptydir-wrapper-1645, will wait for the garbage collector to delete the pods @ 07/26/25 12:23:38.037
  I0726 12:23:38.101746 23 resources.go:139] Deleting ReplicationController wrapped-volume-race-c6568141-f4d1-493c-9cd7-2fb3aaf3adbf took: 9.006286ms
  I0726 12:23:38.202269 23 resources.go:163] Terminating ReplicationController wrapped-volume-race-c6568141-f4d1-493c-9cd7-2fb3aaf3adbf pods took: 100.519117ms
  STEP: deleting ReplicationController wrapped-volume-race-edbeeb1d-f1c9-42ce-95a1-2c4dfe5ccb3b in namespace emptydir-wrapper-1645, will wait for the garbage collector to delete the pods @ 07/26/25 12:23:39.302
  I0726 12:23:39.367357 23 resources.go:139] Deleting ReplicationController wrapped-volume-race-edbeeb1d-f1c9-42ce-95a1-2c4dfe5ccb3b took: 8.412022ms
  I0726 12:23:39.468142 23 resources.go:163] Terminating ReplicationController wrapped-volume-race-edbeeb1d-f1c9-42ce-95a1-2c4dfe5ccb3b pods took: 100.780287ms
  STEP: deleting ReplicationController wrapped-volume-race-ad827777-5526-43c2-9c1c-00db59339f35 in namespace emptydir-wrapper-1645, will wait for the garbage collector to delete the pods @ 07/26/25 12:23:40.568
  I0726 12:23:40.634259 23 resources.go:139] Deleting ReplicationController wrapped-volume-race-ad827777-5526-43c2-9c1c-00db59339f35 took: 10.575666ms
  I0726 12:23:40.734419 23 resources.go:163] Terminating ReplicationController wrapped-volume-race-ad827777-5526-43c2-9c1c-00db59339f35 pods took: 100.153467ms
  STEP: Cleaning up the configMaps @ 07/26/25 12:23:42.335
  I0726 12:23:42.756537 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-1645" for this suite. @ 07/26/25 12:23:42.761
• [19.271 seconds]
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 07/26/25 12:23:42.77
  I0726 12:23:42.770038 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename projected @ 07/26/25 12:23:42.77
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:23:42.785
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:23:42.787
  STEP: Creating projection with secret that has name projected-secret-test-6d013cc6-60fb-4b1a-be72-497261fa1809 @ 07/26/25 12:23:42.788
  STEP: Creating a pod to test consume secrets @ 07/26/25 12:23:42.795
  STEP: Saw pod success @ 07/26/25 12:23:46.824
  I0726 12:23:46.828650 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod pod-projected-secrets-f235a10c-2523-433f-a411-9a6d8c7cb14e container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/26/25 12:23:46.838
  I0726 12:23:46.860687 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2217" for this suite. @ 07/26/25 12:23:46.865
• [4.104 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 07/26/25 12:23:46.873
  I0726 12:23:46.873911 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename endpointslice @ 07/26/25 12:23:46.874
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:23:46.887
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:23:46.889
  I0726 12:23:46.917059      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0726 12:23:48.923826      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0726 12:23:48.964170      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0726 12:23:49.030034 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-6755" for this suite. @ 07/26/25 12:23:49.035
• [2.170 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 07/26/25 12:23:49.043
  I0726 12:23:49.043811 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename secrets @ 07/26/25 12:23:49.044
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:23:49.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:23:49.058
  STEP: creating a secret @ 07/26/25 12:23:49.059
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 07/26/25 12:23:49.065
  STEP: patching the secret @ 07/26/25 12:23:49.069
  STEP: deleting the secret using a LabelSelector @ 07/26/25 12:23:49.078
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 07/26/25 12:23:49.09
  I0726 12:23:49.094541 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-593" for this suite. @ 07/26/25 12:23:49.136
• [0.103 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 07/26/25 12:23:49.146
  I0726 12:23:49.146785 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename subpath @ 07/26/25 12:23:49.147
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:23:49.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:23:49.16
  STEP: Setting up data @ 07/26/25 12:23:49.162
  STEP: Creating pod pod-subpath-test-configmap-t5fl @ 07/26/25 12:23:49.171
  STEP: Creating a pod to test atomic-volume-subpath @ 07/26/25 12:23:49.171
  STEP: Saw pod success @ 07/26/25 12:24:13.262
  I0726 12:24:13.265995 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod pod-subpath-test-configmap-t5fl container test-container-subpath-configmap-t5fl: <nil>
  STEP: delete the pod @ 07/26/25 12:24:13.274
  STEP: Deleting pod pod-subpath-test-configmap-t5fl @ 07/26/25 12:24:13.297
  I0726 12:24:13.297958 23 delete.go:62] Deleting pod "pod-subpath-test-configmap-t5fl" in namespace "subpath-6298"
  I0726 12:24:13.302292 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6298" for this suite. @ 07/26/25 12:24:13.306
• [24.169 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 07/26/25 12:24:13.315
  I0726 12:24:13.315804 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename events @ 07/26/25 12:24:13.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:24:13.329
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:24:13.33
  STEP: Create set of events @ 07/26/25 12:24:13.332
  I0726 12:24:13.338297 23 core_events.go:198] created test-event-1
  I0726 12:24:13.343789 23 core_events.go:198] created test-event-2
  I0726 12:24:13.349172 23 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 07/26/25 12:24:13.349
  STEP: delete collection of events @ 07/26/25 12:24:13.352
  I0726 12:24:13.352831 23 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 07/26/25 12:24:13.392
  I0726 12:24:13.392923 23 core_events.go:230] requesting list of events to confirm quantity
  I0726 12:24:13.396352 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-7922" for this suite. @ 07/26/25 12:24:13.407
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 07/26/25 12:24:13.416
  I0726 12:24:13.416058 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename webhook @ 07/26/25 12:24:13.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:24:13.429
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:24:13.431
  STEP: Setting up server cert @ 07/26/25 12:24:13.453
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/26/25 12:24:13.673
  STEP: Deploying the webhook pod @ 07/26/25 12:24:13.679
  STEP: Wait for the deployment to be ready @ 07/26/25 12:24:13.694
  I0726 12:24:13.702501 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/26/25 12:24:15.718
  STEP: Verifying the service has paired with the endpoint @ 07/26/25 12:24:15.74
  I0726 12:24:16.741790 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 07/26/25 12:24:16.747
  STEP: create a pod @ 07/26/25 12:24:16.762
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 07/26/25 12:24:18.785
  I0726 12:24:18.785556 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=webhook-2056 attach --namespace=webhook-2056 to-be-attached-pod -i -c=container1'
  I0726 12:24:18.839202 23 builder.go:135] rc: 1
  I0726 12:24:18.902570 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2056" for this suite. @ 07/26/25 12:24:18.91
  STEP: Destroying namespace "webhook-markers-8294" for this suite. @ 07/26/25 12:24:18.917
• [5.510 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] ServiceAccounts should create a serviceAccountToken and ensure a successful TokenReview [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:877
  STEP: Creating a kubernetes client @ 07/26/25 12:24:18.925
  I0726 12:24:18.925870 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename svcaccounts @ 07/26/25 12:24:18.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:24:18.937
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:24:18.939
  STEP: Creating a Serviceaccount "e2e-sa-z9dd5" in namespace "svcaccounts-9874" @ 07/26/25 12:24:18.94
  STEP: Creating a ServiceaccountToken "e2e-sa-z9dd5" in namespace "svcaccounts-9874" @ 07/26/25 12:24:18.948
  STEP: Creating a TokenReview for "e2e-sa-z9dd5" in namespace "svcaccounts-9874" @ 07/26/25 12:24:18.953
  I0726 12:24:18.955345 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9874" for this suite. @ 07/26/25 12:24:19.01
• [0.094 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 07/26/25 12:24:19.019
  I0726 12:24:19.019763 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename watch @ 07/26/25 12:24:19.02
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:24:19.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:24:19.034
  STEP: creating a new configmap @ 07/26/25 12:24:19.036
  STEP: modifying the configmap once @ 07/26/25 12:24:19.042
  STEP: modifying the configmap a second time @ 07/26/25 12:24:19.052
  STEP: deleting the configmap @ 07/26/25 12:24:19.06
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 07/26/25 12:24:19.068
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 07/26/25 12:24:19.069
  I0726 12:24:19.069144 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-5403  883cd32b-e805-4eb2-8143-5d7ed362b6d8 5921 0 2025-07-26 12:24:19 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-07-26 12:24:19 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0726 12:24:19.069243 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-5403  883cd32b-e805-4eb2-8143-5d7ed362b6d8 5922 0 2025-07-26 12:24:19 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-07-26 12:24:19 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0726 12:24:19.069325 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5403" for this suite. @ 07/26/25 12:24:19.111
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:83
  STEP: Creating a kubernetes client @ 07/26/25 12:24:19.119
  I0726 12:24:19.119015 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename resourcequota @ 07/26/25 12:24:19.119
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:24:19.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:24:19.133
  STEP: Counting existing ResourceQuota @ 07/26/25 12:24:19.135
  STEP: Creating a ResourceQuota @ 07/26/25 12:24:24.14
  STEP: Ensuring resource quota status is calculated @ 07/26/25 12:24:24.148
  I0726 12:24:26.153685 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9740" for this suite. @ 07/26/25 12:24:26.158
• [7.053 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2207
  STEP: Creating a kubernetes client @ 07/26/25 12:24:26.172
  I0726 12:24:26.172127 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename services @ 07/26/25 12:24:26.172
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:24:26.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:24:26.186
  STEP: creating service in namespace services-6755 @ 07/26/25 12:24:26.188
  STEP: creating service affinity-clusterip-transition in namespace services-6755 @ 07/26/25 12:24:26.188
  I0726 12:24:26.218590 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0726 12:24:28.224373 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:3, UpdatedReplicas:3, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:2, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 26, 12, 24, 26, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 26, 12, 24, 26, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 26, 12, 24, 27, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 26, 12, 24, 26, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"affinity-clusterip-transition-5cffb65545\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0726 12:24:30.244517 23 resource.go:361] Creating new exec pod
  I0726 12:24:32.273994 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-6755 exec execpod-affinityqrp92 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0726 12:24:32.355381 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition (10.152.183.161) 80 port [tcp/http] succeeded!\n"
  I0726 12:24:32.355418 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0726 12:24:32.355487 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-6755 exec execpod-affinityqrp92 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.161 80'
  I0726 12:24:32.437549 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.161 80\nConnection to 10.152.183.161 80 port [tcp/http] succeeded!\n"
  I0726 12:24:32.437583 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0726 12:24:32.449780 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-6755 exec execpod-affinityqrp92 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.161:80/ ; done'
  I0726 12:24:32.586590 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.161:80/\n"
  I0726 12:24:32.586686 23 builder.go:147] stdout: "\naffinity-clusterip-transition-5cffb65545-v752d\naffinity-clusterip-transition-5cffb65545-msgh6\naffinity-clusterip-transition-5cffb65545-v752d\naffinity-clusterip-transition-5cffb65545-v752d\naffinity-clusterip-transition-5cffb65545-v752d\naffinity-clusterip-transition-5cffb65545-msgh6\naffinity-clusterip-transition-5cffb65545-msgh6\naffinity-clusterip-transition-5cffb65545-hmnrh\naffinity-clusterip-transition-5cffb65545-v752d\naffinity-clusterip-transition-5cffb65545-v752d\naffinity-clusterip-transition-5cffb65545-v752d\naffinity-clusterip-transition-5cffb65545-msgh6\naffinity-clusterip-transition-5cffb65545-v752d\naffinity-clusterip-transition-5cffb65545-hmnrh\naffinity-clusterip-transition-5cffb65545-v752d\naffinity-clusterip-transition-5cffb65545-v752d"
  I0726 12:24:32.586701 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-v752d
  I0726 12:24:32.586709 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-msgh6
  I0726 12:24:32.586717 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-v752d
  I0726 12:24:32.586723 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-v752d
  I0726 12:24:32.586731 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-v752d
  I0726 12:24:32.586741 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-msgh6
  I0726 12:24:32.586745 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-msgh6
  I0726 12:24:32.586751 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-hmnrh
  I0726 12:24:32.586759 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-v752d
  I0726 12:24:32.586816 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-v752d
  I0726 12:24:32.586822 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-v752d
  I0726 12:24:32.586827 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-msgh6
  I0726 12:24:32.586835 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-v752d
  I0726 12:24:32.586889 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-hmnrh
  I0726 12:24:32.586896 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-v752d
  I0726 12:24:32.586904 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-v752d
  I0726 12:24:32.597300 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-6755 exec execpod-affinityqrp92 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.161:80/ ; done'
  I0726 12:24:32.722420 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.161:80/\n"
  I0726 12:24:32.722480 23 builder.go:147] stdout: "\naffinity-clusterip-transition-5cffb65545-msgh6\naffinity-clusterip-transition-5cffb65545-msgh6\naffinity-clusterip-transition-5cffb65545-msgh6\naffinity-clusterip-transition-5cffb65545-msgh6\naffinity-clusterip-transition-5cffb65545-msgh6\naffinity-clusterip-transition-5cffb65545-msgh6\naffinity-clusterip-transition-5cffb65545-msgh6\naffinity-clusterip-transition-5cffb65545-msgh6\naffinity-clusterip-transition-5cffb65545-msgh6\naffinity-clusterip-transition-5cffb65545-msgh6\naffinity-clusterip-transition-5cffb65545-msgh6\naffinity-clusterip-transition-5cffb65545-msgh6\naffinity-clusterip-transition-5cffb65545-msgh6\naffinity-clusterip-transition-5cffb65545-msgh6\naffinity-clusterip-transition-5cffb65545-msgh6\naffinity-clusterip-transition-5cffb65545-msgh6"
  I0726 12:24:32.722495 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-msgh6
  I0726 12:24:32.722503 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-msgh6
  I0726 12:24:32.722509 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-msgh6
  I0726 12:24:32.722514 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-msgh6
  I0726 12:24:32.722521 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-msgh6
  I0726 12:24:32.722527 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-msgh6
  I0726 12:24:32.722532 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-msgh6
  I0726 12:24:32.722536 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-msgh6
  I0726 12:24:32.722541 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-msgh6
  I0726 12:24:32.722546 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-msgh6
  I0726 12:24:32.722551 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-msgh6
  I0726 12:24:32.722557 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-msgh6
  I0726 12:24:32.722562 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-msgh6
  I0726 12:24:32.722566 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-msgh6
  I0726 12:24:32.722571 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-msgh6
  I0726 12:24:32.722576 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-msgh6
  I0726 12:24:32.722660 23 service.go:4352] Cleaning up the exec pod
  I0726 12:24:32.780149 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6755" for this suite. @ 07/26/25 12:24:32.789
• [6.627 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 07/26/25 12:24:32.799
  I0726 12:24:32.799282 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename watch @ 07/26/25 12:24:32.799
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:24:32.814
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:24:32.816
  STEP: getting a starting resourceVersion @ 07/26/25 12:24:32.818
  STEP: starting a background goroutine to produce watch events @ 07/26/25 12:24:32.821
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 07/26/25 12:24:32.821
  I0726 12:24:35.609505 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8362" for this suite. @ 07/26/25 12:24:35.655
• [2.909 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 07/26/25 12:24:35.708
  I0726 12:24:35.708957 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename secrets @ 07/26/25 12:24:35.709
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:24:35.722
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:24:35.724
  STEP: Creating secret with name secret-test-c8d44aeb-ab4b-4ca3-8c9f-9115901efb64 @ 07/26/25 12:24:35.725
  STEP: Creating a pod to test consume secrets @ 07/26/25 12:24:35.733
  STEP: Saw pod success @ 07/26/25 12:24:39.761
  I0726 12:24:39.765763 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod pod-secrets-30f0987e-3b17-495d-92bf-befbe75a5567 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/26/25 12:24:39.774
  I0726 12:24:39.797530 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8570" for this suite. @ 07/26/25 12:24:39.803
• [4.104 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:570
  STEP: Creating a kubernetes client @ 07/26/25 12:24:39.812
  I0726 12:24:39.812594 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename security-context-test @ 07/26/25 12:24:39.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:24:39.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:24:39.828
  I0726 12:24:43.859722 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2078" for this suite. @ 07/26/25 12:24:43.864
• [4.061 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 07/26/25 12:24:43.873
  I0726 12:24:43.873581 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename runtimeclass @ 07/26/25 12:24:43.874
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:24:43.886
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:24:43.888
  I0726 12:24:43.898841 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4827" for this suite. @ 07/26/25 12:24:43.965
• [0.100 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 07/26/25 12:24:43.973
  I0726 12:24:43.974001 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename deployment @ 07/26/25 12:24:43.974
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:24:43.986
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:24:43.988
  I0726 12:24:43.999752 23 resource.go:81] Pod name cleanup-pod: Found 0 pods out of 1
  I0726 12:24:49.005514 23 resource.go:81] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/26/25 12:24:49.005
  I0726 12:24:49.005580 23 deployment.go:854] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 07/26/25 12:24:49.015
  I0726 12:24:51.042793 23 deployment.go:632] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8651",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e17b4e76-1558-4a8b-876c-8729dbd3a5b8",
      ResourceVersion: (string) (len=4) "6450",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889129489,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889129489,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889129490,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889129489,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889129489,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889129490,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889129489,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=76) "ReplicaSet \"test-cleanup-deployment-69b989f764\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0726 12:24:51.047862 23 deployment.go:40] New ReplicaSet "test-cleanup-deployment-69b989f764" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8651",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1ae06fd3-eb8e-4c44-81e0-3bac4ba4f0ca",
      ResourceVersion: (string) (len=4) "6440",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889129489,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "e17b4e76-1558-4a8b-876c-8729dbd3a5b8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889129489,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 31 37 62 34 65  37 36 2d 31 35 35 38 2d  |\"e17b4e76-1558-|
              00000120  34 61 38 62 2d 38 37 36  63 2d 38 37 32 39 64 62  |4a8b-876c-8729db|
              00000130  64 33 61 35 62 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |d3a5b8\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889129490,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0726 12:24:51.053929 23 deployment.go:68] Pod "test-cleanup-deployment-69b989f764-bd4jb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-69b989f764-bd4jb",
      GenerateName: (string) (len=35) "test-cleanup-deployment-69b989f764-",
      Namespace: (string) (len=15) "deployment-8651",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "07dd2183-205e-47d9-95ca-822b0f34149f",
      ResourceVersion: (string) (len=4) "6439",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889129489,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
          UID: (types.UID) (len=36) "1ae06fd3-eb8e-4c44-81e0-3bac4ba4f0ca",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889129489,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 61  65 30 36 66 64 33 2d 65  |d\":\"1ae06fd3-e|
              00000090  62 38 65 2d 34 63 34 34  2d 38 31 65 30 2d 33 62  |b8e-4c44-81e0-3b|
              000000a0  61 63 34 62 61 34 66 30  63 61 5c 22 7d 22 3a 7b  |ac4ba4f0ca\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889129489,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 33  2e 34 5c 22 7d 22 3a 7b  |2.168.13.4\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-798h2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-798h2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-72-233",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889129489,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889129489,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889129489,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889129489,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889129489,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.72.233",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.72.233"
        }
      },
      PodIP: (string) (len=12) "192.168.13.4",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "192.168.13.4"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889129489,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889129489,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://5e12edfa80bc9aa6f88c0dfe106c450b9f8aebf014cff06809ca58d37d0e54b3",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-798h2",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0726 12:24:51.054950 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8651" for this suite. @ 07/26/25 12:24:51.06
• [7.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 07/26/25 12:24:51.068
  I0726 12:24:51.068781 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename ingress @ 07/26/25 12:24:51.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:24:51.082
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:24:51.084
  STEP: getting /apis @ 07/26/25 12:24:51.085
  STEP: getting /apis/networking.k8s.io @ 07/26/25 12:24:51.088
  STEP: getting /apis/networking.k8s.iov1 @ 07/26/25 12:24:51.089
  STEP: creating @ 07/26/25 12:24:51.089
  STEP: getting @ 07/26/25 12:24:51.11
  STEP: listing @ 07/26/25 12:24:51.115
  STEP: watching @ 07/26/25 12:24:51.119
  I0726 12:24:51.119761 23 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 07/26/25 12:24:51.12
  STEP: cluster-wide watching @ 07/26/25 12:24:51.22
  I0726 12:24:51.220915 23 ingress.go:198] starting watch
  STEP: patching @ 07/26/25 12:24:51.222
  STEP: updating @ 07/26/25 12:24:51.227
  I0726 12:24:51.240403 23 ingress.go:221] waiting for watch events with expected annotations
  I0726 12:24:51.240433 23 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 07/26/25 12:24:51.24
  STEP: updating /status @ 07/26/25 12:24:51.245
  STEP: get /status @ 07/26/25 12:24:51.258
  STEP: deleting @ 07/26/25 12:24:51.262
  STEP: deleting a collection @ 07/26/25 12:24:51.32
  I0726 12:24:51.343768 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-4983" for this suite. @ 07/26/25 12:24:51.347
• [0.287 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 07/26/25 12:24:51.356
  I0726 12:24:51.356201 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename validating-admission-policy @ 07/26/25 12:24:51.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:24:51.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:24:51.373
  STEP: creating the policy @ 07/26/25 12:24:51.383
  STEP: waiting until the marker is denied @ 07/26/25 12:24:51.403
  STEP: testing a replicated Deployment to be allowed @ 07/26/25 12:24:52.211
  STEP: testing a non-replicated ReplicaSet not to be denied @ 07/26/25 12:24:52.227
  I0726 12:24:52.273517 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-3287" for this suite. @ 07/26/25 12:24:52.28
• [0.934 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 07/26/25 12:24:52.29
  I0726 12:24:52.290038 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename projected @ 07/26/25 12:24:52.29
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:24:52.304
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:24:52.306
  STEP: Creating projection with secret that has name projected-secret-test-map-6b535984-d0ad-49c7-a2c2-a02ac9383739 @ 07/26/25 12:24:52.308
  STEP: Creating a pod to test consume secrets @ 07/26/25 12:24:52.313
  STEP: Saw pod success @ 07/26/25 12:24:56.342
  I0726 12:24:56.349857 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod pod-projected-secrets-3658cf4a-0ef9-4468-8524-d817722cef30 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/26/25 12:24:56.358
  I0726 12:24:56.376581 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5783" for this suite. @ 07/26/25 12:24:56.381
• [4.099 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 07/26/25 12:24:56.389
  I0726 12:24:56.389331 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename hostport @ 07/26/25 12:24:56.39
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:24:56.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:24:56.405
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 07/26/25 12:24:56.482
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.3.117 on the node which pod1 resides and expect scheduled @ 07/26/25 12:24:58.505
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.3.117 but use UDP protocol on the node which pod2 resides @ 07/26/25 12:25:10.552
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 07/26/25 12:25:14.594
  I0726 12:25:14.594088 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.3.117 http://127.0.0.1:54323/hostname] Namespace:hostport-1592 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0726 12:25:14.594101 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0726 12:25:14.594134 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/hostport-1592/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.3.117+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  I0726 12:25:14.637825 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.3.117, port: 54323 @ 07/26/25 12:25:14.637
  I0726 12:25:14.637889 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.3.117:54323/hostname] Namespace:hostport-1592 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0726 12:25:14.637896 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0726 12:25:14.637935 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/hostport-1592/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.3.117%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  I0726 12:25:14.684471 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.3.117, port: 54323 UDP @ 07/26/25 12:25:14.684
  I0726 12:25:14.684531 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.3.117 54323] Namespace:hostport-1592 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0726 12:25:14.684537 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0726 12:25:14.684574 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/hostport-1592/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.3.117+54323&container=e2e-host-exec&stderr=true&stdout=true)
  I0726 12:25:19.731339 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0726 12:25:19.731470 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-1592" for this suite. @ 07/26/25 12:25:19.738
• [23.358 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:108
  STEP: Creating a kubernetes client @ 07/26/25 12:25:19.747
  I0726 12:25:19.747885 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename resourcequota @ 07/26/25 12:25:19.748
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:25:19.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:25:19.763
  STEP: Counting existing ResourceQuota @ 07/26/25 12:25:19.765
  STEP: Creating a ResourceQuota @ 07/26/25 12:25:24.77
  STEP: Ensuring resource quota status is calculated @ 07/26/25 12:25:24.779
  STEP: Creating a Service @ 07/26/25 12:25:26.785
  STEP: Creating a NodePort Service @ 07/26/25 12:25:26.813
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 07/26/25 12:25:26.843
  STEP: Ensuring resource quota status captures service creation @ 07/26/25 12:25:26.885
  STEP: Deleting Services @ 07/26/25 12:25:28.89
  STEP: Ensuring resource quota status released usage @ 07/26/25 12:25:28.963
  I0726 12:25:30.968822 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3438" for this suite. @ 07/26/25 12:25:30.974
• [11.236 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 07/26/25 12:25:30.983
  I0726 12:25:30.983546 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/26/25 12:25:30.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:25:30.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:25:31
  I0726 12:25:31.002047 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  I0726 12:25:32.025558 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6402" for this suite. @ 07/26/25 12:25:32.032
• [1.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:54
  STEP: Creating a kubernetes client @ 07/26/25 12:25:32.04
  I0726 12:25:32.040889 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename projected @ 07/26/25 12:25:32.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:25:32.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:25:32.058
  STEP: Creating a pod to test downward API volume plugin @ 07/26/25 12:25:32.06
  STEP: Saw pod success @ 07/26/25 12:25:36.087
  I0726 12:25:36.091107 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod downwardapi-volume-2adcabe1-3819-4867-a5cc-7f5c29757828 container client-container: <nil>
  STEP: delete the pod @ 07/26/25 12:25:36.098
  I0726 12:25:36.121163 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8567" for this suite. @ 07/26/25 12:25:36.125
• [4.094 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 07/26/25 12:25:36.135
  I0726 12:25:36.135407 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename webhook @ 07/26/25 12:25:36.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:25:36.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:25:36.149
  STEP: Setting up server cert @ 07/26/25 12:25:36.17
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/26/25 12:25:36.333
  STEP: Deploying the webhook pod @ 07/26/25 12:25:36.34
  STEP: Wait for the deployment to be ready @ 07/26/25 12:25:36.352
  I0726 12:25:36.364062 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/26/25 12:25:38.377
  STEP: Verifying the service has paired with the endpoint @ 07/26/25 12:25:38.408
  I0726 12:25:39.409746 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 07/26/25 12:25:39.416
  STEP: create a configmap that should be updated by the webhook @ 07/26/25 12:25:39.43
  I0726 12:25:39.514838 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6690" for this suite. @ 07/26/25 12:25:39.52
  STEP: Destroying namespace "webhook-markers-9300" for this suite. @ 07/26/25 12:25:39.527
• [3.402 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 07/26/25 12:25:39.537
  I0726 12:25:39.537512 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename watch @ 07/26/25 12:25:39.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:25:39.552
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:25:39.554
  STEP: creating a watch on configmaps with label A @ 07/26/25 12:25:39.555
  STEP: creating a watch on configmaps with label B @ 07/26/25 12:25:39.556
  STEP: creating a watch on configmaps with label A or B @ 07/26/25 12:25:39.557
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 07/26/25 12:25:39.557
  I0726 12:25:39.565125 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8264  924ffd66-bfb4-4a92-913b-2577ce11f20d 7123 0 2025-07-26 12:25:39 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-07-26 12:25:39 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0726 12:25:39.565210 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8264  924ffd66-bfb4-4a92-913b-2577ce11f20d 7123 0 2025-07-26 12:25:39 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-07-26 12:25:39 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 07/26/25 12:25:39.565
  I0726 12:25:39.574749 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8264  924ffd66-bfb4-4a92-913b-2577ce11f20d 7124 0 2025-07-26 12:25:39 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-07-26 12:25:39 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0726 12:25:39.574842 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8264  924ffd66-bfb4-4a92-913b-2577ce11f20d 7124 0 2025-07-26 12:25:39 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-07-26 12:25:39 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 07/26/25 12:25:39.574
  I0726 12:25:39.583367 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8264  924ffd66-bfb4-4a92-913b-2577ce11f20d 7125 0 2025-07-26 12:25:39 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-07-26 12:25:39 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0726 12:25:39.583434 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8264  924ffd66-bfb4-4a92-913b-2577ce11f20d 7125 0 2025-07-26 12:25:39 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-07-26 12:25:39 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 07/26/25 12:25:39.583
  I0726 12:25:39.590998 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8264  924ffd66-bfb4-4a92-913b-2577ce11f20d 7126 0 2025-07-26 12:25:39 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-07-26 12:25:39 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0726 12:25:39.591029 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8264  924ffd66-bfb4-4a92-913b-2577ce11f20d 7126 0 2025-07-26 12:25:39 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-07-26 12:25:39 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 07/26/25 12:25:39.591
  I0726 12:25:39.596027 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8264  c05f9d70-70a8-4f48-9f09-986c37645116 7127 0 2025-07-26 12:25:39 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-07-26 12:25:39 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0726 12:25:39.596082 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8264  c05f9d70-70a8-4f48-9f09-986c37645116 7127 0 2025-07-26 12:25:39 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-07-26 12:25:39 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 07/26/25 12:25:49.597
  I0726 12:25:49.607017 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8264  c05f9d70-70a8-4f48-9f09-986c37645116 7181 0 2025-07-26 12:25:39 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-07-26 12:25:39 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0726 12:25:49.607084 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8264  c05f9d70-70a8-4f48-9f09-986c37645116 7181 0 2025-07-26 12:25:39 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-07-26 12:25:39 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0726 12:25:59.607448 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8264" for this suite. @ 07/26/25 12:25:59.614
• [20.086 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3195
  STEP: Creating a kubernetes client @ 07/26/25 12:25:59.623
  I0726 12:25:59.623833 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename services @ 07/26/25 12:25:59.624
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:25:59.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:25:59.641
  STEP: fetching services @ 07/26/25 12:25:59.646
  I0726 12:25:59.653556 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5631" for this suite. @ 07/26/25 12:25:59.714
• [0.102 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 07/26/25 12:25:59.725
  I0726 12:25:59.725920 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename webhook @ 07/26/25 12:25:59.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:25:59.741
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:25:59.743
  STEP: Setting up server cert @ 07/26/25 12:25:59.77
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/26/25 12:26:00.239
  STEP: Deploying the webhook pod @ 07/26/25 12:26:00.246
  STEP: Wait for the deployment to be ready @ 07/26/25 12:26:00.261
  I0726 12:26:00.268659 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/26/25 12:26:02.285
  STEP: Verifying the service has paired with the endpoint @ 07/26/25 12:26:02.305
  I0726 12:26:03.305353 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 07/26/25 12:26:03.311
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 07/26/25 12:26:03.324
  STEP: Creating a dummy validating-webhook-configuration object @ 07/26/25 12:26:03.336
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 07/26/25 12:26:03.346
  STEP: Creating a dummy mutating-webhook-configuration object @ 07/26/25 12:26:03.354
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 07/26/25 12:26:03.362
  I0726 12:26:03.446861 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7180" for this suite. @ 07/26/25 12:26:03.452
  STEP: Destroying namespace "webhook-markers-914" for this suite. @ 07/26/25 12:26:03.46
• [3.743 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:826
  STEP: Creating a kubernetes client @ 07/26/25 12:26:03.468
  I0726 12:26:03.468668 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename gc @ 07/26/25 12:26:03.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:26:03.484
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:26:03.487
  I0726 12:26:03.519183 23 garbage_collector.go:848] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"8d2ce6a8-fd77-4c6c-bcd8-cc7caa9ca997", Controller:(*bool)(0xc005579dee), BlockOwnerDeletion:(*bool)(0xc005579def)}}
  I0726 12:26:03.530090 23 garbage_collector.go:852] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"f47bcf9a-7dd4-43e9-8e79-0bab72f4b613", Controller:(*bool)(0xc003a85dd6), BlockOwnerDeletion:(*bool)(0xc003a85dd7)}}
  I0726 12:26:03.537380 23 garbage_collector.go:856] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"1c0b7b7b-4c1f-49e8-8173-27d5fed8d86c", Controller:(*bool)(0xc003a85f9e), BlockOwnerDeletion:(*bool)(0xc003a85f9f)}}
  I0726 12:26:08.558571 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4861" for this suite. @ 07/26/25 12:26:08.563
• [5.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:191
  STEP: Creating a kubernetes client @ 07/26/25 12:26:08.572
  I0726 12:26:08.572906 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename svcaccounts @ 07/26/25 12:26:08.573
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:26:08.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:26:08.587
  I0726 12:26:08.612246 23 service_accounts.go:281] created pod pod-service-account-defaultsa
  I0726 12:26:08.612269 23 service_accounts.go:295] pod pod-service-account-defaultsa service account token volume mount: true
  I0726 12:26:08.618513 23 service_accounts.go:281] created pod pod-service-account-mountsa
  I0726 12:26:08.618533 23 service_accounts.go:295] pod pod-service-account-mountsa service account token volume mount: true
  I0726 12:26:08.624145 23 service_accounts.go:281] created pod pod-service-account-nomountsa
  I0726 12:26:08.624155 23 service_accounts.go:295] pod pod-service-account-nomountsa service account token volume mount: false
  I0726 12:26:08.633614 23 service_accounts.go:281] created pod pod-service-account-defaultsa-mountspec
  I0726 12:26:08.633649 23 service_accounts.go:295] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0726 12:26:08.644924 23 service_accounts.go:281] created pod pod-service-account-mountsa-mountspec
  I0726 12:26:08.644943 23 service_accounts.go:295] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0726 12:26:08.657813 23 service_accounts.go:281] created pod pod-service-account-nomountsa-mountspec
  I0726 12:26:08.657833 23 service_accounts.go:295] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0726 12:26:08.663423 23 service_accounts.go:281] created pod pod-service-account-defaultsa-nomountspec
  I0726 12:26:08.663443 23 service_accounts.go:295] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0726 12:26:08.674774 23 service_accounts.go:281] created pod pod-service-account-mountsa-nomountspec
  I0726 12:26:08.674794 23 service_accounts.go:295] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0726 12:26:08.685187 23 service_accounts.go:281] created pod pod-service-account-nomountsa-nomountspec
  I0726 12:26:08.685262 23 service_accounts.go:295] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0726 12:26:08.685397 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7380" for this suite. @ 07/26/25 12:26:08.693
• [0.133 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 07/26/25 12:26:08.705
  I0726 12:26:08.705926 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename kubectl-logs @ 07/26/25 12:26:08.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:26:08.722
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:26:08.724
  STEP: creating a pod @ 07/26/25 12:26:08.726
  I0726 12:26:08.726202 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-logs-4986 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.53 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0726 12:26:08.808168 23 builder.go:146] stderr: ""
  I0726 12:26:08.808227 23 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 07/26/25 12:26:08.808
  I0726 12:26:08.808341 23 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  I0726 12:26:10.824019 23 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 07/26/25 12:26:10.824
  I0726 12:26:10.824179 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-logs-4986 logs logs-generator logs-generator'
  I0726 12:26:10.883469 23 builder.go:146] stderr: ""
  I0726 12:26:10.883511 23 builder.go:147] stdout: "I0726 12:26:09.394818       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/kube-system/pods/zg6 236\nI0726 12:26:09.594910       1 logs_generator.go:76] 1 POST /api/v1/namespaces/default/pods/dhgs 389\nI0726 12:26:09.795483       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/ns/pods/hz9 595\nI0726 12:26:09.995844       1 logs_generator.go:76] 3 POST /api/v1/namespaces/kube-system/pods/grz 408\nI0726 12:26:10.195156       1 logs_generator.go:76] 4 GET /api/v1/namespaces/default/pods/2x5w 540\nI0726 12:26:10.395468       1 logs_generator.go:76] 5 GET /api/v1/namespaces/kube-system/pods/2ghd 474\nI0726 12:26:10.594896       1 logs_generator.go:76] 6 GET /api/v1/namespaces/default/pods/28hp 340\nI0726 12:26:10.795232       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/8jr 213\n"
  STEP: limiting log lines @ 07/26/25 12:26:10.883
  I0726 12:26:10.883582 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-logs-4986 logs logs-generator logs-generator --tail=1'
  I0726 12:26:10.932392 23 builder.go:146] stderr: ""
  I0726 12:26:10.932425 23 builder.go:147] stdout: "I0726 12:26:10.795232       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/8jr 213\n"
  I0726 12:26:10.932443 23 logs.go:180] got output "I0726 12:26:10.795232       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/8jr 213\n"
  STEP: limiting log bytes @ 07/26/25 12:26:10.932
  I0726 12:26:10.932512 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-logs-4986 logs logs-generator logs-generator --limit-bytes=1'
  I0726 12:26:10.987503 23 builder.go:146] stderr: ""
  I0726 12:26:10.987538 23 builder.go:147] stdout: "I"
  I0726 12:26:10.987546 23 logs.go:186] got output "I"
  STEP: exposing timestamps @ 07/26/25 12:26:10.987
  I0726 12:26:10.987658 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-logs-4986 logs logs-generator logs-generator --tail=1 --timestamps'
  I0726 12:26:11.041119 23 builder.go:146] stderr: ""
  I0726 12:26:11.041158 23 builder.go:147] stdout: "2025-07-26T12:26:10.995546222Z I0726 12:26:10.995444       1 logs_generator.go:76] 8 POST /api/v1/namespaces/default/pods/9qp8 360\n"
  I0726 12:26:11.041168 23 logs.go:192] got output "2025-07-26T12:26:10.995546222Z I0726 12:26:10.995444       1 logs_generator.go:76] 8 POST /api/v1/namespaces/default/pods/9qp8 360\n"
  STEP: restricting to a time range @ 07/26/25 12:26:11.041
  I0726 12:26:13.541820 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-logs-4986 logs logs-generator logs-generator --since=1s'
  I0726 12:26:13.610068 23 builder.go:146] stderr: ""
  I0726 12:26:13.610114 23 builder.go:147] stdout: "I0726 12:26:12.795355       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/ns/pods/6zpk 515\nI0726 12:26:12.995688       1 logs_generator.go:76] 18 GET /api/v1/namespaces/default/pods/pnh 264\nI0726 12:26:13.194951       1 logs_generator.go:76] 19 GET /api/v1/namespaces/ns/pods/xb9 488\nI0726 12:26:13.395215       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/kube-system/pods/2fr4 583\nI0726 12:26:13.595600       1 logs_generator.go:76] 21 GET /api/v1/namespaces/ns/pods/fhg9 249\n"
  I0726 12:26:13.610151 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-logs-4986 logs logs-generator logs-generator --since=24h'
  I0726 12:26:13.659246 23 builder.go:146] stderr: ""
  I0726 12:26:13.659299 23 builder.go:147] stdout: "I0726 12:26:09.394818       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/kube-system/pods/zg6 236\nI0726 12:26:09.594910       1 logs_generator.go:76] 1 POST /api/v1/namespaces/default/pods/dhgs 389\nI0726 12:26:09.795483       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/ns/pods/hz9 595\nI0726 12:26:09.995844       1 logs_generator.go:76] 3 POST /api/v1/namespaces/kube-system/pods/grz 408\nI0726 12:26:10.195156       1 logs_generator.go:76] 4 GET /api/v1/namespaces/default/pods/2x5w 540\nI0726 12:26:10.395468       1 logs_generator.go:76] 5 GET /api/v1/namespaces/kube-system/pods/2ghd 474\nI0726 12:26:10.594896       1 logs_generator.go:76] 6 GET /api/v1/namespaces/default/pods/28hp 340\nI0726 12:26:10.795232       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/8jr 213\nI0726 12:26:10.995444       1 logs_generator.go:76] 8 POST /api/v1/namespaces/default/pods/9qp8 360\nI0726 12:26:11.195781       1 logs_generator.go:76] 9 GET /api/v1/namespaces/default/pods/jtj 215\nI0726 12:26:11.394921       1 logs_generator.go:76] 10 POST /api/v1/namespaces/kube-system/pods/nhj 350\nI0726 12:26:11.595224       1 logs_generator.go:76] 11 POST /api/v1/namespaces/default/pods/vsr 507\nI0726 12:26:11.795563       1 logs_generator.go:76] 12 POST /api/v1/namespaces/kube-system/pods/9rr 336\nI0726 12:26:11.995884       1 logs_generator.go:76] 13 GET /api/v1/namespaces/ns/pods/dkx4 438\nI0726 12:26:12.195261       1 logs_generator.go:76] 14 GET /api/v1/namespaces/ns/pods/tzv 294\nI0726 12:26:12.395796       1 logs_generator.go:76] 15 GET /api/v1/namespaces/kube-system/pods/858g 207\nI0726 12:26:12.595012       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/ns/pods/zx5h 464\nI0726 12:26:12.795355       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/ns/pods/6zpk 515\nI0726 12:26:12.995688       1 logs_generator.go:76] 18 GET /api/v1/namespaces/default/pods/pnh 264\nI0726 12:26:13.194951       1 logs_generator.go:76] 19 GET /api/v1/namespaces/ns/pods/xb9 488\nI0726 12:26:13.395215       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/kube-system/pods/2fr4 583\nI0726 12:26:13.595600       1 logs_generator.go:76] 21 GET /api/v1/namespaces/ns/pods/fhg9 249\n"
  I0726 12:26:13.659391 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-logs-4986 delete pod logs-generator'
  I0726 12:26:14.218498 23 builder.go:146] stderr: ""
  I0726 12:26:14.218533 23 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I0726 12:26:14.218665 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-4986" for this suite. @ 07/26/25 12:26:14.224
• [5.529 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 07/26/25 12:26:14.235
  I0726 12:26:14.235386 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename controllerrevisions @ 07/26/25 12:26:14.235
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:26:14.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:26:14.249
  STEP: Creating DaemonSet "e2e-844df-daemon-set" @ 07/26/25 12:26:14.339
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/26/25 12:26:14.347
  I0726 12:26:14.426746 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-77-91 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 12:26:14.426776 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-89-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 12:26:14.430113 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-844df-daemon-set: 0
  I0726 12:26:14.430141 23 fixtures.go:131] Node ip-172-31-16-254 is running 0 daemon pod, expected 1
  I0726 12:26:15.354474 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-77-91 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 12:26:15.354518 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-89-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 12:26:15.359051 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-844df-daemon-set: 0
  I0726 12:26:15.359076 23 fixtures.go:131] Node ip-172-31-16-254 is running 0 daemon pod, expected 1
  I0726 12:26:16.353510 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-77-91 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 12:26:16.353559 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-89-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 12:26:16.358002 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-844df-daemon-set: 1
  I0726 12:26:16.358041 23 fixtures.go:131] Node ip-172-31-3-117 is running 0 daemon pod, expected 1
  I0726 12:26:17.352951 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-77-91 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 12:26:17.352991 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-89-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 12:26:17.357623 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-844df-daemon-set: 2
  I0726 12:26:17.357664 23 fixtures.go:131] Node ip-172-31-3-117 is running 0 daemon pod, expected 1
  I0726 12:26:18.354931 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-77-91 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 12:26:18.354963 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-89-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 12:26:18.360256 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-844df-daemon-set: 3
  I0726 12:26:18.360272 23 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset e2e-844df-daemon-set
  STEP: Confirm DaemonSet "e2e-844df-daemon-set" successfully created with "daemonset-name=e2e-844df-daemon-set" label @ 07/26/25 12:26:18.364
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-844df-daemon-set" @ 07/26/25 12:26:18.373
  I0726 12:26:18.378398 23 controller_revision.go:162] Located ControllerRevision: "e2e-844df-daemon-set-74b55588d6"
  STEP: Patching ControllerRevision "e2e-844df-daemon-set-74b55588d6" @ 07/26/25 12:26:18.382
  I0726 12:26:18.388798 23 controller_revision.go:173] e2e-844df-daemon-set-74b55588d6 has been patched
  STEP: Create a new ControllerRevision @ 07/26/25 12:26:18.388
  I0726 12:26:18.395140 23 controller_revision.go:191] Created ControllerRevision: e2e-844df-daemon-set-67f4c9cf64
  STEP: Confirm that there are two ControllerRevisions @ 07/26/25 12:26:18.395
  I0726 12:26:18.395183 23 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0726 12:26:18.398686 23 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-844df-daemon-set-74b55588d6" @ 07/26/25 12:26:18.398
  STEP: Confirm that there is only one ControllerRevision @ 07/26/25 12:26:18.409
  I0726 12:26:18.409785 23 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0726 12:26:18.479220 23 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-844df-daemon-set-67f4c9cf64" @ 07/26/25 12:26:18.483
  I0726 12:26:18.494226 23 controller_revision.go:220] e2e-844df-daemon-set-67f4c9cf64 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 07/26/25 12:26:18.494
  I0726 12:26:18.502171      23 warnings.go:110] "Warning: unknown field \"updateStrategy\""
  STEP: Confirm that there are two ControllerRevisions @ 07/26/25 12:26:18.502
  I0726 12:26:18.502278 23 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0726 12:26:18.532620 23 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-844df-daemon-set-67f4c9cf64=updated" @ 07/26/25 12:26:18.532
  STEP: Confirm that there is only one ControllerRevision @ 07/26/25 12:26:18.546
  I0726 12:26:18.546692 23 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0726 12:26:18.579825 23 controller_revision.go:265] Found 1 ControllerRevisions
  I0726 12:26:18.583313 23 controller_revision.go:246] ControllerRevision "e2e-844df-daemon-set-7677b8ffd9" has revision 3
  STEP: Deleting DaemonSet "e2e-844df-daemon-set" @ 07/26/25 12:26:18.587
  STEP: deleting DaemonSet.extensions e2e-844df-daemon-set in namespace controllerrevisions-1188, will wait for the garbage collector to delete the pods @ 07/26/25 12:26:18.587
  I0726 12:26:18.651411 23 resources.go:139] Deleting DaemonSet.extensions e2e-844df-daemon-set took: 8.977906ms
  I0726 12:26:18.752447 23 resources.go:163] Terminating DaemonSet.extensions e2e-844df-daemon-set pods took: 101.032646ms
  I0726 12:26:20.559396 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-844df-daemon-set: 0
  I0726 12:26:20.559429 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-844df-daemon-set
  I0726 12:26:20.566380 23 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"7645"},"items":null}

  I0726 12:26:20.570089 23 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"7645"},"items":null}

  I0726 12:26:20.586374 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-1188" for this suite. @ 07/26/25 12:26:20.591
• [6.365 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 07/26/25 12:26:20.6
  I0726 12:26:20.600180 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename tables @ 07/26/25 12:26:20.6
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:26:20.612
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:26:20.614
  I0726 12:26:20.618206 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-9897" for this suite. @ 07/26/25 12:26:20.675
• [0.085 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:488
  STEP: Creating a kubernetes client @ 07/26/25 12:26:20.684
  I0726 12:26:20.684880 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename gc @ 07/26/25 12:26:20.685
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:26:20.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:26:20.698
  STEP: create the deployment @ 07/26/25 12:26:20.699
  I0726 12:26:20.707652      23 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: Wait for the Deployment to create new ReplicaSet @ 07/26/25 12:26:20.707
  STEP: delete the deployment @ 07/26/25 12:26:21.214
  STEP: wait for all rs to be garbage collected @ 07/26/25 12:26:21.223
  STEP: expected 0 pods, got 2 pods @ 07/26/25 12:26:21.228
  STEP: Gathering metrics @ 07/26/25 12:26:21.738
  W0726 12:26:21.744245      23 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0726 12:26:21.744283 23 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0726 12:26:21.744409 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6482" for this suite. @ 07/26/25 12:26:21.748
• [1.072 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 07/26/25 12:26:21.756
  I0726 12:26:21.756843 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename aggregateddiscovery @ 07/26/25 12:26:21.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:26:21.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:26:21.773
  I0726 12:26:21.776720 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  I0726 12:26:24.823809 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-5216" for this suite. @ 07/26/25 12:26:24.828
• [3.081 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:131
  STEP: Creating a kubernetes client @ 07/26/25 12:26:24.837
  I0726 12:26:24.837628 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename dns @ 07/26/25 12:26:24.838
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:26:24.851
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:26:24.852
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-7695.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-1.dns-test-service.dns-7695.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/agnhost_hosts@dns-querier-1;sleep 1; done
   @ 07/26/25 12:26:24.854
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-7695.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-7695.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 07/26/25 12:26:24.854
  STEP: creating a pod to probe /etc/hosts @ 07/26/25 12:26:24.854
  STEP: submitting the pod to kubernetes @ 07/26/25 12:26:24.854
  STEP: retrieving the pod @ 07/26/25 12:26:30.892
  STEP: looking for the results for each expected name from probers @ 07/26/25 12:26:30.896
  I0726 12:26:30.917801 23 dns_common.go:546] DNS probes using dns-7695/dns-test-a7bbf8c5-8bfb-43ac-b55d-7780b027f6ad succeeded

  STEP: deleting the pod @ 07/26/25 12:26:30.917
  I0726 12:26:30.937054 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7695" for this suite. @ 07/26/25 12:26:30.941
• [6.112 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 07/26/25 12:26:30.949
  I0726 12:26:30.949794 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename projected @ 07/26/25 12:26:30.95
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:26:30.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:26:30.965
  STEP: Creating secret with name s-test-opt-del-d0cf0002-a200-48b1-8602-4148add4bd3a @ 07/26/25 12:26:31.041
  STEP: Creating secret with name s-test-opt-upd-d852635d-1986-41b6-9b9c-2856bd9f94f0 @ 07/26/25 12:26:31.047
  STEP: Creating the pod @ 07/26/25 12:26:31.053
  STEP: Deleting secret s-test-opt-del-d0cf0002-a200-48b1-8602-4148add4bd3a @ 07/26/25 12:26:35.114
  STEP: Updating secret s-test-opt-upd-d852635d-1986-41b6-9b9c-2856bd9f94f0 @ 07/26/25 12:26:35.123
  STEP: Creating secret with name s-test-opt-create-526a27a9-e746-46e5-9e14-952cbd82627e @ 07/26/25 12:26:35.128
  STEP: waiting to observe update in volume @ 07/26/25 12:26:35.134
  I0726 12:28:07.647243 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8689" for this suite. @ 07/26/25 12:28:07.652
• [96.710 seconds]
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:900
  STEP: Creating a kubernetes client @ 07/26/25 12:28:07.659
  I0726 12:28:07.659927 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename pods @ 07/26/25 12:28:07.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:28:07.673
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:28:07.675
  STEP: creating a Pod with a static label @ 07/26/25 12:28:07.681
  STEP: watching for Pod to be ready @ 07/26/25 12:28:07.693
  I0726 12:28:07.694313 23 pods.go:947] observed Pod pod-test in namespace pods-7555 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0726 12:28:07.699452 23 pods.go:947] observed Pod pod-test in namespace pods-7555 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-26 12:28:07 +0000 UTC  }]
  I0726 12:28:07.719563 23 pods.go:947] observed Pod pod-test in namespace pods-7555 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-26 12:28:07 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-26 12:28:07 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-26 12:28:07 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-26 12:28:07 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-26 12:28:07 +0000 UTC  }]
  I0726 12:28:08.296546 23 pods.go:950] Found Pod pod-test in namespace pods-7555 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-26 12:28:08 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-26 12:28:07 +0000 UTC  } {Ready 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-26 12:28:08 +0000 UTC  } {ContainersReady 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-26 12:28:08 +0000 UTC  } {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-26 12:28:07 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 07/26/25 12:28:08.301
  STEP: getting the Pod and ensuring that it's patched @ 07/26/25 12:28:08.311
  STEP: replacing the Pod's status Ready condition to False @ 07/26/25 12:28:08.314
  STEP: check the Pod again to ensure its Ready conditions are False @ 07/26/25 12:28:08.327
  STEP: deleting the Pod via a Collection with a LabelSelector @ 07/26/25 12:28:08.327
  STEP: watching for the Pod to be deleted @ 07/26/25 12:28:08.341
  I0726 12:28:08.342147 23 pods.go:1060] observed event type MODIFIED
  I0726 12:28:10.303290 23 pods.go:1060] observed event type MODIFIED
  I0726 12:28:10.439533 23 pods.go:1060] observed event type MODIFIED
  I0726 12:28:11.312477 23 pods.go:1060] observed event type MODIFIED
  I0726 12:28:11.320462 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7555" for this suite. @ 07/26/25 12:28:11.326
• [3.675 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:194
  STEP: Creating a kubernetes client @ 07/26/25 12:28:11.335
  I0726 12:28:11.335584 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename runtimeclass @ 07/26/25 12:28:11.336
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:28:11.348
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:28:11.35
  STEP: getting /apis @ 07/26/25 12:28:11.351
  STEP: getting /apis/node.k8s.io @ 07/26/25 12:28:11.354
  STEP: getting /apis/node.k8s.io/v1 @ 07/26/25 12:28:11.354
  STEP: creating @ 07/26/25 12:28:11.355
  STEP: watching @ 07/26/25 12:28:11.371
  I0726 12:28:11.371847 23 runtimeclass.go:278] starting watch
  STEP: getting @ 07/26/25 12:28:11.377
  STEP: listing @ 07/26/25 12:28:11.381
  STEP: patching @ 07/26/25 12:28:11.384
  STEP: updating @ 07/26/25 12:28:11.39
  I0726 12:28:11.396938 23 runtimeclass.go:308] waiting for watch events with expected annotations
  STEP: deleting @ 07/26/25 12:28:11.396
  STEP: deleting a collection @ 07/26/25 12:28:11.41
  I0726 12:28:11.432527 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-193" for this suite. @ 07/26/25 12:28:11.436
• [0.108 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 07/26/25 12:28:11.444
  I0726 12:28:11.444040 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 07/26/25 12:28:11.444
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:28:11.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:28:11.458
  STEP: create the container to handle the HTTPGet hook request. @ 07/26/25 12:28:11.537
  STEP: create the pod with lifecycle hook @ 07/26/25 12:28:13.566
  STEP: delete the pod with lifecycle hook @ 07/26/25 12:28:15.589
  STEP: check prestop hook @ 07/26/25 12:28:17.61
  I0726 12:28:17.622225 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5566" for this suite. @ 07/26/25 12:28:17.626
• [6.191 seconds]
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 07/26/25 12:28:17.635
  I0726 12:28:17.635557 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename pods @ 07/26/25 12:28:17.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:28:17.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:28:17.65
  I0726 12:28:17.652319 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: creating the pod @ 07/26/25 12:28:17.652
  STEP: submitting the pod to kubernetes @ 07/26/25 12:28:17.652
  STEP: waiting for the container to be running @ 07/26/25 12:28:19.68
  I0726 12:28:19.695252 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5014" for this suite. @ 07/26/25 12:28:19.7
• [2.074 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 07/26/25 12:28:19.709
  I0726 12:28:19.709746 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename crd-webhook @ 07/26/25 12:28:19.71
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:28:19.722
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:28:19.724
  STEP: Setting up server cert @ 07/26/25 12:28:19.725
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 07/26/25 12:28:20.16
  STEP: Deploying the custom resource conversion webhook pod @ 07/26/25 12:28:20.167
  STEP: Wait for the deployment to be ready @ 07/26/25 12:28:20.181
  I0726 12:28:20.190970 23 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/26/25 12:28:22.206
  STEP: Verifying the service has paired with the endpoint @ 07/26/25 12:28:22.226
  I0726 12:28:23.226650 23 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0726 12:28:23.232805 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Creating a v1 custom resource @ 07/26/25 12:28:25.785
  STEP: v2 custom resource should be converted @ 07/26/25 12:28:25.79
  I0726 12:28:26.367680 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-8598" for this suite. @ 07/26/25 12:28:26.371
• [6.675 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:159
  STEP: Creating a kubernetes client @ 07/26/25 12:28:26.385
  I0726 12:28:26.385194 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename emptydir @ 07/26/25 12:28:26.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:28:26.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:28:26.398
  STEP: Creating a pod to test emptydir volume type on node default medium @ 07/26/25 12:28:26.4
  STEP: Saw pod success @ 07/26/25 12:28:30.428
  I0726 12:28:30.434050 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod pod-73164492-4daa-423a-bc3d-7b188b318022 container test-container: <nil>
  STEP: delete the pod @ 07/26/25 12:28:30.442
  I0726 12:28:30.465878 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1020" for this suite. @ 07/26/25 12:28:30.47
• [4.094 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should mark indexes as failed when the FailIndex action is matched in podFailurePolicy [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:730
  STEP: Creating a kubernetes client @ 07/26/25 12:28:30.479
  I0726 12:28:30.479349 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename job @ 07/26/25 12:28:30.479
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:28:30.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:28:30.492
  STEP: Creating an indexed job with failing pods matching the FailIndex action @ 07/26/25 12:28:30.494
  STEP: Awaiting for the job to fail as all indexes are failed @ 07/26/25 12:28:30.501
  STEP: Verifying the Job status fields to ensure the upper indexes didn't execute @ 07/26/25 12:28:34.516
  I0726 12:28:34.520742 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-473" for this suite. @ 07/26/25 12:28:34.526
• [4.056 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1504
  STEP: Creating a kubernetes client @ 07/26/25 12:28:34.535
  I0726 12:28:34.535661 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename services @ 07/26/25 12:28:34.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:28:34.548
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:28:34.55
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-5983 @ 07/26/25 12:28:34.551
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 07/26/25 12:28:34.578
  STEP: creating service externalsvc in namespace services-5983 @ 07/26/25 12:28:34.578
  I0726 12:28:34.609516 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  STEP: changing the NodePort service to type=ExternalName @ 07/26/25 12:28:36.63
  I0726 12:28:36.664437 23 resource.go:361] Creating new exec pod
  I0726 12:28:38.685753 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-5983 exec execpods9v5b -- /bin/sh -x -c nslookup nodeport-service.services-5983.svc.cluster.local'
  I0726 12:28:38.796571 23 builder.go:146] stderr: "+ nslookup nodeport-service.services-5983.svc.cluster.local\n"
  I0726 12:28:38.796628 23 builder.go:147] stdout: "Server:\t\t10.152.183.117\nAddress:\t10.152.183.117#53\n\nnodeport-service.services-5983.svc.cluster.local\tcanonical name = externalsvc.services-5983.svc.cluster.local.\nName:\texternalsvc.services-5983.svc.cluster.local\nAddress: 10.152.183.193\n\n"
  I0726 12:28:38.837695 23 service.go:1515] Cleaning up the NodePort to ExternalName test service
  I0726 12:28:38.861208 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5983" for this suite. @ 07/26/25 12:28:38.869
• [4.343 seconds]
------------------------------
SS
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:110
  STEP: Creating a kubernetes client @ 07/26/25 12:28:38.878
  I0726 12:28:38.879006 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename job @ 07/26/25 12:28:38.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:28:38.891
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:28:38.893
  STEP: Looking for a node to schedule job pod @ 07/26/25 12:28:38.894
  STEP: Creating a job @ 07/26/25 12:28:38.97
  STEP: Ensuring job fails @ 07/26/25 12:28:38.976
  I0726 12:28:42.995588 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2408" for this suite. @ 07/26/25 12:28:43
• [4.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 07/26/25 12:28:43.01
  I0726 12:28:43.010673 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename container-runtime @ 07/26/25 12:28:43.011
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:28:43.024
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:28:43.025
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 07/26/25 12:28:43.038
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 07/26/25 12:28:58.126
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 07/26/25 12:28:58.13
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 07/26/25 12:28:58.139
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 07/26/25 12:28:58.139
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 07/26/25 12:28:58.17
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 07/26/25 12:29:01.194
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 07/26/25 12:29:02.205
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 07/26/25 12:29:02.213
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 07/26/25 12:29:02.213
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 07/26/25 12:29:02.241
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 07/26/25 12:29:03.254
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 07/26/25 12:29:05.269
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 07/26/25 12:29:05.278
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 07/26/25 12:29:05.278
  I0726 12:29:05.315915 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3957" for this suite. @ 07/26/25 12:29:05.32
• [22.318 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:373
  STEP: Creating a kubernetes client @ 07/26/25 12:29:05.328
  I0726 12:29:05.328800 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename namespaces @ 07/26/25 12:29:05.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:29:05.344
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:29:05.346
  STEP: Updating Namespace "namespaces-4693" @ 07/26/25 12:29:05.347
  I0726 12:29:05.357474 23 namespace.go:390] Namespace "namespaces-4693" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"fcb8c729-7b66-4bcf-9daa-e32cad6521b4", "kubernetes.io/metadata.name":"namespaces-4693", "namespaces-4693":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0726 12:29:05.357548 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4693" for this suite. @ 07/26/25 12:29:05.421
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:133
  STEP: Creating a kubernetes client @ 07/26/25 12:29:05.43
  I0726 12:29:05.430266 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename runtimeclass @ 07/26/25 12:29:05.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:29:05.443
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:29:05.445
  I0726 12:29:07.484877 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-275" for this suite. @ 07/26/25 12:29:07.49
• [2.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:85
  STEP: Creating a kubernetes client @ 07/26/25 12:29:07.5
  I0726 12:29:07.500936 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename downward-api @ 07/26/25 12:29:07.501
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:29:07.515
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:29:07.517
  STEP: Creating a pod to test downward API volume plugin @ 07/26/25 12:29:07.519
  STEP: Saw pod success @ 07/26/25 12:29:11.544
  I0726 12:29:11.548621 23 output.go:207] Trying to get logs from node ip-172-31-72-233 pod downwardapi-volume-c77a7c2a-a882-440d-b122-4d2756396355 container client-container: <nil>
  STEP: delete the pod @ 07/26/25 12:29:11.557
  I0726 12:29:11.578671 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5607" for this suite. @ 07/26/25 12:29:11.584
• [4.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:329
  STEP: Creating a kubernetes client @ 07/26/25 12:29:11.593
  I0726 12:29:11.593164 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename proxy @ 07/26/25 12:29:11.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:29:11.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:29:11.607
  I0726 12:29:11.608856 23 proxy.go:336] Creating pod...
  I0726 12:29:13.633116 23 proxy.go:360] Creating service...
  I0726 12:29:13.650371 23 proxy.go:397] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5108/pods/agnhost/proxy/some/path/with/DELETE
  I0726 12:29:13.656765 23 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0726 12:29:13.656789 23 proxy.go:397] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5108/pods/agnhost/proxy/some/path/with/GET
  I0726 12:29:13.660236 23 proxy.go:573] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0726 12:29:13.660262 23 proxy.go:397] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5108/pods/agnhost/proxy/some/path/with/HEAD
  I0726 12:29:13.664191 23 proxy.go:560] http.Client request:HEAD | StatusCode:200
  I0726 12:29:13.664210 23 proxy.go:397] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5108/pods/agnhost/proxy/some/path/with/OPTIONS
  I0726 12:29:13.669234 23 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0726 12:29:13.669260 23 proxy.go:397] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5108/pods/agnhost/proxy/some/path/with/PATCH
  I0726 12:29:13.673115 23 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0726 12:29:13.673138 23 proxy.go:397] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5108/pods/agnhost/proxy/some/path/with/POST
  I0726 12:29:13.677814 23 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0726 12:29:13.677846 23 proxy.go:397] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5108/pods/agnhost/proxy/some/path/with/PUT
  I0726 12:29:13.682963 23 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0726 12:29:13.682987 23 proxy.go:408] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5108/services/test-service/proxy/some/path/with/DELETE
  I0726 12:29:13.690433 23 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0726 12:29:13.690466 23 proxy.go:408] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5108/services/test-service/proxy/some/path/with/GET
  I0726 12:29:13.696525 23 proxy.go:573] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0726 12:29:13.696558 23 proxy.go:408] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5108/services/test-service/proxy/some/path/with/HEAD
  I0726 12:29:13.703989 23 proxy.go:560] http.Client request:HEAD | StatusCode:200
  I0726 12:29:13.704008 23 proxy.go:408] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5108/services/test-service/proxy/some/path/with/OPTIONS
  I0726 12:29:13.711843 23 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0726 12:29:13.711878 23 proxy.go:408] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5108/services/test-service/proxy/some/path/with/PATCH
  I0726 12:29:13.719148 23 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0726 12:29:13.719181 23 proxy.go:408] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5108/services/test-service/proxy/some/path/with/POST
  I0726 12:29:13.726709 23 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0726 12:29:13.726744 23 proxy.go:408] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5108/services/test-service/proxy/some/path/with/PUT
  I0726 12:29:13.733549 23 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0726 12:29:13.733677 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-5108" for this suite. @ 07/26/25 12:29:13.739
• [2.157 seconds]
------------------------------
SS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 07/26/25 12:29:13.749
  I0726 12:29:13.749907 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename secrets @ 07/26/25 12:29:13.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:29:13.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:29:13.761
  STEP: Creating secret with name secret-test-09213637-b345-4b31-98a1-b5e9e74ceaf1 @ 07/26/25 12:29:13.762
  STEP: Creating a pod to test consume secrets @ 07/26/25 12:29:13.767
  STEP: Saw pod success @ 07/26/25 12:29:15.789
  I0726 12:29:15.793772 23 output.go:207] Trying to get logs from node ip-172-31-72-233 pod pod-secrets-85034469-115b-4f69-85f2-f2d2eaee807e container secret-env-test: <nil>
  STEP: delete the pod @ 07/26/25 12:29:15.802
  I0726 12:29:15.823882 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8920" for this suite. @ 07/26/25 12:29:15.828
• [2.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 07/26/25 12:29:15.837
  I0726 12:29:15.837958 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename init-container @ 07/26/25 12:29:15.838
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:29:15.852
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:29:15.855
  STEP: creating the pod @ 07/26/25 12:29:15.856
  I0726 12:29:15.856797 23 init_container.go:374] PodSpec: initContainers in spec.initContainers
  I0726 12:29:59.842939 23 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-b9fd4b31-ea44-4eb8-add7-b0e6bdf4741c", GenerateName:"", Namespace:"init-container-7381", SelfLink:"", UID:"c48b7d27-d710-4a78-ade5-4fac3c4d8557", ResourceVersion:"9133", Generation:1, CreationTimestamp:time.Date(2025, time.July, 26, 12, 29, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"856791661"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 12, 29, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005696048), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 12, 29, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005696078), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-s4lmd", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc004dcf200), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-s4lmd", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-s4lmd", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-s4lmd", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc00205d700), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-16-254", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc003a42870), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc00205d790)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc00205d7b0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc00205d7b8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc00205d7bc), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc00118d3b0), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil), Resources:(*v1.ResourceRequirements)(nil)}, Status:v1.PodStatus{ObservedGeneration:0, Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", ObservedGeneration:0, Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.July, 26, 12, 29, 16, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.July, 26, 12, 29, 15, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.July, 26, 12, 29, 15, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.July, 26, 12, 29, 15, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", ObservedGeneration:0, Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.July, 26, 12, 29, 15, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.16.254", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.31.16.254"}}, PodIP:"192.168.58.229", PodIPs:[]v1.PodIP{v1.PodIP{IP:"192.168.58.229"}}, StartTime:time.Date(2025, time.July, 26, 12, 29, 15, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc003355f10)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00389e000)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://884fa879caa6d0c0b91248197bbcdb7c1473b301b2904fb54a0588db9c3121e0", Started:(*bool)(0xc00205d86a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(0xc003e3b350), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-s4lmd", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc00118d3e0)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc004dcf280), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc00205d87d), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-s4lmd", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc00118d3f0)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc004dcf240), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc00205d834), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-s4lmd", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc00118d3c0)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I0726 12:29:59.843079 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-7381" for this suite. @ 07/26/25 12:29:59.85
• [44.026 seconds]
------------------------------
S
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:431
  STEP: Creating a kubernetes client @ 07/26/25 12:29:59.864
  I0726 12:29:59.864593 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename security-context-test @ 07/26/25 12:29:59.865
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:29:59.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:29:59.879
  I0726 12:30:03.915790 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8639" for this suite. @ 07/26/25 12:30:03.92
• [4.066 seconds]
------------------------------
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:329
  STEP: Creating a kubernetes client @ 07/26/25 12:30:03.93
  I0726 12:30:03.930410 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename statefulset @ 07/26/25 12:30:03.93
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:30:03.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:30:03.947
  STEP: Creating service test in namespace statefulset-6688 @ 07/26/25 12:30:03.948
  STEP: Creating a new StatefulSet @ 07/26/25 12:30:03.964
  I0726 12:30:03.976846 23 wait.go:44] Found 0 stateful pods, waiting for 3
  I0726 12:30:13.979807 23 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0726 12:30:13.979847 23 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0726 12:30:13.979855 23 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0726 12:30:13.991233 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=statefulset-6688 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0726 12:30:14.082556 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0726 12:30:14.082706 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0726 12:30:14.082733 23 statefulset.go:2485] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 07/26/25 12:30:24.093
  I0726 12:30:24.104161 23 statefulset.go:2542] Updating stateful set ss2
  STEP: Creating a new revision @ 07/26/25 12:30:24.104
  STEP: Updating Pods in reverse ordinal order @ 07/26/25 12:30:34.113
  I0726 12:30:34.117596 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=statefulset-6688 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0726 12:30:34.194843 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0726 12:30:34.194878 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0726 12:30:34.194887 23 statefulset.go:2509] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0726 12:30:44.215306 23 wait.go:158] Waiting for StatefulSet statefulset-6688/ss2 to complete update
  STEP: Rolling back to a previous revision @ 07/26/25 12:30:54.219
  I0726 12:30:54.219110 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=statefulset-6688 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0726 12:30:54.300464 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0726 12:30:54.300519 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0726 12:30:54.300528 23 statefulset.go:2485] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0726 12:31:04.321369 23 statefulset.go:2542] Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 07/26/25 12:31:14.333
  I0726 12:31:14.337916 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=statefulset-6688 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0726 12:31:14.415194 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0726 12:31:14.415229 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0726 12:31:14.415238 23 statefulset.go:2509] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0726 12:31:24.435420 23 statefulset.go:138] Deleting all statefulset in ns statefulset-6688
  I0726 12:31:24.440219 23 rest.go:153] Scaling statefulset ss2 to 0
  I0726 12:31:34.458677 23 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0726 12:31:34.462322 23 rest.go:91] Deleting statefulset ss2
  I0726 12:31:34.481833 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6688" for this suite. @ 07/26/25 12:31:34.487
• [90.565 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 07/26/25 12:31:34.495
  I0726 12:31:34.495770 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename replicaset @ 07/26/25 12:31:34.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:31:34.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:31:34.509
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 07/26/25 12:31:34.51
  STEP: When a replicaset with a matching selector is created @ 07/26/25 12:31:36.535
  STEP: Then the orphan pod is adopted @ 07/26/25 12:31:36.542
  STEP: When the matched label of one of its pods change @ 07/26/25 12:31:37.552
  I0726 12:31:37.557808 23 resource.go:81] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 07/26/25 12:31:37.57
  I0726 12:31:38.583409 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6801" for this suite. @ 07/26/25 12:31:38.588
• [4.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 07/26/25 12:31:38.598
  I0726 12:31:38.598087 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename sysctl @ 07/26/25 12:31:38.598
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:31:38.61
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:31:38.611
  STEP: Creating a pod with one valid and two invalid sysctls @ 07/26/25 12:31:38.613
  I0726 12:31:38.621923 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-7426" for this suite. @ 07/26/25 12:31:38.688
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 07/26/25 12:31:38.698
  I0726 12:31:38.698381 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename kubelet-test @ 07/26/25 12:31:38.698
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:31:38.713
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:31:38.715
  I0726 12:31:40.758354 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7303" for this suite. @ 07/26/25 12:31:40.763
• [2.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:330
  STEP: Creating a kubernetes client @ 07/26/25 12:31:40.771
  I0726 12:31:40.771113 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename gc @ 07/26/25 12:31:40.771
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:31:40.784
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:31:40.786
  STEP: create the rc @ 07/26/25 12:31:40.787
  I0726 12:31:40.795485      23 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: delete the rc @ 07/26/25 12:31:45.802
  STEP: wait for all pods to be garbage collected @ 07/26/25 12:31:45.813
  STEP: Gathering metrics @ 07/26/25 12:31:50.824
  W0726 12:31:50.829041      23 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0726 12:31:50.829070 23 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0726 12:31:50.829193 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7679" for this suite. @ 07/26/25 12:31:50.832
• [10.072 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 07/26/25 12:31:50.842
  I0726 12:31:50.842997 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename apf @ 07/26/25 12:31:50.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:31:50.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:31:50.857
  STEP: getting /apis @ 07/26/25 12:31:50.859
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 07/26/25 12:31:50.861
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 07/26/25 12:31:50.861
  STEP: creating @ 07/26/25 12:31:50.862
  STEP: getting @ 07/26/25 12:31:50.879
  STEP: listing @ 07/26/25 12:31:50.883
  STEP: watching @ 07/26/25 12:31:50.886
  I0726 12:31:50.886862 23 flowcontrol.go:620] starting watch
  STEP: patching @ 07/26/25 12:31:50.887
  STEP: updating @ 07/26/25 12:31:50.892
  I0726 12:31:50.901344 23 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 07/26/25 12:31:50.901
  STEP: patching /status @ 07/26/25 12:31:50.905
  STEP: updating /status @ 07/26/25 12:31:50.911
  STEP: deleting @ 07/26/25 12:31:50.929
  STEP: deleting a collection @ 07/26/25 12:31:50.952
  I0726 12:31:50.984568 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-6157" for this suite. @ 07/26/25 12:31:50.989
• [0.157 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:99
  STEP: Creating a kubernetes client @ 07/26/25 12:31:50.999
  I0726 12:31:50.999926 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename projected @ 07/26/25 12:31:51
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:31:51.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:31:51.011
  STEP: Creating configMap with name projected-configmap-test-volume-map-3c334c2c-ef63-45ac-8ccd-c08131729e58 @ 07/26/25 12:31:51.014
  STEP: Creating a pod to test consume configMaps @ 07/26/25 12:31:51.019
  STEP: Saw pod success @ 07/26/25 12:31:55.049
  I0726 12:31:55.052896 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod pod-projected-configmaps-3f2b229e-3fa6-4167-8c22-1fd88857d4ea container agnhost-container: <nil>
  STEP: delete the pod @ 07/26/25 12:31:55.066
  I0726 12:31:55.091000 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-588" for this suite. @ 07/26/25 12:31:55.095
• [4.104 seconds]
------------------------------
SSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:108
  STEP: Creating a kubernetes client @ 07/26/25 12:31:55.103
  I0726 12:31:55.103687 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename runtimeclass @ 07/26/25 12:31:55.104
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:31:55.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:31:55.119
  I0726 12:31:57.160803 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7987" for this suite. @ 07/26/25 12:31:57.165
• [2.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:222
  STEP: Creating a kubernetes client @ 07/26/25 12:31:57.174
  I0726 12:31:57.174764 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename downward-api @ 07/26/25 12:31:57.175
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:31:57.191
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:31:57.193
  STEP: Creating a pod to test downward API volume plugin @ 07/26/25 12:31:57.194
  STEP: Saw pod success @ 07/26/25 12:31:59.217
  I0726 12:31:59.221361 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod downwardapi-volume-8c7fc545-fc29-4714-aa07-9bbdd2809289 container client-container: <nil>
  STEP: delete the pod @ 07/26/25 12:31:59.231
  I0726 12:31:59.254918 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-687" for this suite. @ 07/26/25 12:31:59.261
• [2.096 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:166
  STEP: Creating a kubernetes client @ 07/26/25 12:31:59.271
  I0726 12:31:59.271273 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename pods @ 07/26/25 12:31:59.271
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:31:59.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:31:59.287
  STEP: creating the pod @ 07/26/25 12:31:59.288
  STEP: submitting the pod to kubernetes @ 07/26/25 12:31:59.288
  STEP: verifying QOS class is set on the pod @ 07/26/25 12:31:59.299
  I0726 12:31:59.305319 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9586" for this suite. @ 07/26/25 12:31:59.361
• [0.100 seconds]
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 07/26/25 12:31:59.371
  I0726 12:31:59.371779 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename replicaset @ 07/26/25 12:31:59.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:31:59.385
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:31:59.387
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 07/26/25 12:31:59.388
  I0726 12:31:59.400657 23 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  I0726 12:32:04.406835 23 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/26/25 12:32:04.406
  STEP: getting scale subresource @ 07/26/25 12:32:04.406
  STEP: updating a scale subresource @ 07/26/25 12:32:04.41
  STEP: verifying the replicaset Spec.Replicas was modified @ 07/26/25 12:32:04.417
  STEP: Patch a scale subresource @ 07/26/25 12:32:04.42
  I0726 12:32:04.434549 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7699" for this suite. @ 07/26/25 12:32:04.441
• [5.082 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 07/26/25 12:32:04.454
  I0726 12:32:04.454397 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename replicaset @ 07/26/25 12:32:04.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:32:04.469
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:32:04.471
  STEP: Create a ReplicaSet @ 07/26/25 12:32:04.472
  STEP: Verify that the required pods have come up @ 07/26/25 12:32:04.48
  I0726 12:32:04.491841 23 resource.go:81] Pod name sample-pod: Found 1 pods out of 3
  I0726 12:32:09.498128 23 resource.go:81] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 07/26/25 12:32:09.498
  I0726 12:32:09.501924 23 replica_set.go:588] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 TerminatingReplicas:<nil> ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 07/26/25 12:32:09.501
  STEP: DeleteCollection of the ReplicaSets @ 07/26/25 12:32:09.51
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 07/26/25 12:32:09.528
  I0726 12:32:09.531662 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6026" for this suite. @ 07/26/25 12:32:09.535
• [5.091 seconds]
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 07/26/25 12:32:09.545
  I0726 12:32:09.545027 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename taint-multiple-pods @ 07/26/25 12:32:09.545
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:32:09.56
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:32:09.562
  I0726 12:32:09.565975 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0726 12:33:09.567760 23 util.go:390] Waiting for terminating namespaces to be deleted...
  I0726 12:33:09.573063 23 taints.go:144] Starting informer...
  STEP: Starting pods... @ 07/26/25 12:33:09.573
  I0726 12:33:09.790217 23 taints.go:463] Pod1 is running on ip-172-31-16-254. Tainting Node
  I0726 12:33:12.014010 23 taints.go:471] Pod2 is running on ip-172-31-16-254. Tainting Node
  STEP: Trying to apply a taint on the Node @ 07/26/25 12:33:12.014
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 07/26/25 12:33:12.023
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 07/26/25 12:33:12.027
  I0726 12:33:18.208809 23 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  I0726 12:33:38.237269 23 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 07/26/25 12:33:38.247
  I0726 12:33:38.251884 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-2561" for this suite. @ 07/26/25 12:33:38.255
• [88.724 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 07/26/25 12:33:38.269
  I0726 12:33:38.269215 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename subjectreview @ 07/26/25 12:33:38.269
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:33:38.284
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:33:38.285
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-1880" @ 07/26/25 12:33:38.287
  I0726 12:33:38.296287 23 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-1880:e2e"
  I0726 12:33:38.296309 23 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-1880"}
  I0726 12:33:38.296316 23 subjectreviews.go:71] saUID: "f3924688-e467-43b2-9d1b-806621670797"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-1880:e2e" @ 07/26/25 12:33:38.296
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-1880:e2e" @ 07/26/25 12:33:38.296
  I0726 12:33:38.297504 23 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-1880:e2e" api 'list' configmaps in "subjectreview-1880" namespace @ 07/26/25 12:33:38.297
  I0726 12:33:38.298840 23 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-1880:e2e" @ 07/26/25 12:33:38.298
  I0726 12:33:38.299980 23 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I0726 12:33:38.299995 23 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0726 12:33:38.300096 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-1880" for this suite. @ 07/26/25 12:33:38.307
• [0.047 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:770
  STEP: Creating a kubernetes client @ 07/26/25 12:33:38.316
  I0726 12:33:38.316169 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename svcaccounts @ 07/26/25 12:33:38.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:33:38.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:33:38.329
  I0726 12:33:38.335271 23 service_accounts.go:782] Got root ca configmap in namespace "svcaccounts-3622"
  I0726 12:33:38.344440 23 service_accounts.go:785] Deleted root ca configmap in namespace "svcaccounts-3622"
  STEP: waiting for a new root ca configmap created @ 07/26/25 12:33:38.845
  I0726 12:33:38.849750 23 service_accounts.go:799] Recreated root ca configmap in namespace "svcaccounts-3622"
  I0726 12:33:38.854983 23 service_accounts.go:810] Updated root ca configmap in namespace "svcaccounts-3622"
  STEP: waiting for the root ca configmap reconciled @ 07/26/25 12:33:39.355
  I0726 12:33:39.361244 23 service_accounts.go:828] Reconciled root ca configmap in namespace "svcaccounts-3622"
  I0726 12:33:39.361357 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3622" for this suite. @ 07/26/25 12:33:39.366
• [1.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 07/26/25 12:33:39.376
  I0726 12:33:39.376576 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename secrets @ 07/26/25 12:33:39.377
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:33:39.39
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:33:39.392
  STEP: Creating projection with secret that has name secret-emptykey-test-d3d265b5-35e5-40e1-a47a-b75b7a318dee @ 07/26/25 12:33:39.394
  I0726 12:33:39.394997 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8428" for this suite. @ 07/26/25 12:33:39.467
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:114
  STEP: Creating a kubernetes client @ 07/26/25 12:33:39.476
  I0726 12:33:39.476432 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename replication-controller @ 07/26/25 12:33:39.476
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:33:39.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:33:39.491
  STEP: creating a ReplicationController @ 07/26/25 12:33:39.598
  STEP: waiting for RC to be added @ 07/26/25 12:33:39.605
  STEP: waiting for available Replicas @ 07/26/25 12:33:39.605
  STEP: patching ReplicationController @ 07/26/25 12:33:41.242
  STEP: waiting for RC to be modified @ 07/26/25 12:33:41.249
  STEP: patching ReplicationController status @ 07/26/25 12:33:41.249
  STEP: waiting for RC to be modified @ 07/26/25 12:33:41.255
  STEP: waiting for available Replicas @ 07/26/25 12:33:41.256
  STEP: fetching ReplicationController status @ 07/26/25 12:33:41.262
  STEP: patching ReplicationController scale @ 07/26/25 12:33:41.266
  STEP: waiting for RC to be modified @ 07/26/25 12:33:41.271
  STEP: waiting for ReplicationController's scale to be the max amount @ 07/26/25 12:33:41.272
  STEP: fetching ReplicationController; ensuring that it's patched @ 07/26/25 12:33:42.831
  STEP: updating ReplicationController status @ 07/26/25 12:33:42.836
  STEP: waiting for RC to be modified @ 07/26/25 12:33:42.843
  STEP: listing all ReplicationControllers @ 07/26/25 12:33:42.843
  STEP: checking that ReplicationController has expected values @ 07/26/25 12:33:42.849
  STEP: deleting ReplicationControllers by collection @ 07/26/25 12:33:42.849
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 07/26/25 12:33:42.861
  I0726 12:33:42.917050 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0726 12:33:42.917173      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-6101" for this suite. @ 07/26/25 12:33:42.922
• [3.454 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:104
  STEP: Creating a kubernetes client @ 07/26/25 12:33:42.931
  I0726 12:33:42.931048 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 07/26/25 12:33:42.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:33:42.944
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:33:42.945
  STEP: creating a target pod @ 07/26/25 12:33:42.947
  E0726 12:33:43.917485      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:33:44.918095      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 07/26/25 12:33:44.972
  E0726 12:33:45.918195      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:33:46.918422      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod's generation is 2 @ 07/26/25 12:33:46.991
  STEP: checking pod container endpoints @ 07/26/25 12:33:46.996
  I0726 12:33:46.996363 23 exec_util.go:63] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-6941 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0726 12:33:46.996379 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0726 12:33:46.996410 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-6941/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0726 12:33:47.040960 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0726 12:33:47.040985 23 exec_util.go:112] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 07/26/25 12:33:47.056
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 07/26/25 12:33:47.061
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 07/26/25 12:33:47.074
  I0726 12:33:47.078538 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-6941" for this suite. @ 07/26/25 12:33:47.083
• [4.161 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 07/26/25 12:33:47.092
  I0726 12:33:47.092488 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename subpath @ 07/26/25 12:33:47.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:33:47.107
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:33:47.108
  STEP: Setting up data @ 07/26/25 12:33:47.111
  STEP: Creating pod pod-subpath-test-secret-rns4 @ 07/26/25 12:33:47.122
  STEP: Creating a pod to test atomic-volume-subpath @ 07/26/25 12:33:47.122
  E0726 12:33:47.918497      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:33:48.918595      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:33:49.918810      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:33:50.918879      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:33:51.918984      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:33:52.919082      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:33:53.919195      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:33:54.919882      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:33:55.920880      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:33:56.921861      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:33:57.922860      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:33:58.922929      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:33:59.923052      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:34:00.923227      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:34:01.924231      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:34:02.924302      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:34:03.924450      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:34:04.924537      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:34:05.925513      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:34:06.925735      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:34:07.926292      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:34:08.926427      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 12:34:09.203
  I0726 12:34:09.206896 23 output.go:207] Trying to get logs from node ip-172-31-72-233 pod pod-subpath-test-secret-rns4 container test-container-subpath-secret-rns4: <nil>
  STEP: delete the pod @ 07/26/25 12:34:09.219
  STEP: Deleting pod pod-subpath-test-secret-rns4 @ 07/26/25 12:34:09.244
  I0726 12:34:09.244838 23 delete.go:62] Deleting pod "pod-subpath-test-secret-rns4" in namespace "subpath-6341"
  I0726 12:34:09.249124 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6341" for this suite. @ 07/26/25 12:34:09.254
• [22.170 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 07/26/25 12:34:09.262
  I0726 12:34:09.262721 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename container-probe @ 07/26/25 12:34:09.263
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:34:09.278
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:34:09.28
  E0726 12:34:09.926494      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:34:10.926710      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:34:11.926720      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:34:12.927672      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:34:13.928306      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:34:14.928461      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:34:15.928810      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:34:16.929879      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:34:17.930860      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:34:18.930934      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:34:19.931957      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:34:20.932035      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:34:21.932668      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:34:22.933416      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:34:23.933797      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:34:24.933910      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:34:25.934788      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:34:26.934805      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:34:27.935588      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:34:28.935791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:34:29.936239      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:34:30.936476      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:34:31.936776      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:34:32.936949      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:34:33.369643 23 container_probe.go:91] Container started at 2025-07-26 12:34:09 +0000 UTC, pod became ready at 2025-07-26 12:34:31 +0000 UTC
  I0726 12:34:33.369759 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3794" for this suite. @ 07/26/25 12:34:33.375
• [24.123 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:119
  STEP: Creating a kubernetes client @ 07/26/25 12:34:33.385
  I0726 12:34:33.385872 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename emptydir @ 07/26/25 12:34:33.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:34:33.402
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:34:33.404
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 07/26/25 12:34:33.406
  E0726 12:34:33.937191      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:34:34.937420      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:34:35.938162      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:34:36.938228      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 12:34:37.435
  I0726 12:34:37.440065 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod pod-466fa70b-3e21-4c54-a703-70617d5fe8ec container test-container: <nil>
  STEP: delete the pod @ 07/26/25 12:34:37.447
  I0726 12:34:37.473249 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3126" for this suite. @ 07/26/25 12:34:37.479
• [4.102 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1836
  STEP: Creating a kubernetes client @ 07/26/25 12:34:37.488
  I0726 12:34:37.488377 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename kubectl @ 07/26/25 12:34:37.488
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:34:37.503
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:34:37.505
  STEP: starting the proxy server @ 07/26/25 12:34:37.507
  I0726 12:34:37.507237 23 util.go:541] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-5498 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 07/26/25 12:34:37.536
  I0726 12:34:37.540564 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0726 12:34:37.541855 23 kubectl.go:2227] kubectl proxy stdout: Starting to serve on 127.0.0.1:34129

  I0726 12:34:37.541883 23 kubectl.go:2232] kubectl proxy stderr: W0726 12:34:37.536684     154 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  STEP: Destroying namespace "kubectl-5498" for this suite. @ 07/26/25 12:34:37.579
• [0.100 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 07/26/25 12:34:37.588
  I0726 12:34:37.588978 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename var-expansion @ 07/26/25 12:34:37.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:34:37.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:34:37.607
  STEP: Creating a pod to test substitution in container's args @ 07/26/25 12:34:37.608
  E0726 12:34:37.938744      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:34:38.938800      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 12:34:39.631
  I0726 12:34:39.635306 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod var-expansion-69a2b68e-9920-4e0a-ab2b-4b6d3fc3a6d0 container dapi-container: <nil>
  STEP: delete the pod @ 07/26/25 12:34:39.644
  I0726 12:34:39.667351 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9869" for this suite. @ 07/26/25 12:34:39.671
• [2.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 07/26/25 12:34:39.68
  I0726 12:34:39.680620 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename init-container @ 07/26/25 12:34:39.681
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:34:39.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:34:39.698
  STEP: creating the pod @ 07/26/25 12:34:39.7
  I0726 12:34:39.700081 23 init_container.go:499] PodSpec: initContainers in spec.initContainers
  E0726 12:34:39.938900      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:34:40.938965      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:34:41.939217      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:34:42.939857      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:34:43.513402 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-4679" for this suite. @ 07/26/25 12:34:43.518
• [3.847 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:55
  STEP: Creating a kubernetes client @ 07/26/25 12:34:43.527
  I0726 12:34:43.527602 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename dns @ 07/26/25 12:34:43.528
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:34:43.538
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:34:43.541
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 07/26/25 12:34:43.543
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 07/26/25 12:34:43.543
  STEP: creating a pod to probe DNS @ 07/26/25 12:34:43.543
  STEP: submitting the pod to kubernetes @ 07/26/25 12:34:43.543
  E0726 12:34:43.940831      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:34:44.941009      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/26/25 12:34:45.567
  STEP: looking for the results for each expected name from probers @ 07/26/25 12:34:45.572
  I0726 12:34:45.592084 23 dns_common.go:546] DNS probes using dns-5694/dns-test-fd7e133f-abf9-4473-8fdb-d1a150818f64 succeeded

  STEP: deleting the pod @ 07/26/25 12:34:45.592
  I0726 12:34:45.610381 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5694" for this suite. @ 07/26/25 12:34:45.614
• [2.097 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:942
  STEP: Creating a kubernetes client @ 07/26/25 12:34:45.624
  I0726 12:34:45.624263 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename sched-preemption @ 07/26/25 12:34:45.624
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:34:45.635
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:34:45.637
  I0726 12:34:45.654174 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0726 12:34:45.941871      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:34:46.941963      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:34:47.943001      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:34:48.943201      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:34:49.943684      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:34:50.943801      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:34:51.944784      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:34:52.945683      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:34:53.945852      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:34:54.945987      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:34:55.946674      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:34:56.946875      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:34:57.947659      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:34:58.947846      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:34:59.948516      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:35:00.948607      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:35:01.949276      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:35:02.949368      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:35:03.950182      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:35:04.950257      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:35:05.951148      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:35:06.951353      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:35:07.951850      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:35:08.951918      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:35:09.952776      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:35:10.952835      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:35:11.953142      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:35:12.953224      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:35:13.953775      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:35:14.953881      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:35:15.953985      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:35:16.954062      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:35:17.954166      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:35:18.954355      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:35:19.955291      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:35:20.955519      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:35:21.955612      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:35:22.956504      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:35:23.957239      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:35:24.957285      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:35:25.957408      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:35:26.957981      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:35:27.958053      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:35:28.958777      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:35:29.959413      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:35:30.959839      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:35:31.960826      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:35:32.961504      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:35:33.962193      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:35:34.962390      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:35:35.962494      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:35:36.962929      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:35:37.963750      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:35:38.963847      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:35:39.964740      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:35:40.964837      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:35:41.965840      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:35:42.966094      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:35:43.966710      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:35:44.966801      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:35:45.659505 23 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 07/26/25 12:35:45.664
  I0726 12:35:45.664903 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename sched-preemption-path @ 07/26/25 12:35:45.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:35:45.678
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:35:45.68
  I0726 12:35:45.699965 23 preemption.go:948] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0726 12:35:45.705045 23 preemption.go:954] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  STEP: Removing a custom resource @ 07/26/25 12:35:45.774
  STEP: Removing a custom resource @ 07/26/25 12:35:45.785
  STEP: Removing a custom resource @ 07/26/25 12:35:45.794
  I0726 12:35:45.804070 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-4245" for this suite. @ 07/26/25 12:35:45.808
  I0726 12:35:45.817064 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-571" for this suite. @ 07/26/25 12:35:45.909
• [60.295 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1533
  STEP: Creating a kubernetes client @ 07/26/25 12:35:45.919
  I0726 12:35:45.919602 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename kubectl @ 07/26/25 12:35:45.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:35:45.932
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:35:45.934
  STEP: creating Agnhost RC @ 07/26/25 12:35:45.936
  I0726 12:35:45.936805 23 kubectl.go:1540] namespace kubectl-3791
  I0726 12:35:45.936844 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-3791 create -f -'
  E0726 12:35:45.967193      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:35:46.015866 23 builder.go:146] stderr: ""
  I0726 12:35:46.015905 23 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 07/26/25 12:35:46.015
  E0726 12:35:46.967761      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:35:47.021711 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0726 12:35:47.021742 23 framework.go:733] Found 0 / 1
  E0726 12:35:47.968529      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:35:48.022401 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0726 12:35:48.022432 23 framework.go:733] Found 1 / 1
  I0726 12:35:48.022445 23 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0726 12:35:48.026045 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0726 12:35:48.026068 23 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0726 12:35:48.026075 23 kubectl.go:1547] wait on agnhost-primary startup in kubectl-3791 
  I0726 12:35:48.026120 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-3791 logs agnhost-primary-j655q agnhost-primary'
  I0726 12:35:48.081327 23 builder.go:146] stderr: ""
  I0726 12:35:48.081356 23 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 07/26/25 12:35:48.081
  I0726 12:35:48.081425 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-3791 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0726 12:35:48.148718 23 builder.go:146] stderr: ""
  I0726 12:35:48.148784 23 builder.go:147] stdout: "service/rm2 exposed\n"
  I0726 12:35:48.154413 23 utils.go:1115] Service rm2 in namespace kubectl-3791 found.
  E0726 12:35:48.968791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:35:49.968880      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: exposing service @ 07/26/25 12:35:50.165
  I0726 12:35:50.165401 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-3791 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0726 12:35:50.224914 23 builder.go:146] stderr: ""
  I0726 12:35:50.224986 23 builder.go:147] stdout: "service/rm3 exposed\n"
  I0726 12:35:50.231947 23 utils.go:1115] Service rm3 in namespace kubectl-3791 found.
  E0726 12:35:50.969827      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:35:51.969949      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:35:52.243265 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3791" for this suite. @ 07/26/25 12:35:52.247
• [6.338 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:353
  STEP: Creating a kubernetes client @ 07/26/25 12:35:52.258
  I0726 12:35:52.258199 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename dns @ 07/26/25 12:35:52.258
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:35:52.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:35:52.273
  STEP: Creating a test externalName service @ 07/26/25 12:35:52.275
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9356.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-9356.svc.cluster.local; sleep 1; done
   @ 07/26/25 12:35:52.28
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9356.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-9356.svc.cluster.local; sleep 1; done
   @ 07/26/25 12:35:52.28
  STEP: creating a pod to probe DNS @ 07/26/25 12:35:52.28
  STEP: submitting the pod to kubernetes @ 07/26/25 12:35:52.28
  E0726 12:35:52.970857      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:35:53.970933      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/26/25 12:35:54.305
  STEP: looking for the results for each expected name from probers @ 07/26/25 12:35:54.31
  I0726 12:35:54.321227 23 dns_common.go:571] DNS probes using dns-test-ba799307-1b06-4ebf-bb1f-b15ed0e8995e succeeded

  STEP: changing the externalName to bar.example.com @ 07/26/25 12:35:54.321
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9356.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-9356.svc.cluster.local; sleep 1; done
   @ 07/26/25 12:35:54.331
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9356.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-9356.svc.cluster.local; sleep 1; done
   @ 07/26/25 12:35:54.331
  STEP: creating a second pod to probe DNS @ 07/26/25 12:35:54.331
  STEP: submitting the pod to kubernetes @ 07/26/25 12:35:54.331
  E0726 12:35:54.971224      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:35:55.971210      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:35:56.971839      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:35:57.971861      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/26/25 12:35:58.357
  STEP: looking for the results for each expected name from probers @ 07/26/25 12:35:58.36
  I0726 12:35:58.371388 23 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-9356.svc.cluster.local from pod  dns-9356/dns-test-f6b5b8a6-c1c1-4b0f-8d96-47731cb7dd0f contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0726 12:35:58.371421 23 dns_common.go:506] Lookups using dns-9356/dns-test-f6b5b8a6-c1c1-4b0f-8d96-47731cb7dd0f failed for: [jessie_udp@dns-test-service-3.dns-9356.svc.cluster.local]

  I0726 12:35:58.382325 23 dns_common.go:514] Pod client logs for webserver: 
  I0726 12:35:58.391312 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0726 12:35:58.399490 23 dns_common.go:514] Pod client logs for jessie-querier: 
  E0726 12:35:58.972828      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:35:59.973131      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:36:00.973299      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:36:01.973486      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:36:02.974505      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:36:03.372286 23 dns_common.go:571] DNS probes using dns-test-f6b5b8a6-c1c1-4b0f-8d96-47731cb7dd0f succeeded

  STEP: changing the service to type=ClusterIP @ 07/26/25 12:36:03.372
  I0726 12:36:03.394714      23 warnings.go:110] "Warning: spec.externalName is ignored when spec.type is not \"ExternalName\""
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9356.svc.cluster.local A > /results/agnhost_udp@dns-test-service-3.dns-9356.svc.cluster.local; sleep 1; done
   @ 07/26/25 12:36:03.394
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9356.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-9356.svc.cluster.local; sleep 1; done
   @ 07/26/25 12:36:03.394
  STEP: creating a third pod to probe DNS @ 07/26/25 12:36:03.394
  STEP: submitting the pod to kubernetes @ 07/26/25 12:36:03.403
  E0726 12:36:03.975506      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:36:04.975618      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/26/25 12:36:05.422
  STEP: looking for the results for each expected name from probers @ 07/26/25 12:36:05.426
  I0726 12:36:05.436426 23 dns_common.go:571] DNS probes using dns-test-d0e0a573-9460-42d4-9b7d-470cc7e5c431 succeeded

  STEP: deleting the pod @ 07/26/25 12:36:05.436
  STEP: deleting the pod @ 07/26/25 12:36:05.455
  STEP: deleting the pod @ 07/26/25 12:36:05.476
  STEP: deleting the test externalName service @ 07/26/25 12:36:05.496
  I0726 12:36:05.522766 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9356" for this suite. @ 07/26/25 12:36:05.527
• [13.279 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 07/26/25 12:36:05.536
  I0726 12:36:05.536891 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename csiinlinevolumes @ 07/26/25 12:36:05.537
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:36:05.55
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:36:05.553
  STEP: Creating two CSIDrivers @ 07/26/25 12:36:05.554
  STEP: Getting "inline-driver-0a028fc1-075c-49fb-9904-96e5dc44549d" & "inline-driver-731c1870-ecf6-4c08-af17-98276b59f7e9" @ 07/26/25 12:36:05.572
  STEP: Patching the CSIDriver "inline-driver-731c1870-ecf6-4c08-af17-98276b59f7e9" @ 07/26/25 12:36:05.58
  STEP: Updating the CSIDriver "inline-driver-731c1870-ecf6-4c08-af17-98276b59f7e9" @ 07/26/25 12:36:05.587
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-4453" @ 07/26/25 12:36:05.595
  STEP: Deleting CSIDriver "inline-driver-0a028fc1-075c-49fb-9904-96e5dc44549d" @ 07/26/25 12:36:05.599
  STEP: Confirm deletion of CSIDriver "inline-driver-0a028fc1-075c-49fb-9904-96e5dc44549d" @ 07/26/25 12:36:05.607
  STEP: Deleting CSIDriver "inline-driver-731c1870-ecf6-4c08-af17-98276b59f7e9" via DeleteCollection @ 07/26/25 12:36:05.611
  STEP: Confirm deletion of CSIDriver "inline-driver-731c1870-ecf6-4c08-af17-98276b59f7e9" @ 07/26/25 12:36:05.623
  I0726 12:36:05.626586 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-4453" for this suite. @ 07/26/25 12:36:05.632
• [0.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 07/26/25 12:36:05.642
  I0726 12:36:05.642400 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename pods @ 07/26/25 12:36:05.642
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:36:05.655
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:36:05.656
  STEP: creating the pod @ 07/26/25 12:36:05.658
  STEP: setting up watch @ 07/26/25 12:36:05.658
  STEP: submitting the pod to kubernetes @ 07/26/25 12:36:05.763
  STEP: verifying the pod is in kubernetes @ 07/26/25 12:36:05.777
  STEP: verifying pod creation was observed @ 07/26/25 12:36:05.78
  E0726 12:36:05.976414      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:36:06.976940      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 07/26/25 12:36:07.795
  STEP: verifying pod deletion was observed @ 07/26/25 12:36:07.808
  E0726 12:36:07.977437      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:36:08.529696 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5918" for this suite. @ 07/26/25 12:36:08.534
• [2.901 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:216
  STEP: Creating a kubernetes client @ 07/26/25 12:36:08.544
  I0726 12:36:08.544147 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename sched-preemption @ 07/26/25 12:36:08.544
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:36:08.558
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:36:08.56
  I0726 12:36:08.581191 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0726 12:36:08.977566      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:36:09.978187      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:36:10.978836      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:36:11.979843      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:36:12.980846      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:36:13.980955      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:36:14.981460      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:36:15.981874      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:36:16.982841      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:36:17.983510      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:36:18.983626      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:36:19.983839      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:36:20.984682      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:36:21.984874      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:36:22.985769      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:36:23.986835      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:36:24.987180      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:36:25.987375      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:36:26.987765      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:36:27.988381      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:36:28.988754      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:36:29.988857      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:36:30.989601      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:36:31.989755      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:36:32.990673      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:36:33.990783      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:36:34.991517      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:36:35.991725      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:36:36.992582      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:36:37.993336      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:36:38.993409      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:36:39.993738      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:36:40.994325      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:36:41.994441      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:36:42.994508      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:36:43.994702      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:36:44.995729      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:36:45.995836      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:36:46.995916      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:36:47.995996      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:36:48.997026      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:36:49.997146      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:36:50.998079      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:36:51.998195      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:36:52.998234      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:36:53.998835      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:36:54.999749      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:36:56.000825      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:36:57.001762      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:36:58.002772      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:36:59.003676      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:37:00.003772      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:37:01.004370      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:37:02.004473      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:37:03.005321      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:37:04.005571      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:37:05.005767      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:37:06.006015      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:37:07.006938      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:37:08.007050      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:37:08.587151 23 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 07/26/25 12:37:08.592
  STEP: Adding a custom resource @ 07/26/25 12:37:08.592
  I0726 12:37:08.612648 23 preemption.go:257] Created pod: pod0-0-sched-preemption-low-priority
  I0726 12:37:08.621201 23 preemption.go:257] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 07/26/25 12:37:08.621
  I0726 12:37:08.636237 23 preemption.go:257] Created pod: pod1-0-sched-preemption-medium-priority
  I0726 12:37:08.647440 23 preemption.go:257] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 07/26/25 12:37:08.647
  I0726 12:37:08.667925 23 preemption.go:257] Created pod: pod2-0-sched-preemption-medium-priority
  I0726 12:37:08.680786 23 preemption.go:257] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 07/26/25 12:37:08.68
  E0726 12:37:09.007716      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:37:10.007802      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 07/26/25 12:37:10.711
  E0726 12:37:11.008730      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:37:12.008870      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 07/26/25 12:37:12.808
  STEP: Removing a custom resource @ 07/26/25 12:37:12.82
  STEP: Removing a custom resource @ 07/26/25 12:37:12.832
  I0726 12:37:12.846839 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5218" for this suite. @ 07/26/25 12:37:12.85
• [64.316 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1387
  STEP: Creating a kubernetes client @ 07/26/25 12:37:12.86
  I0726 12:37:12.860480 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename services @ 07/26/25 12:37:12.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:37:12.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:37:12.875
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-6304 @ 07/26/25 12:37:12.877
  STEP: changing the ExternalName service to type=ClusterIP @ 07/26/25 12:37:12.884
  I0726 12:37:12.928671 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0726 12:37:13.009807      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:37:14.010850      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:37:14.934348 23 resource.go:361] Creating new exec pod
  E0726 12:37:15.010908      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:37:16.011875      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:37:16.961742 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-6304 exec execpod7shtg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  E0726 12:37:17.012033      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:37:17.042359 23 builder.go:146] stderr: "+ + echonc -v -t -w 2 externalname-service 80\n hostName\nConnection to externalname-service (10.152.183.96) 80 port [tcp/http] succeeded!\n"
  I0726 12:37:17.042412 23 builder.go:147] stdout: "externalname-service-557fd755b4-4xnlm"
  I0726 12:37:17.042474 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-6304 exec execpod7shtg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.96 80'
  I0726 12:37:17.117918 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.96 80\nConnection to 10.152.183.96 80 port [tcp/http] succeeded!\n"
  I0726 12:37:17.117960 23 builder.go:147] stdout: ""
  E0726 12:37:18.012987      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:37:18.042888 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-6304 exec execpod7shtg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.96 80'
  I0726 12:37:18.220269 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.96 80\nConnection to 10.152.183.96 80 port [tcp/http] succeeded!\n"
  I0726 12:37:18.220307 23 builder.go:147] stdout: "externalname-service-557fd755b4-4xnlm"
  I0726 12:37:18.220398 23 service.go:1396] Cleaning up the ExternalName to ClusterIP test service
  I0726 12:37:18.247152 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6304" for this suite. @ 07/26/25 12:37:18.252
• [5.400 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 07/26/25 12:37:18.26
  I0726 12:37:18.260371 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename aggregateddiscovery @ 07/26/25 12:37:18.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:37:18.274
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:37:18.276
  I0726 12:37:18.278899 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  E0726 12:37:19.013384      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:37:20.013538      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:37:21.013800      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:37:21.325015 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-7224" for this suite. @ 07/26/25 12:37:21.331
• [3.079 seconds]
------------------------------
SS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 07/26/25 12:37:21.339
  I0726 12:37:21.339375 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename disruption @ 07/26/25 12:37:21.339
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:37:21.351
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:37:21.353
  STEP: Creating a pdb that targets all three pods in a test replica set @ 07/26/25 12:37:21.355
  STEP: Waiting for the pdb to be processed @ 07/26/25 12:37:21.363
  E0726 12:37:22.014346      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:37:23.014462      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 07/26/25 12:37:23.373
  STEP: Waiting for all pods to be running @ 07/26/25 12:37:23.373
  I0726 12:37:23.377415 23 disruption.go:680] pods: 0 < 3
  E0726 12:37:24.015263      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:37:25.015344      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 07/26/25 12:37:25.379
  STEP: Updating the pdb to allow a pod to be evicted @ 07/26/25 12:37:25.392
  STEP: Waiting for the pdb to be processed @ 07/26/25 12:37:25.402
  E0726 12:37:26.016083      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:37:27.016220      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 07/26/25 12:37:27.407
  STEP: Waiting for all pods to be running @ 07/26/25 12:37:27.407
  STEP: Waiting for the pdb to observed all healthy pods @ 07/26/25 12:37:27.412
  STEP: Patching the pdb to disallow a pod to be evicted @ 07/26/25 12:37:27.45
  STEP: Waiting for the pdb to be processed @ 07/26/25 12:37:27.476
  E0726 12:37:28.017106      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:37:29.017961      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 07/26/25 12:37:29.482
  STEP: locating a running pod @ 07/26/25 12:37:29.486
  STEP: Deleting the pdb to allow a pod to be evicted @ 07/26/25 12:37:29.498
  STEP: Waiting for the pdb to be deleted @ 07/26/25 12:37:29.51
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 07/26/25 12:37:29.513
  STEP: Waiting for all pods to be running @ 07/26/25 12:37:29.513
  I0726 12:37:29.609654 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5061" for this suite. @ 07/26/25 12:37:29.614
• [8.286 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:375
  STEP: Creating a kubernetes client @ 07/26/25 12:37:29.625
  I0726 12:37:29.625251 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename projected @ 07/26/25 12:37:29.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:37:29.643
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:37:29.645
  STEP: Creating configMap with name projected-configmap-test-volume-5c9c86ca-f024-41a4-9f3f-799ba63e7982 @ 07/26/25 12:37:29.647
  STEP: Creating a pod to test consume configMaps @ 07/26/25 12:37:29.654
  E0726 12:37:30.018595      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:37:31.018691      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:37:32.018794      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:37:33.019264      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 12:37:33.68
  I0726 12:37:33.685124 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod pod-projected-configmaps-86e122cb-bac9-4989-b73c-92f13851fe4a container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 07/26/25 12:37:33.698
  I0726 12:37:33.720733 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4824" for this suite. @ 07/26/25 12:37:33.725
• [4.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:131
  STEP: Creating a kubernetes client @ 07/26/25 12:37:33.735
  I0726 12:37:33.735879 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename downward-api @ 07/26/25 12:37:33.736
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:37:33.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:37:33.747
  STEP: Creating the pod @ 07/26/25 12:37:33.749
  E0726 12:37:34.019832      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:37:35.019890      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:37:36.020422      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:37:36.297886 23 pod_client.go:173] Successfully updated pod "labelsupdate5b8802a5-0e7b-4aa9-be4b-a649c0a8b480"
  E0726 12:37:37.020998      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:37:38.021131      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:37:38.319879 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8297" for this suite. @ 07/26/25 12:37:38.324
• [4.598 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 07/26/25 12:37:38.334
  I0726 12:37:38.334443 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename deployment @ 07/26/25 12:37:38.334
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:37:38.347
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:37:38.349
  I0726 12:37:38.350784 23 deployment.go:1215] Creating deployment "webserver-deployment"
  I0726 12:37:38.356519 23 deployment.go:1219] Waiting for observed generation 1
  E0726 12:37:39.023450      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:37:40.024061      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:37:40.365401 23 deployment.go:1224] Waiting for all required pods to come up
  I0726 12:37:40.369663 23 resource.go:81] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 07/26/25 12:37:40.369
  I0726 12:37:40.369725 23 deployment.go:1228] Waiting for deployment "webserver-deployment" to complete
  I0726 12:37:40.377430 23 deployment.go:1237] Updating deployment "webserver-deployment" with a non-existent image
  I0726 12:37:40.387318 23 deployment.go:314] Updating deployment webserver-deployment
  I0726 12:37:40.387340 23 deployment.go:1243] Waiting for observed generation 2
  E0726 12:37:41.024147      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:37:42.024928      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:37:42.399129 23 deployment.go:1253] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0726 12:37:42.402569 23 deployment.go:1258] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0726 12:37:42.406729 23 deployment.go:1263] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0726 12:37:42.418551 23 deployment.go:1277] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0726 12:37:42.418586 23 deployment.go:1282] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0726 12:37:42.422075 23 deployment.go:1287] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0726 12:37:42.431218 23 deployment.go:1294] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0726 12:37:42.431244 23 deployment.go:1302] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0726 12:37:42.440603 23 deployment.go:314] Updating deployment webserver-deployment
  I0726 12:37:42.440660 23 deployment.go:1308] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0726 12:37:42.450140 23 deployment.go:1316] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0726 12:37:42.458657 23 deployment.go:1322] Verifying that second rollout's replicaset has .spec.replicas = 13
  I0726 12:37:42.478678 23 deployment.go:632] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2570",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "20762364-13bc-4103-9f53-020d85ed86ad",
      ResourceVersion: (string) (len=5) "12644",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889130258,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130260,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130258,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-6fc69b9478\" is progressing."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0726 12:37:42.519735 23 deployment.go:40] New ReplicaSet "webserver-deployment-6fc69b9478" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-6fc69b9478",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2570",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "869bbfde-a070-4d2b-b27c-c0b770db6469",
      ResourceVersion: (string) (len=5) "12641",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889130260,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "20762364-13bc-4103-9f53-020d85ed86ad",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130260,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 30 37 36 32 33  36 34 2d 31 33 62 63 2d  |\"20762364-13bc-|
              00000120  34 31 30 33 2d 39 66 35  33 2d 30 32 30 64 38 35  |4103-9f53-020d85|
              00000130  65 64 38 36 61 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |ed86ad\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0726 12:37:42.520200 23 deployment.go:45] All old ReplicaSets of Deployment "webserver-deployment":
  I0726 12:37:42.521721 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2570",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "103af159-40a5-4d84-ad2e-6520c041e724",
      ResourceVersion: (string) (len=5) "12640",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889130258,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "20762364-13bc-4103-9f53-020d85ed86ad",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130260,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 30 37 36 32 33  36 34 2d 31 33 62 63 2d  |\"20762364-13bc-|
              00000120  34 31 30 33 2d 39 66 35  33 2d 30 32 30 64 38 35  |4103-9f53-020d85|
              00000130  65 64 38 36 61 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |ed86ad\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0726 12:37:42.544249 23 deployment.go:68] Pod "webserver-deployment-685b768f58-2hkvj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-2hkvj",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2570",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "43afe594-c783-46c7-9387-3e771dc834d6",
      ResourceVersion: (string) (len=5) "12675",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889130262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "103af159-40a5-4d84-ad2e-6520c041e724",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  33 61 66 31 35 39 2d 34  |d\":\"103af159-4|
              00000090  30 61 35 2d 34 64 38 34  2d 61 64 32 65 2d 36 35  |0a5-4d84-ad2e-65|
              000000a0  32 30 63 30 34 31 65 37  32 34 5c 22 7d 22 3a 7b  |20c041e724\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2p6qx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2p6qx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-3-117",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0726 12:37:42.545555 23 deployment.go:68] Pod "webserver-deployment-685b768f58-4292h" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-4292h",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2570",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fb02aad5-795b-4be3-b9ee-712969b488f8",
      ResourceVersion: (string) (len=5) "12652",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889130262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "103af159-40a5-4d84-ad2e-6520c041e724",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  33 61 66 31 35 39 2d 34  |d\":\"103af159-4|
              00000090  30 61 35 2d 34 64 38 34  2d 61 64 32 65 2d 36 35  |0a5-4d84-ad2e-65|
              000000a0  32 30 63 30 34 31 65 37  32 34 5c 22 7d 22 3a 7b  |20c041e724\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5tdnz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5tdnz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-72-233",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0726 12:37:42.546443 23 deployment.go:68] Pod "webserver-deployment-685b768f58-4jd2p" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-4jd2p",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2570",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "79397cba-bceb-4c62-8e1f-9d631391f312",
      ResourceVersion: (string) (len=5) "12490",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889130258,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "103af159-40a5-4d84-ad2e-6520c041e724",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130258,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  33 61 66 31 35 39 2d 34  |d\":\"103af159-4|
              00000090  30 61 35 2d 34 64 38 34  2d 61 64 32 65 2d 36 35  |0a5-4d84-ad2e-65|
              000000a0  32 30 63 30 34 31 65 37  32 34 5c 22 7d 22 3a 7b  |20c041e724\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130259,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 35 38  2e 32 30 31 5c 22 7d 22  |2.168.58.201\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-htqhc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-htqhc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-16-254",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130259,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130258,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130259,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130259,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130258,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.16.254",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.16.254"
        }
      },
      PodIP: (string) (len=14) "192.168.58.201",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.58.201"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889130258,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889130259,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c952fa1ef0d3c467b2b5f4a40c0f5afe16c970375d3fce648fbd55cfcf656731",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-htqhc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0726 12:37:42.547556 23 deployment.go:68] Pod "webserver-deployment-685b768f58-957jl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-957jl",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2570",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "43480269-d5f2-4f2a-9c45-e469bad34d7f",
      ResourceVersion: (string) (len=5) "12701",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889130262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "103af159-40a5-4d84-ad2e-6520c041e724",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  33 61 66 31 35 39 2d 34  |d\":\"103af159-4|
              00000090  30 61 35 2d 34 64 38 34  2d 61 64 32 65 2d 36 35  |0a5-4d84-ad2e-65|
              000000a0  32 30 63 30 34 31 65 37  32 34 5c 22 7d 22 3a 7b  |20c041e724\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9zdxq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9zdxq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-16-254",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0726 12:37:42.549428 23 deployment.go:68] Pod "webserver-deployment-685b768f58-b6czc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-b6czc",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2570",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "497e9cd9-7a4e-4577-a6cd-ba3ba9ea3935",
      ResourceVersion: (string) (len=5) "12698",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889130262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "103af159-40a5-4d84-ad2e-6520c041e724",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  33 61 66 31 35 39 2d 34  |d\":\"103af159-4|
              00000090  30 61 35 2d 34 64 38 34  2d 61 64 32 65 2d 36 35  |0a5-4d84-ad2e-65|
              000000a0  32 30 63 30 34 31 65 37  32 34 5c 22 7d 22 3a 7b  |20c041e724\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dxp8g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dxp8g",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-16-254",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0726 12:37:42.550940 23 deployment.go:68] Pod "webserver-deployment-685b768f58-dv99z" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-dv99z",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2570",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f99670aa-9124-420d-80a1-4730c2d03361",
      ResourceVersion: (string) (len=5) "12478",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889130258,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "103af159-40a5-4d84-ad2e-6520c041e724",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130258,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  33 61 66 31 35 39 2d 34  |d\":\"103af159-4|
              00000090  30 61 35 2d 34 64 38 34  2d 61 64 32 65 2d 36 35  |0a5-4d84-ad2e-65|
              000000a0  32 30 63 30 34 31 65 37  32 34 5c 22 7d 22 3a 7b  |20c041e724\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130259,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 34  38 2e 31 36 34 5c 22 7d  |2.168.248.164\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zrbdr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zrbdr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-3-117",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130259,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130258,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130259,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130259,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130258,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.3.117",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.3.117"
        }
      },
      PodIP: (string) (len=15) "192.168.248.164",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.248.164"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889130258,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889130259,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://8855bfae8f798b95e982beda8d56daeab6f7e7e3b3e884f6ce5bb9d193247517",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-zrbdr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0726 12:37:42.551855 23 deployment.go:68] Pod "webserver-deployment-685b768f58-fdlvn" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-fdlvn",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2570",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c0b1c4e5-254c-4005-89c9-bf1d5d965f75",
      ResourceVersion: (string) (len=5) "12500",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889130258,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "103af159-40a5-4d84-ad2e-6520c041e724",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130258,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  33 61 66 31 35 39 2d 34  |d\":\"103af159-4|
              00000090  30 61 35 2d 34 64 38 34  2d 61 64 32 65 2d 36 35  |0a5-4d84-ad2e-65|
              000000a0  32 30 63 30 34 31 65 37  32 34 5c 22 7d 22 3a 7b  |20c041e724\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130259,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 35 38  2e 32 30 32 5c 22 7d 22  |2.168.58.202\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fk7nc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fk7nc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-16-254",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130259,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130258,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130259,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130259,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130258,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.16.254",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.16.254"
        }
      },
      PodIP: (string) (len=14) "192.168.58.202",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.58.202"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889130258,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889130259,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://4f9a74f45211424c0712a45f06e93567ec8280268fbbe5569a10fd4433b20162",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-fk7nc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0726 12:37:42.552950 23 deployment.go:68] Pod "webserver-deployment-685b768f58-gf9w2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-gf9w2",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2570",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "14044c1c-8234-40f3-bb30-4f2c6713f3a1",
      ResourceVersion: (string) (len=5) "12690",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889130262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "103af159-40a5-4d84-ad2e-6520c041e724",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  33 61 66 31 35 39 2d 34  |d\":\"103af159-4|
              00000090  30 61 35 2d 34 64 38 34  2d 61 64 32 65 2d 36 35  |0a5-4d84-ad2e-65|
              000000a0  32 30 63 30 34 31 65 37  32 34 5c 22 7d 22 3a 7b  |20c041e724\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cqmlf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cqmlf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-72-233",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0726 12:37:42.553859 23 deployment.go:68] Pod "webserver-deployment-685b768f58-gklnx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-gklnx",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2570",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "99cde328-783d-490c-b2f6-98d435fe9a74",
      ResourceVersion: (string) (len=5) "12687",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889130262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "103af159-40a5-4d84-ad2e-6520c041e724",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  33 61 66 31 35 39 2d 34  |d\":\"103af159-4|
              00000090  30 61 35 2d 34 64 38 34  2d 61 64 32 65 2d 36 35  |0a5-4d84-ad2e-65|
              000000a0  32 30 63 30 34 31 65 37  32 34 5c 22 7d 22 3a 7b  |20c041e724\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-54g6x",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-54g6x",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-16-254",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.16.254",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.16.254"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889130262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-54g6x",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0726 12:37:42.556237 23 deployment.go:68] Pod "webserver-deployment-685b768f58-h59z2" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-h59z2",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2570",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cfaac501-1aa7-412e-9371-57da9636ba0c",
      ResourceVersion: (string) (len=5) "12462",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889130258,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "103af159-40a5-4d84-ad2e-6520c041e724",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130258,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  33 61 66 31 35 39 2d 34  |d\":\"103af159-4|
              00000090  30 61 35 2d 34 64 38 34  2d 61 64 32 65 2d 36 35  |0a5-4d84-ad2e-65|
              000000a0  32 30 63 30 34 31 65 37  32 34 5c 22 7d 22 3a 7b  |20c041e724\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130259,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 33  2e 33 35 5c 22 7d 22 3a  |2.168.13.35\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-k9828",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-k9828",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-72-233",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130259,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130258,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130259,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130259,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130258,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.72.233",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.72.233"
        }
      },
      PodIP: (string) (len=13) "192.168.13.35",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.13.35"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889130258,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889130259,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ffe84e110f0b9976a5e2de6257adbd0104906de89f43d56e234f807ce4301e10",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-k9828",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0726 12:37:42.559284 23 deployment.go:68] Pod "webserver-deployment-685b768f58-hnmf6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-hnmf6",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2570",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ffdd113c-844a-406d-9ac2-d624238474be",
      ResourceVersion: (string) (len=5) "12672",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889130262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "103af159-40a5-4d84-ad2e-6520c041e724",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  33 61 66 31 35 39 2d 34  |d\":\"103af159-4|
              00000090  30 61 35 2d 34 64 38 34  2d 61 64 32 65 2d 36 35  |0a5-4d84-ad2e-65|
              000000a0  32 30 63 30 34 31 65 37  32 34 5c 22 7d 22 3a 7b  |20c041e724\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wpzgv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wpzgv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-16-254",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0726 12:37:42.561555 23 deployment.go:68] Pod "webserver-deployment-685b768f58-jbkb7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-jbkb7",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2570",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b671bd67-e56b-495f-859b-70467e7ad844",
      ResourceVersion: (string) (len=5) "12453",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889130258,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "103af159-40a5-4d84-ad2e-6520c041e724",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130258,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  33 61 66 31 35 39 2d 34  |d\":\"103af159-4|
              00000090  30 61 35 2d 34 64 38 34  2d 61 64 32 65 2d 36 35  |0a5-4d84-ad2e-65|
              000000a0  32 30 63 30 34 31 65 37  32 34 5c 22 7d 22 3a 7b  |20c041e724\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130259,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 33  2e 33 37 5c 22 7d 22 3a  |2.168.13.37\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wt85n",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wt85n",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-72-233",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130259,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130258,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130259,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130259,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130258,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.72.233",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.72.233"
        }
      },
      PodIP: (string) (len=13) "192.168.13.37",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.13.37"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889130258,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889130259,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://4e3e594e3f5fcb0d52277cb9c3baa1b908aa4f7f8618646503870b3a820eaee7",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wt85n",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0726 12:37:42.564343 23 deployment.go:68] Pod "webserver-deployment-685b768f58-kpb9c" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-kpb9c",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2570",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dfbbe068-39af-49e7-9565-7ae6abc027e3",
      ResourceVersion: (string) (len=5) "12484",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889130258,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "103af159-40a5-4d84-ad2e-6520c041e724",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130258,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  33 61 66 31 35 39 2d 34  |d\":\"103af159-4|
              00000090  30 61 35 2d 34 64 38 34  2d 61 64 32 65 2d 36 35  |0a5-4d84-ad2e-65|
              000000a0  32 30 63 30 34 31 65 37  32 34 5c 22 7d 22 3a 7b  |20c041e724\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130259,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 34  38 2e 31 36 33 5c 22 7d  |2.168.248.163\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-m7bgr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-m7bgr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-3-117",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130259,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130258,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130259,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130259,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130258,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.3.117",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.3.117"
        }
      },
      PodIP: (string) (len=15) "192.168.248.163",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.248.163"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889130258,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889130259,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://14d42f15df10193ad7d385f828de9389e66bb4391303bec4545584fe061cb3e3",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-m7bgr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0726 12:37:42.569115 23 deployment.go:68] Pod "webserver-deployment-685b768f58-ltjfh" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-ltjfh",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2570",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a5078fd0-6293-4973-a659-4d38e538157d",
      ResourceVersion: (string) (len=5) "12481",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889130258,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "103af159-40a5-4d84-ad2e-6520c041e724",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130258,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  33 61 66 31 35 39 2d 34  |d\":\"103af159-4|
              00000090  30 61 35 2d 34 64 38 34  2d 61 64 32 65 2d 36 35  |0a5-4d84-ad2e-65|
              000000a0  32 30 63 30 34 31 65 37  32 34 5c 22 7d 22 3a 7b  |20c041e724\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130259,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 34  38 2e 31 36 32 5c 22 7d  |2.168.248.162\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hhmhd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hhmhd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-3-117",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130259,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130258,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130259,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130259,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130258,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.3.117",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.3.117"
        }
      },
      PodIP: (string) (len=15) "192.168.248.162",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.248.162"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889130258,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889130259,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://205bb1c53f68bad8a1e205f88e39e64228109419b2ab9041aa7b3aebf4b62ffc",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hhmhd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0726 12:37:42.573049 23 deployment.go:68] Pod "webserver-deployment-685b768f58-nfjrg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-nfjrg",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2570",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "22e0df73-caa4-4e02-b92b-34f2b7df6f98",
      ResourceVersion: (string) (len=5) "12699",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889130262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "103af159-40a5-4d84-ad2e-6520c041e724",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  33 61 66 31 35 39 2d 34  |d\":\"103af159-4|
              00000090  30 61 35 2d 34 64 38 34  2d 61 64 32 65 2d 36 35  |0a5-4d84-ad2e-65|
              000000a0  32 30 63 30 34 31 65 37  32 34 5c 22 7d 22 3a 7b  |20c041e724\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4jnrs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4jnrs",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-72-233",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0726 12:37:42.575182 23 deployment.go:68] Pod "webserver-deployment-685b768f58-r5r6c" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-r5r6c",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2570",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f1248bb3-a252-4ea1-8849-51e7d4daf789",
      ResourceVersion: (string) (len=5) "12674",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889130262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "103af159-40a5-4d84-ad2e-6520c041e724",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  33 61 66 31 35 39 2d 34  |d\":\"103af159-4|
              00000090  30 61 35 2d 34 64 38 34  2d 61 64 32 65 2d 36 35  |0a5-4d84-ad2e-65|
              000000a0  32 30 63 30 34 31 65 37  32 34 5c 22 7d 22 3a 7b  |20c041e724\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5g756",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5g756",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-72-233",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.72.233",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.72.233"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889130262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5g756",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0726 12:37:42.576330 23 deployment.go:68] Pod "webserver-deployment-685b768f58-rzw7g" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-rzw7g",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2570",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5008d2e7-3c74-457a-8485-a17b87815c85",
      ResourceVersion: (string) (len=5) "12497",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889130258,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "103af159-40a5-4d84-ad2e-6520c041e724",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130258,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  33 61 66 31 35 39 2d 34  |d\":\"103af159-4|
              00000090  30 61 35 2d 34 64 38 34  2d 61 64 32 65 2d 36 35  |0a5-4d84-ad2e-65|
              000000a0  32 30 63 30 34 31 65 37  32 34 5c 22 7d 22 3a 7b  |20c041e724\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130259,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 35 38  2e 31 39 39 5c 22 7d 22  |2.168.58.199\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lw9lb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lw9lb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-16-254",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130259,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130258,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130259,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130259,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130258,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.16.254",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.16.254"
        }
      },
      PodIP: (string) (len=14) "192.168.58.199",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.58.199"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889130258,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889130259,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://83549dacdeb143d7a3f49e9e8013ff98a4bbc3b70db79437aeacb108e66419cd",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-lw9lb",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0726 12:37:42.580371 23 deployment.go:68] Pod "webserver-deployment-685b768f58-vnbw9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-vnbw9",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2570",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "090fedc9-5cdd-4916-b9d1-ef68086ca631",
      ResourceVersion: (string) (len=5) "12670",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889130262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "103af159-40a5-4d84-ad2e-6520c041e724",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  33 61 66 31 35 39 2d 34  |d\":\"103af159-4|
              00000090  30 61 35 2d 34 64 38 34  2d 61 64 32 65 2d 36 35  |0a5-4d84-ad2e-65|
              000000a0  32 30 63 30 34 31 65 37  32 34 5c 22 7d 22 3a 7b  |20c041e724\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lb69v",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lb69v",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-72-233",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0726 12:37:42.581089 23 deployment.go:68] Pod "webserver-deployment-685b768f58-xmmfq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-xmmfq",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2570",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8a33628c-abb8-48ec-b346-1c0c5f5c53d1",
      ResourceVersion: (string) (len=5) "12696",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889130262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "103af159-40a5-4d84-ad2e-6520c041e724",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  33 61 66 31 35 39 2d 34  |d\":\"103af159-4|
              00000090  30 61 35 2d 34 64 38 34  2d 61 64 32 65 2d 36 35  |0a5-4d84-ad2e-65|
              000000a0  32 30 63 30 34 31 65 37  32 34 5c 22 7d 22 3a 7b  |20c041e724\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-44mhd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-44mhd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-3-117",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0726 12:37:42.583559 23 deployment.go:68] Pod "webserver-deployment-685b768f58-z6fwz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-z6fwz",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2570",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1ac7afa6-a810-4529-b573-7af6ef08fa9d",
      ResourceVersion: (string) (len=5) "12666",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889130262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "103af159-40a5-4d84-ad2e-6520c041e724",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  33 61 66 31 35 39 2d 34  |d\":\"103af159-4|
              00000090  30 61 35 2d 34 64 38 34  2d 61 64 32 65 2d 36 35  |0a5-4d84-ad2e-65|
              000000a0  32 30 63 30 34 31 65 37  32 34 5c 22 7d 22 3a 7b  |20c041e724\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6c7wz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6c7wz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-3-117",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0726 12:37:42.587866 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-4r2lc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-4r2lc",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-2570",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f870b5e3-f9b1-4e75-9f83-04b064b93958",
      ResourceVersion: (string) (len=5) "12689",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889130262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "869bbfde-a070-4d2b-b27c-c0b770db6469",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 36  39 62 62 66 64 65 2d 61  |d\":\"869bbfde-a|
              00000090  30 37 30 2d 34 64 32 62  2d 62 32 37 63 2d 63 30  |070-4d2b-b27c-c0|
              000000a0  62 37 37 30 64 62 36 34  36 39 5c 22 7d 22 3a 7b  |b770db6469\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s82zf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s82zf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-16-254",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0726 12:37:42.589552 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-5d9gj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-5d9gj",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-2570",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6b03ddc0-1ee1-480d-94fa-2489b0a2de26",
      ResourceVersion: (string) (len=5) "12630",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889130260,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "869bbfde-a070-4d2b-b27c-c0b770db6469",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130260,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 36  39 62 62 66 64 65 2d 61  |d\":\"869bbfde-a|
              00000090  30 37 30 2d 34 64 32 62  2d 62 32 37 63 2d 63 30  |070-4d2b-b27c-c0|
              000000a0  62 37 37 30 64 62 36 34  36 39 5c 22 7d 22 3a 7b  |b770db6469\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130261,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 32 34 38 2e 31  36 35 5c 22 7d 22 3a 7b  |68.248.165\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-m4pbh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-m4pbh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-3-117",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130261,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130260,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130260,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130260,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130260,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.3.117",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.3.117"
        }
      },
      PodIP: (string) (len=15) "192.168.248.165",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.248.165"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889130260,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-m4pbh",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0726 12:37:42.592391 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-b7h6x" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-b7h6x",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-2570",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b800b205-9d60-42bf-b689-50ebc41ced2d",
      ResourceVersion: (string) (len=5) "12624",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889130260,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "869bbfde-a070-4d2b-b27c-c0b770db6469",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130260,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 36  39 62 62 66 64 65 2d 61  |d\":\"869bbfde-a|
              00000090  30 37 30 2d 34 64 32 62  2d 62 32 37 63 2d 63 30  |070-4d2b-b27c-c0|
              000000a0  62 37 37 30 64 62 36 34  36 39 5c 22 7d 22 3a 7b  |b770db6469\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130261,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 33 2e 33 38  5c 22 7d 22 3a 7b 22 2e  |68.13.38\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9vqfj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9vqfj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-72-233",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130261,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130260,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130260,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130260,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130260,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.72.233",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.72.233"
        }
      },
      PodIP: (string) (len=13) "192.168.13.38",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.13.38"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889130260,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-9vqfj",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0726 12:37:42.595694 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-bwxnd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-bwxnd",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-2570",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8da03f23-ea11-420f-a018-0014f0dee812",
      ResourceVersion: (string) (len=5) "12692",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889130262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "869bbfde-a070-4d2b-b27c-c0b770db6469",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 36  39 62 62 66 64 65 2d 61  |d\":\"869bbfde-a|
              00000090  30 37 30 2d 34 64 32 62  2d 62 32 37 63 2d 63 30  |070-4d2b-b27c-c0|
              000000a0  62 37 37 30 64 62 36 34  36 39 5c 22 7d 22 3a 7b  |b770db6469\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-djhth",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-djhth",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0726 12:37:42.596849 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-f8qms" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-f8qms",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-2570",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fc05fd45-348e-43f4-b208-e0c627e099a3",
      ResourceVersion: (string) (len=5) "12688",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889130262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "869bbfde-a070-4d2b-b27c-c0b770db6469",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 36  39 62 62 66 64 65 2d 61  |d\":\"869bbfde-a|
              00000090  30 37 30 2d 34 64 32 62  2d 62 32 37 63 2d 63 30  |070-4d2b-b27c-c0|
              000000a0  62 37 37 30 64 62 36 34  36 39 5c 22 7d 22 3a 7b  |b770db6469\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b8x56",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b8x56",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-3-117",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0726 12:37:42.599222 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-gq6cg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-gq6cg",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-2570",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cef2aeed-700d-4ff1-8179-e3c8193eff0e",
      ResourceVersion: (string) (len=5) "12691",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889130262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "869bbfde-a070-4d2b-b27c-c0b770db6469",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 36  39 62 62 66 64 65 2d 61  |d\":\"869bbfde-a|
              00000090  30 37 30 2d 34 64 32 62  2d 62 32 37 63 2d 63 30  |070-4d2b-b27c-c0|
              000000a0  62 37 37 30 64 62 36 34  36 39 5c 22 7d 22 3a 7b  |b770db6469\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9l4v6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9l4v6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-3-117",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0726 12:37:42.607691 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-lm66n" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-lm66n",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-2570",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4e4eabba-46f2-4ad6-82e9-3dc5e1cc47e4",
      ResourceVersion: (string) (len=5) "12627",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889130260,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "869bbfde-a070-4d2b-b27c-c0b770db6469",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130260,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 36  39 62 62 66 64 65 2d 61  |d\":\"869bbfde-a|
              00000090  30 37 30 2d 34 64 32 62  2d 62 32 37 63 2d 63 30  |070-4d2b-b27c-c0|
              000000a0  62 37 37 30 64 62 36 34  36 39 5c 22 7d 22 3a 7b  |b770db6469\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130261,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 33 2e 33 39  5c 22 7d 22 3a 7b 22 2e  |68.13.39\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2bhkl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2bhkl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-72-233",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130261,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130260,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130260,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130260,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130260,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.72.233",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.72.233"
        }
      },
      PodIP: (string) (len=13) "192.168.13.39",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.13.39"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889130260,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2bhkl",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0726 12:37:42.613700 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-nn8nv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-nn8nv",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-2570",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "847d6dcc-bf06-4514-b571-a55e3bec2e9c",
      ResourceVersion: (string) (len=5) "12664",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889130262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "869bbfde-a070-4d2b-b27c-c0b770db6469",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 36  39 62 62 66 64 65 2d 61  |d\":\"869bbfde-a|
              00000090  30 37 30 2d 34 64 32 62  2d 62 32 37 63 2d 63 30  |070-4d2b-b27c-c0|
              000000a0  62 37 37 30 64 62 36 34  36 39 5c 22 7d 22 3a 7b  |b770db6469\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rsk7w",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rsk7w",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-16-254",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0726 12:37:42.614751 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-ntwd2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-ntwd2",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-2570",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "17666fec-1456-4669-bb3f-ec28067831e0",
      ResourceVersion: (string) (len=5) "12680",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889130262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "869bbfde-a070-4d2b-b27c-c0b770db6469",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 36  39 62 62 66 64 65 2d 61  |d\":\"869bbfde-a|
              00000090  30 37 30 2d 34 64 32 62  2d 62 32 37 63 2d 63 30  |070-4d2b-b27c-c0|
              000000a0  62 37 37 30 64 62 36 34  36 39 5c 22 7d 22 3a 7b  |b770db6469\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zvr4f",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zvr4f",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-3-117",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.3.117",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.3.117"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889130262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-zvr4f",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0726 12:37:42.620417 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-q7djr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-q7djr",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-2570",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "52041e60-5a92-4a74-a0a6-83ff58947057",
      ResourceVersion: (string) (len=5) "12685",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889130262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "869bbfde-a070-4d2b-b27c-c0b770db6469",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 36  39 62 62 66 64 65 2d 61  |d\":\"869bbfde-a|
              00000090  30 37 30 2d 34 64 32 62  2d 62 32 37 63 2d 63 30  |070-4d2b-b27c-c0|
              000000a0  62 37 37 30 64 62 36 34  36 39 5c 22 7d 22 3a 7b  |b770db6469\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9tz4r",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9tz4r",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-72-233",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0726 12:37:42.626379 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-rh2wj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-rh2wj",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-2570",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "71711ef0-eb68-4d7b-a7a0-21e6782ca055",
      ResourceVersion: (string) (len=5) "12637",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889130260,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "869bbfde-a070-4d2b-b27c-c0b770db6469",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130260,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 36  39 62 62 66 64 65 2d 61  |d\":\"869bbfde-a|
              00000090  30 37 30 2d 34 64 32 62  2d 62 32 37 63 2d 63 30  |070-4d2b-b27c-c0|
              000000a0  62 37 37 30 64 62 36 34  36 39 5c 22 7d 22 3a 7b  |b770db6469\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130261,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 35 38 2e 32 30  33 5c 22 7d 22 3a 7b 22  |68.58.203\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-245sz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-245sz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-16-254",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130261,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130260,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130260,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130260,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130260,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.16.254",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.16.254"
        }
      },
      PodIP: (string) (len=14) "192.168.58.203",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.58.203"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889130260,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-245sz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0726 12:37:42.629888 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-s9h6f" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-s9h6f",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-2570",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "86622daf-a766-4243-aa6c-8703004a0bda",
      ResourceVersion: (string) (len=5) "12665",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889130262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "869bbfde-a070-4d2b-b27c-c0b770db6469",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 36  39 62 62 66 64 65 2d 61  |d\":\"869bbfde-a|
              00000090  30 37 30 2d 34 64 32 62  2d 62 32 37 63 2d 63 30  |070-4d2b-b27c-c0|
              000000a0  62 37 37 30 64 62 36 34  36 39 5c 22 7d 22 3a 7b  |b770db6469\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bpzzl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bpzzl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-72-233",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0726 12:37:42.633896 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-sftb9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-sftb9",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-2570",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dd04e01f-172d-4237-898c-fafadbe8bc2a",
      ResourceVersion: (string) (len=5) "12634",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889130260,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "869bbfde-a070-4d2b-b27c-c0b770db6469",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130260,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 36  39 62 62 66 64 65 2d 61  |d\":\"869bbfde-a|
              00000090  30 37 30 2d 34 64 32 62  2d 62 32 37 63 2d 63 30  |070-4d2b-b27c-c0|
              000000a0  62 37 37 30 64 62 36 34  36 39 5c 22 7d 22 3a 7b  |b770db6469\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130261,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 35 38 2e 32 30  34 5c 22 7d 22 3a 7b 22  |68.58.204\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-t9pkx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-t9pkx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-16-254",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130261,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130260,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130260,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130260,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889130260,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.16.254",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.16.254"
        }
      },
      PodIP: (string) (len=14) "192.168.58.204",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.58.204"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889130260,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-t9pkx",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0726 12:37:42.639457 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2570" for this suite. @ 07/26/25 12:37:42.644
• [4.321 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 07/26/25 12:37:42.656
  I0726 12:37:42.656737 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename apf @ 07/26/25 12:37:42.657
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:37:42.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:37:42.673
  STEP: getting /apis @ 07/26/25 12:37:42.675
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 07/26/25 12:37:42.677
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 07/26/25 12:37:42.679
  STEP: creating @ 07/26/25 12:37:42.68
  STEP: getting @ 07/26/25 12:37:42.701
  STEP: listing @ 07/26/25 12:37:42.704
  STEP: watching @ 07/26/25 12:37:42.711
  I0726 12:37:42.711450 23 flowcontrol.go:394] starting watch
  STEP: patching @ 07/26/25 12:37:42.712
  STEP: updating @ 07/26/25 12:37:42.718
  I0726 12:37:42.728417 23 flowcontrol.go:422] waiting for watch events with expected annotations
  STEP: getting /status @ 07/26/25 12:37:42.728
  STEP: patching /status @ 07/26/25 12:37:42.734
  STEP: updating /status @ 07/26/25 12:37:42.74
  STEP: deleting @ 07/26/25 12:37:42.773
  STEP: deleting a collection @ 07/26/25 12:37:42.794
  I0726 12:37:42.820041 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-5238" for this suite. @ 07/26/25 12:37:42.825
• [0.175 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 07/26/25 12:37:42.832
  I0726 12:37:42.832312 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename var-expansion @ 07/26/25 12:37:42.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:37:42.845
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:37:42.847
  STEP: Creating a pod to test env composition @ 07/26/25 12:37:42.896
  E0726 12:37:43.025617      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:37:44.025898      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 12:37:44.918
  I0726 12:37:44.924702 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod var-expansion-dde14ceb-9036-4cd5-851b-144787d58c1f container dapi-container: <nil>
  STEP: delete the pod @ 07/26/25 12:37:44.934
  I0726 12:37:44.956550 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4306" for this suite. @ 07/26/25 12:37:44.961
• [2.138 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 07/26/25 12:37:44.97
  I0726 12:37:44.970929 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename security-context @ 07/26/25 12:37:44.971
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:37:44.989
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:37:44.99
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 07/26/25 12:37:44.992
  E0726 12:37:45.026275      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:37:46.026521      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 12:37:47.015
  I0726 12:37:47.020623 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod security-context-a8d9be94-c307-4c00-8cc0-ae7c8eb9a450 container test-container: <nil>
  E0726 12:37:47.026727      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the pod @ 07/26/25 12:37:47.028
  I0726 12:37:47.052330 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-6530" for this suite. @ 07/26/25 12:37:47.056
• [2.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 07/26/25 12:37:47.065
  I0726 12:37:47.065389 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename webhook @ 07/26/25 12:37:47.065
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:37:47.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:37:47.081
  STEP: Setting up server cert @ 07/26/25 12:37:47.101
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/26/25 12:37:47.273
  STEP: Deploying the webhook pod @ 07/26/25 12:37:47.28
  STEP: Wait for the deployment to be ready @ 07/26/25 12:37:47.292
  I0726 12:37:47.302915 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0726 12:37:48.027879      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:37:49.027930      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/26/25 12:37:49.316
  STEP: Verifying the service has paired with the endpoint @ 07/26/25 12:37:49.336
  E0726 12:37:50.028011      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:37:50.336253 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0726 12:37:50.342555 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-6681-crds.webhook.example.com via the AdmissionRegistration API @ 07/26/25 12:37:50.852
  STEP: Creating a custom resource that should be mutated by the webhook @ 07/26/25 12:37:50.866
  E0726 12:37:51.028780      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:37:52.028859      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:37:53.028948      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:37:53.467335 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4266" for this suite. @ 07/26/25 12:37:53.472
  STEP: Destroying namespace "webhook-markers-2922" for this suite. @ 07/26/25 12:37:53.479
• [6.424 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:559
  STEP: Creating a kubernetes client @ 07/26/25 12:37:53.49
  I0726 12:37:53.490264 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename svcaccounts @ 07/26/25 12:37:53.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:37:53.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:37:53.505
  I0726 12:37:53.525073 23 service_accounts.go:646] created pod
  E0726 12:37:54.029439      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:37:55.029870      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:37:56.030858      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:37:57.030945      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 12:37:57.542
  E0726 12:37:58.031875      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:37:59.032082      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:38:00.032207      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:38:01.032427      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:38:02.032514      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:38:03.033457      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:38:04.033665      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:38:05.033846      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:38:06.034024      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:38:07.034134      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:38:08.034311      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:38:09.034517      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:38:10.034731      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:38:11.034918      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:38:12.035093      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:38:13.035188      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:38:14.035391      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:38:15.035567      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:38:16.035765      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:38:17.035950      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:38:18.036069      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:38:19.036181      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:38:20.036361      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:38:21.036829      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:38:22.037829      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:38:23.038887      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:38:24.038974      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:38:25.039839      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:38:26.040819      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:38:27.041830      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:38:27.542511 23 service_accounts.go:652] polling logs
  I0726 12:38:27.551367 23 service_accounts.go:662] Pod logs: 
  I0726 12:37:54.120178       1 log.go:245] OK: Got token
  I0726 12:37:54.120221       1 log.go:245] validating with in-cluster discovery
  I0726 12:37:54.120432       1 log.go:245] OK: got issuer https://kubernetes.default.svc
  I0726 12:37:54.120452       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-9516:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000012910), NotBefore:(*jwt.NumericDate)(0xc000012a00), IssuedAt:(*jwt.NumericDate)(0xc000012920), ID:"957e9c90-cbfd-4163-a263-729cb60f062a"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-9516", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"3f683175-066d-44cd-a400-e073ed244394"}}}
  I0726 12:37:54.126982       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I0726 12:37:54.130751       1 log.go:245] OK: Validated signature on JWT
  I0726 12:37:54.130811       1 log.go:245] OK: Got valid claims from token!
  I0726 12:37:54.130828       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-9516:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0001c4100), NotBefore:(*jwt.NumericDate)(0xc0001c4128), IssuedAt:(*jwt.NumericDate)(0xc0001c4108), ID:"957e9c90-cbfd-4163-a263-729cb60f062a"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-9516", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"3f683175-066d-44cd-a400-e073ed244394"}}}

  I0726 12:38:27.551422 23 service_accounts.go:666] completed pod
  I0726 12:38:27.559459 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9516" for this suite. @ 07/26/25 12:38:27.563
• [34.084 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:566
  STEP: Creating a kubernetes client @ 07/26/25 12:38:27.574
  I0726 12:38:27.574045 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename webhook @ 07/26/25 12:38:27.574
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:38:27.584
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:38:27.586
  STEP: Setting up server cert @ 07/26/25 12:38:27.606
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/26/25 12:38:27.89
  STEP: Deploying the webhook pod @ 07/26/25 12:38:27.898
  STEP: Wait for the deployment to be ready @ 07/26/25 12:38:27.911
  I0726 12:38:27.923361 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0726 12:38:28.042505      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:38:29.042742      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/26/25 12:38:29.937
  STEP: Verifying the service has paired with the endpoint @ 07/26/25 12:38:29.954
  E0726 12:38:30.043646      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:38:30.954507 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 07/26/25 12:38:31.036
  E0726 12:38:31.044442      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/26/25 12:38:31.068
  STEP: Deleting the collection of validation webhooks @ 07/26/25 12:38:31.093
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/26/25 12:38:31.176
  I0726 12:38:31.244212 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4902" for this suite. @ 07/26/25 12:38:31.248
  STEP: Destroying namespace "webhook-markers-1567" for this suite. @ 07/26/25 12:38:31.258
• [3.693 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 07/26/25 12:38:31.267
  I0726 12:38:31.267397 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename crd-watch @ 07/26/25 12:38:31.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:38:31.283
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:38:31.285
  I0726 12:38:31.287167 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  E0726 12:38:32.045214      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:38:33.046150      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 07/26/25 12:38:33.819
  I0726 12:38:33.823826 23 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-07-26T12:38:33Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-07-26T12:38:33Z]] name:name1 resourceVersion:13508 uid:93dab558-9a87-4c68-b2f4-1a985aea5e48] num:map[num1:9223372036854775807 num2:1000000]]}
  E0726 12:38:34.046253      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:38:35.046321      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:38:36.046529      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:38:37.046616      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:38:38.047579      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:38:39.047682      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:38:40.047885      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:38:41.047957      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:38:42.048087      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:38:43.048171      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 07/26/25 12:38:43.823
  I0726 12:38:43.830865 23 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-07-26T12:38:43Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-07-26T12:38:43Z]] name:name2 resourceVersion:13548 uid:fdf1a04a-2675-4012-9c46-826fb0658058] num:map[num1:9223372036854775807 num2:1000000]]}
  E0726 12:38:44.049111      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:38:45.049223      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:38:46.049287      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:38:47.049400      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:38:48.049410      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:38:49.049856      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:38:50.049925      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:38:51.050036      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:38:52.050112      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:38:53.050232      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 07/26/25 12:38:53.831
  I0726 12:38:53.838376 23 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-07-26T12:38:33Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-07-26T12:38:53Z]] name:name1 resourceVersion:13568 uid:93dab558-9a87-4c68-b2f4-1a985aea5e48] num:map[num1:9223372036854775807 num2:1000000]]}
  E0726 12:38:54.050735      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:38:55.050805      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:38:56.050879      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:38:57.051011      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:38:58.051146      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:38:59.051272      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:39:00.051409      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:39:01.051546      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:39:02.051676      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:39:03.051897      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 07/26/25 12:39:03.838
  I0726 12:39:03.845135 23 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-07-26T12:38:43Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-07-26T12:39:03Z]] name:name2 resourceVersion:13589 uid:fdf1a04a-2675-4012-9c46-826fb0658058] num:map[num1:9223372036854775807 num2:1000000]]}
  E0726 12:39:04.052505      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:39:05.052895      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:39:06.053857      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:39:07.053927      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:39:08.054044      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:39:09.054117      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:39:10.054234      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:39:11.054345      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:39:12.054431      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:39:13.054613      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 07/26/25 12:39:13.846
  I0726 12:39:13.856613 23 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-07-26T12:38:33Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-07-26T12:38:53Z]] name:name1 resourceVersion:13611 uid:93dab558-9a87-4c68-b2f4-1a985aea5e48] num:map[num1:9223372036854775807 num2:1000000]]}
  E0726 12:39:14.054981      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:39:15.055195      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:39:16.055397      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:39:17.055478      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:39:18.055619      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:39:19.055821      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:39:20.055982      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:39:21.056172      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:39:22.056304      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:39:23.056458      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 07/26/25 12:39:23.857
  I0726 12:39:23.866333 23 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-07-26T12:38:43Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-07-26T12:39:03Z]] name:name2 resourceVersion:13632 uid:fdf1a04a-2675-4012-9c46-826fb0658058] num:map[num1:9223372036854775807 num2:1000000]]}
  E0726 12:39:24.056653      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:39:25.056865      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:39:26.057063      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:39:27.057926      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:39:28.058097      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:39:29.058177      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:39:30.058311      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:39:31.058522      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:39:32.058602      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:39:33.059502      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:39:34.059626      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:39:34.378699 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-3054" for this suite. @ 07/26/25 12:39:34.383
• [63.125 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 07/26/25 12:39:34.392
  I0726 12:39:34.392726 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename init-container @ 07/26/25 12:39:34.393
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:39:34.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:39:34.408
  STEP: creating the pod @ 07/26/25 12:39:34.41
  I0726 12:39:34.410124 23 init_container.go:294] PodSpec: initContainers in spec.initContainers
  E0726 12:39:35.059859      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:39:36.059950      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:39:37.060274      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:39:37.943748 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3558" for this suite. @ 07/26/25 12:39:37.949
• [3.566 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] ServiceCIDR and IPAddress API should support IPAddress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_cidrs.go:223
  STEP: Creating a kubernetes client @ 07/26/25 12:39:37.958
  I0726 12:39:37.958870 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename servicecidr @ 07/26/25 12:39:37.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:39:37.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:39:37.975
  STEP: creating @ 07/26/25 12:39:37.977
  STEP: patching @ 07/26/25 12:39:37.989
  STEP: updating @ 07/26/25 12:39:37.994
  STEP: getting @ 07/26/25 12:39:38.007
  STEP: listing @ 07/26/25 12:39:38.011
  STEP: watching @ 07/26/25 12:39:38.016
  STEP: deleting @ 07/26/25 12:39:38.017
  STEP: deleting a collection @ 07/26/25 12:39:38.024
  I0726 12:39:38.040815 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "servicecidr-6761" for this suite. @ 07/26/25 12:39:38.049
• [0.100 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 07/26/25 12:39:38.058
  I0726 12:39:38.058622 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename container-probe @ 07/26/25 12:39:38.059
  E0726 12:39:38.060587      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:39:38.073
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:39:38.076
  STEP: Creating pod liveness-5cc88780-7f65-432c-9fd4-9c3d481dc626 in namespace container-probe-5458 @ 07/26/25 12:39:38.078
  E0726 12:39:39.060810      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:39:40.060887      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/26/25 12:39:40.103
  I0726 12:39:40.108100 23 container_probe.go:1748] Initial restart count of pod liveness-5cc88780-7f65-432c-9fd4-9c3d481dc626 is 0
  I0726 12:39:40.111777 23 container_probe.go:1758] Get pod liveness-5cc88780-7f65-432c-9fd4-9c3d481dc626 in namespace container-probe-5458
  E0726 12:39:41.061793      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:39:42.061954      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:39:42.116700 23 container_probe.go:1758] Get pod liveness-5cc88780-7f65-432c-9fd4-9c3d481dc626 in namespace container-probe-5458
  E0726 12:39:43.062146      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:39:44.062904      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:39:44.122099 23 container_probe.go:1758] Get pod liveness-5cc88780-7f65-432c-9fd4-9c3d481dc626 in namespace container-probe-5458
  E0726 12:39:45.062882      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:39:46.063058      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:39:46.127225 23 container_probe.go:1758] Get pod liveness-5cc88780-7f65-432c-9fd4-9c3d481dc626 in namespace container-probe-5458
  E0726 12:39:47.063234      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:39:48.063339      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:39:48.131860 23 container_probe.go:1758] Get pod liveness-5cc88780-7f65-432c-9fd4-9c3d481dc626 in namespace container-probe-5458
  E0726 12:39:49.063481      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:39:50.063687      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:39:50.138082 23 container_probe.go:1758] Get pod liveness-5cc88780-7f65-432c-9fd4-9c3d481dc626 in namespace container-probe-5458
  E0726 12:39:51.063787      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:39:52.063899      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:39:52.144892 23 container_probe.go:1758] Get pod liveness-5cc88780-7f65-432c-9fd4-9c3d481dc626 in namespace container-probe-5458
  E0726 12:39:53.063979      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:39:54.064194      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:39:54.149887 23 container_probe.go:1758] Get pod liveness-5cc88780-7f65-432c-9fd4-9c3d481dc626 in namespace container-probe-5458
  E0726 12:39:55.064835      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:39:56.065018      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:39:56.154850 23 container_probe.go:1758] Get pod liveness-5cc88780-7f65-432c-9fd4-9c3d481dc626 in namespace container-probe-5458
  E0726 12:39:57.065111      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:39:58.065200      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:39:58.160479 23 container_probe.go:1758] Get pod liveness-5cc88780-7f65-432c-9fd4-9c3d481dc626 in namespace container-probe-5458
  E0726 12:39:59.065314      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:40:00.065505      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:40:00.165896 23 container_probe.go:1758] Get pod liveness-5cc88780-7f65-432c-9fd4-9c3d481dc626 in namespace container-probe-5458
  I0726 12:40:00.165930 23 container_probe.go:1762] Restart count of pod container-probe-5458/liveness-5cc88780-7f65-432c-9fd4-9c3d481dc626 is now 1 (20.05780533s elapsed)
  STEP: deleting the pod @ 07/26/25 12:40:00.166
  I0726 12:40:00.187360 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5458" for this suite. @ 07/26/25 12:40:00.193
• [22.144 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 07/26/25 12:40:00.202
  I0726 12:40:00.202349 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename webhook @ 07/26/25 12:40:00.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:40:00.216
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:40:00.217
  STEP: Setting up server cert @ 07/26/25 12:40:00.243
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/26/25 12:40:00.56
  STEP: Deploying the webhook pod @ 07/26/25 12:40:00.566
  STEP: Wait for the deployment to be ready @ 07/26/25 12:40:00.581
  I0726 12:40:00.594435 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0726 12:40:01.065953      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:40:02.066144      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/26/25 12:40:02.61
  STEP: Verifying the service has paired with the endpoint @ 07/26/25 12:40:02.629
  E0726 12:40:03.066411      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:40:03.630748 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 07/26/25 12:40:03.636
  STEP: Registering slow webhook via the AdmissionRegistration API @ 07/26/25 12:40:03.636
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 07/26/25 12:40:03.65
  E0726 12:40:04.067093      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 07/26/25 12:40:04.661
  STEP: Registering slow webhook via the AdmissionRegistration API @ 07/26/25 12:40:04.661
  E0726 12:40:05.067442      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 07/26/25 12:40:05.697
  STEP: Registering slow webhook via the AdmissionRegistration API @ 07/26/25 12:40:05.697
  E0726 12:40:06.068110      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:40:07.068318      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:40:08.068534      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:40:09.069547      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:40:10.069650      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 07/26/25 12:40:10.733
  STEP: Registering slow webhook via the AdmissionRegistration API @ 07/26/25 12:40:10.733
  E0726 12:40:11.069763      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:40:12.070882      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:40:13.070982      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:40:14.071058      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:40:15.071220      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:40:15.844313 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9590" for this suite. @ 07/26/25 12:40:15.848
  STEP: Destroying namespace "webhook-markers-4447" for this suite. @ 07/26/25 12:40:15.856
• [15.665 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 07/26/25 12:40:15.867
  I0726 12:40:15.867268 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename discovery @ 07/26/25 12:40:15.867
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:40:15.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:40:15.881
  STEP: Setting up server cert @ 07/26/25 12:40:15.883
  STEP: Requesting APIResourceList from "/api/v1" @ 07/26/25 12:40:16.028
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 07/26/25 12:40:16.03
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 07/26/25 12:40:16.03
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 07/26/25 12:40:16.031
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 07/26/25 12:40:16.031
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 07/26/25 12:40:16.032
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 07/26/25 12:40:16.032
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 07/26/25 12:40:16.033
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 07/26/25 12:40:16.033
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 07/26/25 12:40:16.034
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 07/26/25 12:40:16.034
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 07/26/25 12:40:16.035
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 07/26/25 12:40:16.036
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 07/26/25 12:40:16.036
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 07/26/25 12:40:16.036
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 07/26/25 12:40:16.037
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 07/26/25 12:40:16.038
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 07/26/25 12:40:16.038
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 07/26/25 12:40:16.039
  I0726 12:40:16.040109 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-1230" for this suite. @ 07/26/25 12:40:16.045
• [0.186 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:109
  STEP: Creating a kubernetes client @ 07/26/25 12:40:16.053
  I0726 12:40:16.053490 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename emptydir @ 07/26/25 12:40:16.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:40:16.065
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:40:16.067
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 07/26/25 12:40:16.069
  E0726 12:40:16.071746      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:40:17.071947      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:40:18.072046      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:40:19.072185      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:40:20.072380      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 12:40:20.095
  I0726 12:40:20.099778 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod pod-766db202-7dcf-4e72-9fea-155444bf28c8 container test-container: <nil>
  STEP: delete the pod @ 07/26/25 12:40:20.118
  I0726 12:40:20.141547 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-254" for this suite. @ 07/26/25 12:40:20.146
• [4.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:47
  STEP: Creating a kubernetes client @ 07/26/25 12:40:20.155
  I0726 12:40:20.155560 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename projected @ 07/26/25 12:40:20.156
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:40:20.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:40:20.171
  STEP: Creating configMap with name projected-configmap-test-volume-7396f5f1-89f6-4e22-aa1b-73485b7e9028 @ 07/26/25 12:40:20.172
  STEP: Creating a pod to test consume configMaps @ 07/26/25 12:40:20.177
  E0726 12:40:21.072446      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:40:22.072858      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 12:40:22.205
  I0726 12:40:22.209177 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod pod-projected-configmaps-f4a18378-ecf7-48ce-aff9-67a3fce17d99 container agnhost-container: <nil>
  STEP: delete the pod @ 07/26/25 12:40:22.218
  I0726 12:40:22.241438 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1031" for this suite. @ 07/26/25 12:40:22.246
• [2.099 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 07/26/25 12:40:22.254
  I0726 12:40:22.254332 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename csistoragecapacity @ 07/26/25 12:40:22.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:40:22.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:40:22.27
  STEP: getting /apis @ 07/26/25 12:40:22.272
  STEP: getting /apis/storage.k8s.io @ 07/26/25 12:40:22.274
  STEP: getting /apis/storage.k8s.io/v1 @ 07/26/25 12:40:22.274
  STEP: creating @ 07/26/25 12:40:22.275
  STEP: watching @ 07/26/25 12:40:22.294
  I0726 12:40:22.294764 23 csistoragecapacity.go:143] starting watch
  STEP: getting @ 07/26/25 12:40:22.301
  STEP: listing in namespace @ 07/26/25 12:40:22.305
  STEP: listing across namespaces @ 07/26/25 12:40:22.309
  STEP: patching @ 07/26/25 12:40:22.312
  STEP: updating @ 07/26/25 12:40:22.318
  I0726 12:40:22.323573 23 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0726 12:40:22.323644 23 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 07/26/25 12:40:22.323
  STEP: deleting a collection @ 07/26/25 12:40:22.341
  I0726 12:40:22.365992 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-7240" for this suite. @ 07/26/25 12:40:22.37
• [0.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:179
  STEP: Creating a kubernetes client @ 07/26/25 12:40:22.377
  I0726 12:40:22.377995 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename emptydir @ 07/26/25 12:40:22.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:40:22.391
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:40:22.393
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 07/26/25 12:40:22.395
  E0726 12:40:23.072982      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:40:24.073132      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:40:25.073334      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:40:26.073420      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 12:40:26.426
  I0726 12:40:26.430074 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod pod-ca05bc4e-84f0-4346-95db-77cc5aede1f3 container test-container: <nil>
  STEP: delete the pod @ 07/26/25 12:40:26.439
  I0726 12:40:26.463516 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9203" for this suite. @ 07/26/25 12:40:26.467
• [4.097 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:196
  STEP: Creating a kubernetes client @ 07/26/25 12:40:26.475
  I0726 12:40:26.475568 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/26/25 12:40:26.476
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:40:26.49
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:40:26.492
  I0726 12:40:26.494413 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  E0726 12:40:27.073886      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 07/26/25 12:40:27.898
  I0726 12:40:27.898354 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=crd-publish-openapi-9678 --namespace=crd-publish-openapi-9678 create -f -'
  E0726 12:40:28.073997      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:40:29.074061      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:40:29.956230 23 builder.go:146] stderr: ""
  I0726 12:40:29.956276 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4109-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0726 12:40:29.956325 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=crd-publish-openapi-9678 --namespace=crd-publish-openapi-9678 delete e2e-test-crd-publish-openapi-4109-crds test-cr'
  I0726 12:40:30.004340 23 builder.go:146] stderr: ""
  I0726 12:40:30.004376 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4109-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I0726 12:40:30.004410 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=crd-publish-openapi-9678 --namespace=crd-publish-openapi-9678 apply -f -'
  I0726 12:40:30.054289 23 builder.go:146] stderr: ""
  I0726 12:40:30.054320 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4109-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0726 12:40:30.054388 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=crd-publish-openapi-9678 --namespace=crd-publish-openapi-9678 delete e2e-test-crd-publish-openapi-4109-crds test-cr'
  E0726 12:40:30.074500      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:40:30.102798 23 builder.go:146] stderr: ""
  I0726 12:40:30.102827 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4109-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 07/26/25 12:40:30.102
  I0726 12:40:30.102887 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=crd-publish-openapi-9678 explain e2e-test-crd-publish-openapi-4109-crds'
  I0726 12:40:30.138287 23 builder.go:146] stderr: ""
  I0726 12:40:30.138328 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-4109-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0726 12:40:31.074665      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:40:31.311701 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9678" for this suite. @ 07/26/25 12:40:31.321
• [4.856 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 07/26/25 12:40:31.331
  I0726 12:40:31.331792 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename var-expansion @ 07/26/25 12:40:31.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:40:31.347
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:40:31.349
  STEP: Creating a pod to test substitution in volume subpath @ 07/26/25 12:40:31.352
  E0726 12:40:32.074794      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:40:33.074791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 12:40:33.376
  I0726 12:40:33.382570 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod var-expansion-2ba0be84-4a12-4eda-a691-7c27d58afa57 container dapi-container: <nil>
  STEP: delete the pod @ 07/26/25 12:40:33.395
  I0726 12:40:33.416088 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4282" for this suite. @ 07/26/25 12:40:33.423
• [2.100 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 07/26/25 12:40:33.431
  I0726 12:40:33.431852 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/26/25 12:40:33.432
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:40:33.445
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:40:33.448
  I0726 12:40:33.450787 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  E0726 12:40:34.075426      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:40:35.075533      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:40:36.076018      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:40:37.076990      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:40:38.077420      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:40:39.077412      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:40:39.685892 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9520" for this suite. @ 07/26/25 12:40:39.692
• [6.270 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:250
  STEP: Creating a kubernetes client @ 07/26/25 12:40:39.701
  I0726 12:40:39.701880 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename projected @ 07/26/25 12:40:39.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:40:39.72
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:40:39.722
  STEP: Creating a pod to test downward API volume plugin @ 07/26/25 12:40:39.724
  E0726 12:40:40.077579      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:40:41.077671      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:40:42.078361      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:40:43.078463      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 12:40:43.757
  I0726 12:40:43.763410 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod downwardapi-volume-b710bb9a-16d1-4640-acc1-9065938084da container client-container: <nil>
  STEP: delete the pod @ 07/26/25 12:40:43.773
  I0726 12:40:43.796548 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8586" for this suite. @ 07/26/25 12:40:43.803
• [4.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:351
  STEP: Creating a kubernetes client @ 07/26/25 12:40:43.811
  I0726 12:40:43.811714 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename kubectl @ 07/26/25 12:40:43.812
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:40:43.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:40:43.832
  STEP: creating a replication controller @ 07/26/25 12:40:43.834
  I0726 12:40:43.834911 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-5886 create -f -'
  I0726 12:40:43.913814 23 builder.go:146] stderr: ""
  I0726 12:40:43.913856 23 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 07/26/25 12:40:43.913
  I0726 12:40:43.913929 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-5886 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0726 12:40:43.956472 23 builder.go:146] stderr: ""
  I0726 12:40:43.956738 23 builder.go:147] stdout: "update-demo-nautilus-862nq update-demo-nautilus-ghbvk "
  I0726 12:40:43.956780 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-5886 get pods update-demo-nautilus-862nq -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0726 12:40:43.997022 23 builder.go:146] stderr: ""
  I0726 12:40:43.997053 23 builder.go:147] stdout: ""
  I0726 12:40:43.997061 23 kubectl.go:2505] update-demo-nautilus-862nq is created but not running
  E0726 12:40:44.079279      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:40:45.079869      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:40:46.080826      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:40:47.080955      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:40:48.081022      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:40:48.997225 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-5886 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0726 12:40:49.037578 23 builder.go:146] stderr: ""
  I0726 12:40:49.037649 23 builder.go:147] stdout: "update-demo-nautilus-862nq update-demo-nautilus-ghbvk "
  I0726 12:40:49.037686 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-5886 get pods update-demo-nautilus-862nq -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0726 12:40:49.076800 23 builder.go:146] stderr: ""
  I0726 12:40:49.076838 23 builder.go:147] stdout: "true"
  I0726 12:40:49.076870 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-5886 get pods update-demo-nautilus-862nq -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  E0726 12:40:49.081174      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:40:49.115321 23 builder.go:146] stderr: ""
  I0726 12:40:49.115354 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0726 12:40:49.115365 23 kubectl.go:2396] validating pod update-demo-nautilus-862nq
  I0726 12:40:49.121004 23 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0726 12:40:49.121055 23 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0726 12:40:49.121063 23 kubectl.go:2523] update-demo-nautilus-862nq is verified up and running
  I0726 12:40:49.121092 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-5886 get pods update-demo-nautilus-ghbvk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0726 12:40:49.160167 23 builder.go:146] stderr: ""
  I0726 12:40:49.160192 23 builder.go:147] stdout: "true"
  I0726 12:40:49.160224 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-5886 get pods update-demo-nautilus-ghbvk -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0726 12:40:49.199285 23 builder.go:146] stderr: ""
  I0726 12:40:49.199310 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0726 12:40:49.199320 23 kubectl.go:2396] validating pod update-demo-nautilus-ghbvk
  I0726 12:40:49.206875 23 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0726 12:40:49.206912 23 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0726 12:40:49.206923 23 kubectl.go:2523] update-demo-nautilus-ghbvk is verified up and running
  STEP: scaling down the replication controller @ 07/26/25 12:40:49.206
  I0726 12:40:49.207668 23 kubectl.go:320] scanned /root for discovery docs: <nil>
  I0726 12:40:49.207693 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-5886 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E0726 12:40:50.081389      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:40:50.272375 23 builder.go:146] stderr: ""
  I0726 12:40:50.272411 23 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 07/26/25 12:40:50.272
  I0726 12:40:50.272486 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-5886 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0726 12:40:50.312703 23 builder.go:146] stderr: ""
  I0726 12:40:50.312735 23 builder.go:147] stdout: "update-demo-nautilus-862nq "
  I0726 12:40:50.312773 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-5886 get pods update-demo-nautilus-862nq -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0726 12:40:50.349393 23 builder.go:146] stderr: ""
  I0726 12:40:50.349428 23 builder.go:147] stdout: "true"
  I0726 12:40:50.349467 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-5886 get pods update-demo-nautilus-862nq -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0726 12:40:50.387575 23 builder.go:146] stderr: ""
  I0726 12:40:50.387701 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0726 12:40:50.387713 23 kubectl.go:2396] validating pod update-demo-nautilus-862nq
  I0726 12:40:50.393467 23 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0726 12:40:50.393509 23 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0726 12:40:50.393518 23 kubectl.go:2523] update-demo-nautilus-862nq is verified up and running
  STEP: scaling up the replication controller @ 07/26/25 12:40:50.393
  I0726 12:40:50.394228 23 kubectl.go:320] scanned /root for discovery docs: <nil>
  I0726 12:40:50.394254 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-5886 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E0726 12:40:51.081856      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:40:51.447020 23 builder.go:146] stderr: ""
  I0726 12:40:51.447062 23 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 07/26/25 12:40:51.447
  I0726 12:40:51.447143 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-5886 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0726 12:40:51.488413 23 builder.go:146] stderr: ""
  I0726 12:40:51.488448 23 builder.go:147] stdout: "update-demo-nautilus-862nq update-demo-nautilus-llzdv "
  I0726 12:40:51.488486 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-5886 get pods update-demo-nautilus-862nq -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0726 12:40:51.527364 23 builder.go:146] stderr: ""
  I0726 12:40:51.527395 23 builder.go:147] stdout: "true"
  I0726 12:40:51.527430 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-5886 get pods update-demo-nautilus-862nq -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0726 12:40:51.565364 23 builder.go:146] stderr: ""
  I0726 12:40:51.565400 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0726 12:40:51.565411 23 kubectl.go:2396] validating pod update-demo-nautilus-862nq
  I0726 12:40:51.571871 23 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0726 12:40:51.571912 23 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0726 12:40:51.571921 23 kubectl.go:2523] update-demo-nautilus-862nq is verified up and running
  I0726 12:40:51.571949 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-5886 get pods update-demo-nautilus-llzdv -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0726 12:40:51.611079 23 builder.go:146] stderr: ""
  I0726 12:40:51.611105 23 builder.go:147] stdout: "true"
  I0726 12:40:51.611139 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-5886 get pods update-demo-nautilus-llzdv -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0726 12:40:51.650538 23 builder.go:146] stderr: ""
  I0726 12:40:51.650568 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0726 12:40:51.650577 23 kubectl.go:2396] validating pod update-demo-nautilus-llzdv
  I0726 12:40:51.657988 23 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0726 12:40:51.658025 23 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0726 12:40:51.658034 23 kubectl.go:2523] update-demo-nautilus-llzdv is verified up and running
  STEP: using delete to clean up resources @ 07/26/25 12:40:51.658
  I0726 12:40:51.658095 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-5886 delete --grace-period=0 --force -f -'
  I0726 12:40:51.705706 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0726 12:40:51.705733 23 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0726 12:40:51.705778 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-5886 get rc,svc -l name=update-demo --no-headers'
  I0726 12:40:51.770886 23 builder.go:146] stderr: "No resources found in kubectl-5886 namespace.\n"
  I0726 12:40:51.770919 23 builder.go:147] stdout: ""
  I0726 12:40:51.770956 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-5886 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0726 12:40:51.817118 23 builder.go:146] stderr: ""
  I0726 12:40:51.817153 23 builder.go:147] stdout: ""
  I0726 12:40:51.817265 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5886" for this suite. @ 07/26/25 12:40:51.824
• [8.022 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:208
  STEP: Creating a kubernetes client @ 07/26/25 12:40:51.833
  I0726 12:40:51.833896 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename downward-api @ 07/26/25 12:40:51.834
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:40:51.847
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:40:51.849
  STEP: Creating a pod to test downward API volume plugin @ 07/26/25 12:40:51.852
  E0726 12:40:52.082892      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:40:53.083001      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:40:54.084020      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:40:55.084295      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 12:40:55.883
  I0726 12:40:55.887784 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod downwardapi-volume-d1d2b8db-5c20-4af8-8ed6-8ef2ec200372 container client-container: <nil>
  STEP: delete the pod @ 07/26/25 12:40:55.897
  I0726 12:40:55.918492 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-482" for this suite. @ 07/26/25 12:40:55.925
• [4.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:99
  STEP: Creating a kubernetes client @ 07/26/25 12:40:55.933
  I0726 12:40:55.933762 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename configmap @ 07/26/25 12:40:55.934
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:40:55.95
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:40:55.952
  STEP: Creating configMap with name configmap-test-volume-map-f7677d69-25f1-4929-98d0-cae9d811668e @ 07/26/25 12:40:55.955
  STEP: Creating a pod to test consume configMaps @ 07/26/25 12:40:55.96
  E0726 12:40:56.085086      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:40:57.085207      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:40:58.085820      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:40:59.085950      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 12:40:59.989
  I0726 12:40:59.994811 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod pod-configmaps-1b5587b2-d46e-459a-aa9f-3297a2b9ec6b container agnhost-container: <nil>
  STEP: delete the pod @ 07/26/25 12:41:00.004
  I0726 12:41:00.025246 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9716" for this suite. @ 07/26/25 12:41:00.031
• [4.106 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:402
  STEP: Creating a kubernetes client @ 07/26/25 12:41:00.039
  I0726 12:41:00.039484 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename resourcequota @ 07/26/25 12:41:00.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:41:00.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:41:00.059
  STEP: Counting existing ResourceQuota @ 07/26/25 12:41:00.061
  E0726 12:41:00.086966      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:41:01.087291      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:41:02.088238      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:41:03.089154      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:41:04.089715      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/26/25 12:41:05.067
  STEP: Ensuring resource quota status is calculated @ 07/26/25 12:41:05.074
  E0726 12:41:05.089792      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:41:06.089953      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 07/26/25 12:41:07.08
  E0726 12:41:07.090498      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota status captures replication controller creation @ 07/26/25 12:41:07.095
  E0726 12:41:08.091536      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:41:09.091671      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 07/26/25 12:41:09.101
  STEP: Ensuring resource quota status released usage @ 07/26/25 12:41:09.113
  E0726 12:41:10.092296      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:41:11.092389      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:41:11.119566 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-179" for this suite. @ 07/26/25 12:41:11.126
• [11.098 seconds]
------------------------------
SSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:295
  STEP: Creating a kubernetes client @ 07/26/25 12:41:11.137
  I0726 12:41:11.137206 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename downward-api @ 07/26/25 12:41:11.137
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:41:11.152
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:41:11.154
  STEP: Creating a pod to test downward api env vars @ 07/26/25 12:41:11.156
  E0726 12:41:12.092530      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:41:13.092749      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:41:14.092923      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:41:15.092988      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 12:41:15.187
  I0726 12:41:15.192842 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod downward-api-60216047-91bd-4a68-b6b3-0bee975cc036 container dapi-container: <nil>
  STEP: delete the pod @ 07/26/25 12:41:15.203
  I0726 12:41:15.222531 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-394" for this suite. @ 07/26/25 12:41:15.229
• [4.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 07/26/25 12:41:15.238
  I0726 12:41:15.238037 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename var-expansion @ 07/26/25 12:41:15.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:41:15.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:41:15.254
  E0726 12:41:16.093140      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:41:17.093283      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:41:17.281689 23 delete.go:62] Deleting pod "var-expansion-6291f1aa-88af-41da-8d8a-1ecdcc61319e" in namespace "var-expansion-8877"
  I0726 12:41:17.293602 23 delete.go:70] Wait up to 5m0s for pod "var-expansion-6291f1aa-88af-41da-8d8a-1ecdcc61319e" to be fully deleted
  E0726 12:41:18.093419      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:41:19.093509      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:41:19.304007 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8877" for this suite. @ 07/26/25 12:41:19.311
• [4.082 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:71
  STEP: Creating a kubernetes client @ 07/26/25 12:41:19.319
  I0726 12:41:19.319810 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename replication-controller @ 07/26/25 12:41:19.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:41:19.334
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:41:19.337
  STEP: Creating replication controller my-hostname-basic-2525cc63-b3e5-4309-a0aa-94156e61cc7f @ 07/26/25 12:41:19.339
  I0726 12:41:19.352015 23 resource.go:81] Pod name my-hostname-basic-2525cc63-b3e5-4309-a0aa-94156e61cc7f: Found 0 pods out of 1
  E0726 12:41:20.093879      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:41:21.093996      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:41:22.094119      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:41:23.095018      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:41:24.095113      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:41:24.356913 23 resource.go:81] Pod name my-hostname-basic-2525cc63-b3e5-4309-a0aa-94156e61cc7f: Found 1 pods out of 1
  I0726 12:41:24.356950 23 rc.go:509] Ensuring all pods for ReplicationController "my-hostname-basic-2525cc63-b3e5-4309-a0aa-94156e61cc7f" are running
  I0726 12:41:24.361770 23 rc.go:525] Pod "my-hostname-basic-2525cc63-b3e5-4309-a0aa-94156e61cc7f-gh2rs" is running and ready(conditions: [{Type:PodReadyToStartContainers ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-26 12:41:20 +0000 UTC Reason: Message:} {Type:Initialized ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-26 12:41:19 +0000 UTC Reason: Message:} {Type:Ready ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-26 12:41:20 +0000 UTC Reason: Message:} {Type:ContainersReady ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-26 12:41:20 +0000 UTC Reason: Message:} {Type:PodScheduled ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-07-26 12:41:19 +0000 UTC Reason: Message:}])
  I0726 12:41:24.361790 23 rc.go:533] Trying to dial the pod
  STEP: trying to dial each unique pod @ 07/26/25 12:41:24.361
  I0726 12:41:24.376921 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8540" for this suite. @ 07/26/25 12:41:24.383
• [5.072 seconds]
------------------------------
S
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:76
  STEP: Creating a kubernetes client @ 07/26/25 12:41:24.392
  I0726 12:41:24.392180 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename containers @ 07/26/25 12:41:24.392
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:41:24.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:41:24.41
  STEP: Creating a pod to test override command @ 07/26/25 12:41:24.413
  E0726 12:41:25.095305      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:41:26.095389      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:41:27.095553      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:41:28.095663      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 12:41:28.469
  I0726 12:41:28.474825 23 output.go:207] Trying to get logs from node ip-172-31-72-233 pod client-containers-6b54b05e-559a-471a-8835-c91060d7f047 container agnhost-container: <nil>
  STEP: delete the pod @ 07/26/25 12:41:28.491
  I0726 12:41:28.512543 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1231" for this suite. @ 07/26/25 12:41:28.519
• [4.137 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:62
  STEP: Creating a kubernetes client @ 07/26/25 12:41:28.529
  I0726 12:41:28.529679 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename containers @ 07/26/25 12:41:28.53
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:41:28.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:41:28.549
  STEP: Creating a pod to test override arguments @ 07/26/25 12:41:28.552
  E0726 12:41:29.096604      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:41:30.096821      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:41:31.096993      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:41:32.097106      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 12:41:32.583
  I0726 12:41:32.588246 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod client-containers-de480063-17ed-4af1-9802-ef0c8751de23 container agnhost-container: <nil>
  STEP: delete the pod @ 07/26/25 12:41:32.598
  I0726 12:41:32.618906 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-6162" for this suite. @ 07/26/25 12:41:32.625
• [4.105 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 07/26/25 12:41:32.634
  I0726 12:41:32.634527 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename kubelet-test @ 07/26/25 12:41:32.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:41:32.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:41:32.65
  E0726 12:41:33.098100      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:41:34.098180      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:41:35.098302      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:41:36.098369      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:41:36.674714 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6365" for this suite. @ 07/26/25 12:41:36.68
• [4.054 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:69
  STEP: Creating a kubernetes client @ 07/26/25 12:41:36.688
  I0726 12:41:36.688584 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename emptydir-wrapper @ 07/26/25 12:41:36.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:41:36.703
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:41:36.705
  E0726 12:41:37.099469      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:41:38.099800      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Cleaning up the secret @ 07/26/25 12:41:38.748
  STEP: Cleaning up the configmap @ 07/26/25 12:41:38.757
  STEP: Cleaning up the pod @ 07/26/25 12:41:38.766
  I0726 12:41:38.786559 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-3051" for this suite. @ 07/26/25 12:41:38.793
• [2.115 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:126
  STEP: Creating a kubernetes client @ 07/26/25 12:41:38.803
  I0726 12:41:38.803535 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename sched-preemption @ 07/26/25 12:41:38.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:41:38.823
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:41:38.826
  I0726 12:41:38.848739 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0726 12:41:39.100480      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:41:40.100549      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:41:41.100802      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:41:42.100862      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:41:43.101413      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:41:44.101482      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:41:45.101838      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:41:46.101903      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:41:47.102044      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:41:48.102189      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:41:49.102885      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:41:50.103001      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:41:51.103234      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:41:52.103421      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:41:53.103916      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:41:54.104050      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:41:55.104682      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:41:56.104777      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:41:57.105739      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:41:58.105802      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:41:59.106805      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:42:00.107259      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:42:01.107499      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:42:02.107744      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:42:03.108352      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:42:04.108442      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:42:05.109024      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:42:06.109194      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:42:07.109751      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:42:08.110691      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:42:09.110777      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:42:10.111837      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:42:11.112868      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:42:12.113060      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:42:13.113749      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:42:14.114024      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:42:15.114762      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:42:16.114873      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:42:17.114976      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:42:18.115155      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:42:19.115741      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:42:20.115927      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:42:21.116038      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:42:22.116227      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:42:23.116833      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:42:24.117016      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:42:25.117563      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:42:26.117682      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:42:27.117794      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:42:28.118829      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:42:29.119576      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:42:30.119692      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:42:31.119807      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:42:32.120832      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:42:33.121558      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:42:34.121763      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:42:35.121878      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:42:36.122062      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:42:37.122855      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:42:38.123002      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:42:38.856534 23 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 07/26/25 12:42:38.862
  STEP: Adding a custom resource @ 07/26/25 12:42:38.862
  I0726 12:42:38.886776 23 preemption.go:170] Created pod: pod0-0-sched-preemption-low-priority
  I0726 12:42:38.900356 23 preemption.go:170] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 07/26/25 12:42:38.9
  I0726 12:42:38.927116 23 preemption.go:170] Created pod: pod1-0-sched-preemption-medium-priority
  I0726 12:42:38.937871 23 preemption.go:170] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 07/26/25 12:42:38.937
  I0726 12:42:38.965348 23 preemption.go:170] Created pod: pod2-0-sched-preemption-medium-priority
  I0726 12:42:38.981853 23 preemption.go:170] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 07/26/25 12:42:38.981
  E0726 12:42:39.123030      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:42:40.123889      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 07/26/25 12:42:41.022
  E0726 12:42:41.124086      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:42:42.124183      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 07/26/25 12:42:43.101
  STEP: Removing a custom resource @ 07/26/25 12:42:43.115
  E0726 12:42:43.124597      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 07/26/25 12:42:43.128
  I0726 12:42:43.145384 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1901" for this suite. @ 07/26/25 12:42:43.15
• [64.357 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1049
  STEP: Creating a kubernetes client @ 07/26/25 12:42:43.16
  I0726 12:42:43.160432 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename statefulset @ 07/26/25 12:42:43.161
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:42:43.175
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:42:43.178
  STEP: Creating service test in namespace statefulset-6871 @ 07/26/25 12:42:43.18
  STEP: Creating statefulset ss in namespace statefulset-6871 @ 07/26/25 12:42:43.196
  I0726 12:42:43.210423 23 wait.go:44] Found 0 stateful pods, waiting for 1
  E0726 12:42:44.124797      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:42:45.124965      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:42:46.125111      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:42:47.125193      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:42:48.125305      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:42:49.125397      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:42:50.125524      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:42:51.125623      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:42:52.125935      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:42:53.126049      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:42:53.210517 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 07/26/25 12:42:53.219
  STEP: Getting /status @ 07/26/25 12:42:53.229
  I0726 12:42:53.234405 23 statefulset.go:1085] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 07/26/25 12:42:53.234
  I0726 12:42:53.245262 23 statefulset.go:1105] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 07/26/25 12:42:53.245
  I0726 12:42:53.246833 23 statefulset.go:1133] Observed &StatefulSet event: ADDED
  I0726 12:42:53.246863 23 statefulset.go:1126] Found Statefulset ss in namespace statefulset-6871 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0726 12:42:53.246874 23 statefulset.go:1137] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 07/26/25 12:42:53.246
  I0726 12:42:53.246923 23 statefulset.go:1141] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0726 12:42:53.256122 23 statefulset.go:1145] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 07/26/25 12:42:53.256
  I0726 12:42:53.257483 23 statefulset.go:1170] Observed &StatefulSet event: ADDED
  I0726 12:42:53.257532 23 statefulset.go:138] Deleting all statefulset in ns statefulset-6871
  I0726 12:42:53.261861 23 rest.go:153] Scaling statefulset ss to 0
  E0726 12:42:54.126186      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:42:55.126250      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:42:56.126426      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:42:57.126519      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:42:58.126616      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:42:59.126816      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:43:00.127026      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:43:01.127237      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:43:02.127307      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:43:03.127457      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:43:03.282530 23 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0726 12:43:03.287484 23 rest.go:91] Deleting statefulset ss
  I0726 12:43:03.308564 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6871" for this suite. @ 07/26/25 12:43:03.315
• [20.164 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1861
  STEP: Creating a kubernetes client @ 07/26/25 12:43:03.325
  I0726 12:43:03.325180 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename kubectl @ 07/26/25 12:43:03.326
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:43:03.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:43:03.342
  STEP: Starting the proxy @ 07/26/25 12:43:03.345
  I0726 12:43:03.346289 23 util.go:541] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-5596 proxy --unix-socket=/tmp/kubectl-proxy-unix2750582532/test'
  STEP: retrieving proxy /api/ output @ 07/26/25 12:43:03.397
  I0726 12:43:03.398181 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5596" for this suite. @ 07/26/25 12:43:03.416
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:153
  STEP: Creating a kubernetes client @ 07/26/25 12:43:03.427
  I0726 12:43:03.427696 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename dns @ 07/26/25 12:43:03.428
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:43:03.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:43:03.444
  STEP: Creating a test headless service @ 07/26/25 12:43:03.449
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8305.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-8305.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8305.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-8305.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8305.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-8305.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8305.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-8305.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8305.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-8305.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8305.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-8305.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 175.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.175_udp@PTR;check="$$(dig +tcp +noall +answer +search 175.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.175_tcp@PTR;sleep 1; done
   @ 07/26/25 12:43:03.481
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8305.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8305.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8305.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8305.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8305.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-8305.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8305.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-8305.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8305.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-8305.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8305.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-8305.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 175.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.175_udp@PTR;check="$$(dig +tcp +noall +answer +search 175.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.175_tcp@PTR;sleep 1; done
   @ 07/26/25 12:43:03.481
  STEP: creating a pod to probe DNS @ 07/26/25 12:43:03.481
  STEP: submitting the pod to kubernetes @ 07/26/25 12:43:03.481
  E0726 12:43:04.128250      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:43:05.128376      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/26/25 12:43:05.511
  STEP: looking for the results for each expected name from probers @ 07/26/25 12:43:05.515
  I0726 12:43:05.521994 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-8305.svc.cluster.local from pod dns-8305/dns-test-dd68e595-1b1a-48bf-9dcc-9f564e36330f: the server could not find the requested resource (get pods dns-test-dd68e595-1b1a-48bf-9dcc-9f564e36330f)
  I0726 12:43:05.528239 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-8305.svc.cluster.local from pod dns-8305/dns-test-dd68e595-1b1a-48bf-9dcc-9f564e36330f: the server could not find the requested resource (get pods dns-test-dd68e595-1b1a-48bf-9dcc-9f564e36330f)
  I0726 12:43:05.533098 23 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-8305.svc.cluster.local from pod dns-8305/dns-test-dd68e595-1b1a-48bf-9dcc-9f564e36330f: the server could not find the requested resource (get pods dns-test-dd68e595-1b1a-48bf-9dcc-9f564e36330f)
  I0726 12:43:05.538429 23 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-8305.svc.cluster.local from pod dns-8305/dns-test-dd68e595-1b1a-48bf-9dcc-9f564e36330f: the server could not find the requested resource (get pods dns-test-dd68e595-1b1a-48bf-9dcc-9f564e36330f)
  I0726 12:43:05.567207 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-8305.svc.cluster.local from pod dns-8305/dns-test-dd68e595-1b1a-48bf-9dcc-9f564e36330f: the server could not find the requested resource (get pods dns-test-dd68e595-1b1a-48bf-9dcc-9f564e36330f)
  I0726 12:43:05.573492 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-8305.svc.cluster.local from pod dns-8305/dns-test-dd68e595-1b1a-48bf-9dcc-9f564e36330f: the server could not find the requested resource (get pods dns-test-dd68e595-1b1a-48bf-9dcc-9f564e36330f)
  I0726 12:43:05.580079 23 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8305.svc.cluster.local from pod dns-8305/dns-test-dd68e595-1b1a-48bf-9dcc-9f564e36330f: the server could not find the requested resource (get pods dns-test-dd68e595-1b1a-48bf-9dcc-9f564e36330f)
  I0726 12:43:05.585569 23 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8305.svc.cluster.local from pod dns-8305/dns-test-dd68e595-1b1a-48bf-9dcc-9f564e36330f: the server could not find the requested resource (get pods dns-test-dd68e595-1b1a-48bf-9dcc-9f564e36330f)
  I0726 12:43:05.608200 23 dns_common.go:506] Lookups using dns-8305/dns-test-dd68e595-1b1a-48bf-9dcc-9f564e36330f failed for: [agnhost_udp@dns-test-service.dns-8305.svc.cluster.local agnhost_tcp@dns-test-service.dns-8305.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-8305.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-8305.svc.cluster.local jessie_udp@dns-test-service.dns-8305.svc.cluster.local jessie_tcp@dns-test-service.dns-8305.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-8305.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-8305.svc.cluster.local]

  I0726 12:43:05.622529 23 dns_common.go:514] Pod client logs for webserver: 
  I0726 12:43:05.631264 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0726 12:43:05.640315 23 dns_common.go:514] Pod client logs for jessie-querier: 
  E0726 12:43:06.129066      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:43:07.129130      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:43:08.129250      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:43:09.129346      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:43:10.129417      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:43:10.605733 23 dns_common.go:546] DNS probes using dns-8305/dns-test-dd68e595-1b1a-48bf-9dcc-9f564e36330f succeeded

  STEP: deleting the pod @ 07/26/25 12:43:10.605
  STEP: deleting the test service @ 07/26/25 12:43:10.633
  STEP: deleting the test headless service @ 07/26/25 12:43:10.666
  I0726 12:43:10.683675 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8305" for this suite. @ 07/26/25 12:43:10.689
• [7.270 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:131
  STEP: Creating a kubernetes client @ 07/26/25 12:43:10.698
  I0726 12:43:10.698037 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename projected @ 07/26/25 12:43:10.698
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:43:10.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:43:10.713
  STEP: Creating the pod @ 07/26/25 12:43:10.716
  E0726 12:43:11.129851      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:43:12.129911      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:43:13.130594      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:43:13.269264 23 pod_client.go:173] Successfully updated pod "labelsupdate1594fca7-e3b6-47b1-9474-56f54faa52e5"
  E0726 12:43:14.130785      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:43:15.131002      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:43:15.291830 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5489" for this suite. @ 07/26/25 12:43:15.299
• [4.611 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 07/26/25 12:43:15.309
  I0726 12:43:15.309525 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename container-probe @ 07/26/25 12:43:15.31
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:43:15.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:43:15.336
  STEP: Creating pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021 @ 07/26/25 12:43:15.345
  E0726 12:43:16.131163      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:43:17.131250      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/26/25 12:43:17.388
  I0726 12:43:17.392558 23 container_probe.go:1748] Initial restart count of pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 is 0
  I0726 12:43:17.397664 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:43:18.131363      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:43:19.131441      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:43:19.402461 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:43:20.131614      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:43:21.131793      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:43:21.407417 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:43:22.132196      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:43:23.132879      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:43:23.413152 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:43:24.133866      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:43:25.134065      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:43:25.418201 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:43:26.134999      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:43:27.135065      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:43:27.424555 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:43:28.135244      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:43:29.135323      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:43:29.430963 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:43:30.135497      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:43:31.135702      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:43:31.437134 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:43:32.135853      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:43:33.136719      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:43:33.443293 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:43:34.136795      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:43:35.136877      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:43:35.449181 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:43:36.137938      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:43:37.138119      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:43:37.455318 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:43:38.139232      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:43:39.139285      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:43:39.460772 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:43:40.139926      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:43:41.140004      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:43:41.467086 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:43:42.140857      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:43:43.140926      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:43:43.472646 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:43:44.141006      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:43:45.141120      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:43:45.478910 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:43:46.141240      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:43:47.141324      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:43:47.484881 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:43:48.141534      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:43:49.141682      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:43:49.491185 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:43:50.141803      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:43:51.141894      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:43:51.496715 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:43:52.142077      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:43:53.142152      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:43:53.502910 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:43:54.142663      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:43:55.142871      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:43:55.508704 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:43:56.142976      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:43:57.143124      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:43:57.514984 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:43:58.143248      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:43:59.143395      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:43:59.523169 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:44:00.143566      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:44:01.143710      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:44:01.530490 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:44:02.143832      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:44:03.144037      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:44:03.536777 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:44:04.145070      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:44:05.145224      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:44:05.543176 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:44:06.145497      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:44:07.145681      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:44:07.550295 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:44:08.145959      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:44:09.146094      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:44:09.557996 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:44:10.146607      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:44:11.146767      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:44:11.564609 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:44:12.146905      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:44:13.146973      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:44:13.571674 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:44:14.147283      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:44:15.147482      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:44:15.579644 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:44:16.148487      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:44:17.148544      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:44:17.585750 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:44:18.149163      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:44:19.149229      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:44:19.591227 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:44:20.149788      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:44:21.149823      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:44:21.597284 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:44:22.150861      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:44:23.151879      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:44:23.602971 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:44:24.152201      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:44:25.152319      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:44:25.609826 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:44:26.152446      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:44:27.152528      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:44:27.617298 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:44:28.152695      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:44:29.152771      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:44:29.624696 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:44:30.153181      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:44:31.153489      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:44:31.630615 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:44:32.153853      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:44:33.153943      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:44:33.638047 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:44:34.154243      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:44:35.154418      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:44:35.644001 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:44:36.154532      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:44:37.154750      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:44:37.651252 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:44:38.154821      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:44:39.155001      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:44:39.658084 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:44:40.155695      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:44:41.155873      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:44:41.664520 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:44:42.155987      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:44:43.156158      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:44:43.670278 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:44:44.156909      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:44:45.157093      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:44:45.677078 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:44:46.157599      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:44:47.157730      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:44:47.682888 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:44:48.158605      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:44:49.158772      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:44:49.687917 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:44:50.159534      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:44:51.159843      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:44:51.694275 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:44:52.160821      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:44:53.160853      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:44:53.700193 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:44:54.161752      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:44:55.161943      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:44:55.706807 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:44:56.162194      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:44:57.162296      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:44:57.713337 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:44:58.162940      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:44:59.163202      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:44:59.719561 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:45:00.164203      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:45:01.164362      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:45:01.724505 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:45:02.165125      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:45:03.165191      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:45:03.730729 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:45:04.165249      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:45:05.165415      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:45:05.737104 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:45:06.165593      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:45:07.165801      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:45:07.742013 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:45:08.166535      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:45:09.166693      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:45:09.746571 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:45:10.166998      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:45:11.167238      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:45:11.753054 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:45:12.167346      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:45:13.167438      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:45:13.759467 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:45:14.167833      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:45:15.168024      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:45:15.765548 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:45:16.168935      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:45:17.169025      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:45:17.770714 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:45:18.169820      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:45:19.169915      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:45:19.777834 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:45:20.170004      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:45:21.170830      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:45:21.784142 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:45:22.171678      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:45:23.172841      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:45:23.790271 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:45:24.173837      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:45:25.174032      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:45:25.795729 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:45:26.174827      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:45:27.175008      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:45:27.801723 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:45:28.175157      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:45:29.175370      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:45:29.807718 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:45:30.176194      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:45:31.176372      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:45:31.812767 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:45:32.177248      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:45:33.177449      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:45:33.819538 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:45:34.178104      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:45:35.178314      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:45:35.824674 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:45:36.179111      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:45:37.179913      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:45:37.830551 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:45:38.180834      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:45:39.180936      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:45:39.836221 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:45:40.181759      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:45:41.181944      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:45:41.843366 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:45:42.182830      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:45:43.183738      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:45:43.849466 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:45:44.183915      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:45:45.184105      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:45:45.856068 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:45:46.184304      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:45:47.184490      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:45:47.862103 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:45:48.184519      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:45:49.184827      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:45:49.867566 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:45:50.184956      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:45:51.185146      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:45:51.873775 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:45:52.186175      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:45:53.186289      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:45:53.879704 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:45:54.186361      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:45:55.186543      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:45:55.886101 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:45:56.187540      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:45:57.187620      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:45:57.891228 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:45:58.188674      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:45:59.188762      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:45:59.896997 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:46:00.189356      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:46:01.189409      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:46:01.901956 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:46:02.189580      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:46:03.190581      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:46:03.907690 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:46:04.190950      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:46:05.191020      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:46:05.914059 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:46:06.191367      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:46:07.191442      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:46:07.918523 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:46:08.191861      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:46:09.192061      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:46:09.925019 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:46:10.192270      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:46:11.192365      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:46:11.930743 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:46:12.192859      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:46:13.192976      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:46:13.937801 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:46:14.193083      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:46:15.193272      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:46:15.943590 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:46:16.193915      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:46:17.194013      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:46:17.948948 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:46:18.194232      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:46:19.194328      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:46:19.955944 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:46:20.195394      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:46:21.195682      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:46:21.961335 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:46:22.195742      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:46:23.196776      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:46:23.967988 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:46:24.197323      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:46:25.197518      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:46:25.974147 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:46:26.198491      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:46:27.198888      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:46:27.981404 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:46:28.199730      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:46:29.199791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:46:29.987378 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:46:30.200708      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:46:31.200985      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:46:31.992813 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:46:32.200934      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:46:33.201033      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:46:34.000212 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:46:34.201467      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:46:35.201547      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:46:36.006289 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:46:36.201590      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:46:37.201762      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:46:38.012410 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:46:38.202724      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:46:39.202814      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:46:40.018677 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:46:40.202963      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:46:41.203146      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:46:42.024253 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:46:42.203522      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:46:43.203731      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:46:44.029315 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:46:44.204759      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:46:45.205039      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:46:46.034609 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:46:46.205822      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:46:47.206005      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:46:48.039529 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:46:48.206847      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:46:49.206951      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:46:50.045724 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:46:50.207992      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:46:51.208171      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:46:52.050958 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:46:52.209107      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:46:53.209834      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:46:54.057833 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:46:54.210056      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:46:55.210827      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:46:56.063343 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:46:56.211628      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:46:57.211766      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:46:58.070831 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:46:58.212009      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:46:59.212186      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:47:00.078093 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:47:00.212261      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:47:01.212438      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:47:02.083908 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:47:02.213086      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:47:03.213181      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:47:04.089222 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:47:04.213340      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:47:05.213531      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:47:06.094910 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:47:06.214328      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:47:07.214485      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:47:08.101108 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:47:08.215331      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:47:09.215841      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:47:10.108139 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:47:10.216346      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:47:11.216905      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:47:12.114156 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:47:12.217360      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:47:13.217577      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:47:14.119738 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:47:14.217938      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:47:15.218113      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:47:16.126527 23 container_probe.go:1758] Get pod busybox-ad46f999-30be-4c98-8763-969b7392efb1 in namespace container-probe-1021
  E0726 12:47:16.218723      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:47:17.218777      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 07/26/25 12:47:18.127
  I0726 12:47:18.148504 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1021" for this suite. @ 07/26/25 12:47:18.157
• [242.857 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:706
  STEP: Creating a kubernetes client @ 07/26/25 12:47:18.166
  I0726 12:47:18.166589 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename sched-pred @ 07/26/25 12:47:18.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:47:18.18
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:47:18.182
  I0726 12:47:18.185524 23 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  E0726 12:47:18.219199      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:47:18.262498 23 util.go:390] Waiting for terminating namespaces to be deleted...
  I0726 12:47:18.267945 23 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-16-254 before test
  I0726 12:47:18.274205 23 predicates.go:958] nginx-ingress-controller-kubernetes-worker-554t2 from ingress-nginx-kubernetes-worker started at 2025-07-26 12:33:38 +0000 UTC (1 container statuses recorded)
  I0726 12:47:18.274225 23 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0726 12:47:18.274232 23 predicates.go:958] calico-node-blf7s from kube-system started at 2025-07-26 12:20:34 +0000 UTC (1 container statuses recorded)
  I0726 12:47:18.274237 23 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0726 12:47:18.274241 23 predicates.go:958] sonobuoy from sonobuoy started at 2025-07-26 12:22:08 +0000 UTC (1 container statuses recorded)
  I0726 12:47:18.274246 23 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0726 12:47:18.274252 23 predicates.go:958] sonobuoy-systemd-logs-daemon-set-b24d58e9d81c4ec2-9zvnc from sonobuoy started at 2025-07-26 12:22:10 +0000 UTC (2 container statuses recorded)
  I0726 12:47:18.274256 23 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0726 12:47:18.274260 23 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0726 12:47:18.274265 23 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-3-117 before test
  I0726 12:47:18.280947 23 predicates.go:958] nginx-ingress-controller-kubernetes-worker-nds9b from ingress-nginx-kubernetes-worker started at 2025-07-26 12:09:43 +0000 UTC (1 container statuses recorded)
  I0726 12:47:18.280961 23 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0726 12:47:18.280968 23 predicates.go:958] calico-node-9cfgl from kube-system started at 2025-07-26 12:20:20 +0000 UTC (1 container statuses recorded)
  I0726 12:47:18.280973 23 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0726 12:47:18.280978 23 predicates.go:958] coredns-5d946bb58-9c75c from kube-system started at 2025-07-26 12:09:42 +0000 UTC (1 container statuses recorded)
  I0726 12:47:18.280983 23 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0726 12:47:18.280988 23 predicates.go:958] kube-state-metrics-b84f44f45-hmmkc from kube-system started at 2025-07-26 12:09:42 +0000 UTC (1 container statuses recorded)
  I0726 12:47:18.280992 23 predicates.go:960] 	Container kube-state-metrics ready: true, restart count 0
  I0726 12:47:18.280998 23 predicates.go:958] metrics-server-v0.7.2-7d878b47f8-v6f7l from kube-system started at 2025-07-26 12:09:42 +0000 UTC (2 container statuses recorded)
  I0726 12:47:18.281003 23 predicates.go:960] 	Container metrics-server ready: true, restart count 0
  I0726 12:47:18.281008 23 predicates.go:960] 	Container metrics-server-nanny ready: true, restart count 0
  I0726 12:47:18.281017 23 predicates.go:958] dashboard-metrics-scraper-5cf87bc988-nlxsl from kubernetes-dashboard started at 2025-07-26 12:09:42 +0000 UTC (1 container statuses recorded)
  I0726 12:47:18.281021 23 predicates.go:960] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I0726 12:47:18.281026 23 predicates.go:958] kubernetes-dashboard-6858576c98-5drtf from kubernetes-dashboard started at 2025-07-26 12:09:42 +0000 UTC (1 container statuses recorded)
  I0726 12:47:18.281031 23 predicates.go:960] 	Container kubernetes-dashboard ready: true, restart count 2
  I0726 12:47:18.281035 23 predicates.go:958] sonobuoy-systemd-logs-daemon-set-b24d58e9d81c4ec2-l9c94 from sonobuoy started at 2025-07-26 12:22:10 +0000 UTC (2 container statuses recorded)
  I0726 12:47:18.281144 23 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0726 12:47:18.281155 23 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0726 12:47:18.281161 23 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-72-233 before test
  I0726 12:47:18.285668 23 predicates.go:958] nginx-ingress-controller-kubernetes-worker-ktvqz from ingress-nginx-kubernetes-worker started at 2025-07-26 12:16:51 +0000 UTC (1 container statuses recorded)
  I0726 12:47:18.285681 23 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0726 12:47:18.285687 23 predicates.go:958] calico-node-5sb6s from kube-system started at 2025-07-26 12:19:38 +0000 UTC (1 container statuses recorded)
  I0726 12:47:18.285692 23 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0726 12:47:18.285697 23 predicates.go:958] sonobuoy-e2e-job-99de9743d9bd4869 from sonobuoy started at 2025-07-26 12:22:10 +0000 UTC (2 container statuses recorded)
  I0726 12:47:18.285701 23 predicates.go:960] 	Container e2e ready: true, restart count 0
  I0726 12:47:18.285706 23 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0726 12:47:18.285711 23 predicates.go:958] sonobuoy-systemd-logs-daemon-set-b24d58e9d81c4ec2-mn48h from sonobuoy started at 2025-07-26 12:22:10 +0000 UTC (2 container statuses recorded)
  I0726 12:47:18.285715 23 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0726 12:47:18.285720 23 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 07/26/25 12:47:18.285
  E0726 12:47:19.219359      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:47:20.219439      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 07/26/25 12:47:20.319
  STEP: Trying to apply a random label on the found node. @ 07/26/25 12:47:20.338
  STEP: verifying the node has the label kubernetes.io/e2e-5be75f89-1796-4fc0-9edf-9d7524caf3a1 95 @ 07/26/25 12:47:20.347
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 07/26/25 12:47:20.351
  E0726 12:47:21.219791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:47:22.219854      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.16.254 on the node which pod4 resides and expect not scheduled @ 07/26/25 12:47:22.374
  E0726 12:47:23.220130      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:47:24.220874      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:47:25.220939      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:47:26.221860      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:47:27.222096      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:47:28.222204      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:47:29.222397      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:47:30.222582      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:47:31.222845      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:47:32.222922      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:47:33.223058      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:47:34.223821      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:47:35.224779      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:47:36.225848      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:47:37.226847      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:47:38.227915      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:47:39.228304      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:47:40.228515      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:47:41.228791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:47:42.228904      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:47:43.228991      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:47:44.229162      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:47:45.229281      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:47:46.229342      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:47:47.229855      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:47:48.230844      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:47:49.231832      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:47:50.232043      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:47:51.232161      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:47:52.232233      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:47:53.232361      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:47:54.232500      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:47:55.232700      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:47:56.232830      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:47:57.233040      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:47:58.233130      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:47:59.233835      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:00.234862      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:01.235743      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:02.235816      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:03.235919      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:04.235992      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:05.236652      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:06.236782      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:07.237702      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:08.237781      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:09.238603      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:10.238783      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:11.238864      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:12.238981      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:13.239192      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:14.239854      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:15.239955      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:16.240029      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:17.240884      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:18.240971      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:19.241926      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:20.242035      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:21.242868      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:22.242952      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:23.243213      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:24.243284      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:25.244017      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:26.244151      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:27.244246      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:28.244360      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:29.244468      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:30.244557      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:31.244811      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:32.244777      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:33.244766      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:34.245845      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:35.246469      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:36.246825      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:37.247838      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:38.248836      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:39.249190      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:40.249820      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:41.250753      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:42.250933      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:43.251459      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:44.251851      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:45.252760      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:46.252943      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:47.253831      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:48.254838      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:49.256252      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:50.256710      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:51.256768      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:52.256949      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:53.257830      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:54.258006      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:55.258347      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:56.259361      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:57.260431      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:58.260527      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:48:59.261405      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:00.261472      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:01.261771      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:02.262820      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:03.262923      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:04.263097      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:05.263886      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:06.264059      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:07.264212      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:08.264327      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:09.264762      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:10.265819      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:11.266672      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:12.266842      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:13.267840      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:14.268814      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:15.269152      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:16.269322      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:17.269833      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:18.270840      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:19.271830      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:20.272837      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:21.273903      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:22.274091      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:23.274183      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:24.274356      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:25.274500      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:26.274720      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:27.274949      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:28.275059      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:29.275859      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:30.276018      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:31.276304      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:32.276485      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:33.276582      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:34.276798      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:35.276995      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:36.277184      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:37.277818      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:38.278763      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:39.279031      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:40.279842      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:41.280807      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:42.280990      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:43.281826      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:44.282791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:45.283437      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:46.283667      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:47.283772      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:48.284832      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:49.284933      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:50.285862      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:51.286481      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:52.286750      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:53.286831      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:54.287010      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:55.288071      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:56.288931      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:57.289496      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:58.289659      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:49:59.289969      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:00.290059      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:01.290389      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:02.291164      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:03.291895      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:04.292136      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:05.292314      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:06.292964      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:07.293204      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:08.293350      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:09.294264      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:10.294378      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:11.294770      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:12.295826      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:13.296066      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:14.296341      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:15.296967      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:16.297161      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:17.298054      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:18.299140      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:19.299223      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:20.299699      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:21.300447      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:22.300824      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:23.301124      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:24.301822      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:25.302317      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:26.302505      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:27.303349      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:28.303861      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:29.304825      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:30.304996      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:31.305319      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:32.305401      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:33.306204      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:34.306825      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:35.306939      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:36.307131      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:37.307214      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:38.307504      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:39.307562      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:40.307771      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:41.308618      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:42.308789      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:43.308860      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:44.308950      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:45.309836      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:46.309923      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:47.310541      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:48.310649      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:49.311206      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:50.311845      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:51.311975      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:52.312077      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:53.312260      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:54.312830      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:55.313751      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:56.313936      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:57.314449      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:58.314612      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:50:59.314829      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:00.315015      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:01.315402      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:02.315592      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:03.316207      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:04.316391      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:05.317408      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:06.317589      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:07.317627      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:08.317802      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:09.318834      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:10.318909      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:11.319837      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:12.320829      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:13.321890      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:14.322069      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:15.322768      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:16.322873      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:17.323620      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:18.323730      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:19.323973      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:20.324203      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:21.324317      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:22.324556      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:23.324703      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:24.324885      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:25.325956      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:26.326172      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:27.326728      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:28.326848      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:29.327629      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:30.327828      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:31.327966      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:32.328820      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:33.329803      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:34.330830      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:35.331115      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:36.331246      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:37.332021      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:38.332203      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:39.332507      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:40.332621      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:41.332872      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:42.333052      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:43.333938      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:44.334841      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:45.335300      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:46.335480      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:47.335848      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:48.336047      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:49.336687      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:50.336825      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:51.337754      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:52.337942      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:53.338096      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:54.338534      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:55.338982      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:56.339840      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:57.340815      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:58.341833      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:51:59.342716      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:52:00.342895      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:52:01.342922      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:52:02.343112      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:52:03.343754      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:52:04.343892      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:52:05.343958      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:52:06.344184      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:52:07.344312      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:52:08.344464      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:52:09.345044      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:52:10.345169      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:52:11.346124      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:52:12.346321      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:52:13.347194      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:52:14.347812      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:52:15.348097      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:52:16.349050      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:52:17.349754      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:52:18.350831      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:52:19.351439      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:52:20.351852      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:52:21.352284      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:52:22.352375      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-5be75f89-1796-4fc0-9edf-9d7524caf3a1 off the node ip-172-31-16-254 @ 07/26/25 12:52:22.384
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-5be75f89-1796-4fc0-9edf-9d7524caf3a1 @ 07/26/25 12:52:22.398
  I0726 12:52:22.404130 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-5017" for this suite. @ 07/26/25 12:52:22.411
• [304.256 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 07/26/25 12:52:22.422
  I0726 12:52:22.422800 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename secrets @ 07/26/25 12:52:22.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:52:22.437
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:52:22.44
  STEP: creating secret secrets-1596/secret-test-7f6ff024-f592-4126-8873-ba75f271c6de @ 07/26/25 12:52:22.442
  STEP: Creating a pod to test consume secrets @ 07/26/25 12:52:22.447
  E0726 12:52:23.353479      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:52:24.353566      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 12:52:24.472
  I0726 12:52:24.477441 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod pod-configmaps-bfcc873d-d381-4771-b21e-a633c649c9b4 container env-test: <nil>
  STEP: delete the pod @ 07/26/25 12:52:24.497
  I0726 12:52:24.517350 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1596" for this suite. @ 07/26/25 12:52:24.523
• [2.110 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 07/26/25 12:52:24.532
  I0726 12:52:24.532806 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename crd-webhook @ 07/26/25 12:52:24.533
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:52:24.548
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:52:24.551
  STEP: Setting up server cert @ 07/26/25 12:52:24.553
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 07/26/25 12:52:24.84
  STEP: Deploying the custom resource conversion webhook pod @ 07/26/25 12:52:24.848
  STEP: Wait for the deployment to be ready @ 07/26/25 12:52:24.862
  I0726 12:52:24.872516 23 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0726 12:52:25.353797      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:52:26.353996      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/26/25 12:52:26.891
  STEP: Verifying the service has paired with the endpoint @ 07/26/25 12:52:26.912
  E0726 12:52:27.355032      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:52:27.912751 23 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0726 12:52:27.919082 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  E0726 12:52:28.355488      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:52:29.355698      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:52:30.355817      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 07/26/25 12:52:30.473
  STEP: Create a v2 custom resource @ 07/26/25 12:52:30.494
  STEP: List CRs in v1 @ 07/26/25 12:52:30.518
  STEP: List CRs in v2 @ 07/26/25 12:52:30.523
  I0726 12:52:31.105791 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-3875" for this suite. @ 07/26/25 12:52:31.114
• [6.592 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 07/26/25 12:52:31.124
  I0726 12:52:31.124589 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename webhook @ 07/26/25 12:52:31.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:52:31.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:52:31.14
  STEP: Setting up server cert @ 07/26/25 12:52:31.161
  E0726 12:52:31.356222      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/26/25 12:52:31.367
  STEP: Deploying the webhook pod @ 07/26/25 12:52:31.374
  STEP: Wait for the deployment to be ready @ 07/26/25 12:52:31.388
  I0726 12:52:31.404900 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0726 12:52:32.356368      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:52:33.356496      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/26/25 12:52:33.422
  STEP: Verifying the service has paired with the endpoint @ 07/26/25 12:52:33.442
  E0726 12:52:34.356623      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:52:34.442625 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0726 12:52:34.448557 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 07/26/25 12:52:34.958
  STEP: Creating a custom resource that should be denied by the webhook @ 07/26/25 12:52:34.974
  E0726 12:52:35.356879      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:52:36.356972      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 07/26/25 12:52:36.99
  STEP: Updating the custom resource with disallowed data should be denied @ 07/26/25 12:52:36.998
  STEP: Deleting the custom resource should be denied @ 07/26/25 12:52:37.01
  STEP: Remove the offending key and value from the custom resource data @ 07/26/25 12:52:37.02
  STEP: Deleting the updated custom resource should be successful @ 07/26/25 12:52:37.032
  E0726 12:52:37.357853      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:52:37.634935 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2743" for this suite. @ 07/26/25 12:52:37.642
  STEP: Destroying namespace "webhook-markers-8294" for this suite. @ 07/26/25 12:52:37.652
• [6.539 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:492
  STEP: Creating a kubernetes client @ 07/26/25 12:52:37.663
  I0726 12:52:37.663878 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename webhook @ 07/26/25 12:52:37.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:52:37.676
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:52:37.679
  STEP: Setting up server cert @ 07/26/25 12:52:37.7
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/26/25 12:52:37.85
  STEP: Deploying the webhook pod @ 07/26/25 12:52:37.857
  STEP: Wait for the deployment to be ready @ 07/26/25 12:52:37.872
  I0726 12:52:37.885181 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0726 12:52:38.358796      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:52:39.359255      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/26/25 12:52:39.901
  STEP: Verifying the service has paired with the endpoint @ 07/26/25 12:52:39.923
  E0726 12:52:40.359861      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:52:40.923362 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 07/26/25 12:52:40.929
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 07/26/25 12:52:40.95
  STEP: Creating a configMap that should not be mutated @ 07/26/25 12:52:40.958
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 07/26/25 12:52:40.973
  STEP: Creating a configMap that should be mutated @ 07/26/25 12:52:40.982
  I0726 12:52:41.074537 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-31" for this suite. @ 07/26/25 12:52:41.08
  STEP: Destroying namespace "webhook-markers-4529" for this suite. @ 07/26/25 12:52:41.089
• [3.437 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 07/26/25 12:52:41.1
  I0726 12:52:41.100696 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename discovery @ 07/26/25 12:52:41.101
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:52:41.112
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:52:41.114
  STEP: Setting up server cert @ 07/26/25 12:52:41.117
  I0726 12:52:41.345535 23 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0726 12:52:41.346492 23 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0726 12:52:41.346513 23 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0726 12:52:41.346519 23 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0726 12:52:41.346526 23 discovery.go:139] Checking APIGroup: apps
  I0726 12:52:41.347403 23 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0726 12:52:41.347415 23 discovery.go:148] Versions found [{apps/v1 v1}]
  I0726 12:52:41.347420 23 discovery.go:154] apps/v1 matches apps/v1
  I0726 12:52:41.347428 23 discovery.go:139] Checking APIGroup: events.k8s.io
  I0726 12:52:41.348301 23 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0726 12:52:41.348310 23 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0726 12:52:41.348316 23 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0726 12:52:41.348322 23 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0726 12:52:41.349237 23 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0726 12:52:41.349249 23 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0726 12:52:41.349255 23 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0726 12:52:41.349261 23 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0726 12:52:41.350353 23 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0726 12:52:41.350371 23 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0726 12:52:41.350377 23 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0726 12:52:41.350382 23 discovery.go:139] Checking APIGroup: autoscaling
  I0726 12:52:41.351622 23 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0726 12:52:41.351659 23 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0726 12:52:41.351665 23 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0726 12:52:41.351671 23 discovery.go:139] Checking APIGroup: batch
  I0726 12:52:41.352608 23 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0726 12:52:41.352620 23 discovery.go:148] Versions found [{batch/v1 v1}]
  I0726 12:52:41.352625 23 discovery.go:154] batch/v1 matches batch/v1
  I0726 12:52:41.352647 23 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0726 12:52:41.353522 23 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0726 12:52:41.353530 23 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0726 12:52:41.353535 23 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0726 12:52:41.353541 23 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0726 12:52:41.354420 23 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0726 12:52:41.354429 23 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0726 12:52:41.354434 23 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0726 12:52:41.354440 23 discovery.go:139] Checking APIGroup: policy
  I0726 12:52:41.355307 23 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0726 12:52:41.355316 23 discovery.go:148] Versions found [{policy/v1 v1}]
  I0726 12:52:41.355321 23 discovery.go:154] policy/v1 matches policy/v1
  I0726 12:52:41.355327 23 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0726 12:52:41.356245 23 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0726 12:52:41.356253 23 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0726 12:52:41.356259 23 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0726 12:52:41.356275 23 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0726 12:52:41.357135 23 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0726 12:52:41.357145 23 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0726 12:52:41.357151 23 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0726 12:52:41.357156 23 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0726 12:52:41.358062 23 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0726 12:52:41.358071 23 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0726 12:52:41.358076 23 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0726 12:52:41.358082 23 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0726 12:52:41.358967 23 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0726 12:52:41.358977 23 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0726 12:52:41.358983 23 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0726 12:52:41.358989 23 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0726 12:52:41.359863 23 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0726 12:52:41.359878 23 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0726 12:52:41.359883 23 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0726 12:52:41.359889 23 discovery.go:139] Checking APIGroup: coordination.k8s.io
  E0726 12:52:41.359907      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:52:41.360715 23 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0726 12:52:41.360724 23 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0726 12:52:41.360729 23 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0726 12:52:41.360734 23 discovery.go:139] Checking APIGroup: node.k8s.io
  I0726 12:52:41.361601 23 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0726 12:52:41.361608 23 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0726 12:52:41.361613 23 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0726 12:52:41.361619 23 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0726 12:52:41.362509 23 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0726 12:52:41.362518 23 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0726 12:52:41.362523 23 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0726 12:52:41.362533 23 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0726 12:52:41.363424 23 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0726 12:52:41.363435 23 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1}]
  I0726 12:52:41.363442 23 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0726 12:52:41.363448 23 discovery.go:139] Checking APIGroup: metrics.k8s.io
  I0726 12:52:41.364326 23 discovery.go:147] PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  I0726 12:52:41.364337 23 discovery.go:148] Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  I0726 12:52:41.364343 23 discovery.go:154] metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  I0726 12:52:41.364494 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-8518" for this suite. @ 07/26/25 12:52:41.371
• [0.281 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:814
  STEP: Creating a kubernetes client @ 07/26/25 12:52:41.381
  I0726 12:52:41.381357 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename services @ 07/26/25 12:52:41.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:52:41.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:52:41.398
  STEP: creating service multi-endpoint-test in namespace services-7381 @ 07/26/25 12:52:41.4
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7381 to expose endpoints map[] @ 07/26/25 12:52:41.422
  I0726 12:52:41.427944      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0726 12:52:41.427973 23 service.go:4613] Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  E0726 12:52:42.360880      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:52:42.433332      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0726 12:52:42.439849 23 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-7381 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-7381 @ 07/26/25 12:52:42.44
  E0726 12:52:43.360961      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:52:44.361134      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7381 to expose endpoints map[pod1:[100]] @ 07/26/25 12:52:44.472
  I0726 12:52:44.481616      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0726 12:52:44.488133 23 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-7381 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-7381 @ 07/26/25 12:52:44.488
  E0726 12:52:45.361232      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:52:46.361384      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7381 to expose endpoints map[pod1:[100] pod2:[101]] @ 07/26/25 12:52:46.511
  I0726 12:52:46.524504      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0726 12:52:46.532233 23 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-7381 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 07/26/25 12:52:46.532
  I0726 12:52:46.532283 23 resource.go:361] Creating new exec pod
  E0726 12:52:47.361809      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:52:48.362873      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:52:48.557111 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-7381 exec execpod4k24t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I0726 12:52:48.648455 23 builder.go:146] stderr: "+ + ncecho -v hostName -t\n -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test (10.152.183.30) 80 port [tcp/http] succeeded!\n"
  I0726 12:52:48.648502 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0726 12:52:48.648571 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-7381 exec execpod4k24t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.30 80'
  I0726 12:52:48.729327 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.30 80\nConnection to 10.152.183.30 80 port [tcp/http] succeeded!\n"
  I0726 12:52:48.729367 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0726 12:52:48.729443 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-7381 exec execpod4k24t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0726 12:52:48.813858 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test (10.152.183.30) 81 port [tcp/*] succeeded!\n"
  I0726 12:52:48.813897 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0726 12:52:48.813969 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-7381 exec execpod4k24t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.30 81'
  I0726 12:52:48.891518 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.30 81\nConnection to 10.152.183.30 81 port [tcp/*] succeeded!\n"
  I0726 12:52:48.891558 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-7381 @ 07/26/25 12:52:48.891
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7381 to expose endpoints map[pod2:[101]] @ 07/26/25 12:52:48.914
  I0726 12:52:48.923735      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0726 12:52:48.929432 23 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-7381 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-7381 @ 07/26/25 12:52:48.929
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7381 to expose endpoints map[] @ 07/26/25 12:52:48.944
  I0726 12:52:48.951372      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0726 12:52:48.956914 23 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-7381 exposes endpoints map[]
  I0726 12:52:48.991956 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7381" for this suite. @ 07/26/25 12:52:48.999
• [7.626 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3404
  STEP: Creating a kubernetes client @ 07/26/25 12:52:49.007
  I0726 12:52:49.007828 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename services @ 07/26/25 12:52:49.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:52:49.023
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:52:49.026
  STEP: creating a Service @ 07/26/25 12:52:49.033
  STEP: watching for the Service to be added @ 07/26/25 12:52:49.069
  I0726 12:52:49.071442 23 service.go:3456] Found Service test-service-dks7g in namespace services-617 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 30248}]
  I0726 12:52:49.071471 23 service.go:3463] Service test-service-dks7g created
  STEP: Getting /status @ 07/26/25 12:52:49.071
  I0726 12:52:49.084760 23 service.go:3474] Service test-service-dks7g has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 07/26/25 12:52:49.084
  STEP: watching for the Service to be patched @ 07/26/25 12:52:49.091
  I0726 12:52:49.092457 23 service.go:3497] observed Service test-service-dks7g in namespace services-617 with annotations: map[] & LoadBalancer: {[]}
  I0726 12:52:49.092488 23 service.go:3500] Found Service test-service-dks7g in namespace services-617 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc001130c50 []}]}
  I0726 12:52:49.092498 23 service.go:3507] Service test-service-dks7g has service status patched
  STEP: updating the ServiceStatus @ 07/26/25 12:52:49.092
  I0726 12:52:49.108858 23 service.go:3527] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 07/26/25 12:52:49.109
  I0726 12:52:49.110511 23 service.go:3538] Observed Service test-service-dks7g in namespace services-617 with annotations: map[] & Conditions: []
  I0726 12:52:49.110532 23 service.go:3549] Observed Service test-service-dks7g in namespace services-617 with annotations: map[patchedstatus:true] & Conditions: []
  I0726 12:52:49.110549 23 service.go:3545] Found Service test-service-dks7g in namespace services-617 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0726 12:52:49.110558 23 service.go:3556] Service test-service-dks7g has service status updated
  STEP: patching the service @ 07/26/25 12:52:49.11
  STEP: watching for the Service to be patched @ 07/26/25 12:52:49.119
  I0726 12:52:49.120732 23 service.go:3579] observed Service test-service-dks7g in namespace services-617 with labels: map[test-service-static:true]
  I0726 12:52:49.120808 23 service.go:3579] observed Service test-service-dks7g in namespace services-617 with labels: map[test-service-static:true]
  I0726 12:52:49.120821 23 service.go:3579] observed Service test-service-dks7g in namespace services-617 with labels: map[test-service-static:true]
  I0726 12:52:49.120834 23 service.go:3582] Found Service test-service-dks7g in namespace services-617 with labels: map[test-service:patched test-service-static:true]
  I0726 12:52:49.120843 23 service.go:3589] Service test-service-dks7g patched
  STEP: deleting the service @ 07/26/25 12:52:49.12
  STEP: watching for the Service to be deleted @ 07/26/25 12:52:49.158
  I0726 12:52:49.159784 23 service.go:3613] Observed event: ADDED
  I0726 12:52:49.159803 23 service.go:3613] Observed event: MODIFIED
  I0726 12:52:49.159812 23 service.go:3613] Observed event: MODIFIED
  I0726 12:52:49.159878 23 service.go:3613] Observed event: MODIFIED
  I0726 12:52:49.159916 23 service.go:3609] Found Service test-service-dks7g in namespace services-617 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0726 12:52:49.159926 23 service.go:3618] Service test-service-dks7g deleted
  I0726 12:52:49.160037 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-617" for this suite. @ 07/26/25 12:52:49.166
• [0.169 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 07/26/25 12:52:49.177
  I0726 12:52:49.177485 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename webhook @ 07/26/25 12:52:49.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:52:49.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:52:49.192
  STEP: Setting up server cert @ 07/26/25 12:52:49.213
  E0726 12:52:49.363279      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/26/25 12:52:49.395
  STEP: Deploying the webhook pod @ 07/26/25 12:52:49.403
  STEP: Wait for the deployment to be ready @ 07/26/25 12:52:49.417
  I0726 12:52:49.456130 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0726 12:52:50.363996      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:52:51.364879      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/26/25 12:52:51.473
  STEP: Verifying the service has paired with the endpoint @ 07/26/25 12:52:51.494
  E0726 12:52:52.365104      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:52:52.495223 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0726 12:52:52.500959 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-1399-crds.webhook.example.com via the AdmissionRegistration API @ 07/26/25 12:52:53.011
  STEP: Creating a custom resource while v1 is storage version @ 07/26/25 12:52:53.027
  E0726 12:52:53.365946      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:52:54.366106      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 07/26/25 12:52:55.057
  STEP: Patching the custom resource while v2 is storage version @ 07/26/25 12:52:55.091
  E0726 12:52:55.367116      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:52:55.731998 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2631" for this suite. @ 07/26/25 12:52:55.738
  STEP: Destroying namespace "webhook-markers-8274" for this suite. @ 07/26/25 12:52:55.748
• [6.580 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 07/26/25 12:52:55.757
  I0726 12:52:55.757889 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename cronjob @ 07/26/25 12:52:55.758
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:52:55.773
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:52:55.776
  STEP: Creating a ForbidConcurrent cronjob @ 07/26/25 12:52:55.779
  STEP: Ensuring a job is scheduled @ 07/26/25 12:52:55.785
  E0726 12:52:56.367393      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:52:57.367611      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:52:58.367799      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:52:59.367868      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:53:00.368259      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:53:01.368858      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 07/26/25 12:53:01.792
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 07/26/25 12:53:01.796
  STEP: Ensuring no more jobs are scheduled @ 07/26/25 12:53:01.801
  STEP: Removing cronjob @ 07/26/25 12:53:01.806
  I0726 12:53:01.816993 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-616" for this suite. @ 07/26/25 12:53:01.824
• [6.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:245
  STEP: Creating a kubernetes client @ 07/26/25 12:53:01.837
  I0726 12:53:01.837023 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename downward-api @ 07/26/25 12:53:01.837
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:53:01.852
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:53:01.854
  STEP: Creating a pod to test downward api env vars @ 07/26/25 12:53:01.857
  E0726 12:53:02.368960      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:53:03.369049      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:53:04.369102      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:53:05.369199      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 12:53:05.888
  I0726 12:53:05.893716 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod downward-api-3df85faf-7258-4c12-9965-88f00fc4a5b3 container dapi-container: <nil>
  STEP: delete the pod @ 07/26/25 12:53:05.904
  I0726 12:53:05.924570 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3574" for this suite. @ 07/26/25 12:53:05.931
• [4.104 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 07/26/25 12:53:05.941
  I0726 12:53:05.941224 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename pods @ 07/26/25 12:53:05.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:53:05.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:53:05.958
  STEP: creating the pod @ 07/26/25 12:53:05.96
  STEP: submitting the pod to kubernetes @ 07/26/25 12:53:05.96
  I0726 12:53:05.973448      23 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  E0726 12:53:06.369296      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:53:07.369855      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 07/26/25 12:53:07.988
  STEP: updating the pod @ 07/26/25 12:53:07.993
  E0726 12:53:08.370841      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:53:08.506804 23 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-a12be92e-c2b1-43d2-b330-7e21040f58f9"
  E0726 12:53:09.370944      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:53:10.371017      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:53:11.371119      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:53:12.371201      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:53:12.524131 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6886" for this suite. @ 07/26/25 12:53:12.531
• [6.599 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 07/26/25 12:53:12.54
  I0726 12:53:12.540783 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename pods @ 07/26/25 12:53:12.541
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:53:12.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:53:12.557
  STEP: creating the pod @ 07/26/25 12:53:12.56
  STEP: submitting the pod to kubernetes @ 07/26/25 12:53:12.56
  E0726 12:53:13.371856      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:53:14.372865      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 07/26/25 12:53:14.59
  STEP: updating the pod @ 07/26/25 12:53:14.596
  I0726 12:53:15.113014 23 pod_client.go:173] Successfully updated pod "pod-update-2d2daa26-a4aa-4d16-a716-b3e80a9fc15c"
  STEP: verifying the updated pod is in kubernetes @ 07/26/25 12:53:15.119
  I0726 12:53:15.125001 23 pods.go:391] Pod update OK
  I0726 12:53:15.125130 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1345" for this suite. @ 07/26/25 12:53:15.131
• [2.601 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 07/26/25 12:53:15.141
  I0726 12:53:15.141725 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename pods @ 07/26/25 12:53:15.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:53:15.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:53:15.16
  E0726 12:53:15.372992      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:53:16.373071      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:53:17.373467      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:53:18.373583      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:53:19.374518      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:53:20.374918      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 12:53:21.242
  I0726 12:53:21.247701 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod client-envvars-1f53d87f-d4ba-4898-9274-477ac669207a container env3cont: <nil>
  STEP: delete the pod @ 07/26/25 12:53:21.256
  I0726 12:53:21.278159 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4516" for this suite. @ 07/26/25 12:53:21.284
• [6.154 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 07/26/25 12:53:21.295
  I0726 12:53:21.295781 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename field-validation @ 07/26/25 12:53:21.296
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:53:21.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:53:21.31
  I0726 12:53:21.313576 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  E0726 12:53:21.375492      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:53:22.376467      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:53:23.376596      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:53:23.850311      23 warnings.go:110] "Warning: unknown field \"alpha\""
  I0726 12:53:23.850331      23 warnings.go:110] "Warning: unknown field \"beta\""
  I0726 12:53:23.850336      23 warnings.go:110] "Warning: unknown field \"delta\""
  I0726 12:53:23.850342      23 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0726 12:53:23.850346      23 warnings.go:110] "Warning: unknown field \"gamma\""
  E0726 12:53:24.376729      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:53:24.406747 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4035" for this suite. @ 07/26/25 12:53:24.413
• [3.127 seconds]
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 07/26/25 12:53:24.423
  I0726 12:53:24.423049 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename secrets @ 07/26/25 12:53:24.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:53:24.437
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:53:24.44
  STEP: Creating secret with name secret-test-ec81397b-82cb-49d6-b617-368dd1bcbdec @ 07/26/25 12:53:24.442
  STEP: Creating a pod to test consume secrets @ 07/26/25 12:53:24.448
  E0726 12:53:25.376808      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:53:26.377004      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:53:27.377821      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:53:28.378347      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 12:53:28.477
  I0726 12:53:28.482807 23 output.go:207] Trying to get logs from node ip-172-31-72-233 pod pod-secrets-73cadb83-0c3b-4bfb-aaa9-fe4ad24a52cc container secret-volume-test: <nil>
  STEP: delete the pod @ 07/26/25 12:53:28.502
  I0726 12:53:28.522264 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6827" for this suite. @ 07/26/25 12:53:28.529
• [4.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:169
  STEP: Creating a kubernetes client @ 07/26/25 12:53:28.539
  I0726 12:53:28.539166 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename emptydir @ 07/26/25 12:53:28.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:53:28.552
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:53:28.554
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 07/26/25 12:53:28.557
  E0726 12:53:29.379333      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:53:30.379401      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 12:53:30.583
  I0726 12:53:30.587910 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod pod-c8e01be4-5d97-40a9-a9a7-6427f895cf37 container test-container: <nil>
  STEP: delete the pod @ 07/26/25 12:53:30.598
  I0726 12:53:30.619392 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1120" for this suite. @ 07/26/25 12:53:30.626
• [2.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:468
  STEP: Creating a kubernetes client @ 07/26/25 12:53:30.637
  I0726 12:53:30.637662 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename sched-pred @ 07/26/25 12:53:30.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:53:30.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:53:30.658
  I0726 12:53:30.661711 23 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0726 12:53:30.732079 23 util.go:390] Waiting for terminating namespaces to be deleted...
  I0726 12:53:30.740136 23 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-16-254 before test
  I0726 12:53:30.746498 23 predicates.go:958] forbid-29225573-6cmkr from cronjob-616 started at 2025-07-26 12:53:00 +0000 UTC (1 container statuses recorded)
  I0726 12:53:30.746513 23 predicates.go:960] 	Container c ready: true, restart count 0
  I0726 12:53:30.746519 23 predicates.go:958] nginx-ingress-controller-kubernetes-worker-554t2 from ingress-nginx-kubernetes-worker started at 2025-07-26 12:33:38 +0000 UTC (1 container statuses recorded)
  I0726 12:53:30.746525 23 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0726 12:53:30.746530 23 predicates.go:958] calico-node-blf7s from kube-system started at 2025-07-26 12:20:34 +0000 UTC (1 container statuses recorded)
  I0726 12:53:30.746535 23 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0726 12:53:30.746546 23 predicates.go:958] sonobuoy from sonobuoy started at 2025-07-26 12:22:08 +0000 UTC (1 container statuses recorded)
  I0726 12:53:30.746550 23 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0726 12:53:30.746556 23 predicates.go:958] sonobuoy-systemd-logs-daemon-set-b24d58e9d81c4ec2-9zvnc from sonobuoy started at 2025-07-26 12:22:10 +0000 UTC (2 container statuses recorded)
  I0726 12:53:30.746566 23 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0726 12:53:30.746570 23 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0726 12:53:30.746575 23 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-3-117 before test
  I0726 12:53:30.752308 23 predicates.go:958] nginx-ingress-controller-kubernetes-worker-nds9b from ingress-nginx-kubernetes-worker started at 2025-07-26 12:09:43 +0000 UTC (1 container statuses recorded)
  I0726 12:53:30.752322 23 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0726 12:53:30.752327 23 predicates.go:958] calico-node-9cfgl from kube-system started at 2025-07-26 12:20:20 +0000 UTC (1 container statuses recorded)
  I0726 12:53:30.752332 23 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0726 12:53:30.752337 23 predicates.go:958] coredns-5d946bb58-9c75c from kube-system started at 2025-07-26 12:09:42 +0000 UTC (1 container statuses recorded)
  I0726 12:53:30.752342 23 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0726 12:53:30.752347 23 predicates.go:958] kube-state-metrics-b84f44f45-hmmkc from kube-system started at 2025-07-26 12:09:42 +0000 UTC (1 container statuses recorded)
  I0726 12:53:30.752359 23 predicates.go:960] 	Container kube-state-metrics ready: true, restart count 0
  I0726 12:53:30.752364 23 predicates.go:958] metrics-server-v0.7.2-7d878b47f8-v6f7l from kube-system started at 2025-07-26 12:09:42 +0000 UTC (2 container statuses recorded)
  I0726 12:53:30.752368 23 predicates.go:960] 	Container metrics-server ready: true, restart count 0
  I0726 12:53:30.752372 23 predicates.go:960] 	Container metrics-server-nanny ready: true, restart count 0
  I0726 12:53:30.752376 23 predicates.go:958] dashboard-metrics-scraper-5cf87bc988-nlxsl from kubernetes-dashboard started at 2025-07-26 12:09:42 +0000 UTC (1 container statuses recorded)
  I0726 12:53:30.752380 23 predicates.go:960] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I0726 12:53:30.752385 23 predicates.go:958] kubernetes-dashboard-6858576c98-5drtf from kubernetes-dashboard started at 2025-07-26 12:09:42 +0000 UTC (1 container statuses recorded)
  I0726 12:53:30.752389 23 predicates.go:960] 	Container kubernetes-dashboard ready: true, restart count 2
  I0726 12:53:30.752393 23 predicates.go:958] sonobuoy-systemd-logs-daemon-set-b24d58e9d81c4ec2-l9c94 from sonobuoy started at 2025-07-26 12:22:10 +0000 UTC (2 container statuses recorded)
  I0726 12:53:30.752397 23 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0726 12:53:30.752424 23 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0726 12:53:30.752429 23 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-72-233 before test
  I0726 12:53:30.756655 23 predicates.go:958] nginx-ingress-controller-kubernetes-worker-ktvqz from ingress-nginx-kubernetes-worker started at 2025-07-26 12:16:51 +0000 UTC (1 container statuses recorded)
  I0726 12:53:30.756667 23 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0726 12:53:30.756673 23 predicates.go:958] calico-node-5sb6s from kube-system started at 2025-07-26 12:19:38 +0000 UTC (1 container statuses recorded)
  I0726 12:53:30.756677 23 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0726 12:53:30.756683 23 predicates.go:958] sonobuoy-e2e-job-99de9743d9bd4869 from sonobuoy started at 2025-07-26 12:22:10 +0000 UTC (2 container statuses recorded)
  I0726 12:53:30.756687 23 predicates.go:960] 	Container e2e ready: true, restart count 0
  I0726 12:53:30.756695 23 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0726 12:53:30.756700 23 predicates.go:958] sonobuoy-systemd-logs-daemon-set-b24d58e9d81c4ec2-mn48h from sonobuoy started at 2025-07-26 12:22:10 +0000 UTC (2 container statuses recorded)
  I0726 12:53:30.756704 23 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0726 12:53:30.756708 23 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 07/26/25 12:53:30.756
  E0726 12:53:31.380179      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:53:32.380267      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 07/26/25 12:53:32.784
  STEP: Trying to apply a random label on the found node. @ 07/26/25 12:53:32.799
  STEP: verifying the node has the label kubernetes.io/e2e-01898d6a-c443-4df2-a02f-bd8101947901 42 @ 07/26/25 12:53:32.809
  STEP: Trying to relaunch the pod, now with labels. @ 07/26/25 12:53:32.814
  E0726 12:53:33.380912      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:53:34.381004      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-01898d6a-c443-4df2-a02f-bd8101947901 off the node ip-172-31-16-254 @ 07/26/25 12:53:34.84
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-01898d6a-c443-4df2-a02f-bd8101947901 @ 07/26/25 12:53:34.854
  I0726 12:53:34.858858 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-5468" for this suite. @ 07/26/25 12:53:34.865
• [4.239 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 07/26/25 12:53:34.876
  I0726 12:53:34.876451 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename daemonsets @ 07/26/25 12:53:34.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:53:34.888
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:53:34.89
  STEP: Creating a simple DaemonSet "daemon-set" @ 07/26/25 12:53:34.98
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/26/25 12:53:34.986
  I0726 12:53:35.066623 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-77-91 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 12:53:35.066693 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-89-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 12:53:35.070946 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0726 12:53:35.070966 23 fixtures.go:131] Node ip-172-31-16-254 is running 0 daemon pod, expected 1
  E0726 12:53:35.381115      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:53:35.994745 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-77-91 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 12:53:35.994783 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-89-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 12:53:36.000063 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0726 12:53:36.000085 23 fixtures.go:131] Node ip-172-31-16-254 is running 0 daemon pod, expected 1
  E0726 12:53:36.381257      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:53:36.994473 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-77-91 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 12:53:36.994515 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-89-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 12:53:37.000681 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0726 12:53:37.000703 23 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 07/26/25 12:53:37.006
  I0726 12:53:37.096594 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-77-91 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 12:53:37.096648 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-89-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 12:53:37.103441 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0726 12:53:37.103474 23 fixtures.go:131] Node ip-172-31-72-233 is running 0 daemon pod, expected 1
  E0726 12:53:37.381954      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:53:38.028482 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-77-91 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 12:53:38.028519 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-89-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 12:53:38.034265 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0726 12:53:38.034285 23 fixtures.go:131] Node ip-172-31-72-233 is running 0 daemon pod, expected 1
  E0726 12:53:38.382726      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:53:39.028581 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-77-91 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 12:53:39.028612 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-89-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 12:53:39.034773 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0726 12:53:39.034796 23 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 07/26/25 12:53:39.034
  STEP: Deleting DaemonSet "daemon-set" @ 07/26/25 12:53:39.051
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8432, will wait for the garbage collector to delete the pods @ 07/26/25 12:53:39.051
  I0726 12:53:39.116037 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 9.66294ms
  I0726 12:53:39.216262 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.220913ms
  E0726 12:53:39.383765      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:53:40.383898      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:53:41.384047      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:53:41.721866 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0726 12:53:41.721900 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0726 12:53:41.728253 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"17808"},"items":null}

  I0726 12:53:41.733261 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"17808"},"items":null}

  I0726 12:53:41.754913 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8432" for this suite. @ 07/26/25 12:53:41.76
• [6.893 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 07/26/25 12:53:41.769
  I0726 12:53:41.769408 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename pod-network-test @ 07/26/25 12:53:41.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:53:41.784
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:53:41.786
  STEP: Performing setup for networking test in namespace pod-network-test-7505 @ 07/26/25 12:53:41.789
  STEP: creating a selector @ 07/26/25 12:53:41.789
  STEP: Creating the service pods in kubernetes @ 07/26/25 12:53:41.789
  I0726 12:53:41.789158 23 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0726 12:53:42.384850      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:53:43.384976      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:53:44.385785      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:53:45.385867      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:53:46.386817      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:53:47.386877      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:53:48.387309      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:53:49.387291      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:53:50.387567      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:53:51.387823      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:53:52.388048      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:53:53.388235      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:53:54.388329      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:53:55.388400      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 07/26/25 12:53:55.948
  E0726 12:53:56.389114      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:53:57.389731      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:53:57.992735 23 utils.go:802] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0726 12:53:57.992770 23 utils.go:495] Going to poll 192.168.58.252 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0726 12:53:57.998261 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.58.252:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-7505 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0726 12:53:57.998279 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0726 12:53:57.998317 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7505/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.58.252%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0726 12:53:58.037434 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0726 12:53:58.037466 23 utils.go:512] Found all 1 expected endpoints: [netserver-0]
  I0726 12:53:58.037479 23 utils.go:495] Going to poll 192.168.248.174 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0726 12:53:58.042326 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.248.174:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-7505 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0726 12:53:58.042342 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0726 12:53:58.042376 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7505/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.248.174%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0726 12:53:58.090583 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0726 12:53:58.090612 23 utils.go:512] Found all 1 expected endpoints: [netserver-1]
  I0726 12:53:58.090627 23 utils.go:495] Going to poll 192.168.13.50 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0726 12:53:58.095296 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.13.50:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-7505 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0726 12:53:58.095313 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0726 12:53:58.095352 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7505/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.13.50%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0726 12:53:58.135226 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0726 12:53:58.135252 23 utils.go:512] Found all 1 expected endpoints: [netserver-2]
  I0726 12:53:58.135353 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-7505" for this suite. @ 07/26/25 12:53:58.141
• [16.382 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:238
  STEP: Creating a kubernetes client @ 07/26/25 12:53:58.151
  I0726 12:53:58.151512 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/26/25 12:53:58.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:53:58.165
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:53:58.168
  I0726 12:53:58.173682 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  E0726 12:53:58.390061      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:53:59.390799      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 07/26/25 12:53:59.412
  I0726 12:53:59.412989 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=crd-publish-openapi-7558 --namespace=crd-publish-openapi-7558 create -f -'
  E0726 12:54:00.390819      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:54:01.391018      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:54:01.474017 23 builder.go:146] stderr: ""
  I0726 12:54:01.474069 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9126-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0726 12:54:01.474114 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=crd-publish-openapi-7558 --namespace=crd-publish-openapi-7558 delete e2e-test-crd-publish-openapi-9126-crds test-cr'
  I0726 12:54:01.523305 23 builder.go:146] stderr: ""
  I0726 12:54:01.523340 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9126-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I0726 12:54:01.523373 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=crd-publish-openapi-7558 --namespace=crd-publish-openapi-7558 apply -f -'
  I0726 12:54:01.575763 23 builder.go:146] stderr: ""
  I0726 12:54:01.575802 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9126-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0726 12:54:01.575835 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=crd-publish-openapi-7558 --namespace=crd-publish-openapi-7558 delete e2e-test-crd-publish-openapi-9126-crds test-cr'
  I0726 12:54:01.624933 23 builder.go:146] stderr: ""
  I0726 12:54:01.624965 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9126-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 07/26/25 12:54:01.624
  I0726 12:54:01.625025 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=crd-publish-openapi-7558 explain e2e-test-crd-publish-openapi-9126-crds'
  I0726 12:54:01.661776 23 builder.go:146] stderr: ""
  I0726 12:54:01.661812 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-9126-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0726 12:54:02.392052      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:54:02.849730 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7558" for this suite. @ 07/26/25 12:54:02.859
• [4.718 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 07/26/25 12:54:02.87
  I0726 12:54:02.870204 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename secrets @ 07/26/25 12:54:02.87
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:54:02.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:54:02.887
  STEP: Creating secret with name secret-test-0cd1da5d-53c9-474b-9ee6-08bde6769135 @ 07/26/25 12:54:02.89
  STEP: Creating a pod to test consume secrets @ 07/26/25 12:54:02.895
  E0726 12:54:03.392885      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:54:04.392803      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 12:54:04.922
  I0726 12:54:04.927244 23 output.go:207] Trying to get logs from node ip-172-31-72-233 pod pod-secrets-8ce1d421-2912-41a3-afbd-a77758a60ea9 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/26/25 12:54:04.938
  I0726 12:54:04.962435 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7539" for this suite. @ 07/26/25 12:54:04.968
• [2.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:892
  STEP: Creating a kubernetes client @ 07/26/25 12:54:04.977
  I0726 12:54:04.977741 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename job @ 07/26/25 12:54:04.978
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:54:04.993
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:54:04.996
  STEP: Creating a job @ 07/26/25 12:54:04.998
  STEP: Ensuring active pods == parallelism @ 07/26/25 12:54:05.004
  E0726 12:54:05.393871      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:54:06.393976      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete a job @ 07/26/25 12:54:07.018
  STEP: deleting Job.batch foo in namespace job-3310, will wait for the garbage collector to delete the pods @ 07/26/25 12:54:07.018
  I0726 12:54:07.085088 23 resources.go:139] Deleting Job.batch foo took: 10.887249ms
  I0726 12:54:07.185222 23 resources.go:163] Terminating Job.batch foo pods took: 100.129743ms
  E0726 12:54:07.394943      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:54:08.395256      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 07/26/25 12:54:08.586
  I0726 12:54:08.590983 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3310" for this suite. @ 07/26/25 12:54:08.597
• [3.630 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:65
  STEP: Creating a kubernetes client @ 07/26/25 12:54:08.608
  I0726 12:54:08.608158 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 07/26/25 12:54:08.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:54:08.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:54:08.627
  STEP: Setting up the test @ 07/26/25 12:54:08.629
  STEP: Creating hostNetwork=false pod @ 07/26/25 12:54:08.629
  E0726 12:54:09.395487      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:54:10.395581      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 07/26/25 12:54:10.659
  E0726 12:54:11.395674      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:54:12.395787      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Running the test @ 07/26/25 12:54:12.685
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 07/26/25 12:54:12.685
  I0726 12:54:12.685352 23 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7998 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0726 12:54:12.685369 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0726 12:54:12.685401 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7998/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0726 12:54:12.732224 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0726 12:54:12.732259 23 exec_util.go:112] Exec stderr: ""
  I0726 12:54:12.732276 23 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7998 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0726 12:54:12.732282 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0726 12:54:12.732321 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7998/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0726 12:54:12.775345 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0726 12:54:12.775381 23 exec_util.go:112] Exec stderr: ""
  I0726 12:54:12.775403 23 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7998 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0726 12:54:12.775409 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0726 12:54:12.775448 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7998/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0726 12:54:12.823494 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0726 12:54:12.823544 23 exec_util.go:112] Exec stderr: ""
  I0726 12:54:12.823560 23 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7998 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0726 12:54:12.823566 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0726 12:54:12.823604 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7998/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0726 12:54:12.877781 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0726 12:54:12.877812 23 exec_util.go:112] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 07/26/25 12:54:12.877
  I0726 12:54:12.877870 23 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7998 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0726 12:54:12.877877 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0726 12:54:12.877969 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7998/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&stderr=true&stdout=true)
  I0726 12:54:12.927786 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0726 12:54:12.927822 23 exec_util.go:112] Exec stderr: ""
  I0726 12:54:12.927838 23 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7998 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0726 12:54:12.927844 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0726 12:54:12.927891 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7998/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&stderr=true&stdout=true)
  I0726 12:54:12.969217 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0726 12:54:12.969252 23 exec_util.go:112] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 07/26/25 12:54:12.969
  I0726 12:54:12.969308 23 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7998 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0726 12:54:12.969316 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0726 12:54:12.969399 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7998/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0726 12:54:13.006817 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0726 12:54:13.006850 23 exec_util.go:112] Exec stderr: ""
  I0726 12:54:13.006866 23 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7998 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0726 12:54:13.006882 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0726 12:54:13.006930 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7998/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0726 12:54:13.034331 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0726 12:54:13.034358 23 exec_util.go:112] Exec stderr: ""
  I0726 12:54:13.034382 23 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7998 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0726 12:54:13.034388 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0726 12:54:13.034429 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7998/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0726 12:54:13.062215 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0726 12:54:13.062243 23 exec_util.go:112] Exec stderr: ""
  I0726 12:54:13.062257 23 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7998 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0726 12:54:13.062264 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0726 12:54:13.062304 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7998/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0726 12:54:13.103313 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0726 12:54:13.103352 23 exec_util.go:112] Exec stderr: ""
  I0726 12:54:13.103453 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-7998" for this suite. @ 07/26/25 12:54:13.111
• [4.513 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 07/26/25 12:54:13.121
  I0726 12:54:13.121620 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename subpath @ 07/26/25 12:54:13.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:54:13.137
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:54:13.142
  STEP: Setting up data @ 07/26/25 12:54:13.145
  STEP: Creating pod pod-subpath-test-downwardapi-psnd @ 07/26/25 12:54:13.158
  STEP: Creating a pod to test atomic-volume-subpath @ 07/26/25 12:54:13.158
  E0726 12:54:13.396009      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:54:14.396266      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:54:15.397328      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:54:16.397899      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:54:17.398263      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:54:18.398371      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:54:19.399152      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:54:20.399231      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:54:21.400010      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:54:22.400082      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:54:23.400569      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:54:24.400853      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:54:25.401900      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:54:26.402014      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:54:27.402974      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:54:28.403084      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:54:29.403739      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:54:30.404079      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:54:31.404244      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:54:32.404857      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:54:33.405204      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:54:34.405536      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:54:35.405521      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:54:36.405723      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 12:54:37.249
  I0726 12:54:37.253613 23 output.go:207] Trying to get logs from node ip-172-31-72-233 pod pod-subpath-test-downwardapi-psnd container test-container-subpath-downwardapi-psnd: <nil>
  STEP: delete the pod @ 07/26/25 12:54:37.262
  STEP: Deleting pod pod-subpath-test-downwardapi-psnd @ 07/26/25 12:54:37.289
  I0726 12:54:37.289275 23 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-psnd" in namespace "subpath-4834"
  I0726 12:54:37.293801 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4834" for this suite. @ 07/26/25 12:54:37.3
• [24.190 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1003
  STEP: Creating a kubernetes client @ 07/26/25 12:54:37.312
  I0726 12:54:37.312246 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename resourcequota @ 07/26/25 12:54:37.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:54:37.325
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:54:37.327
  STEP: Creating a ResourceQuota @ 07/26/25 12:54:37.33
  STEP: Getting a ResourceQuota @ 07/26/25 12:54:37.336
  STEP: Listing all ResourceQuotas with LabelSelector @ 07/26/25 12:54:37.34
  STEP: Patching the ResourceQuota @ 07/26/25 12:54:37.344
  STEP: Deleting a Collection of ResourceQuotas @ 07/26/25 12:54:37.351
  STEP: Verifying the deleted ResourceQuota @ 07/26/25 12:54:37.365
  I0726 12:54:37.370190 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4664" for this suite. @ 07/26/25 12:54:37.401
  E0726 12:54:37.405762      23 retrywatcher.go:169] "Watch failed" err="context canceled"
• [0.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 07/26/25 12:54:37.411
  I0726 12:54:37.411062 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename webhook @ 07/26/25 12:54:37.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:54:37.423
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:54:37.426
  STEP: Setting up server cert @ 07/26/25 12:54:37.447
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/26/25 12:54:37.637
  STEP: Deploying the webhook pod @ 07/26/25 12:54:37.645
  STEP: Wait for the deployment to be ready @ 07/26/25 12:54:37.661
  I0726 12:54:37.675416 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0726 12:54:38.405949      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:54:39.406097      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/26/25 12:54:39.693
  STEP: Verifying the service has paired with the endpoint @ 07/26/25 12:54:39.714
  E0726 12:54:40.406170      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:54:40.714413 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 07/26/25 12:54:40.723
  STEP: verifying the mutating webhook match conditions @ 07/26/25 12:54:40.735
  STEP: updating the mutating webhook match conditions @ 07/26/25 12:54:40.74
  STEP: verifying the mutating webhook match conditions @ 07/26/25 12:54:40.754
  I0726 12:54:40.832885 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6955" for this suite. @ 07/26/25 12:54:40.846
  STEP: Destroying namespace "webhook-markers-9169" for this suite. @ 07/26/25 12:54:40.86
• [3.461 seconds]
------------------------------
S
------------------------------
[sig-network] ServiceCIDR and IPAddress API should support ServiceCIDR API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_cidrs.go:163
  STEP: Creating a kubernetes client @ 07/26/25 12:54:40.872
  I0726 12:54:40.872413 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename servicecidr @ 07/26/25 12:54:40.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:54:40.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:54:40.895
  STEP: getting @ 07/26/25 12:54:40.898
  STEP: patching @ 07/26/25 12:54:40.903
  STEP: updating @ 07/26/25 12:54:40.911
  STEP: listing @ 07/26/25 12:54:40.923
  STEP: watching @ 07/26/25 12:54:40.929
  I0726 12:54:40.930863 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "servicecidr-4745" for this suite. @ 07/26/25 12:54:40.946
• [0.085 seconds]
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 07/26/25 12:54:40.957
  I0726 12:54:40.957602 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename replicaset @ 07/26/25 12:54:40.958
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:54:40.972
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:54:40.975
  STEP: Create a Replicaset @ 07/26/25 12:54:40.983
  STEP: Verify that the required pods have come up. @ 07/26/25 12:54:40.993
  I0726 12:54:40.998105 23 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  E0726 12:54:41.406753      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:54:42.406957      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:54:43.407219      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:54:44.407353      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:54:45.407500      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:54:46.004500 23 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/26/25 12:54:46.004
  STEP: Getting /status @ 07/26/25 12:54:46.004
  I0726 12:54:46.009725 23 replica_set.go:649] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 07/26/25 12:54:46.009
  I0726 12:54:46.021744 23 replica_set.go:669] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 07/26/25 12:54:46.021
  I0726 12:54:46.023372 23 replica_set.go:695] Observed &ReplicaSet event: ADDED
  I0726 12:54:46.023432 23 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0726 12:54:46.023488 23 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0726 12:54:46.023579 23 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0726 12:54:46.023599 23 replica_set.go:688] Found replicaset test-rs in namespace replicaset-2960 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0726 12:54:46.023609 23 replica_set.go:699] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 07/26/25 12:54:46.023
  I0726 12:54:46.023647 23 replica_set.go:703] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0726 12:54:46.031681 23 replica_set.go:707] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 07/26/25 12:54:46.031
  I0726 12:54:46.033188 23 replica_set.go:731] Observed &ReplicaSet event: ADDED
  I0726 12:54:46.033248 23 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0726 12:54:46.033290 23 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0726 12:54:46.033376 23 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0726 12:54:46.033390 23 replica_set.go:727] Observed replicaset test-rs in namespace replicaset-2960 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0726 12:54:46.033515 23 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0726 12:54:46.033530 23 replica_set.go:724] Found replicaset test-rs in namespace replicaset-2960 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0726 12:54:46.033550 23 replica_set.go:735] Replicaset test-rs has a patched status
  I0726 12:54:46.033691 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2960" for this suite. @ 07/26/25 12:54:46.042
• [5.095 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 07/26/25 12:54:46.052
  I0726 12:54:46.052355 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename disruption @ 07/26/25 12:54:46.052
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:54:46.066
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:54:46.069
  STEP: Waiting for the pdb to be processed @ 07/26/25 12:54:46.078
  STEP: Updating PodDisruptionBudget status @ 07/26/25 12:54:46.084
  STEP: Waiting for all pods to be running @ 07/26/25 12:54:46.149
  I0726 12:54:46.156683 23 disruption.go:691] running pods: 0 < 1
  E0726 12:54:46.408095      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:54:47.408163      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 07/26/25 12:54:48.155
  STEP: Waiting for the pdb to be processed @ 07/26/25 12:54:48.173
  STEP: Patching PodDisruptionBudget status @ 07/26/25 12:54:48.185
  STEP: Waiting for the pdb to be processed @ 07/26/25 12:54:48.197
  I0726 12:54:48.202872 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4056" for this suite. @ 07/26/25 12:54:48.208
• [2.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:99
  STEP: Creating a kubernetes client @ 07/26/25 12:54:48.218
  I0726 12:54:48.218077 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename aggregator @ 07/26/25 12:54:48.218
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:54:48.233
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:54:48.235
  I0726 12:54:48.238327 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Registering the sample API server. @ 07/26/25 12:54:48.238
  E0726 12:54:48.408206      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:54:48.784540 23 helpers.go:184] Found ClusterRoles; assuming RBAC is enabled.
  I0726 12:54:48.822009 23 deployment.go:223] deployment "sample-apiserver-deployment" doesn't have the required revision set
  E0726 12:54:49.408313      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:54:50.408418      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:54:50.888934 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 26, 12, 54, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 26, 12, 54, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 26, 12, 54, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 26, 12, 54, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0726 12:54:51.409440      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:54:52.410784      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:54:52.895254 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 26, 12, 54, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 26, 12, 54, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 26, 12, 54, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 26, 12, 54, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0726 12:54:53.409821      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:54:54.409921      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:54:54.894588 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 26, 12, 54, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 26, 12, 54, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 26, 12, 54, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 26, 12, 54, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0726 12:54:55.410849      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:54:56.410926      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:54:56.895264 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 26, 12, 54, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 26, 12, 54, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 26, 12, 54, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 26, 12, 54, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0726 12:54:57.411860      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:54:58.411946      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:54:58.894830 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 26, 12, 54, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 26, 12, 54, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 26, 12, 54, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 26, 12, 54, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0726 12:54:59.412388      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:55:00.412606      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:55:00.895908 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 26, 12, 54, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 26, 12, 54, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 26, 12, 54, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 26, 12, 54, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0726 12:55:01.412672      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:55:02.412769      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:55:02.894291 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 26, 12, 54, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 26, 12, 54, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 26, 12, 54, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 26, 12, 54, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0726 12:55:03.412946      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:55:04.413014      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:55:04.894921 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 26, 12, 54, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 26, 12, 54, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 26, 12, 54, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 26, 12, 54, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0726 12:55:05.413184      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:55:06.413410      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:55:06.895766 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 26, 12, 54, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 26, 12, 54, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 26, 12, 54, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 26, 12, 54, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0726 12:55:07.414403      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:55:08.414510      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:55:08.894941 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 26, 12, 54, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 26, 12, 54, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 26, 12, 54, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 26, 12, 54, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0726 12:55:09.415546      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:55:10.415753      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:55:10.894522 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.July, 26, 12, 54, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 26, 12, 54, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 26, 12, 54, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 26, 12, 54, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0726 12:55:11.415893      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:55:12.415982      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:55:13.018738 23 aggregator.go:756] Waited 116.536475ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 07/26/25 12:55:13.049
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 07/26/25 12:55:13.054
  STEP: List APIServices @ 07/26/25 12:55:13.062
  I0726 12:55:13.068033 23 aggregator.go:557] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 07/26/25 12:55:13.068
  I0726 12:55:13.082371 23 aggregator.go:582] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 07/26/25 12:55:13.082
  I0726 12:55:13.095935 23 aggregator.go:608] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2025, time.July, 26, 12, 55, 12, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 07/26/25 12:55:13.095
  I0726 12:55:13.100729 23 aggregator.go:626] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2025-07-26 12:55:12 +0000 UTC Passed all checks passed}
  I0726 12:55:13.100750 23 aggregator.go:622] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0726 12:55:13.100759 23 aggregator.go:632] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 07/26/25 12:55:13.1
  I0726 12:55:13.114057 23 aggregator.go:648] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-240428165" @ 07/26/25 12:55:13.114
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 07/26/25 12:55:13.122
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 07/26/25 12:55:13.128
  STEP: Patch APIService Status @ 07/26/25 12:55:13.133
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 07/26/25 12:55:13.143
  I0726 12:55:13.148142 23 aggregator.go:726] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2025-07-26 12:55:12 +0000 UTC Passed all checks passed}
  I0726 12:55:13.148165 23 aggregator.go:726] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0726 12:55:13.148177 23 aggregator.go:722] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0726 12:55:13.148188 23 aggregator.go:732] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 07/26/25 12:55:13.148
  STEP: Confirm that the generated APIService has been deleted @ 07/26/25 12:55:13.161
  I0726 12:55:13.161059 23 aggregator.go:793] Requesting list of APIServices to confirm quantity
  I0726 12:55:13.165362 23 aggregator.go:803] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0726 12:55:13.165382 23 aggregator.go:745] APIService v1alpha1.wardle.example.com has been deleted.
  I0726 12:55:13.308661 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-1397" for this suite. @ 07/26/25 12:55:13.315
• [25.106 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:99
  STEP: Creating a kubernetes client @ 07/26/25 12:55:13.324
  I0726 12:55:13.324682 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename emptydir @ 07/26/25 12:55:13.325
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:55:13.338
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:55:13.341
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 07/26/25 12:55:13.344
  E0726 12:55:13.416196      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:55:14.416814      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:55:15.417497      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:55:16.417687      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 12:55:17.376
  I0726 12:55:17.381610 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod pod-58641a1f-ddc8-4f8e-a2da-f4c384d16b40 container test-container: <nil>
  STEP: delete the pod @ 07/26/25 12:55:17.396
  I0726 12:55:17.416672 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0726 12:55:17.417647      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "emptydir-5743" for this suite. @ 07/26/25 12:55:17.422
• [4.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 07/26/25 12:55:17.432
  I0726 12:55:17.432576 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename watch @ 07/26/25 12:55:17.433
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:55:17.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:55:17.448
  STEP: creating a watch on configmaps with a certain label @ 07/26/25 12:55:17.451
  STEP: creating a new configmap @ 07/26/25 12:55:17.452
  STEP: modifying the configmap once @ 07/26/25 12:55:17.457
  STEP: changing the label value of the configmap @ 07/26/25 12:55:17.467
  STEP: Expecting to observe a delete notification for the watched object @ 07/26/25 12:55:17.477
  I0726 12:55:17.477516 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-558  c5fd4b02-9eae-4a3f-931b-24451532dc99 18717 0 2025-07-26 12:55:17 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-07-26 12:55:17 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0726 12:55:17.477684 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-558  c5fd4b02-9eae-4a3f-931b-24451532dc99 18718 0 2025-07-26 12:55:17 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-07-26 12:55:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0726 12:55:17.477742 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-558  c5fd4b02-9eae-4a3f-931b-24451532dc99 18719 0 2025-07-26 12:55:17 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-07-26 12:55:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 07/26/25 12:55:17.477
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 07/26/25 12:55:17.488
  E0726 12:55:18.417808      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:55:19.417879      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:55:20.418001      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:55:21.418065      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:55:22.418189      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:55:23.418318      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:55:24.418391      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:55:25.418518      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:55:26.418587      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:55:27.418807      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 07/26/25 12:55:27.489
  STEP: modifying the configmap a third time @ 07/26/25 12:55:27.502
  STEP: deleting the configmap @ 07/26/25 12:55:27.514
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 07/26/25 12:55:27.522
  I0726 12:55:27.522911 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-558  c5fd4b02-9eae-4a3f-931b-24451532dc99 18770 0 2025-07-26 12:55:17 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-07-26 12:55:27 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0726 12:55:27.523064 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-558  c5fd4b02-9eae-4a3f-931b-24451532dc99 18771 0 2025-07-26 12:55:17 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-07-26 12:55:27 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0726 12:55:27.523195 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-558  c5fd4b02-9eae-4a3f-931b-24451532dc99 18772 0 2025-07-26 12:55:17 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-07-26 12:55:27 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0726 12:55:27.523292 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-558" for this suite. @ 07/26/25 12:55:27.53
• [10.108 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 07/26/25 12:55:27.54
  I0726 12:55:27.540869 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename var-expansion @ 07/26/25 12:55:27.541
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:55:27.554
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:55:27.557
  STEP: Creating a pod to test substitution in container's command @ 07/26/25 12:55:27.56
  E0726 12:55:28.418915      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:55:29.418985      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:55:30.419834      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:55:31.419912      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 12:55:31.592
  I0726 12:55:31.598531 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod var-expansion-336f37f6-d7f5-4f31-b5eb-4d0f1327ae12 container dapi-container: <nil>
  STEP: delete the pod @ 07/26/25 12:55:31.607
  I0726 12:55:31.628086 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8421" for this suite. @ 07/26/25 12:55:31.634
• [4.103 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 07/26/25 12:55:31.643
  I0726 12:55:31.643910 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename subpath @ 07/26/25 12:55:31.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:55:31.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:55:31.66
  STEP: Setting up data @ 07/26/25 12:55:31.663
  STEP: Creating pod pod-subpath-test-projected-7prp @ 07/26/25 12:55:31.674
  STEP: Creating a pod to test atomic-volume-subpath @ 07/26/25 12:55:31.674
  E0726 12:55:32.420021      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:55:33.420115      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:55:34.420850      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:55:35.421004      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:55:36.421868      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:55:37.421953      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:55:38.422537      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:55:39.422660      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:55:40.423553      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:55:41.423874      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:55:42.424058      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:55:43.424367      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:55:44.424546      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:55:45.424656      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:55:46.424711      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:55:47.424827      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:55:48.424963      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:55:49.425038      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:55:50.426132      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:55:51.426300      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:55:52.426491      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:55:53.426588      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:55:54.427623      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:55:55.427840      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 12:55:55.771
  I0726 12:55:55.777535 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod pod-subpath-test-projected-7prp container test-container-subpath-projected-7prp: <nil>
  STEP: delete the pod @ 07/26/25 12:55:55.786
  STEP: Deleting pod pod-subpath-test-projected-7prp @ 07/26/25 12:55:55.807
  I0726 12:55:55.807381 23 delete.go:62] Deleting pod "pod-subpath-test-projected-7prp" in namespace "subpath-3544"
  I0726 12:55:55.813346 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3544" for this suite. @ 07/26/25 12:55:55.82
• [24.187 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:640
  STEP: Creating a kubernetes client @ 07/26/25 12:55:55.83
  I0726 12:55:55.830589 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename webhook @ 07/26/25 12:55:55.831
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:55:55.844
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:55:55.846
  STEP: Setting up server cert @ 07/26/25 12:55:55.872
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/26/25 12:55:56.012
  STEP: Deploying the webhook pod @ 07/26/25 12:55:56.02
  STEP: Wait for the deployment to be ready @ 07/26/25 12:55:56.036
  I0726 12:55:56.045166 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0726 12:55:56.428697      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:55:57.428785      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/26/25 12:55:58.062
  STEP: Verifying the service has paired with the endpoint @ 07/26/25 12:55:58.083
  E0726 12:55:58.428990      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:55:59.084053 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 07/26/25 12:55:59.174
  STEP: Creating a configMap that should be mutated @ 07/26/25 12:55:59.186
  STEP: Deleting the collection of validation webhooks @ 07/26/25 12:55:59.217
  STEP: Creating a configMap that should not be mutated @ 07/26/25 12:55:59.298
  I0726 12:55:59.376175 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7628" for this suite. @ 07/26/25 12:55:59.382
  STEP: Destroying namespace "webhook-markers-1797" for this suite. @ 07/26/25 12:55:59.393
• [3.572 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 07/26/25 12:55:59.402
  I0726 12:55:59.402882 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename secrets @ 07/26/25 12:55:59.403
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:55:59.418
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:55:59.421
  E0726 12:55:59.429591      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:55:59.477507 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6069" for this suite. @ 07/26/25 12:55:59.483
• [0.090 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:124
  STEP: Creating a kubernetes client @ 07/26/25 12:55:59.492
  I0726 12:55:59.492815 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename configmap @ 07/26/25 12:55:59.493
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:55:59.506
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:55:59.509
  STEP: Creating configMap with name configmap-test-upd-4b9c9e5d-2228-403f-bda3-fe1c98f2ff51 @ 07/26/25 12:55:59.584
  STEP: Creating the pod @ 07/26/25 12:55:59.59
  E0726 12:56:00.429844      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:01.429912      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-4b9c9e5d-2228-403f-bda3-fe1c98f2ff51 @ 07/26/25 12:56:01.633
  STEP: waiting to observe update in volume @ 07/26/25 12:56:01.639
  E0726 12:56:02.430025      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:03.430105      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:04.430209      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:05.430282      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:06.430419      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:07.430471      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:08.430779      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:09.430909      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:10.430993      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:11.431078      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:12.431272      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:13.431359      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:14.431539      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:15.431662      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:16.431799      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:17.431931      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:18.432048      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:19.432125      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:20.433070      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:21.433211      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:22.433294      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:23.433491      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:24.433601      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:25.433828      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:26.434024      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:27.434114      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:28.434342      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:29.434425      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:30.434566      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:31.434694      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:32.434805      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:33.434918      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:34.435705      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:35.435908      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:36.436497      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:37.436724      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:38.437724      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:39.437828      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:40.438865      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:41.439133      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:42.439086      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:43.439153      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:44.440099      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:45.440162      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:46.440937      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:47.441014      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:48.441135      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:49.441226      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:50.441347      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:51.441432      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:52.441848      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:53.442837      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:54.443788      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:55.444054      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:56.444786      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:57.444791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:58.444881      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:56:59.445031      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:57:00.445839      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:57:01.445968      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:57:02.446308      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:57:03.446475      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:57:04.446724      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:57:05.446781      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:57:06.446863      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:57:07.446946      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:57:08.447086      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:57:09.447243      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:57:10.448072      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:57:11.448525      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:57:12.448655      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:57:13.448743      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:57:14.449548      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:57:15.449663      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:57:16.450257      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:57:17.450316      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:57:18.451300      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:57:19.451887      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:57:20.083571 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7752" for this suite. @ 07/26/25 12:57:20.09
• [80.607 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:168
  STEP: Creating a kubernetes client @ 07/26/25 12:57:20.1
  I0726 12:57:20.100026 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename resourcequota @ 07/26/25 12:57:20.1
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:57:20.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:57:20.119
  STEP: Discovering how many secrets are in namespace by default @ 07/26/25 12:57:20.122
  E0726 12:57:20.452368      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:57:21.453020      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:57:22.453387      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:57:23.454133      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:57:24.455096      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 07/26/25 12:57:25.128
  E0726 12:57:25.455344      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:57:26.455524      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:57:27.456517      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:57:28.456789      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:57:29.457411      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/26/25 12:57:30.135
  STEP: Ensuring resource quota status is calculated @ 07/26/25 12:57:30.142
  E0726 12:57:30.457771      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:57:31.457987      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 07/26/25 12:57:32.148
  STEP: Ensuring resource quota status captures secret creation @ 07/26/25 12:57:32.162
  E0726 12:57:32.458844      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:57:33.459619      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 07/26/25 12:57:34.169
  STEP: Ensuring resource quota status released usage @ 07/26/25 12:57:34.179
  E0726 12:57:34.459680      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:57:35.459794      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:57:36.186043 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1513" for this suite. @ 07/26/25 12:57:36.192
• [16.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 07/26/25 12:57:36.202
  I0726 12:57:36.202238 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename aggregateddiscovery @ 07/26/25 12:57:36.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:57:36.217
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:57:36.22
  I0726 12:57:36.226000 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-8180" for this suite. @ 07/26/25 12:57:36.293
• [0.101 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 07/26/25 12:57:36.303
  I0726 12:57:36.303823 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename daemonsets @ 07/26/25 12:57:36.304
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:57:36.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:57:36.32
  I0726 12:57:36.413482 23 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0726 12:57:36.420383 23 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  E0726 12:57:36.460528      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:57:36.494795 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-77-91 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 12:57:36.494824 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-89-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 12:57:36.498913 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0726 12:57:36.498934 23 fixtures.go:131] Node ip-172-31-16-254 is running 0 daemon pod, expected 1
  I0726 12:57:37.428699 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-77-91 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 12:57:37.428737 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-89-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 12:57:37.435391 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0726 12:57:37.435411 23 fixtures.go:131] Node ip-172-31-16-254 is running 0 daemon pod, expected 1
  E0726 12:57:37.461423      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:57:38.427679 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-77-91 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 12:57:38.427718 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-89-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 12:57:38.433187 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0726 12:57:38.433205 23 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  I0726 12:57:38.433217 23 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0726 12:57:38.445784 23 daemon_set.go:102] Updating DaemonSet daemon-set
  E0726 12:57:38.461959      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:57:39.462326      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:57:39.465159 23 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0726 12:57:39.475994 23 daemon_set.go:102] Updating DaemonSet daemon-set
  I0726 12:57:39.476024 23 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I0726 12:57:39.565714 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-77-91 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 12:57:39.565756 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-89-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0726 12:57:40.462913      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:57:40.490437 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-77-91 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 12:57:40.490475 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-89-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0726 12:57:41.463016      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:57:41.484714 23 daemon_set.go:1198] Pod daemon-set-qhf6w is not available
  I0726 12:57:41.490999 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-77-91 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 12:57:41.491024 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-89-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 07/26/25 12:57:41.521
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-929, will wait for the garbage collector to delete the pods @ 07/26/25 12:57:41.521
  I0726 12:57:41.587203 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 10.15364ms
  I0726 12:57:41.688201 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.991706ms
  E0726 12:57:42.463557      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:57:42.894005 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0726 12:57:42.894041 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0726 12:57:42.899961 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"19437"},"items":null}

  I0726 12:57:42.905427 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"19437"},"items":null}

  I0726 12:57:42.926154 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-929" for this suite. @ 07/26/25 12:57:42.931
• [6.638 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:262
  STEP: Creating a kubernetes client @ 07/26/25 12:57:42.942
  I0726 12:57:42.942020 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename downward-api @ 07/26/25 12:57:42.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:57:42.954
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:57:42.957
  STEP: Creating a pod to test downward API volume plugin @ 07/26/25 12:57:42.959
  E0726 12:57:43.464553      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:57:44.464870      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:57:45.465189      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:57:46.465397      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 12:57:46.993
  I0726 12:57:46.997347 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod downwardapi-volume-9b5b8633-9c5f-4f96-8ffe-42167c429305 container client-container: <nil>
  STEP: delete the pod @ 07/26/25 12:57:47.01
  I0726 12:57:47.035807 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7783" for this suite. @ 07/26/25 12:57:47.042
• [4.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:445
  STEP: Creating a kubernetes client @ 07/26/25 12:57:47.051
  I0726 12:57:47.051503 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename sched-pred @ 07/26/25 12:57:47.052
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:57:47.066
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:57:47.069
  I0726 12:57:47.072063 23 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0726 12:57:47.148762 23 util.go:390] Waiting for terminating namespaces to be deleted...
  I0726 12:57:47.153844 23 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-16-254 before test
  I0726 12:57:47.160467 23 predicates.go:958] nginx-ingress-controller-kubernetes-worker-554t2 from ingress-nginx-kubernetes-worker started at 2025-07-26 12:33:38 +0000 UTC (1 container statuses recorded)
  I0726 12:57:47.160483 23 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0726 12:57:47.160489 23 predicates.go:958] calico-node-blf7s from kube-system started at 2025-07-26 12:20:34 +0000 UTC (1 container statuses recorded)
  I0726 12:57:47.160494 23 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0726 12:57:47.160499 23 predicates.go:958] sonobuoy from sonobuoy started at 2025-07-26 12:22:08 +0000 UTC (1 container statuses recorded)
  I0726 12:57:47.160504 23 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0726 12:57:47.160509 23 predicates.go:958] sonobuoy-systemd-logs-daemon-set-b24d58e9d81c4ec2-9zvnc from sonobuoy started at 2025-07-26 12:22:10 +0000 UTC (2 container statuses recorded)
  I0726 12:57:47.160513 23 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0726 12:57:47.160517 23 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0726 12:57:47.160521 23 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-3-117 before test
  I0726 12:57:47.166324 23 predicates.go:958] nginx-ingress-controller-kubernetes-worker-nds9b from ingress-nginx-kubernetes-worker started at 2025-07-26 12:09:43 +0000 UTC (1 container statuses recorded)
  I0726 12:57:47.166339 23 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0726 12:57:47.166345 23 predicates.go:958] calico-node-9cfgl from kube-system started at 2025-07-26 12:20:20 +0000 UTC (1 container statuses recorded)
  I0726 12:57:47.166350 23 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0726 12:57:47.166355 23 predicates.go:958] coredns-5d946bb58-9c75c from kube-system started at 2025-07-26 12:09:42 +0000 UTC (1 container statuses recorded)
  I0726 12:57:47.166359 23 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0726 12:57:47.166363 23 predicates.go:958] kube-state-metrics-b84f44f45-hmmkc from kube-system started at 2025-07-26 12:09:42 +0000 UTC (1 container statuses recorded)
  I0726 12:57:47.166367 23 predicates.go:960] 	Container kube-state-metrics ready: true, restart count 0
  I0726 12:57:47.166378 23 predicates.go:958] metrics-server-v0.7.2-7d878b47f8-v6f7l from kube-system started at 2025-07-26 12:09:42 +0000 UTC (2 container statuses recorded)
  I0726 12:57:47.166382 23 predicates.go:960] 	Container metrics-server ready: true, restart count 0
  I0726 12:57:47.166387 23 predicates.go:960] 	Container metrics-server-nanny ready: true, restart count 0
  I0726 12:57:47.166391 23 predicates.go:958] dashboard-metrics-scraper-5cf87bc988-nlxsl from kubernetes-dashboard started at 2025-07-26 12:09:42 +0000 UTC (1 container statuses recorded)
  I0726 12:57:47.166395 23 predicates.go:960] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I0726 12:57:47.166400 23 predicates.go:958] kubernetes-dashboard-6858576c98-5drtf from kubernetes-dashboard started at 2025-07-26 12:09:42 +0000 UTC (1 container statuses recorded)
  I0726 12:57:47.166404 23 predicates.go:960] 	Container kubernetes-dashboard ready: true, restart count 2
  I0726 12:57:47.166409 23 predicates.go:958] sonobuoy-systemd-logs-daemon-set-b24d58e9d81c4ec2-l9c94 from sonobuoy started at 2025-07-26 12:22:10 +0000 UTC (2 container statuses recorded)
  I0726 12:57:47.166413 23 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0726 12:57:47.166418 23 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0726 12:57:47.166422 23 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-72-233 before test
  I0726 12:57:47.170999 23 predicates.go:958] nginx-ingress-controller-kubernetes-worker-ktvqz from ingress-nginx-kubernetes-worker started at 2025-07-26 12:16:51 +0000 UTC (1 container statuses recorded)
  I0726 12:57:47.171013 23 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0726 12:57:47.171019 23 predicates.go:958] calico-node-5sb6s from kube-system started at 2025-07-26 12:19:38 +0000 UTC (1 container statuses recorded)
  I0726 12:57:47.171024 23 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0726 12:57:47.171029 23 predicates.go:958] sonobuoy-e2e-job-99de9743d9bd4869 from sonobuoy started at 2025-07-26 12:22:10 +0000 UTC (2 container statuses recorded)
  I0726 12:57:47.171034 23 predicates.go:960] 	Container e2e ready: true, restart count 0
  I0726 12:57:47.171038 23 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0726 12:57:47.171043 23 predicates.go:958] sonobuoy-systemd-logs-daemon-set-b24d58e9d81c4ec2-mn48h from sonobuoy started at 2025-07-26 12:22:10 +0000 UTC (2 container statuses recorded)
  I0726 12:57:47.171049 23 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0726 12:57:47.171053 23 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 07/26/25 12:57:47.171
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.1855ce7d3ba36364], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/5 nodes are available: 5 Preemption is not helpful for scheduling.] @ 07/26/25 12:57:47.205
  E0726 12:57:47.465787      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:57:48.205311 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-788" for this suite. @ 07/26/25 12:57:48.214
• [1.173 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 07/26/25 12:57:48.224
  I0726 12:57:48.224487 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename svc-latency @ 07/26/25 12:57:48.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:57:48.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:57:48.24
  I0726 12:57:48.243378 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  I0726 12:57:48.256622 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0726 12:57:48.465908      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:57:49.466001      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:57:50.263142      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0726 12:57:50.264317      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0726 12:57:50.384061 23 service_latency.go:351] Created: latency-svc-kkpvc
  I0726 12:57:50.392718 23 service_latency.go:358] Got endpoints: latency-svc-kkpvc [30.15295ms]
  I0726 12:57:50.415259 23 service_latency.go:351] Created: latency-svc-b4gfr
  I0726 12:57:50.423879 23 service_latency.go:358] Got endpoints: latency-svc-b4gfr [31.083591ms]
  I0726 12:57:50.429762 23 service_latency.go:351] Created: latency-svc-nghsw
  I0726 12:57:50.437350 23 service_latency.go:358] Got endpoints: latency-svc-nghsw [44.351042ms]
  I0726 12:57:50.442126 23 service_latency.go:351] Created: latency-svc-4jjq6
  I0726 12:57:50.448430 23 service_latency.go:358] Got endpoints: latency-svc-4jjq6 [55.352365ms]
  I0726 12:57:50.451886 23 service_latency.go:351] Created: latency-svc-gj2ss
  I0726 12:57:50.458543 23 service_latency.go:358] Got endpoints: latency-svc-gj2ss [65.398341ms]
  I0726 12:57:50.462859 23 service_latency.go:351] Created: latency-svc-vzgf5
  E0726 12:57:50.466025      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:57:50.472015 23 service_latency.go:351] Created: latency-svc-dcpg2
  I0726 12:57:50.473059 23 service_latency.go:358] Got endpoints: latency-svc-vzgf5 [79.872387ms]
  I0726 12:57:50.482583 23 service_latency.go:358] Got endpoints: latency-svc-dcpg2 [89.434258ms]
  I0726 12:57:50.482685 23 service_latency.go:351] Created: latency-svc-4lcjn
  I0726 12:57:50.492854 23 service_latency.go:358] Got endpoints: latency-svc-4lcjn [99.6144ms]
  I0726 12:57:50.499462 23 service_latency.go:351] Created: latency-svc-pp4f8
  I0726 12:57:50.507801 23 service_latency.go:358] Got endpoints: latency-svc-pp4f8 [114.539413ms]
  I0726 12:57:50.508750 23 service_latency.go:351] Created: latency-svc-2kwfr
  I0726 12:57:50.519404 23 service_latency.go:358] Got endpoints: latency-svc-2kwfr [126.105827ms]
  I0726 12:57:50.520780 23 service_latency.go:351] Created: latency-svc-vx8v2
  I0726 12:57:50.528684 23 service_latency.go:358] Got endpoints: latency-svc-vx8v2 [135.382229ms]
  I0726 12:57:50.534155 23 service_latency.go:351] Created: latency-svc-4mkm4
  I0726 12:57:50.534933 23 service_latency.go:351] Created: latency-svc-824cz
  I0726 12:57:50.544582 23 service_latency.go:358] Got endpoints: latency-svc-824cz [151.214861ms]
  I0726 12:57:50.545706 23 service_latency.go:358] Got endpoints: latency-svc-4mkm4 [152.376569ms]
  I0726 12:57:50.555342 23 service_latency.go:351] Created: latency-svc-mh7vh
  I0726 12:57:50.561818 23 service_latency.go:358] Got endpoints: latency-svc-mh7vh [168.468721ms]
  I0726 12:57:50.566747 23 service_latency.go:351] Created: latency-svc-qc72m
  I0726 12:57:50.574810 23 service_latency.go:351] Created: latency-svc-tv4dq
  I0726 12:57:50.577264 23 service_latency.go:358] Got endpoints: latency-svc-qc72m [183.873759ms]
  I0726 12:57:50.585147 23 service_latency.go:358] Got endpoints: latency-svc-tv4dq [191.736602ms]
  I0726 12:57:50.585380 23 service_latency.go:351] Created: latency-svc-tkfvk
  I0726 12:57:50.595036 23 service_latency.go:358] Got endpoints: latency-svc-tkfvk [171.128262ms]
  I0726 12:57:50.603668 23 service_latency.go:351] Created: latency-svc-zg5rp
  I0726 12:57:50.610690 23 service_latency.go:351] Created: latency-svc-wpscs
  I0726 12:57:50.614155 23 service_latency.go:358] Got endpoints: latency-svc-zg5rp [176.761462ms]
  I0726 12:57:50.621788 23 service_latency.go:358] Got endpoints: latency-svc-wpscs [173.3016ms]
  I0726 12:57:50.622519 23 service_latency.go:351] Created: latency-svc-ms4f9
  I0726 12:57:50.630509 23 service_latency.go:358] Got endpoints: latency-svc-ms4f9 [171.879946ms]
  I0726 12:57:50.636149 23 service_latency.go:351] Created: latency-svc-f94pt
  I0726 12:57:50.642237 23 service_latency.go:358] Got endpoints: latency-svc-f94pt [169.157076ms]
  I0726 12:57:50.646558 23 service_latency.go:351] Created: latency-svc-7vdzm
  I0726 12:57:50.655026 23 service_latency.go:358] Got endpoints: latency-svc-7vdzm [172.418023ms]
  I0726 12:57:50.655031 23 service_latency.go:351] Created: latency-svc-2x6jw
  I0726 12:57:50.664275 23 service_latency.go:358] Got endpoints: latency-svc-2x6jw [171.391559ms]
  I0726 12:57:50.670257 23 service_latency.go:351] Created: latency-svc-h2pt5
  I0726 12:57:50.677587 23 service_latency.go:351] Created: latency-svc-hvnc5
  I0726 12:57:50.677841 23 service_latency.go:358] Got endpoints: latency-svc-h2pt5 [169.996959ms]
  I0726 12:57:50.686254 23 service_latency.go:358] Got endpoints: latency-svc-hvnc5 [166.825323ms]
  I0726 12:57:50.690089 23 service_latency.go:351] Created: latency-svc-kwvqd
  I0726 12:57:50.698522 23 service_latency.go:358] Got endpoints: latency-svc-kwvqd [169.817458ms]
  I0726 12:57:50.701597 23 service_latency.go:351] Created: latency-svc-r4ktx
  I0726 12:57:50.708392 23 service_latency.go:351] Created: latency-svc-52k2p
  I0726 12:57:50.711572 23 service_latency.go:358] Got endpoints: latency-svc-r4ktx [166.962497ms]
  I0726 12:57:50.721963 23 service_latency.go:358] Got endpoints: latency-svc-52k2p [176.155849ms]
  I0726 12:57:50.725900 23 service_latency.go:351] Created: latency-svc-lgx8n
  I0726 12:57:50.734511 23 service_latency.go:358] Got endpoints: latency-svc-lgx8n [172.664908ms]
  I0726 12:57:50.737437 23 service_latency.go:351] Created: latency-svc-pdlcj
  I0726 12:57:50.745286 23 service_latency.go:358] Got endpoints: latency-svc-pdlcj [168.000595ms]
  I0726 12:57:50.745359 23 service_latency.go:351] Created: latency-svc-ssp5f
  I0726 12:57:50.755802 23 service_latency.go:358] Got endpoints: latency-svc-ssp5f [170.63082ms]
  I0726 12:57:50.760293 23 service_latency.go:351] Created: latency-svc-qx72h
  I0726 12:57:50.768814 23 service_latency.go:358] Got endpoints: latency-svc-qx72h [173.744604ms]
  I0726 12:57:50.770823 23 service_latency.go:351] Created: latency-svc-kq9qt
  I0726 12:57:50.781601 23 service_latency.go:358] Got endpoints: latency-svc-kq9qt [167.41835ms]
  I0726 12:57:50.783787 23 service_latency.go:351] Created: latency-svc-9wwxs
  I0726 12:57:50.793789 23 service_latency.go:358] Got endpoints: latency-svc-9wwxs [171.972525ms]
  I0726 12:57:50.802398 23 service_latency.go:351] Created: latency-svc-qvcnh
  I0726 12:57:50.810447 23 service_latency.go:358] Got endpoints: latency-svc-qvcnh [179.904278ms]
  I0726 12:57:50.813935 23 service_latency.go:351] Created: latency-svc-hqv7w
  I0726 12:57:50.815286 23 service_latency.go:351] Created: latency-svc-bdrrv
  I0726 12:57:50.822485 23 service_latency.go:358] Got endpoints: latency-svc-hqv7w [180.215483ms]
  I0726 12:57:50.825659 23 service_latency.go:358] Got endpoints: latency-svc-bdrrv [170.604588ms]
  I0726 12:57:50.826770 23 service_latency.go:351] Created: latency-svc-8g54c
  I0726 12:57:50.835396 23 service_latency.go:358] Got endpoints: latency-svc-8g54c [171.089137ms]
  I0726 12:57:50.841605 23 service_latency.go:351] Created: latency-svc-dxfz7
  I0726 12:57:50.848801 23 service_latency.go:358] Got endpoints: latency-svc-dxfz7 [170.891987ms]
  I0726 12:57:50.849558 23 service_latency.go:351] Created: latency-svc-klfcb
  I0726 12:57:50.861994 23 service_latency.go:351] Created: latency-svc-g65gv
  I0726 12:57:50.871487 23 service_latency.go:351] Created: latency-svc-r9thc
  I0726 12:57:50.880741 23 service_latency.go:351] Created: latency-svc-mlp7w
  I0726 12:57:50.887907 23 service_latency.go:351] Created: latency-svc-lk9p2
  I0726 12:57:50.893418 23 service_latency.go:358] Got endpoints: latency-svc-klfcb [207.14092ms]
  I0726 12:57:50.900606 23 service_latency.go:351] Created: latency-svc-fst7m
  I0726 12:57:50.908276 23 service_latency.go:351] Created: latency-svc-smnd2
  I0726 12:57:50.919645 23 service_latency.go:351] Created: latency-svc-cg5gl
  I0726 12:57:50.928033 23 service_latency.go:351] Created: latency-svc-9c7nh
  I0726 12:57:50.934581 23 service_latency.go:351] Created: latency-svc-mtsl7
  I0726 12:57:50.943673 23 service_latency.go:358] Got endpoints: latency-svc-g65gv [245.125616ms]
  I0726 12:57:50.947720 23 service_latency.go:351] Created: latency-svc-4fjzx
  I0726 12:57:50.956036 23 service_latency.go:351] Created: latency-svc-sblnb
  I0726 12:57:50.962797 23 service_latency.go:351] Created: latency-svc-s52xr
  I0726 12:57:50.973616 23 service_latency.go:351] Created: latency-svc-hl6bm
  I0726 12:57:50.984623 23 service_latency.go:351] Created: latency-svc-4md9k
  I0726 12:57:50.990418 23 service_latency.go:351] Created: latency-svc-zqq72
  I0726 12:57:50.994423 23 service_latency.go:358] Got endpoints: latency-svc-r9thc [282.823146ms]
  I0726 12:57:50.999650 23 service_latency.go:351] Created: latency-svc-nl7ml
  I0726 12:57:51.016893 23 service_latency.go:351] Created: latency-svc-gc5xp
  I0726 12:57:51.044233 23 service_latency.go:358] Got endpoints: latency-svc-mlp7w [322.241751ms]
  I0726 12:57:51.063163 23 service_latency.go:351] Created: latency-svc-smsjv
  I0726 12:57:51.092511 23 service_latency.go:358] Got endpoints: latency-svc-lk9p2 [357.969125ms]
  I0726 12:57:51.114925 23 service_latency.go:351] Created: latency-svc-hbxtf
  I0726 12:57:51.142957 23 service_latency.go:358] Got endpoints: latency-svc-fst7m [397.641812ms]
  I0726 12:57:51.164956 23 service_latency.go:351] Created: latency-svc-bsqd2
  I0726 12:57:51.192144 23 service_latency.go:358] Got endpoints: latency-svc-smnd2 [436.31347ms]
  I0726 12:57:51.212105 23 service_latency.go:351] Created: latency-svc-4znjq
  I0726 12:57:51.243135 23 service_latency.go:358] Got endpoints: latency-svc-cg5gl [474.290476ms]
  I0726 12:57:51.264184 23 service_latency.go:351] Created: latency-svc-xs59k
  I0726 12:57:51.292259 23 service_latency.go:358] Got endpoints: latency-svc-9c7nh [510.488289ms]
  I0726 12:57:51.315824 23 service_latency.go:351] Created: latency-svc-xmjc4
  I0726 12:57:51.343911 23 service_latency.go:358] Got endpoints: latency-svc-mtsl7 [550.093119ms]
  I0726 12:57:51.361472 23 service_latency.go:351] Created: latency-svc-z5jb5
  I0726 12:57:51.394177 23 service_latency.go:358] Got endpoints: latency-svc-4fjzx [583.699212ms]
  I0726 12:57:51.414671 23 service_latency.go:351] Created: latency-svc-fmd44
  I0726 12:57:51.443684 23 service_latency.go:358] Got endpoints: latency-svc-sblnb [621.172231ms]
  I0726 12:57:51.464917 23 service_latency.go:351] Created: latency-svc-5j5nf
  E0726 12:57:51.467016      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:57:51.493818 23 service_latency.go:358] Got endpoints: latency-svc-s52xr [668.134383ms]
  I0726 12:57:51.513024 23 service_latency.go:351] Created: latency-svc-mw4nf
  I0726 12:57:51.544525 23 service_latency.go:358] Got endpoints: latency-svc-hl6bm [709.087917ms]
  I0726 12:57:51.563655 23 service_latency.go:351] Created: latency-svc-tqcr5
  I0726 12:57:51.592429 23 service_latency.go:358] Got endpoints: latency-svc-4md9k [743.599169ms]
  I0726 12:57:51.612622 23 service_latency.go:351] Created: latency-svc-fwlxq
  I0726 12:57:51.643772 23 service_latency.go:358] Got endpoints: latency-svc-zqq72 [750.325502ms]
  I0726 12:57:51.661196 23 service_latency.go:351] Created: latency-svc-k76vh
  I0726 12:57:51.693465 23 service_latency.go:358] Got endpoints: latency-svc-nl7ml [749.751967ms]
  I0726 12:57:51.713279 23 service_latency.go:351] Created: latency-svc-nvk72
  I0726 12:57:51.744069 23 service_latency.go:358] Got endpoints: latency-svc-gc5xp [749.573263ms]
  I0726 12:57:51.766277 23 service_latency.go:351] Created: latency-svc-vqrj4
  I0726 12:57:51.795258 23 service_latency.go:358] Got endpoints: latency-svc-smsjv [750.990492ms]
  I0726 12:57:51.813932 23 service_latency.go:351] Created: latency-svc-lbqfp
  I0726 12:57:51.844220 23 service_latency.go:358] Got endpoints: latency-svc-hbxtf [751.514841ms]
  I0726 12:57:51.864180 23 service_latency.go:351] Created: latency-svc-plc6m
  I0726 12:57:51.894246 23 service_latency.go:358] Got endpoints: latency-svc-bsqd2 [751.251187ms]
  I0726 12:57:51.915040 23 service_latency.go:351] Created: latency-svc-xtrws
  I0726 12:57:51.943568 23 service_latency.go:358] Got endpoints: latency-svc-4znjq [751.38007ms]
  I0726 12:57:51.962966 23 service_latency.go:351] Created: latency-svc-n75k9
  I0726 12:57:51.994035 23 service_latency.go:358] Got endpoints: latency-svc-xs59k [750.861655ms]
  I0726 12:57:52.023224 23 service_latency.go:351] Created: latency-svc-w2qkn
  I0726 12:57:52.045685 23 service_latency.go:358] Got endpoints: latency-svc-xmjc4 [753.382479ms]
  I0726 12:57:52.070509 23 service_latency.go:351] Created: latency-svc-ntbd9
  I0726 12:57:52.091832 23 service_latency.go:358] Got endpoints: latency-svc-z5jb5 [747.882269ms]
  I0726 12:57:52.112223 23 service_latency.go:351] Created: latency-svc-nf9kz
  I0726 12:57:52.144057 23 service_latency.go:358] Got endpoints: latency-svc-fmd44 [749.839426ms]
  I0726 12:57:52.162101 23 service_latency.go:351] Created: latency-svc-q6qvr
  I0726 12:57:52.194771 23 service_latency.go:358] Got endpoints: latency-svc-5j5nf [751.042518ms]
  I0726 12:57:52.215504 23 service_latency.go:351] Created: latency-svc-jtcg9
  I0726 12:57:52.245665 23 service_latency.go:358] Got endpoints: latency-svc-mw4nf [751.775735ms]
  I0726 12:57:52.264577 23 service_latency.go:351] Created: latency-svc-bbmnf
  I0726 12:57:52.295738 23 service_latency.go:358] Got endpoints: latency-svc-tqcr5 [751.154023ms]
  I0726 12:57:52.313814 23 service_latency.go:351] Created: latency-svc-f47x7
  I0726 12:57:52.343469 23 service_latency.go:358] Got endpoints: latency-svc-fwlxq [751.00392ms]
  I0726 12:57:52.363866 23 service_latency.go:351] Created: latency-svc-z8hbx
  I0726 12:57:52.393674 23 service_latency.go:358] Got endpoints: latency-svc-k76vh [749.852839ms]
  I0726 12:57:52.412552 23 service_latency.go:351] Created: latency-svc-844z5
  I0726 12:57:52.444953 23 service_latency.go:358] Got endpoints: latency-svc-nvk72 [751.428618ms]
  I0726 12:57:52.462569 23 service_latency.go:351] Created: latency-svc-n56p2
  E0726 12:57:52.467798      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:57:52.494395 23 service_latency.go:358] Got endpoints: latency-svc-vqrj4 [750.12694ms]
  I0726 12:57:52.514987 23 service_latency.go:351] Created: latency-svc-8wvdx
  I0726 12:57:52.543717 23 service_latency.go:358] Got endpoints: latency-svc-lbqfp [748.419574ms]
  I0726 12:57:52.563335 23 service_latency.go:351] Created: latency-svc-w77xq
  I0726 12:57:52.594694 23 service_latency.go:358] Got endpoints: latency-svc-plc6m [750.268482ms]
  I0726 12:57:52.613840 23 service_latency.go:351] Created: latency-svc-szkm2
  I0726 12:57:52.643943 23 service_latency.go:358] Got endpoints: latency-svc-xtrws [749.569614ms]
  I0726 12:57:52.664237 23 service_latency.go:351] Created: latency-svc-9l9bt
  I0726 12:57:52.693186 23 service_latency.go:358] Got endpoints: latency-svc-n75k9 [749.524143ms]
  I0726 12:57:52.710194 23 service_latency.go:351] Created: latency-svc-cwmj9
  I0726 12:57:52.745796 23 service_latency.go:358] Got endpoints: latency-svc-w2qkn [751.721906ms]
  I0726 12:57:52.767417 23 service_latency.go:351] Created: latency-svc-hmttx
  I0726 12:57:52.792272 23 service_latency.go:358] Got endpoints: latency-svc-ntbd9 [746.548178ms]
  I0726 12:57:52.813155 23 service_latency.go:351] Created: latency-svc-v9ltc
  I0726 12:57:52.847576 23 service_latency.go:358] Got endpoints: latency-svc-nf9kz [755.69982ms]
  I0726 12:57:52.865046 23 service_latency.go:351] Created: latency-svc-tr5kz
  I0726 12:57:52.896001 23 service_latency.go:358] Got endpoints: latency-svc-q6qvr [751.797077ms]
  I0726 12:57:52.913924 23 service_latency.go:351] Created: latency-svc-42w9p
  I0726 12:57:52.945688 23 service_latency.go:358] Got endpoints: latency-svc-jtcg9 [750.75075ms]
  I0726 12:57:52.965778 23 service_latency.go:351] Created: latency-svc-kmhvh
  I0726 12:57:52.994423 23 service_latency.go:358] Got endpoints: latency-svc-bbmnf [748.717177ms]
  I0726 12:57:53.014132 23 service_latency.go:351] Created: latency-svc-clch5
  I0726 12:57:53.044080 23 service_latency.go:358] Got endpoints: latency-svc-f47x7 [748.299303ms]
  I0726 12:57:53.064229 23 service_latency.go:351] Created: latency-svc-2vr68
  I0726 12:57:53.094080 23 service_latency.go:358] Got endpoints: latency-svc-z8hbx [750.568963ms]
  I0726 12:57:53.115781 23 service_latency.go:351] Created: latency-svc-cwpqx
  I0726 12:57:53.143228 23 service_latency.go:358] Got endpoints: latency-svc-844z5 [749.480323ms]
  I0726 12:57:53.162263 23 service_latency.go:351] Created: latency-svc-7gfzl
  I0726 12:57:53.193800 23 service_latency.go:358] Got endpoints: latency-svc-n56p2 [748.770445ms]
  I0726 12:57:53.212798 23 service_latency.go:351] Created: latency-svc-cs9m2
  I0726 12:57:53.244989 23 service_latency.go:358] Got endpoints: latency-svc-8wvdx [750.555099ms]
  I0726 12:57:53.265421 23 service_latency.go:351] Created: latency-svc-ss8h7
  I0726 12:57:53.293845 23 service_latency.go:358] Got endpoints: latency-svc-w77xq [750.09588ms]
  I0726 12:57:53.313403 23 service_latency.go:351] Created: latency-svc-56dln
  I0726 12:57:53.344297 23 service_latency.go:358] Got endpoints: latency-svc-szkm2 [749.566086ms]
  I0726 12:57:53.362255 23 service_latency.go:351] Created: latency-svc-6dlf2
  I0726 12:57:53.395302 23 service_latency.go:358] Got endpoints: latency-svc-9l9bt [751.309925ms]
  I0726 12:57:53.415583 23 service_latency.go:351] Created: latency-svc-gp9bx
  I0726 12:57:53.445734 23 service_latency.go:358] Got endpoints: latency-svc-cwmj9 [752.507591ms]
  I0726 12:57:53.466055 23 service_latency.go:351] Created: latency-svc-vjww4
  E0726 12:57:53.468303      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:57:53.494769 23 service_latency.go:358] Got endpoints: latency-svc-hmttx [748.925403ms]
  I0726 12:57:53.516899 23 service_latency.go:351] Created: latency-svc-mfzwq
  I0726 12:57:53.546272 23 service_latency.go:358] Got endpoints: latency-svc-v9ltc [753.961833ms]
  I0726 12:57:53.567897 23 service_latency.go:351] Created: latency-svc-fn77j
  I0726 12:57:53.592563 23 service_latency.go:358] Got endpoints: latency-svc-tr5kz [744.94201ms]
  I0726 12:57:53.610801 23 service_latency.go:351] Created: latency-svc-tkxgr
  I0726 12:57:53.643224 23 service_latency.go:358] Got endpoints: latency-svc-42w9p [747.185305ms]
  I0726 12:57:53.660628 23 service_latency.go:351] Created: latency-svc-78kwv
  I0726 12:57:53.695828 23 service_latency.go:358] Got endpoints: latency-svc-kmhvh [750.095538ms]
  I0726 12:57:53.714542 23 service_latency.go:351] Created: latency-svc-5gdzx
  I0726 12:57:53.742830 23 service_latency.go:358] Got endpoints: latency-svc-clch5 [748.372093ms]
  I0726 12:57:53.763267 23 service_latency.go:351] Created: latency-svc-75bhb
  I0726 12:57:53.793089 23 service_latency.go:358] Got endpoints: latency-svc-2vr68 [748.969055ms]
  I0726 12:57:53.811188 23 service_latency.go:351] Created: latency-svc-rm5c2
  I0726 12:57:53.844846 23 service_latency.go:358] Got endpoints: latency-svc-cwpqx [750.727579ms]
  I0726 12:57:53.864884 23 service_latency.go:351] Created: latency-svc-zd9kb
  I0726 12:57:53.896597 23 service_latency.go:358] Got endpoints: latency-svc-7gfzl [753.328669ms]
  I0726 12:57:53.914731 23 service_latency.go:351] Created: latency-svc-4qc85
  I0726 12:57:53.946813 23 service_latency.go:358] Got endpoints: latency-svc-cs9m2 [752.977467ms]
  I0726 12:57:53.964361 23 service_latency.go:351] Created: latency-svc-9zbcg
  I0726 12:57:53.993978 23 service_latency.go:358] Got endpoints: latency-svc-ss8h7 [748.948327ms]
  I0726 12:57:54.013694 23 service_latency.go:351] Created: latency-svc-qwf96
  I0726 12:57:54.042900 23 service_latency.go:358] Got endpoints: latency-svc-56dln [749.019138ms]
  I0726 12:57:54.061102 23 service_latency.go:351] Created: latency-svc-khbks
  I0726 12:57:54.093528 23 service_latency.go:358] Got endpoints: latency-svc-6dlf2 [749.194025ms]
  I0726 12:57:54.113673 23 service_latency.go:351] Created: latency-svc-pc8js
  I0726 12:57:54.144774 23 service_latency.go:358] Got endpoints: latency-svc-gp9bx [748.945053ms]
  I0726 12:57:54.166091 23 service_latency.go:351] Created: latency-svc-qhg9b
  I0726 12:57:54.194272 23 service_latency.go:358] Got endpoints: latency-svc-vjww4 [748.505583ms]
  I0726 12:57:54.213292 23 service_latency.go:351] Created: latency-svc-5d6pf
  I0726 12:57:54.243601 23 service_latency.go:358] Got endpoints: latency-svc-mfzwq [748.791525ms]
  I0726 12:57:54.262814 23 service_latency.go:351] Created: latency-svc-z62b8
  I0726 12:57:54.294075 23 service_latency.go:358] Got endpoints: latency-svc-fn77j [747.75974ms]
  I0726 12:57:54.313522 23 service_latency.go:351] Created: latency-svc-p2zr4
  I0726 12:57:54.343582 23 service_latency.go:358] Got endpoints: latency-svc-tkxgr [750.984574ms]
  I0726 12:57:54.361701 23 service_latency.go:351] Created: latency-svc-rwm22
  I0726 12:57:54.394378 23 service_latency.go:358] Got endpoints: latency-svc-78kwv [751.110174ms]
  I0726 12:57:54.415445 23 service_latency.go:351] Created: latency-svc-hxkbz
  I0726 12:57:54.444701 23 service_latency.go:358] Got endpoints: latency-svc-5gdzx [748.816418ms]
  I0726 12:57:54.464962 23 service_latency.go:351] Created: latency-svc-sgbk9
  E0726 12:57:54.469234      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:57:54.493797 23 service_latency.go:358] Got endpoints: latency-svc-75bhb [750.925171ms]
  I0726 12:57:54.511557 23 service_latency.go:351] Created: latency-svc-pqhml
  I0726 12:57:54.543854 23 service_latency.go:358] Got endpoints: latency-svc-rm5c2 [750.731027ms]
  I0726 12:57:54.564963 23 service_latency.go:351] Created: latency-svc-9bz6g
  I0726 12:57:54.593331 23 service_latency.go:358] Got endpoints: latency-svc-zd9kb [748.45408ms]
  I0726 12:57:54.613562 23 service_latency.go:351] Created: latency-svc-lml26
  I0726 12:57:54.644396 23 service_latency.go:358] Got endpoints: latency-svc-4qc85 [747.70938ms]
  I0726 12:57:54.662318 23 service_latency.go:351] Created: latency-svc-rmq2x
  I0726 12:57:54.693596 23 service_latency.go:358] Got endpoints: latency-svc-9zbcg [746.750389ms]
  I0726 12:57:54.713370 23 service_latency.go:351] Created: latency-svc-rv5n6
  I0726 12:57:54.744017 23 service_latency.go:358] Got endpoints: latency-svc-qwf96 [750.004015ms]
  I0726 12:57:54.765471 23 service_latency.go:351] Created: latency-svc-zbk6j
  I0726 12:57:54.793337 23 service_latency.go:358] Got endpoints: latency-svc-khbks [750.400851ms]
  I0726 12:57:54.815559 23 service_latency.go:351] Created: latency-svc-6g898
  I0726 12:57:54.844231 23 service_latency.go:358] Got endpoints: latency-svc-pc8js [750.662747ms]
  I0726 12:57:54.865081 23 service_latency.go:351] Created: latency-svc-fqk8j
  I0726 12:57:54.894108 23 service_latency.go:358] Got endpoints: latency-svc-qhg9b [749.29215ms]
  I0726 12:57:54.915744 23 service_latency.go:351] Created: latency-svc-kff4k
  I0726 12:57:54.944600 23 service_latency.go:358] Got endpoints: latency-svc-5d6pf [750.295438ms]
  I0726 12:57:54.967170 23 service_latency.go:351] Created: latency-svc-djjmn
  I0726 12:57:54.993883 23 service_latency.go:358] Got endpoints: latency-svc-z62b8 [750.199192ms]
  I0726 12:57:55.013530 23 service_latency.go:351] Created: latency-svc-hsksk
  I0726 12:57:55.043941 23 service_latency.go:358] Got endpoints: latency-svc-p2zr4 [749.827891ms]
  I0726 12:57:55.065572 23 service_latency.go:351] Created: latency-svc-cb8j6
  I0726 12:57:55.093713 23 service_latency.go:358] Got endpoints: latency-svc-rwm22 [750.034597ms]
  I0726 12:57:55.112726 23 service_latency.go:351] Created: latency-svc-ct45t
  I0726 12:57:55.143697 23 service_latency.go:358] Got endpoints: latency-svc-hxkbz [749.024596ms]
  I0726 12:57:55.164230 23 service_latency.go:351] Created: latency-svc-vjd5q
  I0726 12:57:55.192598 23 service_latency.go:358] Got endpoints: latency-svc-sgbk9 [747.86795ms]
  I0726 12:57:55.213071 23 service_latency.go:351] Created: latency-svc-j2x2x
  I0726 12:57:55.244356 23 service_latency.go:358] Got endpoints: latency-svc-pqhml [750.520822ms]
  I0726 12:57:55.262804 23 service_latency.go:351] Created: latency-svc-p9t4r
  I0726 12:57:55.292807 23 service_latency.go:358] Got endpoints: latency-svc-9bz6g [748.904635ms]
  I0726 12:57:55.314312 23 service_latency.go:351] Created: latency-svc-kfdmz
  I0726 12:57:55.342835 23 service_latency.go:358] Got endpoints: latency-svc-lml26 [749.467246ms]
  I0726 12:57:55.364282 23 service_latency.go:351] Created: latency-svc-26pmj
  I0726 12:57:55.395143 23 service_latency.go:358] Got endpoints: latency-svc-rmq2x [750.519544ms]
  I0726 12:57:55.414182 23 service_latency.go:351] Created: latency-svc-6tt4w
  I0726 12:57:55.443429 23 service_latency.go:358] Got endpoints: latency-svc-rv5n6 [749.58646ms]
  I0726 12:57:55.463480 23 service_latency.go:351] Created: latency-svc-2jjt2
  E0726 12:57:55.469695      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:57:55.494593 23 service_latency.go:358] Got endpoints: latency-svc-zbk6j [750.364637ms]
  I0726 12:57:55.515254 23 service_latency.go:351] Created: latency-svc-qh24w
  I0726 12:57:55.544244 23 service_latency.go:358] Got endpoints: latency-svc-6g898 [750.867811ms]
  I0726 12:57:55.563055 23 service_latency.go:351] Created: latency-svc-zp4px
  I0726 12:57:55.595209 23 service_latency.go:358] Got endpoints: latency-svc-fqk8j [750.939865ms]
  I0726 12:57:55.615910 23 service_latency.go:351] Created: latency-svc-frdrs
  I0726 12:57:55.644599 23 service_latency.go:358] Got endpoints: latency-svc-kff4k [750.459027ms]
  I0726 12:57:55.664741 23 service_latency.go:351] Created: latency-svc-trdp5
  I0726 12:57:55.695200 23 service_latency.go:358] Got endpoints: latency-svc-djjmn [750.55139ms]
  I0726 12:57:55.713012 23 service_latency.go:351] Created: latency-svc-bjqbl
  I0726 12:57:55.743692 23 service_latency.go:358] Got endpoints: latency-svc-hsksk [749.749179ms]
  I0726 12:57:55.763805 23 service_latency.go:351] Created: latency-svc-l6kww
  I0726 12:57:55.794359 23 service_latency.go:358] Got endpoints: latency-svc-cb8j6 [750.297527ms]
  I0726 12:57:55.817070 23 service_latency.go:351] Created: latency-svc-zz7r8
  I0726 12:57:55.846711 23 service_latency.go:358] Got endpoints: latency-svc-ct45t [752.947991ms]
  I0726 12:57:55.864792 23 service_latency.go:351] Created: latency-svc-ptzzt
  I0726 12:57:55.894344 23 service_latency.go:358] Got endpoints: latency-svc-vjd5q [750.610813ms]
  I0726 12:57:55.915039 23 service_latency.go:351] Created: latency-svc-nvkbd
  I0726 12:57:55.943324 23 service_latency.go:358] Got endpoints: latency-svc-j2x2x [750.694834ms]
  I0726 12:57:55.963530 23 service_latency.go:351] Created: latency-svc-rqcpk
  I0726 12:57:55.993888 23 service_latency.go:358] Got endpoints: latency-svc-p9t4r [749.493923ms]
  I0726 12:57:56.012901 23 service_latency.go:351] Created: latency-svc-snbs9
  I0726 12:57:56.044367 23 service_latency.go:358] Got endpoints: latency-svc-kfdmz [751.409488ms]
  I0726 12:57:56.064990 23 service_latency.go:351] Created: latency-svc-tbkb6
  I0726 12:57:56.093681 23 service_latency.go:358] Got endpoints: latency-svc-26pmj [750.808466ms]
  I0726 12:57:56.113470 23 service_latency.go:351] Created: latency-svc-qlmjh
  I0726 12:57:56.144778 23 service_latency.go:358] Got endpoints: latency-svc-6tt4w [749.591993ms]
  I0726 12:57:56.164040 23 service_latency.go:351] Created: latency-svc-5mvdt
  I0726 12:57:56.195039 23 service_latency.go:358] Got endpoints: latency-svc-2jjt2 [751.575303ms]
  I0726 12:57:56.215308 23 service_latency.go:351] Created: latency-svc-vckrs
  I0726 12:57:56.245283 23 service_latency.go:358] Got endpoints: latency-svc-qh24w [750.431594ms]
  I0726 12:57:56.265962 23 service_latency.go:351] Created: latency-svc-zfn84
  I0726 12:57:56.294222 23 service_latency.go:358] Got endpoints: latency-svc-zp4px [749.942864ms]
  I0726 12:57:56.313613 23 service_latency.go:351] Created: latency-svc-fqs8s
  I0726 12:57:56.343318 23 service_latency.go:358] Got endpoints: latency-svc-frdrs [748.07132ms]
  I0726 12:57:56.363720 23 service_latency.go:351] Created: latency-svc-ljm5h
  I0726 12:57:56.394087 23 service_latency.go:358] Got endpoints: latency-svc-trdp5 [749.457976ms]
  I0726 12:57:56.414816 23 service_latency.go:351] Created: latency-svc-6nkkx
  I0726 12:57:56.444416 23 service_latency.go:358] Got endpoints: latency-svc-bjqbl [749.182196ms]
  I0726 12:57:56.463053 23 service_latency.go:351] Created: latency-svc-dtz6f
  E0726 12:57:56.470268      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:57:56.492945 23 service_latency.go:358] Got endpoints: latency-svc-l6kww [749.22124ms]
  I0726 12:57:56.511821 23 service_latency.go:351] Created: latency-svc-6p4sm
  I0726 12:57:56.545157 23 service_latency.go:358] Got endpoints: latency-svc-zz7r8 [750.757174ms]
  I0726 12:57:56.565235 23 service_latency.go:351] Created: latency-svc-d7b6g
  I0726 12:57:56.595066 23 service_latency.go:358] Got endpoints: latency-svc-ptzzt [748.291704ms]
  I0726 12:57:56.613491 23 service_latency.go:351] Created: latency-svc-c8k77
  I0726 12:57:56.642898 23 service_latency.go:358] Got endpoints: latency-svc-nvkbd [748.510936ms]
  I0726 12:57:56.663046 23 service_latency.go:351] Created: latency-svc-5m4jr
  I0726 12:57:56.695552 23 service_latency.go:358] Got endpoints: latency-svc-rqcpk [752.18999ms]
  I0726 12:57:56.714812 23 service_latency.go:351] Created: latency-svc-gkrgz
  I0726 12:57:56.744316 23 service_latency.go:358] Got endpoints: latency-svc-snbs9 [750.392399ms]
  I0726 12:57:56.762000 23 service_latency.go:351] Created: latency-svc-mxswx
  I0726 12:57:56.795078 23 service_latency.go:358] Got endpoints: latency-svc-tbkb6 [750.662391ms]
  I0726 12:57:56.813848 23 service_latency.go:351] Created: latency-svc-t8b7x
  I0726 12:57:56.843408 23 service_latency.go:358] Got endpoints: latency-svc-qlmjh [749.684341ms]
  I0726 12:57:56.862169 23 service_latency.go:351] Created: latency-svc-j2dw7
  I0726 12:57:56.894411 23 service_latency.go:358] Got endpoints: latency-svc-5mvdt [749.566128ms]
  I0726 12:57:56.913527 23 service_latency.go:351] Created: latency-svc-jvglc
  I0726 12:57:56.944190 23 service_latency.go:358] Got endpoints: latency-svc-vckrs [749.117231ms]
  I0726 12:57:56.963846 23 service_latency.go:351] Created: latency-svc-fqwtj
  I0726 12:57:56.994401 23 service_latency.go:358] Got endpoints: latency-svc-zfn84 [749.082598ms]
  I0726 12:57:57.014592 23 service_latency.go:351] Created: latency-svc-rml6j
  I0726 12:57:57.046179 23 service_latency.go:358] Got endpoints: latency-svc-fqs8s [751.918831ms]
  I0726 12:57:57.063623 23 service_latency.go:351] Created: latency-svc-sxrdb
  I0726 12:57:57.094143 23 service_latency.go:358] Got endpoints: latency-svc-ljm5h [750.784253ms]
  I0726 12:57:57.115008 23 service_latency.go:351] Created: latency-svc-d4s2g
  I0726 12:57:57.144277 23 service_latency.go:358] Got endpoints: latency-svc-6nkkx [750.140975ms]
  I0726 12:57:57.164532 23 service_latency.go:351] Created: latency-svc-zv89q
  I0726 12:57:57.193980 23 service_latency.go:358] Got endpoints: latency-svc-dtz6f [749.505763ms]
  I0726 12:57:57.212612 23 service_latency.go:351] Created: latency-svc-s8dzz
  I0726 12:57:57.243362 23 service_latency.go:358] Got endpoints: latency-svc-6p4sm [750.380943ms]
  I0726 12:57:57.262792 23 service_latency.go:351] Created: latency-svc-jlwvq
  I0726 12:57:57.294951 23 service_latency.go:358] Got endpoints: latency-svc-d7b6g [749.748708ms]
  I0726 12:57:57.315940 23 service_latency.go:351] Created: latency-svc-5hpck
  I0726 12:57:57.343977 23 service_latency.go:358] Got endpoints: latency-svc-c8k77 [748.876607ms]
  I0726 12:57:57.362197 23 service_latency.go:351] Created: latency-svc-l5nw8
  I0726 12:57:57.394146 23 service_latency.go:358] Got endpoints: latency-svc-5m4jr [751.193769ms]
  I0726 12:57:57.416712 23 service_latency.go:351] Created: latency-svc-2fqvn
  I0726 12:57:57.444735 23 service_latency.go:358] Got endpoints: latency-svc-gkrgz [749.070116ms]
  I0726 12:57:57.465854 23 service_latency.go:351] Created: latency-svc-52cp9
  E0726 12:57:57.471077      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:57:57.493751 23 service_latency.go:358] Got endpoints: latency-svc-mxswx [749.397768ms]
  I0726 12:57:57.513230 23 service_latency.go:351] Created: latency-svc-v8t6g
  I0726 12:57:57.543482 23 service_latency.go:358] Got endpoints: latency-svc-t8b7x [748.370987ms]
  I0726 12:57:57.564525 23 service_latency.go:351] Created: latency-svc-tbjrm
  I0726 12:57:57.594095 23 service_latency.go:358] Got endpoints: latency-svc-j2dw7 [750.65518ms]
  I0726 12:57:57.615680 23 service_latency.go:351] Created: latency-svc-fzjxg
  I0726 12:57:57.644316 23 service_latency.go:358] Got endpoints: latency-svc-jvglc [749.870966ms]
  I0726 12:57:57.663960 23 service_latency.go:351] Created: latency-svc-4s7dw
  I0726 12:57:57.692706 23 service_latency.go:358] Got endpoints: latency-svc-fqwtj [748.48045ms]
  I0726 12:57:57.713048 23 service_latency.go:351] Created: latency-svc-gz2sz
  I0726 12:57:57.744946 23 service_latency.go:358] Got endpoints: latency-svc-rml6j [750.506373ms]
  I0726 12:57:57.766370 23 service_latency.go:351] Created: latency-svc-26ljn
  I0726 12:57:57.796141 23 service_latency.go:358] Got endpoints: latency-svc-sxrdb [749.927724ms]
  I0726 12:57:57.825218 23 service_latency.go:351] Created: latency-svc-mhms7
  I0726 12:57:57.845409 23 service_latency.go:358] Got endpoints: latency-svc-d4s2g [751.231313ms]
  I0726 12:57:57.867381 23 service_latency.go:351] Created: latency-svc-52qnt
  I0726 12:57:57.893582 23 service_latency.go:358] Got endpoints: latency-svc-zv89q [749.26653ms]
  I0726 12:57:57.915612 23 service_latency.go:351] Created: latency-svc-4ql6r
  I0726 12:57:57.944033 23 service_latency.go:358] Got endpoints: latency-svc-s8dzz [750.013617ms]
  I0726 12:57:57.962901 23 service_latency.go:351] Created: latency-svc-l9q6w
  I0726 12:57:57.993511 23 service_latency.go:358] Got endpoints: latency-svc-jlwvq [750.114286ms]
  I0726 12:57:58.012022 23 service_latency.go:351] Created: latency-svc-5kcgx
  I0726 12:57:58.043849 23 service_latency.go:358] Got endpoints: latency-svc-5hpck [748.733991ms]
  I0726 12:57:58.063890 23 service_latency.go:351] Created: latency-svc-9tttd
  I0726 12:57:58.094302 23 service_latency.go:358] Got endpoints: latency-svc-l5nw8 [750.262007ms]
  I0726 12:57:58.113127 23 service_latency.go:351] Created: latency-svc-q86zl
  I0726 12:57:58.144184 23 service_latency.go:358] Got endpoints: latency-svc-2fqvn [749.995811ms]
  I0726 12:57:58.164328 23 service_latency.go:351] Created: latency-svc-mg5gh
  I0726 12:57:58.194827 23 service_latency.go:358] Got endpoints: latency-svc-52cp9 [750.052166ms]
  I0726 12:57:58.214347 23 service_latency.go:351] Created: latency-svc-hpt8v
  I0726 12:57:58.245330 23 service_latency.go:358] Got endpoints: latency-svc-v8t6g [751.493096ms]
  I0726 12:57:58.293330 23 service_latency.go:358] Got endpoints: latency-svc-tbjrm [749.80492ms]
  I0726 12:57:58.344066 23 service_latency.go:358] Got endpoints: latency-svc-fzjxg [749.912053ms]
  I0726 12:57:58.394426 23 service_latency.go:358] Got endpoints: latency-svc-4s7dw [750.062447ms]
  I0726 12:57:58.443819 23 service_latency.go:358] Got endpoints: latency-svc-gz2sz [751.071242ms]
  E0726 12:57:58.471247      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:57:58.494287 23 service_latency.go:358] Got endpoints: latency-svc-26ljn [749.295745ms]
  I0726 12:57:58.548239 23 service_latency.go:358] Got endpoints: latency-svc-mhms7 [752.055127ms]
  I0726 12:57:58.594679 23 service_latency.go:358] Got endpoints: latency-svc-52qnt [749.231874ms]
  I0726 12:57:58.644255 23 service_latency.go:358] Got endpoints: latency-svc-4ql6r [750.5144ms]
  I0726 12:57:58.694845 23 service_latency.go:358] Got endpoints: latency-svc-l9q6w [750.771891ms]
  I0726 12:57:58.743573 23 service_latency.go:358] Got endpoints: latency-svc-5kcgx [750.025174ms]
  I0726 12:57:58.793509 23 service_latency.go:358] Got endpoints: latency-svc-9tttd [749.618212ms]
  I0726 12:57:58.846089 23 service_latency.go:358] Got endpoints: latency-svc-q86zl [751.725572ms]
  I0726 12:57:58.894085 23 service_latency.go:358] Got endpoints: latency-svc-mg5gh [749.728212ms]
  I0726 12:57:58.945063 23 service_latency.go:358] Got endpoints: latency-svc-hpt8v [750.197078ms]
  I0726 12:57:58.945158 23 service_latency.go:114] Latencies: [31.083591ms 44.351042ms 55.352365ms 65.398341ms 79.872387ms 89.434258ms 99.6144ms 114.539413ms 126.105827ms 135.382229ms 151.214861ms 152.376569ms 166.825323ms 166.962497ms 167.41835ms 168.000595ms 168.468721ms 169.157076ms 169.817458ms 169.996959ms 170.604588ms 170.63082ms 170.891987ms 171.089137ms 171.128262ms 171.391559ms 171.879946ms 171.972525ms 172.418023ms 172.664908ms 173.3016ms 173.744604ms 176.155849ms 176.761462ms 179.904278ms 180.215483ms 183.873759ms 191.736602ms 207.14092ms 245.125616ms 282.823146ms 322.241751ms 357.969125ms 397.641812ms 436.31347ms 474.290476ms 510.488289ms 550.093119ms 583.699212ms 621.172231ms 668.134383ms 709.087917ms 743.599169ms 744.94201ms 746.548178ms 746.750389ms 747.185305ms 747.70938ms 747.75974ms 747.86795ms 747.882269ms 748.07132ms 748.291704ms 748.299303ms 748.370987ms 748.372093ms 748.419574ms 748.45408ms 748.48045ms 748.505583ms 748.510936ms 748.717177ms 748.733991ms 748.770445ms 748.791525ms 748.816418ms 748.876607ms 748.904635ms 748.925403ms 748.945053ms 748.948327ms 748.969055ms 749.019138ms 749.024596ms 749.070116ms 749.082598ms 749.117231ms 749.182196ms 749.194025ms 749.22124ms 749.231874ms 749.26653ms 749.29215ms 749.295745ms 749.397768ms 749.457976ms 749.467246ms 749.480323ms 749.493923ms 749.505763ms 749.524143ms 749.566086ms 749.566128ms 749.569614ms 749.573263ms 749.58646ms 749.591993ms 749.618212ms 749.684341ms 749.728212ms 749.748708ms 749.749179ms 749.751967ms 749.80492ms 749.827891ms 749.839426ms 749.852839ms 749.870966ms 749.912053ms 749.927724ms 749.942864ms 749.995811ms 750.004015ms 750.013617ms 750.025174ms 750.034597ms 750.052166ms 750.062447ms 750.095538ms 750.09588ms 750.114286ms 750.12694ms 750.140975ms 750.197078ms 750.199192ms 750.262007ms 750.268482ms 750.295438ms 750.297527ms 750.325502ms 750.364637ms 750.380943ms 750.392399ms 750.400851ms 750.431594ms 750.459027ms 750.506373ms 750.5144ms 750.519544ms 750.520822ms 750.55139ms 750.555099ms 750.568963ms 750.610813ms 750.65518ms 750.662391ms 750.662747ms 750.694834ms 750.727579ms 750.731027ms 750.75075ms 750.757174ms 750.771891ms 750.784253ms 750.808466ms 750.861655ms 750.867811ms 750.925171ms 750.939865ms 750.984574ms 750.990492ms 751.00392ms 751.042518ms 751.071242ms 751.110174ms 751.154023ms 751.193769ms 751.231313ms 751.251187ms 751.309925ms 751.38007ms 751.409488ms 751.428618ms 751.493096ms 751.514841ms 751.575303ms 751.721906ms 751.725572ms 751.775735ms 751.797077ms 751.918831ms 752.055127ms 752.18999ms 752.507591ms 752.947991ms 752.977467ms 753.328669ms 753.382479ms 753.961833ms 755.69982ms]
  I0726 12:57:58.945168 23 service_latency.go:118] 50 %ile: 749.524143ms
  I0726 12:57:58.945174 23 service_latency.go:119] 90 %ile: 751.38007ms
  I0726 12:57:58.945180 23 service_latency.go:120] 99 %ile: 753.961833ms
  I0726 12:57:58.945185 23 service_latency.go:121] Total sample count: 200
  I0726 12:57:58.945270 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-3834" for this suite. @ 07/26/25 12:57:58.952
• [10.738 seconds]
------------------------------
SSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:423
  STEP: Creating a kubernetes client @ 07/26/25 12:57:58.962
  I0726 12:57:58.962287 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename proxy @ 07/26/25 12:57:58.962
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:57:58.977
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:57:58.979
  I0726 12:57:58.982542 23 proxy.go:430] Creating pod...
  E0726 12:57:59.472304      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:58:00.472471      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:58:01.007977 23 proxy.go:454] Creating service...
  I0726 12:58:01.031906 23 proxy.go:491] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6342/pods/agnhost/proxy?method=DELETE
  I0726 12:58:01.039905 23 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0726 12:58:01.040185 23 proxy.go:491] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6342/pods/agnhost/proxy?method=OPTIONS
  I0726 12:58:01.047992 23 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0726 12:58:01.048021 23 proxy.go:491] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6342/pods/agnhost/proxy?method=PATCH
  I0726 12:58:01.055396 23 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0726 12:58:01.055420 23 proxy.go:491] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6342/pods/agnhost/proxy?method=POST
  I0726 12:58:01.061349 23 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0726 12:58:01.061375 23 proxy.go:491] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6342/pods/agnhost/proxy?method=PUT
  I0726 12:58:01.065816 23 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0726 12:58:01.065838 23 proxy.go:502] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6342/services/e2e-proxy-test-service/proxy?method=DELETE
  I0726 12:58:01.074143 23 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0726 12:58:01.074168 23 proxy.go:502] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6342/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0726 12:58:01.083795 23 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0726 12:58:01.083822 23 proxy.go:502] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6342/services/e2e-proxy-test-service/proxy?method=PATCH
  I0726 12:58:01.091310 23 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0726 12:58:01.091347 23 proxy.go:502] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6342/services/e2e-proxy-test-service/proxy?method=POST
  I0726 12:58:01.099916 23 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0726 12:58:01.099936 23 proxy.go:502] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6342/services/e2e-proxy-test-service/proxy?method=PUT
  I0726 12:58:01.110000 23 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0726 12:58:01.110033 23 proxy.go:522] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6342/pods/agnhost/proxy?method=GET
  I0726 12:58:01.114041 23 proxy.go:530] http.Client request:GET StatusCode:301
  I0726 12:58:01.114065 23 proxy.go:522] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6342/services/e2e-proxy-test-service/proxy?method=GET
  I0726 12:58:01.121213 23 proxy.go:530] http.Client request:GET StatusCode:301
  I0726 12:58:01.121245 23 proxy.go:522] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6342/pods/agnhost/proxy?method=HEAD
  I0726 12:58:01.131524 23 proxy.go:530] http.Client request:HEAD StatusCode:301
  I0726 12:58:01.131545 23 proxy.go:522] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6342/services/e2e-proxy-test-service/proxy?method=HEAD
  I0726 12:58:01.138807 23 proxy.go:530] http.Client request:HEAD StatusCode:301
  I0726 12:58:01.138923 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-6342" for this suite. @ 07/26/25 12:58:01.145
• [2.195 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 07/26/25 12:58:01.157
  I0726 12:58:01.157611 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename projected @ 07/26/25 12:58:01.158
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:58:01.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:58:01.175
  STEP: Creating projection with secret that has name projected-secret-test-18f582f3-162f-4960-bb10-c855ba408792 @ 07/26/25 12:58:01.177
  STEP: Creating a pod to test consume secrets @ 07/26/25 12:58:01.183
  E0726 12:58:01.472866      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:58:02.472956      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 12:58:03.206
  I0726 12:58:03.211270 23 output.go:207] Trying to get logs from node ip-172-31-72-233 pod pod-projected-secrets-52bddec7-c782-4410-af0a-e25daa05bd35 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/26/25 12:58:03.225
  I0726 12:58:03.249959 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-729" for this suite. @ 07/26/25 12:58:03.257
• [2.110 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:437
  STEP: Creating a kubernetes client @ 07/26/25 12:58:03.267
  I0726 12:58:03.267920 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename dns @ 07/26/25 12:58:03.268
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:58:03.283
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:58:03.285
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 07/26/25 12:58:03.288
  I0726 12:58:03.301383 23 dns.go:449] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-7703  037f5e4f-aa10-4c77-8a97-2bf709b4e824 20662 1 2025-07-26 12:58:03 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2025-07-26 12:58:03 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-cmsjz,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.53,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-cmsjz,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,SELinuxChangePolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},Resources:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},ObservedGeneration:0,},}
  E0726 12:58:03.473995      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:58:04.474093      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 07/26/25 12:58:05.309
  I0726 12:58:05.309939 23 exec_util.go:63] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-7703 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0726 12:58:05.309955 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0726 12:58:05.309990 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/dns-7703/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&stderr=true&stdout=true)
  I0726 12:58:05.362553 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: Verifying customized DNS server is configured on pod... @ 07/26/25 12:58:05.362
  I0726 12:58:05.362629 23 exec_util.go:63] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-7703 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0726 12:58:05.362668 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0726 12:58:05.362726 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/dns-7703/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&stderr=true&stdout=true)
  I0726 12:58:05.403783 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0726 12:58:05.403870 23 dns.go:451] Deleting pod test-dns-nameservers...
  I0726 12:58:05.423129 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7703" for this suite. @ 07/26/25 12:58:05.43
• [2.172 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:264
  STEP: Creating a kubernetes client @ 07/26/25 12:58:05.439
  I0726 12:58:05.439930 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename dns @ 07/26/25 12:58:05.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:58:05.454
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:58:05.457
  STEP: Creating a test headless service @ 07/26/25 12:58:05.459
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-3167.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-2.dns-test-service-2.dns-3167.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/agnhost_hosts@dns-querier-2;sleep 1; done
   @ 07/26/25 12:58:05.466
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-3167.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-3167.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 07/26/25 12:58:05.466
  STEP: creating a pod to probe DNS @ 07/26/25 12:58:05.466
  STEP: submitting the pod to kubernetes @ 07/26/25 12:58:05.466
  E0726 12:58:05.474759      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:58:06.474897      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:58:07.474969      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/26/25 12:58:07.495
  STEP: looking for the results for each expected name from probers @ 07/26/25 12:58:07.499
  I0726 12:58:07.521168 23 dns_common.go:546] DNS probes using dns-3167/dns-test-3f1c675a-5195-4b6e-8e3b-ef88d5882564 succeeded

  STEP: deleting the pod @ 07/26/25 12:58:07.521
  STEP: deleting the test headless service @ 07/26/25 12:58:07.545
  I0726 12:58:07.557324 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3167" for this suite. @ 07/26/25 12:58:07.562
• [2.132 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:209
  STEP: Creating a kubernetes client @ 07/26/25 12:58:07.571
  I0726 12:58:07.571788 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename emptydir @ 07/26/25 12:58:07.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:58:07.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:58:07.588
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 07/26/25 12:58:07.59
  E0726 12:58:08.475224      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:58:09.475455      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:58:10.475571      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:58:11.475698      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 12:58:11.62
  I0726 12:58:11.624094 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod pod-ded51db4-98aa-42e7-9e04-78e4b8fb6d0f container test-container: <nil>
  STEP: delete the pod @ 07/26/25 12:58:11.633
  I0726 12:58:11.654563 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6978" for this suite. @ 07/26/25 12:58:11.663
• [4.102 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:866
  STEP: Creating a kubernetes client @ 07/26/25 12:58:11.673
  I0726 12:58:11.673998 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename webhook @ 07/26/25 12:58:11.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:58:11.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:58:11.692
  STEP: Setting up server cert @ 07/26/25 12:58:11.717
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/26/25 12:58:11.953
  STEP: Deploying the webhook pod @ 07/26/25 12:58:11.959
  STEP: Wait for the deployment to be ready @ 07/26/25 12:58:11.973
  I0726 12:58:11.985680 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0726 12:58:12.475824      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:58:13.476008      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/26/25 12:58:14.001
  STEP: Verifying the service has paired with the endpoint @ 07/26/25 12:58:14.021
  E0726 12:58:14.476804      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:58:15.021203 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 07/26/25 12:58:15.028
  I0726 12:58:15.055098 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0726 12:58:15.173290 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0726 12:58:15.273797 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0726 12:58:15.375543 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0726 12:58:15.473467 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  E0726 12:58:15.476785      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:58:15.575156 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0726 12:58:15.672302 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0726 12:58:15.772503 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0726 12:58:15.872507 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0726 12:58:15.974668 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0726 12:58:16.072570 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0726 12:58:16.172793 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0726 12:58:16.273541 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0726 12:58:16.372991 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0726 12:58:16.472797 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  E0726 12:58:16.476963      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:58:16.573440 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0726 12:58:16.672452 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0726 12:58:16.772432 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0726 12:58:16.873118 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0726 12:58:16.971470 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0726 12:58:17.071724 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0726 12:58:17.173810 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0726 12:58:17.274591 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0726 12:58:17.372788 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0726 12:58:17.474104 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  E0726 12:58:17.477254      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:58:17.572672 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0726 12:58:17.672105 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0726 12:58:17.772049 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0726 12:58:17.873183 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0726 12:58:17.975141 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0726 12:58:18.072820 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0726 12:58:18.173621 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0726 12:58:18.273882 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0726 12:58:18.373976 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0726 12:58:18.474734 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  E0726 12:58:18.477911      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:58:18.572913 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0726 12:58:18.673824 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0726 12:58:18.774928 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0726 12:58:18.874354 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0726 12:58:18.972512 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0726 12:58:19.073422 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0726 12:58:19.173921 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0726 12:58:19.274013 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0726 12:58:19.373378 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0726 12:58:19.474404 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  E0726 12:58:19.478541      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:58:19.575211 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0726 12:58:19.673030 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0726 12:58:19.774352 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0726 12:58:19.872959 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0726 12:58:19.973722 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0726 12:58:20.074387 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0726 12:58:20.173303 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0726 12:58:20.272470 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0726 12:58:20.373574 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0726 12:58:20.473157 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  E0726 12:58:20.479343      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:58:20.573149 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0726 12:58:20.673924 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0726 12:58:20.773445 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0726 12:58:20.874079 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0726 12:58:20.972108 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  STEP: create the configmap with a random name @ 07/26/25 12:58:21.065
  STEP: verify the configmap is mutated @ 07/26/25 12:58:21.077
  STEP: create the configmap with 'skip-me' name @ 07/26/25 12:58:21.077
  I0726 12:58:21.159612 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4029" for this suite. @ 07/26/25 12:58:21.166
  STEP: Destroying namespace "webhook-markers-5285" for this suite. @ 07/26/25 12:58:21.176
• [9.511 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:754
  STEP: Creating a kubernetes client @ 07/26/25 12:58:21.184
  I0726 12:58:21.184657 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename sched-preemption @ 07/26/25 12:58:21.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:58:21.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:58:21.207
  I0726 12:58:21.227569 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0726 12:58:21.479802      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:58:22.480832      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:58:23.481436      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:58:24.481500      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:58:25.481863      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:58:26.482092      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:58:27.482853      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:58:28.482968      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:58:29.483138      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:58:30.483235      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:58:31.483754      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:58:32.483945      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:58:33.484068      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:58:34.484189      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:58:35.485134      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:58:36.485230      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:58:37.486227      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:58:38.486313      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:58:39.487033      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:58:40.487149      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:58:41.487386      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:58:42.487609      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:58:43.488219      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:58:44.488293      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:58:45.489196      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:58:46.489275      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:58:47.490152      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:58:48.490839      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:58:49.491627      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:58:50.491853      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:58:51.491951      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:58:52.492022      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:58:53.492889      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:58:54.493068      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:58:55.493729      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:58:56.493825      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:58:57.493910      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:58:58.494237      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:58:59.495064      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:59:00.495223      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:59:01.496269      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:59:02.496381      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:59:03.496588      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:59:04.496797      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:59:05.496900      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:59:06.497853      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:59:07.498753      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:59:08.498849      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:59:09.499227      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:59:10.499320      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:59:11.499858      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:59:12.499959      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:59:13.500057      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:59:14.500847      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:59:15.501627      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:59:16.501762      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:59:17.501848      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:59:18.501971      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:59:19.502091      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:59:20.502384      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:59:21.235021 23 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 07/26/25 12:59:21.241
  I0726 12:59:21.241720 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename sched-preemption-path @ 07/26/25 12:59:21.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:59:21.256
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:59:21.258
  STEP: Finding an available node @ 07/26/25 12:59:21.261
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 07/26/25 12:59:21.261
  E0726 12:59:21.502858      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:59:22.502939      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 07/26/25 12:59:23.286
  I0726 12:59:23.302873 23 preemption.go:717] found a healthy node: ip-172-31-16-254
  STEP: Adding a custom resource @ 07/26/25 12:59:23.308
  E0726 12:59:23.503518      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:59:24.503596      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:59:25.504566      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:59:26.504725      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:59:27.504827      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:59:28.504878      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:59:29.384564 23 preemption.go:836] pods created so far: [1 1 1]
  I0726 12:59:29.384592 23 preemption.go:837] length of pods created so far: 3
  E0726 12:59:29.505426      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:59:30.506397      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:59:31.398501 23 preemption.go:854] pods created so far: [2 2 1]
  E0726 12:59:31.506764      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:59:32.506970      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:59:33.507027      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:59:34.507234      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:59:35.507409      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:59:36.507604      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:59:37.507770      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 07/26/25 12:59:38.399
  STEP: Removing a custom resource @ 07/26/25 12:59:38.479
  STEP: Removing a custom resource @ 07/26/25 12:59:38.491
  STEP: Removing a custom resource @ 07/26/25 12:59:38.501
  E0726 12:59:38.507910      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:59:38.512502 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-4896" for this suite. @ 07/26/25 12:59:38.519
  I0726 12:59:38.529169 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1599" for this suite. @ 07/26/25 12:59:38.62
• [77.446 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:838
  STEP: Creating a kubernetes client @ 07/26/25 12:59:38.631
  I0726 12:59:38.631107 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename svcaccounts @ 07/26/25 12:59:38.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:59:38.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:59:38.648
  STEP: Creating ServiceAccount "e2e-sa-t4p4p"  @ 07/26/25 12:59:38.65
  I0726 12:59:38.656784 23 service_accounts.go:853] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-t4p4p"  @ 07/26/25 12:59:38.656
  I0726 12:59:38.666543 23 service_accounts.go:867] AutomountServiceAccountToken: true
  I0726 12:59:38.666625 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3795" for this suite. @ 07/26/25 12:59:38.721
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 07/26/25 12:59:38.732
  I0726 12:59:38.732101 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename field-validation @ 07/26/25 12:59:38.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:59:38.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:59:38.75
  I0726 12:59:38.753247 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  E0726 12:59:39.508464      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:59:40.508676      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:59:41.288494      23 warnings.go:110] "Warning: unknown field \"alpha\""
  I0726 12:59:41.288514      23 warnings.go:110] "Warning: unknown field \"beta\""
  I0726 12:59:41.288520      23 warnings.go:110] "Warning: unknown field \"delta\""
  I0726 12:59:41.288525      23 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0726 12:59:41.288529      23 warnings.go:110] "Warning: unknown field \"gamma\""
  E0726 12:59:41.509544      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:59:41.841379 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-456" for this suite. @ 07/26/25 12:59:41.848
• [3.126 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:149
  STEP: Creating a kubernetes client @ 07/26/25 12:59:41.858
  I0726 12:59:41.858283 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename emptydir @ 07/26/25 12:59:41.858
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:59:41.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:59:41.875
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 07/26/25 12:59:41.878
  E0726 12:59:42.509648      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:59:43.509786      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:59:44.510843      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:59:45.510954      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 12:59:45.909
  I0726 12:59:45.914347 23 output.go:207] Trying to get logs from node ip-172-31-72-233 pod pod-f3c0486f-6ef8-400e-8650-ba4cfb4bddf5 container test-container: <nil>
  STEP: delete the pod @ 07/26/25 12:59:45.933
  I0726 12:59:45.958252 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6858" for this suite. @ 07/26/25 12:59:45.964
• [4.115 seconds]
------------------------------
S
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 07/26/25 12:59:45.973
  I0726 12:59:45.973549 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename lease-test @ 07/26/25 12:59:45.974
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:59:45.989
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:59:45.991
  I0726 12:59:46.074579 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-2222" for this suite. @ 07/26/25 12:59:46.081
• [0.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:841
  STEP: Creating a kubernetes client @ 07/26/25 12:59:46.09
  I0726 12:59:46.090450 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename webhook @ 07/26/25 12:59:46.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:59:46.106
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:59:46.108
  STEP: Setting up server cert @ 07/26/25 12:59:46.131
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/26/25 12:59:46.231
  STEP: Deploying the webhook pod @ 07/26/25 12:59:46.238
  STEP: Wait for the deployment to be ready @ 07/26/25 12:59:46.255
  I0726 12:59:46.271766 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0726 12:59:46.511011      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:59:47.511303      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/26/25 12:59:48.289
  STEP: Verifying the service has paired with the endpoint @ 07/26/25 12:59:48.311
  E0726 12:59:48.511493      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:59:49.311747 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 07/26/25 12:59:49.317
  I0726 12:59:49.384675 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5259" for this suite. @ 07/26/25 12:59:49.393
  STEP: Destroying namespace "webhook-markers-8410" for this suite. @ 07/26/25 12:59:49.403
• [3.321 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 07/26/25 12:59:49.411
  I0726 12:59:49.411814 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename webhook @ 07/26/25 12:59:49.412
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:59:49.427
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:59:49.43
  STEP: Setting up server cert @ 07/26/25 12:59:49.453
  E0726 12:59:49.511717      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/26/25 12:59:49.539
  STEP: Deploying the webhook pod @ 07/26/25 12:59:49.544
  STEP: Wait for the deployment to be ready @ 07/26/25 12:59:49.562
  I0726 12:59:49.577194 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0726 12:59:50.511793      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:59:51.512854      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/26/25 12:59:51.592
  STEP: Verifying the service has paired with the endpoint @ 07/26/25 12:59:51.615
  E0726 12:59:52.513684      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 12:59:52.615937 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 07/26/25 12:59:52.623
  STEP: create a pod that should be updated by the webhook @ 07/26/25 12:59:52.639
  I0726 12:59:52.731593 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1322" for this suite. @ 07/26/25 12:59:52.737
  STEP: Destroying namespace "webhook-markers-7698" for this suite. @ 07/26/25 12:59:52.746
• [3.345 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 07/26/25 12:59:52.756
  I0726 12:59:52.756982 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename pod-network-test @ 07/26/25 12:59:52.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 12:59:52.773
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 12:59:52.776
  STEP: Performing setup for networking test in namespace pod-network-test-677 @ 07/26/25 12:59:52.779
  STEP: creating a selector @ 07/26/25 12:59:52.779
  STEP: Creating the service pods in kubernetes @ 07/26/25 12:59:52.779
  I0726 12:59:52.779360 23 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0726 12:59:53.514312      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:59:54.514553      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:59:55.514691      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:59:56.514864      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:59:57.515627      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:59:58.515804      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 12:59:59.516062      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:00:00.516151      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:00:01.516321      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:00:02.516526      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:00:03.516822      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:00:04.516940      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:00:05.517858      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:00:06.517950      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 07/26/25 13:00:06.946
  E0726 13:00:07.519014      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:00:08.519086      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:00:08.970813 23 utils.go:802] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0726 13:00:08.970848 23 networking.go:42] Breadth first check of 192.168.58.218 on host 172.31.16.254...
  I0726 13:00:08.975319 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.58.219:9080/dial?request=hostname&protocol=http&host=192.168.58.218&port=8083&tries=1'] Namespace:pod-network-test-677 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0726 13:00:08.975339 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0726 13:00:08.975375 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-677/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.58.219%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.58.218%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0726 13:00:09.022915 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0726 13:00:09.023053 23 utils.go:355] Waiting for responses: map[]
  I0726 13:00:09.023076 23 utils.go:359] reached 192.168.58.218 after 0/1 tries
  I0726 13:00:09.023085 23 networking.go:42] Breadth first check of 192.168.248.176 on host 172.31.3.117...
  I0726 13:00:09.028694 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.58.219:9080/dial?request=hostname&protocol=http&host=192.168.248.176&port=8083&tries=1'] Namespace:pod-network-test-677 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0726 13:00:09.028711 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0726 13:00:09.028747 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-677/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.58.219%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.248.176%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0726 13:00:09.067761 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0726 13:00:09.067808 23 utils.go:355] Waiting for responses: map[]
  I0726 13:00:09.067816 23 utils.go:359] reached 192.168.248.176 after 0/1 tries
  I0726 13:00:09.067824 23 networking.go:42] Breadth first check of 192.168.13.59 on host 172.31.72.233...
  I0726 13:00:09.072851 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.58.219:9080/dial?request=hostname&protocol=http&host=192.168.13.59&port=8083&tries=1'] Namespace:pod-network-test-677 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0726 13:00:09.072868 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0726 13:00:09.072938 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-677/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.58.219%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.13.59%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0726 13:00:09.112307 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0726 13:00:09.112343 23 utils.go:355] Waiting for responses: map[]
  I0726 13:00:09.112352 23 utils.go:359] reached 192.168.13.59 after 0/1 tries
  I0726 13:00:09.112360 23 networking.go:53] Going to retry 0 out of 3 pods....
  I0726 13:00:09.112452 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-677" for this suite. @ 07/26/25 13:00:09.119
• [16.372 seconds]
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 07/26/25 13:00:09.128
  I0726 13:00:09.128947 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename kubelet-test @ 07/26/25 13:00:09.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:00:09.144
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:00:09.147
  STEP: Waiting for pod completion @ 07/26/25 13:00:09.162
  E0726 13:00:09.519757      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:00:10.519876      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:00:11.520600      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:00:12.521679      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:00:13.190171 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-871" for this suite. @ 07/26/25 13:00:13.197
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 07/26/25 13:00:13.207
  I0726 13:00:13.207188 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename daemonsets @ 07/26/25 13:00:13.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:00:13.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:00:13.225
  I0726 13:00:13.312470 23 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 07/26/25 13:00:13.321
  I0726 13:00:13.327271 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0726 13:00:13.327291 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 07/26/25 13:00:13.327
  I0726 13:00:13.427715 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0726 13:00:13.427752 23 fixtures.go:131] Node ip-172-31-72-233 is running 0 daemon pod, expected 1
  E0726 13:00:13.521842      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:00:14.417532 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0726 13:00:14.417565 23 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 07/26/25 13:00:14.422
  I0726 13:00:14.441989 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0726 13:00:14.442011 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  E0726 13:00:14.522278      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:00:15.444240 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0726 13:00:15.444272 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 07/26/25 13:00:15.444
  I0726 13:00:15.482866 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0726 13:00:15.482895 23 fixtures.go:131] Node ip-172-31-72-233 is running 0 daemon pod, expected 1
  E0726 13:00:15.523042      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:00:16.459308 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0726 13:00:16.459344 23 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 07/26/25 13:00:16.47
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3894, will wait for the garbage collector to delete the pods @ 07/26/25 13:00:16.47
  E0726 13:00:16.523199      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:00:16.535713 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 9.456234ms
  I0726 13:00:16.635883 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.164546ms
  E0726 13:00:17.524175      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:00:18.341626 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0726 13:00:18.341684 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0726 13:00:18.348283 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"23104"},"items":null}

  I0726 13:00:18.352598 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"23104"},"items":null}

  I0726 13:00:18.382919 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3894" for this suite. @ 07/26/25 13:00:18.388
• [5.190 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 07/26/25 13:00:18.397
  I0726 13:00:18.397210 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename kubelet-test @ 07/26/25 13:00:18.398
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:00:18.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:00:18.416
  I0726 13:00:18.451893 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-1648" for this suite. @ 07/26/25 13:00:18.458
• [0.071 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Job with successPolicy should succeeded when all indexes succeeded [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:485
  STEP: Creating a kubernetes client @ 07/26/25 13:00:18.468
  I0726 13:00:18.468215 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename job @ 07/26/25 13:00:18.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:00:18.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:00:18.485
  STEP: Creating an indexed job with successPolicy @ 07/26/25 13:00:18.487
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet with SuccessPolicy reason condition @ 07/26/25 13:00:18.493
  E0726 13:00:18.524881      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:00:19.525228      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:00:20.525717      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:00:21.525855      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensure that the job reaches completions @ 07/26/25 13:00:22.511
  STEP: Verifying that the job status to ensure correct final state @ 07/26/25 13:00:22.521
  E0726 13:00:22.525948      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:00:22.526061 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4908" for this suite. @ 07/26/25 13:00:22.531
• [4.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 07/26/25 13:00:22.54
  I0726 13:00:22.540990 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename field-validation @ 07/26/25 13:00:22.541
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:00:22.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:00:22.557
  I0726 13:00:22.560623 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  E0726 13:00:23.526988      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:00:24.527148      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:00:25.095432      23 warnings.go:110] "Warning: unknown field \"alpha\""
  I0726 13:00:25.095451      23 warnings.go:110] "Warning: unknown field \"beta\""
  I0726 13:00:25.095456      23 warnings.go:110] "Warning: unknown field \"delta\""
  I0726 13:00:25.095461      23 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0726 13:00:25.095467      23 warnings.go:110] "Warning: unknown field \"gamma\""
  E0726 13:00:25.527903      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:00:25.648998 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5905" for this suite. @ 07/26/25 13:00:25.656
• [3.127 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:236
  STEP: Creating a kubernetes client @ 07/26/25 13:00:25.667
  I0726 13:00:25.667753 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename downward-api @ 07/26/25 13:00:25.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:00:25.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:00:25.684
  STEP: Creating a pod to test downward API volume plugin @ 07/26/25 13:00:25.686
  E0726 13:00:26.528805      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:00:27.528949      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:00:28.529035      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:00:29.529126      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 13:00:29.717
  I0726 13:00:29.721614 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod downwardapi-volume-0d6a33f6-adaf-415a-8ca1-6eaf18eabc35 container client-container: <nil>
  STEP: delete the pod @ 07/26/25 13:00:29.736
  I0726 13:00:29.761666 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4689" for this suite. @ 07/26/25 13:00:29.768
• [4.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 07/26/25 13:00:29.777
  I0726 13:00:29.777476 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename container-probe @ 07/26/25 13:00:29.778
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:00:29.79
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:00:29.792
  STEP: Creating pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535 @ 07/26/25 13:00:29.795
  E0726 13:00:30.529232      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:00:31.529301      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/26/25 13:00:31.82
  I0726 13:00:31.826458 23 container_probe.go:1748] Initial restart count of pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 is 0
  I0726 13:00:31.830892 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:00:32.529841      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:00:33.530837      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:00:33.835979 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:00:34.531855      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:00:35.531939      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:00:35.841147 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:00:36.532856      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:00:37.533685      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:00:37.847816 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:00:38.534566      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:00:39.534806      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:00:39.853619 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:00:40.534912      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:00:41.534981      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:00:41.859880 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:00:42.535460      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:00:43.535590      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:00:43.867393 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:00:44.535892      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:00:45.536094      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:00:45.873321 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:00:46.536184      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:00:47.537012      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:00:47.880582 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:00:48.537277      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:00:49.537373      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:00:49.886696 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:00:50.537429      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:00:51.537854      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:00:51.891971 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:00:52.538837      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:00:53.538902      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:00:53.898466 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:00:54.539041      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:00:55.539138      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:00:55.904690 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:00:56.539219      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:00:57.539393      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:00:57.911496 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:00:58.539860      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:00:59.539942      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:00:59.917345 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:01:00.540862      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:01:01.540931      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:01:01.924268 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:01:02.540994      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:01:03.541842      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:01:03.929443 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:01:04.542006      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:01:05.542087      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:01:05.936119 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:01:06.542857      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:01:07.543125      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:01:07.942775 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:01:08.543246      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:01:09.543417      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:01:09.949536 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:01:10.544243      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:01:11.544491      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:01:11.956835 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:01:12.544561      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:01:13.544678      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:01:13.964148 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:01:14.544800      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:01:15.544876      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:01:15.969779 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:01:16.545068      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:01:17.545569      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:01:17.976027 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:01:18.545707      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:01:19.545829      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:01:19.981915 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:01:20.546595      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:01:21.546825      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:01:21.988215 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:01:22.547068      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:01:23.547175      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:01:23.993480 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:01:24.548182      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:01:25.548304      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:01:25.999983 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:01:26.548432      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:01:27.549348      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:01:28.006017 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:01:28.549606      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:01:29.549818      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:01:30.010976 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:01:30.550593      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:01:31.550779      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:01:32.017083 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:01:32.551838      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:01:33.553346      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:01:34.022205 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:01:34.553787      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:01:35.553861      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:01:36.027767 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:01:36.554003      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:01:37.554138      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:01:38.033423 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:01:38.555030      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:01:39.555198      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:01:40.038382 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:01:40.556012      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:01:41.556109      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:01:42.045891 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:01:42.556650      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:01:43.556848      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:01:44.052587 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:01:44.556887      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:01:45.557005      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:01:46.059978 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:01:46.557238      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:01:47.558083      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:01:48.067001 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:01:48.558367      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:01:49.558565      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:01:50.073404 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:01:50.558810      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:01:51.559863      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:01:52.080830 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:01:52.560472      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:01:53.570870      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:01:54.087024 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:01:54.570869      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:01:55.571063      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:01:56.093602 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:01:56.571117      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:01:57.571990      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:01:58.099951 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:01:58.572440      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:01:59.572868      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:02:00.106368 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:02:00.572935      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:02:01.573129      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:02:02.112315 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:02:02.574101      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:02:03.574204      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:02:04.117709 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:02:04.574294      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:02:05.574384      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:02:06.122968 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:02:06.574442      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:02:07.575505      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:02:08.129649 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:02:08.575863      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:02:09.575985      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:02:10.135322 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:02:10.577016      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:02:11.577103      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:02:12.141899 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:02:12.577592      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:02:13.577794      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:02:14.148410 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:02:14.577872      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:02:15.577946      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:02:16.156067 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:02:16.578679      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:02:17.579679      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:02:18.162879 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:02:18.580375      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:02:19.580456      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:02:20.167885 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:02:20.581427      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:02:21.581630      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:02:22.173114 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:02:22.581738      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:02:23.581814      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:02:24.178600 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:02:24.582054      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:02:25.582122      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:02:26.185326 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:02:26.582863      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:02:27.582890      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:02:28.190371 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:02:28.583923      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:02:29.584131      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:02:30.196057 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:02:30.584537      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:02:31.584702      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:02:32.201598 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:02:32.585233      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:02:33.585295      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:02:34.208707 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:02:34.586242      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:02:35.586345      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:02:36.215359 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:02:36.586736      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:02:37.587141      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:02:38.221789 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:02:38.587224      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:02:39.587345      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:02:40.229205 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:02:40.587651      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:02:41.587890      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:02:42.234781 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:02:42.588334      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:02:43.588398      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:02:44.239964 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:02:44.589372      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:02:45.589446      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:02:46.246700 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:02:46.589875      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:02:47.589919      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:02:48.252590 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:02:48.590849      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:02:49.590949      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:02:50.260680 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:02:50.591859      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:02:51.592062      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:02:52.266816 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:02:52.592478      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:02:53.592581      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:02:54.274346 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:02:54.592706      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:02:55.592771      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:02:56.279608 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:02:56.592922      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:02:57.593214      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:02:58.286659 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:02:58.594251      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:02:59.594464      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:03:00.292951 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:03:00.595413      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:03:01.595555      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:03:02.298395 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:03:02.595761      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:03:03.595790      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:03:04.303996 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:03:04.596524      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:03:05.596752      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:03:06.309916 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:03:06.597423      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:03:07.598131      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:03:08.315506 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:03:08.598863      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:03:09.598929      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:03:10.322296 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:03:10.599660      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:03:11.599794      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:03:12.328907 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:03:12.600396      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:03:13.600493      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:03:14.335380 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:03:14.600667      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:03:15.600798      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:03:16.340735 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:03:16.600873      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:03:17.601035      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:03:18.346860 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:03:18.601157      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:03:19.601218      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:03:20.352197 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:03:20.601374      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:03:21.601443      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:03:22.358026 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:03:22.602535      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:03:23.602612      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:03:24.365256 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:03:24.603661      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:03:25.603849      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:03:26.371323 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:03:26.604621      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:03:27.605613      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:03:28.377624 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:03:28.605751      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:03:29.605947      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:03:30.384604 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:03:30.606951      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:03:31.607175      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:03:32.390846 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:03:32.608216      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:03:33.608369      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:03:34.397133 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:03:34.608413      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:03:35.608571      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:03:36.403578 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:03:36.608848      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:03:37.608893      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:03:38.408930 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:03:38.609221      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:03:39.609299      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:03:40.415447 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:03:40.609759      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:03:41.609845      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:03:42.422025 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:03:42.610385      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:03:43.610462      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:03:44.428102 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:03:44.611397      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:03:45.611607      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:03:46.435275 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:03:46.612564      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:03:47.612758      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:03:48.441888 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:03:48.613320      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:03:49.613411      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:03:50.448216 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:03:50.614450      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:03:51.614557      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:03:52.455812 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:03:52.615176      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:03:53.615515      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:03:54.461883 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:03:54.616229      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:03:55.616307      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:03:56.468710 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:03:56.616944      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:03:57.617168      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:03:58.474296 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:03:58.617658      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:03:59.618485      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:04:00.480446 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:04:00.618566      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:04:01.619486      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:04:02.487616 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:04:02.619820      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:04:03.620820      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:04:04.495228 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:04:04.621449      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:04:05.621654      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:04:06.501354 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:04:06.622444      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:04:07.622508      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:04:08.507968 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:04:08.623226      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:04:09.623449      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:04:10.513034 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:04:10.624311      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:04:11.624840      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:04:12.519519 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:04:12.625728      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:04:13.625908      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:04:14.526576 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:04:14.626842      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:04:15.627020      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:04:16.531568 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:04:16.627747      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:04:17.628606      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:04:18.536857 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:04:18.629000      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:04:19.629101      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:04:20.542043 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:04:20.629215      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:04:21.629830      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:04:22.549426 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:04:22.630703      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:04:23.630833      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:04:24.555319 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:04:24.631490      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:04:25.631615      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:04:26.562124 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:04:26.632232      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:04:27.633081      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:04:28.568161 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:04:28.633366      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:04:29.633546      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:04:30.574535 23 container_probe.go:1758] Get pod test-grpc-6a6b851c-e8f9-4364-8d9a-c0b7c17d67f5 in namespace container-probe-9535
  E0726 13:04:30.633602      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:04:31.633753      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 07/26/25 13:04:32.574
  I0726 13:04:32.593332 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9535" for this suite. @ 07/26/25 13:04:32.599
• [242.831 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 07/26/25 13:04:32.608
  I0726 13:04:32.608527 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename container-runtime @ 07/26/25 13:04:32.609
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:04:32.625
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:04:32.628
  STEP: create the container @ 07/26/25 13:04:32.63
  E0726 13:04:32.634456      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:04:32.642510      23 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 07/26/25 13:04:32.642
  E0726 13:04:33.634784      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:04:34.634876      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:04:35.634989      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: get the container status @ 07/26/25 13:04:35.665
  STEP: the container should be terminated @ 07/26/25 13:04:35.67
  STEP: the termination message should be set @ 07/26/25 13:04:35.67
  I0726 13:04:35.670974 23 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 07/26/25 13:04:35.67
  I0726 13:04:35.694898 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6456" for this suite. @ 07/26/25 13:04:35.702
• [3.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job with successPolicy succeededCount rule should succeeded even when some indexes remain pending [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:567
  STEP: Creating a kubernetes client @ 07/26/25 13:04:35.711
  I0726 13:04:35.711380 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename job @ 07/26/25 13:04:35.711
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:04:35.725
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:04:35.728
  STEP: Creating an indexed job with successPolicy succeededCount rule @ 07/26/25 13:04:35.73
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet condition with SuccessPolicy reason @ 07/26/25 13:04:35.738
  E0726 13:04:36.635135      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:04:37.635254      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:04:38.635294      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:04:39.635519      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensure that the job reaches completions @ 07/26/25 13:04:39.753
  STEP: Verifying that the job status to ensure correct final state @ 07/26/25 13:04:39.763
  I0726 13:04:39.768317 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4831" for this suite. @ 07/26/25 13:04:39.774
• [4.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 07/26/25 13:04:39.787
  I0726 13:04:39.787165 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename proxy @ 07/26/25 13:04:39.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:04:39.804
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:04:39.807
  STEP: starting an echo server on multiple ports @ 07/26/25 13:04:39.83
  I0726 13:04:39.851744 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0726 13:04:40.635688      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:04:41.635769      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:04:41.875266      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0726 13:04:41.875323 23 proxy.go:273] setup took 2.065392197s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 07/26/25 13:04:41.875
  I0726 13:04:41.881199 23 proxy.go:601] (0) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:162/proxy/: bar (200; 5.81376ms)
  I0726 13:04:41.881228 23 proxy.go:601] (0) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:160/proxy/: foo (200; 5.57124ms)
  I0726 13:04:41.881612 23 proxy.go:601] (0) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt/proxy/rewriteme"... (200; 6.068082ms)
  I0726 13:04:41.882469 23 proxy.go:601] (0) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/rewri... (200; 6.721045ms)
  I0726 13:04:41.882844 23 proxy.go:601] (0) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:160/proxy/: foo (200; 7.165242ms)
  I0726 13:04:41.883354 23 proxy.go:601] (0) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:162/proxy/: bar (200; 7.638014ms)
  I0726 13:04:41.883444 23 proxy.go:601] (0) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/... (200; 7.85914ms)
  I0726 13:04:41.884082 23 proxy.go:601] (0) /api/v1/namespaces/proxy-1362/services/proxy-service-9x9w9:portname2/proxy/: bar (200; 8.356676ms)
  I0726 13:04:41.886222 23 proxy.go:601] (0) /api/v1/namespaces/proxy-1362/services/http:proxy-service-9x9w9:portname1/proxy/: foo (200; 10.695017ms)
  I0726 13:04:41.886417 23 proxy.go:601] (0) /api/v1/namespaces/proxy-1362/services/http:proxy-service-9x9w9:portname2/proxy/: bar (200; 10.921673ms)
  I0726 13:04:41.889604 23 proxy.go:601] (0) /api/v1/namespaces/proxy-1362/services/proxy-service-9x9w9:portname1/proxy/: foo (200; 13.896052ms)
  I0726 13:04:41.891749 23 proxy.go:601] (0) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:462/proxy/: tls qux (200; 16.050559ms)
  I0726 13:04:41.891767 23 proxy.go:601] (0) /api/v1/namespaces/proxy-1362/services/https:proxy-service-9x9w9:tlsportname2/proxy/: tls qux (200; 16.088476ms)
  I0726 13:04:41.891826 23 proxy.go:601] (0) /api/v1/namespaces/proxy-1362/services/https:proxy-service-9x9w9:tlsportname1/proxy/: tls baz (200; 16.211889ms)
  I0726 13:04:41.891843 23 proxy.go:601] (0) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:460/proxy/: tls baz (200; 16.150323ms)
  I0726 13:04:41.892344 23 proxy.go:601] (0) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:443/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:443/proxy/... (200; 16.665745ms)
  I0726 13:04:41.897527 23 proxy.go:601] (1) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:462/proxy/: tls qux (200; 5.157876ms)
  I0726 13:04:41.897527 23 proxy.go:601] (1) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:460/proxy/: tls baz (200; 4.963563ms)
  I0726 13:04:41.898403 23 proxy.go:601] (1) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:160/proxy/: foo (200; 5.74754ms)
  I0726 13:04:41.898667 23 proxy.go:601] (1) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:162/proxy/: bar (200; 6.156084ms)
  I0726 13:04:41.899443 23 proxy.go:601] (1) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/rewri... (200; 6.953824ms)
  I0726 13:04:41.899564 23 proxy.go:601] (1) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:443/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:443/proxy/... (200; 6.893757ms)
  I0726 13:04:41.900003 23 proxy.go:601] (1) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:162/proxy/: bar (200; 7.580451ms)
  I0726 13:04:41.900038 23 proxy.go:601] (1) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:160/proxy/: foo (200; 7.497041ms)
  I0726 13:04:41.900049 23 proxy.go:601] (1) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt/proxy/rewriteme"... (200; 7.428435ms)
  I0726 13:04:41.900274 23 proxy.go:601] (1) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/... (200; 7.682179ms)
  I0726 13:04:41.900736 23 proxy.go:601] (1) /api/v1/namespaces/proxy-1362/services/http:proxy-service-9x9w9:portname1/proxy/: foo (200; 8.129478ms)
  I0726 13:04:41.901649 23 proxy.go:601] (1) /api/v1/namespaces/proxy-1362/services/http:proxy-service-9x9w9:portname2/proxy/: bar (200; 9.21028ms)
  I0726 13:04:41.901651 23 proxy.go:601] (1) /api/v1/namespaces/proxy-1362/services/https:proxy-service-9x9w9:tlsportname1/proxy/: tls baz (200; 9.198329ms)
  I0726 13:04:41.902143 23 proxy.go:601] (1) /api/v1/namespaces/proxy-1362/services/proxy-service-9x9w9:portname2/proxy/: bar (200; 9.747968ms)
  I0726 13:04:41.903184 23 proxy.go:601] (1) /api/v1/namespaces/proxy-1362/services/proxy-service-9x9w9:portname1/proxy/: foo (200; 10.607914ms)
  I0726 13:04:41.904154 23 proxy.go:601] (1) /api/v1/namespaces/proxy-1362/services/https:proxy-service-9x9w9:tlsportname2/proxy/: tls qux (200; 11.629822ms)
  I0726 13:04:41.910101 23 proxy.go:601] (2) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt/proxy/rewriteme"... (200; 5.779372ms)
  I0726 13:04:41.910114 23 proxy.go:601] (2) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/rewri... (200; 5.842301ms)
  I0726 13:04:41.910101 23 proxy.go:601] (2) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:162/proxy/: bar (200; 5.917603ms)
  I0726 13:04:41.910131 23 proxy.go:601] (2) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:443/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:443/proxy/... (200; 5.768156ms)
  I0726 13:04:41.911609 23 proxy.go:601] (2) /api/v1/namespaces/proxy-1362/services/http:proxy-service-9x9w9:portname2/proxy/: bar (200; 7.360481ms)
  I0726 13:04:41.911988 23 proxy.go:601] (2) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:160/proxy/: foo (200; 7.602398ms)
  I0726 13:04:41.912216 23 proxy.go:601] (2) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/... (200; 7.882655ms)
  I0726 13:04:41.912421 23 proxy.go:601] (2) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:160/proxy/: foo (200; 8.071587ms)
  I0726 13:04:41.912743 23 proxy.go:601] (2) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:162/proxy/: bar (200; 8.454778ms)
  I0726 13:04:41.912875 23 proxy.go:601] (2) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:460/proxy/: tls baz (200; 8.448458ms)
  I0726 13:04:41.912936 23 proxy.go:601] (2) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:462/proxy/: tls qux (200; 8.750067ms)
  I0726 13:04:41.913007 23 proxy.go:601] (2) /api/v1/namespaces/proxy-1362/services/proxy-service-9x9w9:portname2/proxy/: bar (200; 8.786499ms)
  I0726 13:04:41.913673 23 proxy.go:601] (2) /api/v1/namespaces/proxy-1362/services/https:proxy-service-9x9w9:tlsportname1/proxy/: tls baz (200; 9.281185ms)
  I0726 13:04:41.913963 23 proxy.go:601] (2) /api/v1/namespaces/proxy-1362/services/http:proxy-service-9x9w9:portname1/proxy/: foo (200; 9.659012ms)
  I0726 13:04:41.915202 23 proxy.go:601] (2) /api/v1/namespaces/proxy-1362/services/proxy-service-9x9w9:portname1/proxy/: foo (200; 10.757287ms)
  I0726 13:04:41.916458 23 proxy.go:601] (2) /api/v1/namespaces/proxy-1362/services/https:proxy-service-9x9w9:tlsportname2/proxy/: tls qux (200; 12.051615ms)
  I0726 13:04:41.921163 23 proxy.go:601] (3) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/... (200; 4.607035ms)
  I0726 13:04:41.921821 23 proxy.go:601] (3) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt/proxy/rewriteme"... (200; 5.281342ms)
  I0726 13:04:41.922231 23 proxy.go:601] (3) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:162/proxy/: bar (200; 5.475316ms)
  I0726 13:04:41.922382 23 proxy.go:601] (3) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:443/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:443/proxy/... (200; 5.770603ms)
  I0726 13:04:41.922689 23 proxy.go:601] (3) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:160/proxy/: foo (200; 6.09407ms)
  I0726 13:04:41.923969 23 proxy.go:601] (3) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:162/proxy/: bar (200; 7.30688ms)
  I0726 13:04:41.923972 23 proxy.go:601] (3) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:460/proxy/: tls baz (200; 7.246123ms)
  I0726 13:04:41.924162 23 proxy.go:601] (3) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/rewri... (200; 7.391233ms)
  I0726 13:04:41.924162 23 proxy.go:601] (3) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:160/proxy/: foo (200; 7.58324ms)
  I0726 13:04:41.924173 23 proxy.go:601] (3) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:462/proxy/: tls qux (200; 7.526389ms)
  I0726 13:04:41.924262 23 proxy.go:601] (3) /api/v1/namespaces/proxy-1362/services/http:proxy-service-9x9w9:portname2/proxy/: bar (200; 7.584404ms)
  I0726 13:04:41.925432 23 proxy.go:601] (3) /api/v1/namespaces/proxy-1362/services/https:proxy-service-9x9w9:tlsportname2/proxy/: tls qux (200; 8.952918ms)
  I0726 13:04:41.925971 23 proxy.go:601] (3) /api/v1/namespaces/proxy-1362/services/http:proxy-service-9x9w9:portname1/proxy/: foo (200; 9.181565ms)
  I0726 13:04:41.926115 23 proxy.go:601] (3) /api/v1/namespaces/proxy-1362/services/proxy-service-9x9w9:portname2/proxy/: bar (200; 9.406565ms)
  I0726 13:04:41.926994 23 proxy.go:601] (3) /api/v1/namespaces/proxy-1362/services/https:proxy-service-9x9w9:tlsportname1/proxy/: tls baz (200; 10.301798ms)
  I0726 13:04:41.927898 23 proxy.go:601] (3) /api/v1/namespaces/proxy-1362/services/proxy-service-9x9w9:portname1/proxy/: foo (200; 11.15693ms)
  I0726 13:04:41.933146 23 proxy.go:601] (4) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:162/proxy/: bar (200; 5.219403ms)
  I0726 13:04:41.933511 23 proxy.go:601] (4) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/... (200; 5.48993ms)
  I0726 13:04:41.933752 23 proxy.go:601] (4) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/rewri... (200; 5.50543ms)
  I0726 13:04:41.933764 23 proxy.go:601] (4) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:462/proxy/: tls qux (200; 5.684332ms)
  I0726 13:04:41.934819 23 proxy.go:601] (4) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:460/proxy/: tls baz (200; 6.699842ms)
  I0726 13:04:41.934860 23 proxy.go:601] (4) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:160/proxy/: foo (200; 6.823488ms)
  I0726 13:04:41.935033 23 proxy.go:601] (4) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:160/proxy/: foo (200; 6.784843ms)
  I0726 13:04:41.935151 23 proxy.go:601] (4) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:162/proxy/: bar (200; 7.046926ms)
  I0726 13:04:41.935428 23 proxy.go:601] (4) /api/v1/namespaces/proxy-1362/services/http:proxy-service-9x9w9:portname2/proxy/: bar (200; 7.474179ms)
  I0726 13:04:41.935454 23 proxy.go:601] (4) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:443/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:443/proxy/... (200; 7.400213ms)
  I0726 13:04:41.935530 23 proxy.go:601] (4) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt/proxy/rewriteme"... (200; 7.530791ms)
  I0726 13:04:41.936816 23 proxy.go:601] (4) /api/v1/namespaces/proxy-1362/services/https:proxy-service-9x9w9:tlsportname2/proxy/: tls qux (200; 8.626077ms)
  I0726 13:04:41.937040 23 proxy.go:601] (4) /api/v1/namespaces/proxy-1362/services/http:proxy-service-9x9w9:portname1/proxy/: foo (200; 9.057016ms)
  I0726 13:04:41.937044 23 proxy.go:601] (4) /api/v1/namespaces/proxy-1362/services/https:proxy-service-9x9w9:tlsportname1/proxy/: tls baz (200; 8.90542ms)
  I0726 13:04:41.938747 23 proxy.go:601] (4) /api/v1/namespaces/proxy-1362/services/proxy-service-9x9w9:portname1/proxy/: foo (200; 10.58048ms)
  I0726 13:04:41.939824 23 proxy.go:601] (4) /api/v1/namespaces/proxy-1362/services/proxy-service-9x9w9:portname2/proxy/: bar (200; 11.610371ms)
  I0726 13:04:41.944677 23 proxy.go:601] (5) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:162/proxy/: bar (200; 4.822317ms)
  I0726 13:04:41.945076 23 proxy.go:601] (5) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:162/proxy/: bar (200; 5.150421ms)
  I0726 13:04:41.945700 23 proxy.go:601] (5) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/... (200; 5.680769ms)
  I0726 13:04:41.945906 23 proxy.go:601] (5) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:462/proxy/: tls qux (200; 5.842178ms)
  I0726 13:04:41.947266 23 proxy.go:601] (5) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:160/proxy/: foo (200; 7.143396ms)
  I0726 13:04:41.947363 23 proxy.go:601] (5) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:460/proxy/: tls baz (200; 7.284489ms)
  I0726 13:04:41.947512 23 proxy.go:601] (5) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:443/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:443/proxy/... (200; 7.463535ms)
  I0726 13:04:41.947745 23 proxy.go:601] (5) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/rewri... (200; 7.836663ms)
  I0726 13:04:41.947756 23 proxy.go:601] (5) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:160/proxy/: foo (200; 7.7228ms)
  I0726 13:04:41.947878 23 proxy.go:601] (5) /api/v1/namespaces/proxy-1362/services/proxy-service-9x9w9:portname1/proxy/: foo (200; 7.724496ms)
  I0726 13:04:41.948016 23 proxy.go:601] (5) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt/proxy/rewriteme"... (200; 8.013662ms)
  I0726 13:04:41.949158 23 proxy.go:601] (5) /api/v1/namespaces/proxy-1362/services/https:proxy-service-9x9w9:tlsportname1/proxy/: tls baz (200; 9.064171ms)
  I0726 13:04:41.949368 23 proxy.go:601] (5) /api/v1/namespaces/proxy-1362/services/http:proxy-service-9x9w9:portname2/proxy/: bar (200; 9.389518ms)
  I0726 13:04:41.949463 23 proxy.go:601] (5) /api/v1/namespaces/proxy-1362/services/http:proxy-service-9x9w9:portname1/proxy/: foo (200; 9.502888ms)
  I0726 13:04:41.951244 23 proxy.go:601] (5) /api/v1/namespaces/proxy-1362/services/https:proxy-service-9x9w9:tlsportname2/proxy/: tls qux (200; 11.134547ms)
  I0726 13:04:41.951290 23 proxy.go:601] (5) /api/v1/namespaces/proxy-1362/services/proxy-service-9x9w9:portname2/proxy/: bar (200; 11.151732ms)
  I0726 13:04:41.956861 23 proxy.go:601] (6) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:162/proxy/: bar (200; 5.28693ms)
  I0726 13:04:41.956902 23 proxy.go:601] (6) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/rewri... (200; 5.392348ms)
  I0726 13:04:41.957000 23 proxy.go:601] (6) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:462/proxy/: tls qux (200; 5.4579ms)
  I0726 13:04:41.957021 23 proxy.go:601] (6) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt/proxy/rewriteme"... (200; 5.679653ms)
  I0726 13:04:41.958217 23 proxy.go:601] (6) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:160/proxy/: foo (200; 6.774808ms)
  I0726 13:04:41.958300 23 proxy.go:601] (6) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:460/proxy/: tls baz (200; 6.839013ms)
  I0726 13:04:41.958459 23 proxy.go:601] (6) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/... (200; 7.098316ms)
  I0726 13:04:41.958487 23 proxy.go:601] (6) /api/v1/namespaces/proxy-1362/services/proxy-service-9x9w9:portname1/proxy/: foo (200; 7.010924ms)
  I0726 13:04:41.958618 23 proxy.go:601] (6) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:162/proxy/: bar (200; 7.094015ms)
  I0726 13:04:41.958648 23 proxy.go:601] (6) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:443/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:443/proxy/... (200; 7.071122ms)
  I0726 13:04:41.959134 23 proxy.go:601] (6) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:160/proxy/: foo (200; 7.714619ms)
  I0726 13:04:41.960014 23 proxy.go:601] (6) /api/v1/namespaces/proxy-1362/services/https:proxy-service-9x9w9:tlsportname1/proxy/: tls baz (200; 8.706031ms)
  I0726 13:04:41.960262 23 proxy.go:601] (6) /api/v1/namespaces/proxy-1362/services/http:proxy-service-9x9w9:portname1/proxy/: foo (200; 8.955057ms)
  I0726 13:04:41.960303 23 proxy.go:601] (6) /api/v1/namespaces/proxy-1362/services/https:proxy-service-9x9w9:tlsportname2/proxy/: tls qux (200; 8.915435ms)
  I0726 13:04:41.960562 23 proxy.go:601] (6) /api/v1/namespaces/proxy-1362/services/proxy-service-9x9w9:portname2/proxy/: bar (200; 9.068145ms)
  I0726 13:04:41.962816 23 proxy.go:601] (6) /api/v1/namespaces/proxy-1362/services/http:proxy-service-9x9w9:portname2/proxy/: bar (200; 11.229657ms)
  I0726 13:04:41.968429 23 proxy.go:601] (7) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:160/proxy/: foo (200; 5.592155ms)
  I0726 13:04:41.968601 23 proxy.go:601] (7) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:162/proxy/: bar (200; 5.565802ms)
  I0726 13:04:41.968774 23 proxy.go:601] (7) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:460/proxy/: tls baz (200; 5.904779ms)
  I0726 13:04:41.969562 23 proxy.go:601] (7) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/... (200; 6.435263ms)
  I0726 13:04:41.969785 23 proxy.go:601] (7) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/rewri... (200; 6.705374ms)
  I0726 13:04:41.970092 23 proxy.go:601] (7) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:162/proxy/: bar (200; 7.138611ms)
  I0726 13:04:41.970117 23 proxy.go:601] (7) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:160/proxy/: foo (200; 7.097996ms)
  I0726 13:04:41.970265 23 proxy.go:601] (7) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:443/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:443/proxy/... (200; 7.368838ms)
  I0726 13:04:41.970596 23 proxy.go:601] (7) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt/proxy/rewriteme"... (200; 7.5004ms)
  I0726 13:04:41.970770 23 proxy.go:601] (7) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:462/proxy/: tls qux (200; 7.843125ms)
  I0726 13:04:41.971600 23 proxy.go:601] (7) /api/v1/namespaces/proxy-1362/services/https:proxy-service-9x9w9:tlsportname1/proxy/: tls baz (200; 8.609791ms)
  I0726 13:04:41.972229 23 proxy.go:601] (7) /api/v1/namespaces/proxy-1362/services/proxy-service-9x9w9:portname2/proxy/: bar (200; 9.166459ms)
  I0726 13:04:41.972758 23 proxy.go:601] (7) /api/v1/namespaces/proxy-1362/services/https:proxy-service-9x9w9:tlsportname2/proxy/: tls qux (200; 9.752292ms)
  I0726 13:04:41.973115 23 proxy.go:601] (7) /api/v1/namespaces/proxy-1362/services/proxy-service-9x9w9:portname1/proxy/: foo (200; 10.067244ms)
  I0726 13:04:41.974494 23 proxy.go:601] (7) /api/v1/namespaces/proxy-1362/services/http:proxy-service-9x9w9:portname1/proxy/: foo (200; 11.383059ms)
  I0726 13:04:41.974594 23 proxy.go:601] (7) /api/v1/namespaces/proxy-1362/services/http:proxy-service-9x9w9:portname2/proxy/: bar (200; 11.621019ms)
  I0726 13:04:41.979115 23 proxy.go:601] (8) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:162/proxy/: bar (200; 4.391204ms)
  I0726 13:04:41.979903 23 proxy.go:601] (8) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:160/proxy/: foo (200; 5.017558ms)
  I0726 13:04:41.980326 23 proxy.go:601] (8) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:162/proxy/: bar (200; 5.697167ms)
  I0726 13:04:41.981459 23 proxy.go:601] (8) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:160/proxy/: foo (200; 6.61434ms)
  I0726 13:04:41.982306 23 proxy.go:601] (8) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/... (200; 7.47546ms)
  I0726 13:04:41.982482 23 proxy.go:601] (8) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:443/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:443/proxy/... (200; 7.623396ms)
  I0726 13:04:41.982513 23 proxy.go:601] (8) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/rewri... (200; 7.798398ms)
  I0726 13:04:41.982521 23 proxy.go:601] (8) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:462/proxy/: tls qux (200; 7.650595ms)
  I0726 13:04:41.982530 23 proxy.go:601] (8) /api/v1/namespaces/proxy-1362/services/https:proxy-service-9x9w9:tlsportname1/proxy/: tls baz (200; 7.630883ms)
  I0726 13:04:41.982539 23 proxy.go:601] (8) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:460/proxy/: tls baz (200; 7.598368ms)
  I0726 13:04:41.982593 23 proxy.go:601] (8) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt/proxy/rewriteme"... (200; 7.790203ms)
  I0726 13:04:41.983726 23 proxy.go:601] (8) /api/v1/namespaces/proxy-1362/services/proxy-service-9x9w9:portname2/proxy/: bar (200; 8.770402ms)
  I0726 13:04:41.984262 23 proxy.go:601] (8) /api/v1/namespaces/proxy-1362/services/https:proxy-service-9x9w9:tlsportname2/proxy/: tls qux (200; 9.34835ms)
  I0726 13:04:41.984386 23 proxy.go:601] (8) /api/v1/namespaces/proxy-1362/services/proxy-service-9x9w9:portname1/proxy/: foo (200; 9.459116ms)
  I0726 13:04:41.985623 23 proxy.go:601] (8) /api/v1/namespaces/proxy-1362/services/http:proxy-service-9x9w9:portname1/proxy/: foo (200; 10.864036ms)
  I0726 13:04:41.986699 23 proxy.go:601] (8) /api/v1/namespaces/proxy-1362/services/http:proxy-service-9x9w9:portname2/proxy/: bar (200; 11.913153ms)
  I0726 13:04:41.991650 23 proxy.go:601] (9) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:160/proxy/: foo (200; 4.872147ms)
  I0726 13:04:41.992039 23 proxy.go:601] (9) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/... (200; 5.320547ms)
  I0726 13:04:41.992257 23 proxy.go:601] (9) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt/proxy/rewriteme"... (200; 5.195857ms)
  I0726 13:04:41.992445 23 proxy.go:601] (9) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:460/proxy/: tls baz (200; 5.660881ms)
  I0726 13:04:41.992458 23 proxy.go:601] (9) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:160/proxy/: foo (200; 5.600683ms)
  I0726 13:04:41.992545 23 proxy.go:601] (9) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:462/proxy/: tls qux (200; 5.63457ms)
  I0726 13:04:41.993648 23 proxy.go:601] (9) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:162/proxy/: bar (200; 6.64625ms)
  I0726 13:04:41.993772 23 proxy.go:601] (9) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/rewri... (200; 6.740193ms)
  I0726 13:04:41.994830 23 proxy.go:601] (9) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:443/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:443/proxy/... (200; 7.944948ms)
  I0726 13:04:41.994843 23 proxy.go:601] (9) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:162/proxy/: bar (200; 7.906494ms)
  I0726 13:04:41.995231 23 proxy.go:601] (9) /api/v1/namespaces/proxy-1362/services/https:proxy-service-9x9w9:tlsportname1/proxy/: tls baz (200; 8.263028ms)
  I0726 13:04:41.996039 23 proxy.go:601] (9) /api/v1/namespaces/proxy-1362/services/proxy-service-9x9w9:portname2/proxy/: bar (200; 9.024035ms)
  I0726 13:04:41.996690 23 proxy.go:601] (9) /api/v1/namespaces/proxy-1362/services/http:proxy-service-9x9w9:portname1/proxy/: foo (200; 9.644079ms)
  I0726 13:04:41.997031 23 proxy.go:601] (9) /api/v1/namespaces/proxy-1362/services/proxy-service-9x9w9:portname1/proxy/: foo (200; 10.218559ms)
  I0726 13:04:41.997311 23 proxy.go:601] (9) /api/v1/namespaces/proxy-1362/services/http:proxy-service-9x9w9:portname2/proxy/: bar (200; 10.357857ms)
  I0726 13:04:41.999404 23 proxy.go:601] (9) /api/v1/namespaces/proxy-1362/services/https:proxy-service-9x9w9:tlsportname2/proxy/: tls qux (200; 12.418077ms)
  I0726 13:04:42.004987 23 proxy.go:601] (10) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:162/proxy/: bar (200; 5.550078ms)
  I0726 13:04:42.005608 23 proxy.go:601] (10) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/rewri... (200; 5.83097ms)
  I0726 13:04:42.005911 23 proxy.go:601] (10) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt/proxy/rewriteme"... (200; 6.308899ms)
  I0726 13:04:42.005989 23 proxy.go:601] (10) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:462/proxy/: tls qux (200; 6.303474ms)
  I0726 13:04:42.006892 23 proxy.go:601] (10) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/... (200; 7.272896ms)
  I0726 13:04:42.006955 23 proxy.go:601] (10) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:162/proxy/: bar (200; 7.387696ms)
  I0726 13:04:42.007092 23 proxy.go:601] (10) /api/v1/namespaces/proxy-1362/services/http:proxy-service-9x9w9:portname2/proxy/: bar (200; 7.580298ms)
  I0726 13:04:42.007112 23 proxy.go:601] (10) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:443/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:443/proxy/... (200; 7.445408ms)
  I0726 13:04:42.007208 23 proxy.go:601] (10) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:160/proxy/: foo (200; 7.555925ms)
  I0726 13:04:42.007350 23 proxy.go:601] (10) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:460/proxy/: tls baz (200; 7.649188ms)
  I0726 13:04:42.007352 23 proxy.go:601] (10) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:160/proxy/: foo (200; 7.61869ms)
  I0726 13:04:42.008385 23 proxy.go:601] (10) /api/v1/namespaces/proxy-1362/services/proxy-service-9x9w9:portname2/proxy/: bar (200; 8.636414ms)
  I0726 13:04:42.009306 23 proxy.go:601] (10) /api/v1/namespaces/proxy-1362/services/proxy-service-9x9w9:portname1/proxy/: foo (200; 9.542996ms)
  I0726 13:04:42.009313 23 proxy.go:601] (10) /api/v1/namespaces/proxy-1362/services/https:proxy-service-9x9w9:tlsportname1/proxy/: tls baz (200; 9.766074ms)
  I0726 13:04:42.010778 23 proxy.go:601] (10) /api/v1/namespaces/proxy-1362/services/https:proxy-service-9x9w9:tlsportname2/proxy/: tls qux (200; 11.059096ms)
  I0726 13:04:42.011921 23 proxy.go:601] (10) /api/v1/namespaces/proxy-1362/services/http:proxy-service-9x9w9:portname1/proxy/: foo (200; 12.345755ms)
  I0726 13:04:42.017661 23 proxy.go:601] (11) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:162/proxy/: bar (200; 5.543256ms)
  I0726 13:04:42.017661 23 proxy.go:601] (11) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/... (200; 5.609402ms)
  I0726 13:04:42.017938 23 proxy.go:601] (11) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:443/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:443/proxy/... (200; 5.853041ms)
  I0726 13:04:42.018985 23 proxy.go:601] (11) /api/v1/namespaces/proxy-1362/services/http:proxy-service-9x9w9:portname1/proxy/: foo (200; 6.994855ms)
  I0726 13:04:42.019707 23 proxy.go:601] (11) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:460/proxy/: tls baz (200; 7.514788ms)
  I0726 13:04:42.019718 23 proxy.go:601] (11) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt/proxy/rewriteme"... (200; 7.703895ms)
  I0726 13:04:42.019889 23 proxy.go:601] (11) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:162/proxy/: bar (200; 7.653535ms)
  I0726 13:04:42.019908 23 proxy.go:601] (11) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:160/proxy/: foo (200; 7.733013ms)
  I0726 13:04:42.020270 23 proxy.go:601] (11) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/rewri... (200; 8.061702ms)
  I0726 13:04:42.020726 23 proxy.go:601] (11) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:160/proxy/: foo (200; 8.659194ms)
  I0726 13:04:42.020826 23 proxy.go:601] (11) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:462/proxy/: tls qux (200; 8.726349ms)
  I0726 13:04:42.021229 23 proxy.go:601] (11) /api/v1/namespaces/proxy-1362/services/https:proxy-service-9x9w9:tlsportname2/proxy/: tls qux (200; 9.069244ms)
  I0726 13:04:42.021297 23 proxy.go:601] (11) /api/v1/namespaces/proxy-1362/services/proxy-service-9x9w9:portname2/proxy/: bar (200; 9.074638ms)
  I0726 13:04:42.021651 23 proxy.go:601] (11) /api/v1/namespaces/proxy-1362/services/https:proxy-service-9x9w9:tlsportname1/proxy/: tls baz (200; 9.7109ms)
  I0726 13:04:42.023339 23 proxy.go:601] (11) /api/v1/namespaces/proxy-1362/services/proxy-service-9x9w9:portname1/proxy/: foo (200; 11.196016ms)
  I0726 13:04:42.023416 23 proxy.go:601] (11) /api/v1/namespaces/proxy-1362/services/http:proxy-service-9x9w9:portname2/proxy/: bar (200; 11.287515ms)
  I0726 13:04:42.028187 23 proxy.go:601] (12) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:162/proxy/: bar (200; 4.748959ms)
  I0726 13:04:42.028187 23 proxy.go:601] (12) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/rewri... (200; 4.696201ms)
  I0726 13:04:42.029109 23 proxy.go:601] (12) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:460/proxy/: tls baz (200; 5.386936ms)
  I0726 13:04:42.029107 23 proxy.go:601] (12) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/... (200; 5.542848ms)
  I0726 13:04:42.029497 23 proxy.go:601] (12) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:443/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:443/proxy/... (200; 5.904427ms)
  I0726 13:04:42.029717 23 proxy.go:601] (12) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt/proxy/rewriteme"... (200; 6.169908ms)
  I0726 13:04:42.030480 23 proxy.go:601] (12) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:160/proxy/: foo (200; 6.902817ms)
  I0726 13:04:42.030683 23 proxy.go:601] (12) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:462/proxy/: tls qux (200; 7.074663ms)
  I0726 13:04:42.031680 23 proxy.go:601] (12) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:160/proxy/: foo (200; 8.051952ms)
  I0726 13:04:42.031777 23 proxy.go:601] (12) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:162/proxy/: bar (200; 8.267926ms)
  I0726 13:04:42.031780 23 proxy.go:601] (12) /api/v1/namespaces/proxy-1362/services/http:proxy-service-9x9w9:portname1/proxy/: foo (200; 8.251171ms)
  I0726 13:04:42.031989 23 proxy.go:601] (12) /api/v1/namespaces/proxy-1362/services/https:proxy-service-9x9w9:tlsportname2/proxy/: tls qux (200; 8.29956ms)
  I0726 13:04:42.033670 23 proxy.go:601] (12) /api/v1/namespaces/proxy-1362/services/https:proxy-service-9x9w9:tlsportname1/proxy/: tls baz (200; 9.995576ms)
  I0726 13:04:42.033799 23 proxy.go:601] (12) /api/v1/namespaces/proxy-1362/services/proxy-service-9x9w9:portname2/proxy/: bar (200; 10.062307ms)
  I0726 13:04:42.034092 23 proxy.go:601] (12) /api/v1/namespaces/proxy-1362/services/http:proxy-service-9x9w9:portname2/proxy/: bar (200; 10.433978ms)
  I0726 13:04:42.035875 23 proxy.go:601] (12) /api/v1/namespaces/proxy-1362/services/proxy-service-9x9w9:portname1/proxy/: foo (200; 12.168115ms)
  I0726 13:04:42.041251 23 proxy.go:601] (13) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:443/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:443/proxy/... (200; 5.218431ms)
  I0726 13:04:42.041275 23 proxy.go:601] (13) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/rewri... (200; 5.366297ms)
  I0726 13:04:42.042070 23 proxy.go:601] (13) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:460/proxy/: tls baz (200; 5.925562ms)
  I0726 13:04:42.042069 23 proxy.go:601] (13) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:160/proxy/: foo (200; 6.005463ms)
  I0726 13:04:42.043256 23 proxy.go:601] (13) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/... (200; 7.256852ms)
  I0726 13:04:42.043262 23 proxy.go:601] (13) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:162/proxy/: bar (200; 7.356071ms)
  I0726 13:04:42.043282 23 proxy.go:601] (13) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:462/proxy/: tls qux (200; 7.237297ms)
  I0726 13:04:42.043601 23 proxy.go:601] (13) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:162/proxy/: bar (200; 7.656349ms)
  I0726 13:04:42.043624 23 proxy.go:601] (13) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:160/proxy/: foo (200; 7.612029ms)
  I0726 13:04:42.043743 23 proxy.go:601] (13) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt/proxy/rewriteme"... (200; 7.762143ms)
  I0726 13:04:42.044698 23 proxy.go:601] (13) /api/v1/namespaces/proxy-1362/services/proxy-service-9x9w9:portname1/proxy/: foo (200; 8.557981ms)
  I0726 13:04:42.044787 23 proxy.go:601] (13) /api/v1/namespaces/proxy-1362/services/http:proxy-service-9x9w9:portname2/proxy/: bar (200; 8.713972ms)
  I0726 13:04:42.045497 23 proxy.go:601] (13) /api/v1/namespaces/proxy-1362/services/https:proxy-service-9x9w9:tlsportname1/proxy/: tls baz (200; 9.394261ms)
  I0726 13:04:42.045833 23 proxy.go:601] (13) /api/v1/namespaces/proxy-1362/services/http:proxy-service-9x9w9:portname1/proxy/: foo (200; 9.868708ms)
  I0726 13:04:42.046697 23 proxy.go:601] (13) /api/v1/namespaces/proxy-1362/services/https:proxy-service-9x9w9:tlsportname2/proxy/: tls qux (200; 10.579782ms)
  I0726 13:04:42.047951 23 proxy.go:601] (13) /api/v1/namespaces/proxy-1362/services/proxy-service-9x9w9:portname2/proxy/: bar (200; 11.793112ms)
  I0726 13:04:42.054066 23 proxy.go:601] (14) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:162/proxy/: bar (200; 5.946401ms)
  I0726 13:04:42.054089 23 proxy.go:601] (14) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:160/proxy/: foo (200; 5.911683ms)
  I0726 13:04:42.054093 23 proxy.go:601] (14) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/... (200; 6.045015ms)
  I0726 13:04:42.055278 23 proxy.go:601] (14) /api/v1/namespaces/proxy-1362/services/http:proxy-service-9x9w9:portname1/proxy/: foo (200; 7.306368ms)
  I0726 13:04:42.055266 23 proxy.go:601] (14) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:162/proxy/: bar (200; 7.024776ms)
  I0726 13:04:42.055323 23 proxy.go:601] (14) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:460/proxy/: tls baz (200; 7.129413ms)
  I0726 13:04:42.055569 23 proxy.go:601] (14) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:443/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:443/proxy/... (200; 7.488829ms)
  I0726 13:04:42.055577 23 proxy.go:601] (14) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt/proxy/rewriteme"... (200; 7.547116ms)
  I0726 13:04:42.055991 23 proxy.go:601] (14) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:160/proxy/: foo (200; 7.9283ms)
  I0726 13:04:42.056309 23 proxy.go:601] (14) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/rewri... (200; 8.099862ms)
  I0726 13:04:42.056320 23 proxy.go:601] (14) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:462/proxy/: tls qux (200; 8.217491ms)
  I0726 13:04:42.056761 23 proxy.go:601] (14) /api/v1/namespaces/proxy-1362/services/proxy-service-9x9w9:portname1/proxy/: foo (200; 8.615335ms)
  I0726 13:04:42.057162 23 proxy.go:601] (14) /api/v1/namespaces/proxy-1362/services/http:proxy-service-9x9w9:portname2/proxy/: bar (200; 9.030297ms)
  I0726 13:04:42.057287 23 proxy.go:601] (14) /api/v1/namespaces/proxy-1362/services/https:proxy-service-9x9w9:tlsportname1/proxy/: tls baz (200; 9.294436ms)
  I0726 13:04:42.059711 23 proxy.go:601] (14) /api/v1/namespaces/proxy-1362/services/https:proxy-service-9x9w9:tlsportname2/proxy/: tls qux (200; 11.545604ms)
  I0726 13:04:42.059711 23 proxy.go:601] (14) /api/v1/namespaces/proxy-1362/services/proxy-service-9x9w9:portname2/proxy/: bar (200; 11.484625ms)
  I0726 13:04:42.064571 23 proxy.go:601] (15) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:462/proxy/: tls qux (200; 4.821558ms)
  I0726 13:04:42.064752 23 proxy.go:601] (15) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:162/proxy/: bar (200; 4.816429ms)
  I0726 13:04:42.065746 23 proxy.go:601] (15) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:460/proxy/: tls baz (200; 5.658056ms)
  I0726 13:04:42.066088 23 proxy.go:601] (15) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt/proxy/rewriteme"... (200; 6.036593ms)
  I0726 13:04:42.066995 23 proxy.go:601] (15) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/... (200; 6.9206ms)
  I0726 13:04:42.067234 23 proxy.go:601] (15) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/rewri... (200; 7.328449ms)
  I0726 13:04:42.067346 23 proxy.go:601] (15) /api/v1/namespaces/proxy-1362/services/https:proxy-service-9x9w9:tlsportname1/proxy/: tls baz (200; 7.34544ms)
  I0726 13:04:42.067510 23 proxy.go:601] (15) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:160/proxy/: foo (200; 7.379149ms)
  I0726 13:04:42.067527 23 proxy.go:601] (15) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:160/proxy/: foo (200; 7.497453ms)
  I0726 13:04:42.067532 23 proxy.go:601] (15) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:162/proxy/: bar (200; 7.670155ms)
  I0726 13:04:42.067541 23 proxy.go:601] (15) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:443/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:443/proxy/... (200; 7.393613ms)
  I0726 13:04:42.069108 23 proxy.go:601] (15) /api/v1/namespaces/proxy-1362/services/proxy-service-9x9w9:portname1/proxy/: foo (200; 9.001085ms)
  I0726 13:04:42.069117 23 proxy.go:601] (15) /api/v1/namespaces/proxy-1362/services/proxy-service-9x9w9:portname2/proxy/: bar (200; 9.285245ms)
  I0726 13:04:42.069132 23 proxy.go:601] (15) /api/v1/namespaces/proxy-1362/services/http:proxy-service-9x9w9:portname1/proxy/: foo (200; 9.155418ms)
  I0726 13:04:42.069700 23 proxy.go:601] (15) /api/v1/namespaces/proxy-1362/services/https:proxy-service-9x9w9:tlsportname2/proxy/: tls qux (200; 9.681467ms)
  I0726 13:04:42.070847 23 proxy.go:601] (15) /api/v1/namespaces/proxy-1362/services/http:proxy-service-9x9w9:portname2/proxy/: bar (200; 10.892305ms)
  I0726 13:04:42.075890 23 proxy.go:601] (16) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:160/proxy/: foo (200; 4.945911ms)
  I0726 13:04:42.076064 23 proxy.go:601] (16) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt/proxy/rewriteme"... (200; 5.151477ms)
  I0726 13:04:42.076951 23 proxy.go:601] (16) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:460/proxy/: tls baz (200; 5.892125ms)
  I0726 13:04:42.076998 23 proxy.go:601] (16) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/rewri... (200; 5.895326ms)
  I0726 13:04:42.078120 23 proxy.go:601] (16) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:160/proxy/: foo (200; 7.068015ms)
  I0726 13:04:42.078259 23 proxy.go:601] (16) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:162/proxy/: bar (200; 7.376175ms)
  I0726 13:04:42.078253 23 proxy.go:601] (16) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:462/proxy/: tls qux (200; 7.283399ms)
  I0726 13:04:42.078760 23 proxy.go:601] (16) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:443/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:443/proxy/... (200; 7.804257ms)
  I0726 13:04:42.078777 23 proxy.go:601] (16) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/... (200; 7.851277ms)
  I0726 13:04:42.078814 23 proxy.go:601] (16) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:162/proxy/: bar (200; 7.831619ms)
  I0726 13:04:42.079426 23 proxy.go:601] (16) /api/v1/namespaces/proxy-1362/services/https:proxy-service-9x9w9:tlsportname2/proxy/: tls qux (200; 8.398277ms)
  I0726 13:04:42.079769 23 proxy.go:601] (16) /api/v1/namespaces/proxy-1362/services/http:proxy-service-9x9w9:portname2/proxy/: bar (200; 8.773043ms)
  I0726 13:04:42.080297 23 proxy.go:601] (16) /api/v1/namespaces/proxy-1362/services/https:proxy-service-9x9w9:tlsportname1/proxy/: tls baz (200; 9.283812ms)
  I0726 13:04:42.080832 23 proxy.go:601] (16) /api/v1/namespaces/proxy-1362/services/http:proxy-service-9x9w9:portname1/proxy/: foo (200; 9.955422ms)
  I0726 13:04:42.081690 23 proxy.go:601] (16) /api/v1/namespaces/proxy-1362/services/proxy-service-9x9w9:portname2/proxy/: bar (200; 10.601718ms)
  I0726 13:04:42.082534 23 proxy.go:601] (16) /api/v1/namespaces/proxy-1362/services/proxy-service-9x9w9:portname1/proxy/: foo (200; 11.459935ms)
  I0726 13:04:42.086822 23 proxy.go:601] (17) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:162/proxy/: bar (200; 4.257294ms)
  I0726 13:04:42.087790 23 proxy.go:601] (17) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/rewri... (200; 5.188806ms)
  I0726 13:04:42.087787 23 proxy.go:601] (17) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:162/proxy/: bar (200; 5.160674ms)
  I0726 13:04:42.087935 23 proxy.go:601] (17) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:160/proxy/: foo (200; 5.21017ms)
  I0726 13:04:42.087968 23 proxy.go:601] (17) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt/proxy/rewriteme"... (200; 5.275128ms)
  I0726 13:04:42.088088 23 proxy.go:601] (17) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:462/proxy/: tls qux (200; 5.332163ms)
  I0726 13:04:42.090005 23 proxy.go:601] (17) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:160/proxy/: foo (200; 7.233669ms)
  I0726 13:04:42.090018 23 proxy.go:601] (17) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:460/proxy/: tls baz (200; 7.166012ms)
  I0726 13:04:42.090201 23 proxy.go:601] (17) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:443/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:443/proxy/... (200; 7.459624ms)
  I0726 13:04:42.090209 23 proxy.go:601] (17) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/... (200; 7.489126ms)
  I0726 13:04:42.091363 23 proxy.go:601] (17) /api/v1/namespaces/proxy-1362/services/https:proxy-service-9x9w9:tlsportname2/proxy/: tls qux (200; 8.544447ms)
  I0726 13:04:42.091683 23 proxy.go:601] (17) /api/v1/namespaces/proxy-1362/services/http:proxy-service-9x9w9:portname2/proxy/: bar (200; 8.898702ms)
  I0726 13:04:42.092369 23 proxy.go:601] (17) /api/v1/namespaces/proxy-1362/services/proxy-service-9x9w9:portname1/proxy/: foo (200; 9.535714ms)
  I0726 13:04:42.093394 23 proxy.go:601] (17) /api/v1/namespaces/proxy-1362/services/http:proxy-service-9x9w9:portname1/proxy/: foo (200; 10.724324ms)
  I0726 13:04:42.093404 23 proxy.go:601] (17) /api/v1/namespaces/proxy-1362/services/https:proxy-service-9x9w9:tlsportname1/proxy/: tls baz (200; 10.605434ms)
  I0726 13:04:42.093470 23 proxy.go:601] (17) /api/v1/namespaces/proxy-1362/services/proxy-service-9x9w9:portname2/proxy/: bar (200; 10.60408ms)
  I0726 13:04:42.098224 23 proxy.go:601] (18) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:162/proxy/: bar (200; 4.733566ms)
  I0726 13:04:42.099233 23 proxy.go:601] (18) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:443/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:443/proxy/... (200; 5.527307ms)
  I0726 13:04:42.099233 23 proxy.go:601] (18) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:160/proxy/: foo (200; 5.541611ms)
  I0726 13:04:42.099254 23 proxy.go:601] (18) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/... (200; 5.596494ms)
  I0726 13:04:42.100814 23 proxy.go:601] (18) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/rewri... (200; 7.020996ms)
  I0726 13:04:42.100904 23 proxy.go:601] (18) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:160/proxy/: foo (200; 7.227131ms)
  I0726 13:04:42.100901 23 proxy.go:601] (18) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:462/proxy/: tls qux (200; 7.183326ms)
  I0726 13:04:42.101282 23 proxy.go:601] (18) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:162/proxy/: bar (200; 7.548263ms)
  I0726 13:04:42.101401 23 proxy.go:601] (18) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt/proxy/rewriteme"... (200; 7.814903ms)
  I0726 13:04:42.101466 23 proxy.go:601] (18) /api/v1/namespaces/proxy-1362/services/http:proxy-service-9x9w9:portname2/proxy/: bar (200; 7.935283ms)
  I0726 13:04:42.101626 23 proxy.go:601] (18) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:460/proxy/: tls baz (200; 7.861826ms)
  I0726 13:04:42.101841 23 proxy.go:601] (18) /api/v1/namespaces/proxy-1362/services/proxy-service-9x9w9:portname1/proxy/: foo (200; 8.092969ms)
  I0726 13:04:42.102713 23 proxy.go:601] (18) /api/v1/namespaces/proxy-1362/services/http:proxy-service-9x9w9:portname1/proxy/: foo (200; 9.153903ms)
  I0726 13:04:42.102745 23 proxy.go:601] (18) /api/v1/namespaces/proxy-1362/services/https:proxy-service-9x9w9:tlsportname1/proxy/: tls baz (200; 9.142424ms)
  I0726 13:04:42.103236 23 proxy.go:601] (18) /api/v1/namespaces/proxy-1362/services/proxy-service-9x9w9:portname2/proxy/: bar (200; 9.456406ms)
  I0726 13:04:42.104699 23 proxy.go:601] (18) /api/v1/namespaces/proxy-1362/services/https:proxy-service-9x9w9:tlsportname2/proxy/: tls qux (200; 11.07351ms)
  I0726 13:04:42.111157 23 proxy.go:601] (19) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/rewri... (200; 6.206568ms)
  I0726 13:04:42.111157 23 proxy.go:601] (19) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:160/proxy/: foo (200; 6.267271ms)
  I0726 13:04:42.111180 23 proxy.go:601] (19) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:162/proxy/: bar (200; 6.168226ms)
  I0726 13:04:42.112118 23 proxy.go:601] (19) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt:160/proxy/: foo (200; 7.210247ms)
  I0726 13:04:42.112461 23 proxy.go:601] (19) /api/v1/namespaces/proxy-1362/services/https:proxy-service-9x9w9:tlsportname1/proxy/: tls baz (200; 7.68972ms)
  I0726 13:04:42.112461 23 proxy.go:601] (19) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:162/proxy/: bar (200; 7.494992ms)
  I0726 13:04:42.112477 23 proxy.go:601] (19) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:462/proxy/: tls qux (200; 7.495068ms)
  I0726 13:04:42.112480 23 proxy.go:601] (19) /api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/http:proxy-service-9x9w9-58df7fd4d7-78bnt:1080/proxy/... (200; 7.670903ms)
  I0726 13:04:42.112490 23 proxy.go:601] (19) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:460/proxy/: tls baz (200; 7.587344ms)
  I0726 13:04:42.112597 23 proxy.go:601] (19) /api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:443/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/https:proxy-service-9x9w9-58df7fd4d7-78bnt:443/proxy/... (200; 7.601522ms)
  I0726 13:04:42.112607 23 proxy.go:601] (19) /api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt/proxy/: <a href="/api/v1/namespaces/proxy-1362/pods/proxy-service-9x9w9-58df7fd4d7-78bnt/proxy/rewriteme"... (200; 7.815746ms)
  I0726 13:04:42.114451 23 proxy.go:601] (19) /api/v1/namespaces/proxy-1362/services/https:proxy-service-9x9w9:tlsportname2/proxy/: tls qux (200; 9.600021ms)
  I0726 13:04:42.114494 23 proxy.go:601] (19) /api/v1/namespaces/proxy-1362/services/proxy-service-9x9w9:portname2/proxy/: bar (200; 9.559038ms)
  I0726 13:04:42.114519 23 proxy.go:601] (19) /api/v1/namespaces/proxy-1362/services/http:proxy-service-9x9w9:portname1/proxy/: foo (200; 9.800418ms)
  I0726 13:04:42.114536 23 proxy.go:601] (19) /api/v1/namespaces/proxy-1362/services/proxy-service-9x9w9:portname1/proxy/: foo (200; 9.617136ms)
  I0726 13:04:42.115726 23 proxy.go:601] (19) /api/v1/namespaces/proxy-1362/services/http:proxy-service-9x9w9:portname2/proxy/: bar (200; 10.702726ms)
  I0726 13:04:42.125856 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-1362" for this suite. @ 07/26/25 13:04:42.133
• [2.355 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Job should allow to use a pod failure policy to ignore failure matching on DisruptionTarget condition [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:199
  STEP: Creating a kubernetes client @ 07/26/25 13:04:42.142
  I0726 13:04:42.142496 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename job @ 07/26/25 13:04:42.143
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:04:42.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:04:42.162
  STEP: Looking for a node to schedule job pods @ 07/26/25 13:04:42.165
  STEP: Creating a job @ 07/26/25 13:04:42.234
  STEP: Waiting for all the pods to be ready @ 07/26/25 13:04:42.242
  E0726 13:04:42.636328      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:04:43.636410      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:04:44.637237      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:04:45.637324      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Fetch all running pods @ 07/26/25 13:04:46.261
  STEP: Evict all the Pods @ 07/26/25 13:04:46.265
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-0-qv2vh/job-3463 @ 07/26/25 13:04:46.265
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-1-ks84f/job-3463 @ 07/26/25 13:04:46.265
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-2-xnd8s/job-3463 @ 07/26/25 13:04:46.265
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-1-ks84f/job-3463 to be deleted @ 07/26/25 13:04:46.295
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-0-qv2vh/job-3463 to be deleted @ 07/26/25 13:04:46.301
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-2-xnd8s/job-3463 to be deleted @ 07/26/25 13:04:46.301
  E0726 13:04:46.637841      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:04:47.638849      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:04:48.639647      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:04:49.639788      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:04:50.639787      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:04:51.639902      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring job reaches completions @ 07/26/25 13:04:52.32
  E0726 13:04:52.640853      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:04:53.640920      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:04:54.641562      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:04:55.641687      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:04:56.642294      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:04:57.643332      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:04:58.643938      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:04:59.644028      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:00.644741      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:01.644986      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:02.645162      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:03.645222      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:04.645781      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:05.645878      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:06.646023      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:07.647013      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:08.647481      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:09.647570      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:10.647782      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:11.647897      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:12.648788      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:13.648796      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:14.649854      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:15.649923      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:16.650061      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:17.650143      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:18.650863      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:19.650928      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:20.651365      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:21.651577      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:22.651843      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:23.651965      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:24.652118      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:25.652200      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:26.653282      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:27.654164      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:28.655029      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:29.655097      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:30.655234      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:31.655504      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:32.656057      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:33.656278      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:05:34.460372 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3463" for this suite. @ 07/26/25 13:05:34.467
• [52.336 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:477
  STEP: Creating a kubernetes client @ 07/26/25 13:05:34.478
  I0726 13:05:34.478401 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename sched-preemption @ 07/26/25 13:05:34.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:05:34.492
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:05:34.495
  I0726 13:05:34.517699 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0726 13:05:34.657306      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:35.657422      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:36.658377      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:37.659185      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:38.659438      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:39.659505      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:40.660508      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:41.660623      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:42.660740      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:43.660949      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:44.661207      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:45.661421      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:46.662240      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:47.662288      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:48.662819      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:49.662874      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:50.662961      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:51.663062      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:52.663151      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:53.663466      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:54.663294      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:55.663477      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:56.664473      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:57.664591      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:58.665020      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:05:59.665195      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:06:00.666211      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:06:01.666894      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:06:02.667963      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:06:03.668071      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:06:04.668161      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:06:05.668760      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:06:06.669563      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:06:07.669679      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:06:08.670765      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:06:09.671835      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:06:10.672710      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:06:11.672847      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:06:12.673727      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:06:13.673850      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:06:14.674256      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:06:15.675120      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:06:16.675206      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:06:17.676223      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:06:18.676618      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:06:19.676762      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:06:20.677807      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:06:21.677900      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:06:22.678752      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:06:23.678803      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:06:24.679567      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:06:25.679710      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:06:26.679815      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:06:27.680685      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:06:28.680754      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:06:29.681846      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:06:30.682069      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:06:31.682170      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:06:32.682819      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:06:33.683980      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:06:34.524930 23 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 07/26/25 13:06:34.53
  STEP: Adding a custom resource @ 07/26/25 13:06:34.53
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 07/26/25 13:06:34.54
  I0726 13:06:34.552850 23 preemption.go:511] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 07/26/25 13:06:34.552
  E0726 13:06:34.684067      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:06:35.684835      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 07/26/25 13:06:36.565
  I0726 13:06:36.573321 23 preemption.go:529] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 07/26/25 13:06:36.573
  E0726 13:06:36.684915      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:06:37.685812      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the pod has the pod disruption condition @ 07/26/25 13:06:38.588
  I0726 13:06:38.593305 23 pod_client.go:383] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  E0726 13:06:38.686540      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:06:39.110867 23 pod_client.go:173] Successfully updated pod "victim-pod"
  STEP: Removing a custom resource @ 07/26/25 13:06:39.138
  STEP: Removing a custom resource @ 07/26/25 13:06:39.153
  STEP: Removing a custom resource @ 07/26/25 13:06:39.164
  I0726 13:06:39.175252 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-8485" for this suite. @ 07/26/25 13:06:39.18
• [64.711 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:401
  STEP: Creating a kubernetes client @ 07/26/25 13:06:39.189
  I0726 13:06:39.189879 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename namespaces @ 07/26/25 13:06:39.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:06:39.204
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:06:39.207
  STEP: Creating namespace "e2e-ns-vctj9" @ 07/26/25 13:06:39.21
  I0726 13:06:39.224526 23 namespace.go:412] Namespace "e2e-ns-vctj9-556" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-vctj9-556" @ 07/26/25 13:06:39.224
  I0726 13:06:39.236113 23 namespace.go:435] Namespace "e2e-ns-vctj9-556" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-vctj9-556" @ 07/26/25 13:06:39.236
  I0726 13:06:39.246313 23 namespace.go:464] Namespace "e2e-ns-vctj9-556" has []v1.FinalizerName{"kubernetes"}
  I0726 13:06:39.246392 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3971" for this suite. @ 07/26/25 13:06:39.253
  STEP: Destroying namespace "e2e-ns-vctj9-556" for this suite. @ 07/26/25 13:06:39.263
• [0.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 07/26/25 13:06:39.272
  I0726 13:06:39.272488 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename webhook @ 07/26/25 13:06:39.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:06:39.291
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:06:39.293
  STEP: Setting up server cert @ 07/26/25 13:06:39.314
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/26/25 13:06:39.476
  STEP: Deploying the webhook pod @ 07/26/25 13:06:39.484
  STEP: Wait for the deployment to be ready @ 07/26/25 13:06:39.499
  I0726 13:06:39.513886 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0726 13:06:39.687205      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:06:40.687889      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/26/25 13:06:41.53
  STEP: Verifying the service has paired with the endpoint @ 07/26/25 13:06:41.553
  E0726 13:06:41.688840      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:06:42.554518 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 07/26/25 13:06:42.561
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 07/26/25 13:06:42.562
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 07/26/25 13:06:42.562
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 07/26/25 13:06:42.562
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 07/26/25 13:06:42.563
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 07/26/25 13:06:42.563
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 07/26/25 13:06:42.565
  I0726 13:06:42.631628 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3604" for this suite. @ 07/26/25 13:06:42.638
  STEP: Destroying namespace "webhook-markers-1056" for this suite. @ 07/26/25 13:06:42.647
• [3.385 seconds]
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 07/26/25 13:06:42.657
  I0726 13:06:42.657230 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/26/25 13:06:42.657
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:06:42.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:06:42.673
  I0726 13:06:42.676711 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  E0726 13:06:42.688989      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:06:43.222481 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9856" for this suite. @ 07/26/25 13:06:43.231
• [0.585 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:850
  STEP: Creating a kubernetes client @ 07/26/25 13:06:43.242
  I0726 13:06:43.242781 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename pods @ 07/26/25 13:06:43.243
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:06:43.256
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:06:43.259
  STEP: Create set of pods @ 07/26/25 13:06:43.262
  I0726 13:06:43.273425 23 pods.go:874] created test-pod-1
  I0726 13:06:43.280749 23 pods.go:874] created test-pod-2
  I0726 13:06:43.292618 23 pods.go:874] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 07/26/25 13:06:43.292
  E0726 13:06:43.689792      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:06:44.689892      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 07/26/25 13:06:45.339
  I0726 13:06:45.343293 23 pods.go:1139] Pod quantity 3 is different from expected quantity 0
  E0726 13:06:45.690707      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:06:46.346022 23 pods.go:1139] Pod quantity 3 is different from expected quantity 0
  E0726 13:06:46.691621      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:06:47.347360 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-643" for this suite. @ 07/26/25 13:06:47.353
• [4.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 07/26/25 13:06:47.363
  I0726 13:06:47.363724 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename limitrange @ 07/26/25 13:06:47.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:06:47.377
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:06:47.38
  STEP: Creating a LimitRange @ 07/26/25 13:06:47.382
  STEP: Setting up watch @ 07/26/25 13:06:47.382
  STEP: Submitting a LimitRange @ 07/26/25 13:06:47.488
  STEP: Verifying LimitRange creation was observed @ 07/26/25 13:06:47.495
  STEP: Fetching the LimitRange to ensure it has proper values @ 07/26/25 13:06:47.495
  I0726 13:06:47.499768 23 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0726 13:06:47.499793 23 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 07/26/25 13:06:47.499
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 07/26/25 13:06:47.507
  I0726 13:06:47.515279 23 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0726 13:06:47.515302 23 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 07/26/25 13:06:47.515
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 07/26/25 13:06:47.522
  I0726 13:06:47.530687 23 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0726 13:06:47.530709 23 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 07/26/25 13:06:47.53
  STEP: Failing to create a Pod with more than max resources @ 07/26/25 13:06:47.532
  STEP: Updating a LimitRange @ 07/26/25 13:06:47.534
  STEP: Verifying LimitRange updating is effective @ 07/26/25 13:06:47.54
  E0726 13:06:47.692089      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:06:48.692321      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 07/26/25 13:06:49.547
  STEP: Failing to create a Pod with more than max resources @ 07/26/25 13:06:49.554
  STEP: Deleting a LimitRange @ 07/26/25 13:06:49.556
  STEP: Verifying the LimitRange was deleted @ 07/26/25 13:06:49.568
  E0726 13:06:49.692791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:06:50.692912      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:06:51.693002      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:06:52.693145      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:06:53.693254      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:06:54.576663 23 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 07/26/25 13:06:54.576
  I0726 13:06:54.589236 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-2402" for this suite. @ 07/26/25 13:06:54.598
• [7.246 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 07/26/25 13:06:54.609
  I0726 13:06:54.609861 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename field-validation @ 07/26/25 13:06:54.61
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:06:54.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:06:54.627
  I0726 13:06:54.629750 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  E0726 13:06:54.693521      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:06:55.693873      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:06:56.693959      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:06:57.694107      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:06:57.722044 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4793" for this suite. @ 07/26/25 13:06:57.728
• [3.129 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 07/26/25 13:06:57.739
  I0726 13:06:57.739933 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename daemonsets @ 07/26/25 13:06:57.74
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:06:57.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:06:57.756
  STEP: Creating simple DaemonSet "daemon-set" @ 07/26/25 13:06:57.844
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/26/25 13:06:57.853
  I0726 13:06:57.929982 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-77-91 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 13:06:57.930103 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-89-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 13:06:57.934877 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0726 13:06:57.934907 23 fixtures.go:131] Node ip-172-31-16-254 is running 0 daemon pod, expected 1
  E0726 13:06:58.694870      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:06:58.859961 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-77-91 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 13:06:58.859990 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-89-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 13:06:58.866598 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0726 13:06:58.866619 23 fixtures.go:131] Node ip-172-31-3-117 is running 0 daemon pod, expected 1
  E0726 13:06:59.695522      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:06:59.860356 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-77-91 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 13:06:59.860399 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-89-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 13:06:59.865672 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0726 13:06:59.865687 23 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 07/26/25 13:06:59.87
  STEP: DeleteCollection of the DaemonSets @ 07/26/25 13:06:59.878
  STEP: Verify that ReplicaSets have been deleted @ 07/26/25 13:06:59.89
  I0726 13:06:59.979739 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"24921"},"items":null}

  I0726 13:06:59.986749 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"24921"},"items":[{"metadata":{"name":"daemon-set-6r2zj","generateName":"daemon-set-","namespace":"daemonsets-5193","uid":"7bd3852c-6e0a-4afb-9fc2-3464052477c1","resourceVersion":"24919","generation":2,"creationTimestamp":"2025-07-26T13:06:57Z","deletionTimestamp":"2025-07-26T13:07:29Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"321f52a2-37d2-4d74-b3b5-2caf745fad97","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-07-26T13:06:57Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"321f52a2-37d2-4d74-b3b5-2caf745fad97\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-07-26T13:06:59Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.248.183\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-phd7g","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-phd7g","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-3-117","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-3-117"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-26T13:06:59Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-26T13:06:57Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-26T13:06:59Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-26T13:06:59Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-26T13:06:57Z"}],"hostIP":"172.31.3.117","hostIPs":[{"ip":"172.31.3.117"}],"podIP":"192.168.248.183","podIPs":[{"ip":"192.168.248.183"}],"startTime":"2025-07-26T13:06:57Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-07-26T13:06:58Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://3b4509ea2f91d813f9985c5aa45ec12d95c24a040820f9352d926f1a4256b3f3","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-phd7g","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-kdhlz","generateName":"daemon-set-","namespace":"daemonsets-5193","uid":"61a181fc-315f-4e72-a60a-30b814505110","resourceVersion":"24917","generation":2,"creationTimestamp":"2025-07-26T13:06:57Z","deletionTimestamp":"2025-07-26T13:07:29Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"321f52a2-37d2-4d74-b3b5-2caf745fad97","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-07-26T13:06:57Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"321f52a2-37d2-4d74-b3b5-2caf745fad97\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-07-26T13:06:58Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.58.231\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-hsmf9","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-hsmf9","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-16-254","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-16-254"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-26T13:06:58Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-26T13:06:57Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-26T13:06:58Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-26T13:06:58Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-26T13:06:57Z"}],"hostIP":"172.31.16.254","hostIPs":[{"ip":"172.31.16.254"}],"podIP":"192.168.58.231","podIPs":[{"ip":"192.168.58.231"}],"startTime":"2025-07-26T13:06:57Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-07-26T13:06:58Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://a485d2fefcc7eb878bc40aa9e6aaddc3b0667b3958ac4708217483a84f3b3d19","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-hsmf9","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-vp45v","generateName":"daemon-set-","namespace":"daemonsets-5193","uid":"4c75a231-60ec-4162-91c7-9cabcaa7bb73","resourceVersion":"24916","generation":2,"creationTimestamp":"2025-07-26T13:06:57Z","deletionTimestamp":"2025-07-26T13:07:29Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"321f52a2-37d2-4d74-b3b5-2caf745fad97","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-07-26T13:06:57Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"321f52a2-37d2-4d74-b3b5-2caf745fad97\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-07-26T13:06:58Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.13.4\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-2dvwk","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-2dvwk","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-72-233","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-72-233"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-26T13:06:58Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-26T13:06:57Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-26T13:06:58Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-26T13:06:58Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-07-26T13:06:57Z"}],"hostIP":"172.31.72.233","hostIPs":[{"ip":"172.31.72.233"}],"podIP":"192.168.13.4","podIPs":[{"ip":"192.168.13.4"}],"startTime":"2025-07-26T13:06:57Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-07-26T13:06:58Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://fb2f2efdec82175ba53aa5f95ae1fcd86ebea759b327c6c3184422965fdf6c36","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-2dvwk","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}}]}

  I0726 13:07:00.006750 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5193" for this suite. @ 07/26/25 13:07:00.094
• [2.367 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:980
  STEP: Creating a kubernetes client @ 07/26/25 13:07:00.113
  I0726 13:07:00.116508 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename statefulset @ 07/26/25 13:07:00.123
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:07:00.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:07:00.141
  STEP: Creating service test in namespace statefulset-4892 @ 07/26/25 13:07:00.143
  I0726 13:07:00.163986 23 wait.go:44] Found 0 stateful pods, waiting for 1
  E0726 13:07:00.695686      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:07:01.695796      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:07:02.695915      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:07:03.696090      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:07:04.696177      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:07:05.696322      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:07:06.696429      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:07:07.696570      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:07:08.696679      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:07:09.696806      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:07:10.167700 23 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 07/26/25 13:07:10.176
  I0726 13:07:10.199746 23 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0726 13:07:10.199771 23 wait.go:54] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
  E0726 13:07:10.696952      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:07:11.697166      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:07:12.697266      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:07:13.697372      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:07:14.697503      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:07:15.697554      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:07:16.697727      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:07:17.698620      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:07:18.698806      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:07:19.699268      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:07:20.198158 23 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0726 13:07:20.198192 23 wait.go:54] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 07/26/25 13:07:20.207
  STEP: Delete all of the StatefulSets @ 07/26/25 13:07:20.214
  STEP: Verify that StatefulSets have been deleted @ 07/26/25 13:07:20.226
  I0726 13:07:20.234383 23 statefulset.go:138] Deleting all statefulset in ns statefulset-4892
  I0726 13:07:20.327952 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4892" for this suite. @ 07/26/25 13:07:20.334
• [20.231 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:57
  STEP: Creating a kubernetes client @ 07/26/25 13:07:20.344
  I0726 13:07:20.344305 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename projected @ 07/26/25 13:07:20.345
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:07:20.361
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:07:20.363
  STEP: Creating configMap with name projected-configmap-test-volume-614b42b3-296b-4635-af66-58c10278068f @ 07/26/25 13:07:20.367
  STEP: Creating a pod to test consume configMaps @ 07/26/25 13:07:20.374
  E0726 13:07:20.700316      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:07:21.700860      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:07:22.701250      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:07:23.701490      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 13:07:24.405
  I0726 13:07:24.409803 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod pod-projected-configmaps-8911eca6-5001-49ac-821e-1ee9fa4db908 container agnhost-container: <nil>
  STEP: delete the pod @ 07/26/25 13:07:24.427
  I0726 13:07:24.447501 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1316" for this suite. @ 07/26/25 13:07:24.454
• [4.119 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 07/26/25 13:07:24.463
  I0726 13:07:24.463328 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename webhook @ 07/26/25 13:07:24.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:07:24.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:07:24.481
  STEP: Setting up server cert @ 07/26/25 13:07:24.503
  E0726 13:07:24.701813      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/26/25 13:07:25.06
  STEP: Deploying the webhook pod @ 07/26/25 13:07:25.068
  STEP: Wait for the deployment to be ready @ 07/26/25 13:07:25.086
  I0726 13:07:25.104478 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0726 13:07:25.701957      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:07:26.702090      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/26/25 13:07:27.122
  STEP: Verifying the service has paired with the endpoint @ 07/26/25 13:07:27.142
  E0726 13:07:27.703108      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:07:28.142463 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 07/26/25 13:07:28.149
  STEP: Creating a custom resource definition that should be denied by the webhook @ 07/26/25 13:07:28.164
  I0726 13:07:28.164832 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  I0726 13:07:28.245798 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5233" for this suite. @ 07/26/25 13:07:28.254
  STEP: Destroying namespace "webhook-markers-7309" for this suite. @ 07/26/25 13:07:28.262
• [3.808 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 07/26/25 13:07:28.271
  I0726 13:07:28.271649 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename chunking @ 07/26/25 13:07:28.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:07:28.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:07:28.288
  STEP: creating a large number of resources @ 07/26/25 13:07:28.291
  E0726 13:07:28.704055      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:07:29.704995      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:07:30.705983      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:07:31.706896      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:07:32.707366      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:07:33.707645      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:07:34.708584      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:07:35.709567      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:07:36.709972      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:07:37.710059      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:07:38.710743      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:07:39.711620      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:07:40.712061      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:07:41.712765      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:07:42.712854      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:07:43.713837      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:07:44.713889      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:07:45.714493      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving those results in paged fashion several times @ 07/26/25 13:07:45.978
  I0726 13:07:46.028648 23 chunking.go:98] Retrieved 17/17 results with rv 25726 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0726 13:07:46.079146 23 chunking.go:98] Retrieved 17/17 results with rv 25726 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjYsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0726 13:07:46.127858 23 chunking.go:98] Retrieved 17/17 results with rv 25726 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjYsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0726 13:07:46.178583 23 chunking.go:98] Retrieved 17/17 results with rv 25726 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjYsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0726 13:07:46.229081 23 chunking.go:98] Retrieved 17/17 results with rv 25726 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjYsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0726 13:07:46.277622 23 chunking.go:98] Retrieved 17/17 results with rv 25726 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjYsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0726 13:07:46.328843 23 chunking.go:98] Retrieved 17/17 results with rv 25726 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjYsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0726 13:07:46.379541 23 chunking.go:98] Retrieved 17/17 results with rv 25726 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjYsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0726 13:07:46.427708 23 chunking.go:98] Retrieved 17/17 results with rv 25726 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjYsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0726 13:07:46.477806 23 chunking.go:98] Retrieved 17/17 results with rv 25726 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjYsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0726 13:07:46.528947 23 chunking.go:98] Retrieved 17/17 results with rv 25726 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjYsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0726 13:07:46.576626 23 chunking.go:98] Retrieved 17/17 results with rv 25726 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjYsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0726 13:07:46.628557 23 chunking.go:98] Retrieved 17/17 results with rv 25726 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjYsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0726 13:07:46.678571 23 chunking.go:98] Retrieved 17/17 results with rv 25726 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjYsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  E0726 13:07:46.714619      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:07:46.727060 23 chunking.go:98] Retrieved 17/17 results with rv 25726 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjYsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0726 13:07:46.778150 23 chunking.go:98] Retrieved 17/17 results with rv 25726 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjYsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0726 13:07:46.828223 23 chunking.go:98] Retrieved 17/17 results with rv 25726 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjYsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0726 13:07:46.877200 23 chunking.go:98] Retrieved 17/17 results with rv 25726 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjYsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0726 13:07:46.927743 23 chunking.go:98] Retrieved 17/17 results with rv 25726 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjYsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0726 13:07:46.977951 23 chunking.go:98] Retrieved 17/17 results with rv 25726 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjYsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0726 13:07:47.026928 23 chunking.go:98] Retrieved 17/17 results with rv 25726 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjYsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0726 13:07:47.078533 23 chunking.go:98] Retrieved 17/17 results with rv 25726 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjYsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0726 13:07:47.129133 23 chunking.go:98] Retrieved 17/17 results with rv 25726 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjYsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0726 13:07:47.177522 23 chunking.go:98] Retrieved 9/17 results with rv 25726 and continue 
  I0726 13:07:47.229216 23 chunking.go:98] Retrieved 17/17 results with rv 25727 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0726 13:07:47.278500 23 chunking.go:98] Retrieved 17/17 results with rv 25727 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjcsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0726 13:07:47.327739 23 chunking.go:98] Retrieved 17/17 results with rv 25727 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjcsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0726 13:07:47.378281 23 chunking.go:98] Retrieved 17/17 results with rv 25727 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjcsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0726 13:07:47.428474 23 chunking.go:98] Retrieved 17/17 results with rv 25727 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjcsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0726 13:07:47.477884 23 chunking.go:98] Retrieved 17/17 results with rv 25727 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjcsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0726 13:07:47.528655 23 chunking.go:98] Retrieved 17/17 results with rv 25727 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjcsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0726 13:07:47.579548 23 chunking.go:98] Retrieved 17/17 results with rv 25727 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjcsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0726 13:07:47.627875 23 chunking.go:98] Retrieved 17/17 results with rv 25727 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjcsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0726 13:07:47.679274 23 chunking.go:98] Retrieved 17/17 results with rv 25727 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjcsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  E0726 13:07:47.715435      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:07:47.728566 23 chunking.go:98] Retrieved 17/17 results with rv 25727 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjcsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0726 13:07:47.777895 23 chunking.go:98] Retrieved 17/17 results with rv 25727 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjcsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0726 13:07:47.828886 23 chunking.go:98] Retrieved 17/17 results with rv 25727 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjcsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0726 13:07:47.879646 23 chunking.go:98] Retrieved 17/17 results with rv 25727 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjcsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0726 13:07:47.927830 23 chunking.go:98] Retrieved 17/17 results with rv 25727 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjcsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0726 13:07:47.978756 23 chunking.go:98] Retrieved 17/17 results with rv 25727 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjcsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0726 13:07:48.029423 23 chunking.go:98] Retrieved 17/17 results with rv 25727 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjcsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0726 13:07:48.078214 23 chunking.go:98] Retrieved 17/17 results with rv 25727 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjcsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0726 13:07:48.127981 23 chunking.go:98] Retrieved 17/17 results with rv 25727 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjcsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0726 13:07:48.178226 23 chunking.go:98] Retrieved 17/17 results with rv 25727 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjcsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0726 13:07:48.227700 23 chunking.go:98] Retrieved 17/17 results with rv 25727 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjcsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0726 13:07:48.278541 23 chunking.go:98] Retrieved 17/17 results with rv 25727 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjcsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0726 13:07:48.328760 23 chunking.go:98] Retrieved 17/17 results with rv 25727 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjcsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0726 13:07:48.377961 23 chunking.go:98] Retrieved 9/17 results with rv 25727 and continue 
  I0726 13:07:48.428977 23 chunking.go:98] Retrieved 17/17 results with rv 25729 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0726 13:07:48.478465 23 chunking.go:98] Retrieved 17/17 results with rv 25729 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjksInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0726 13:07:48.527742 23 chunking.go:98] Retrieved 17/17 results with rv 25729 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjksInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0726 13:07:48.578291 23 chunking.go:98] Retrieved 17/17 results with rv 25729 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjksInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0726 13:07:48.628232 23 chunking.go:98] Retrieved 17/17 results with rv 25729 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjksInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0726 13:07:48.677414 23 chunking.go:98] Retrieved 17/17 results with rv 25729 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjksInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  E0726 13:07:48.715461      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:07:48.727780 23 chunking.go:98] Retrieved 17/17 results with rv 25729 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjksInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0726 13:07:48.778581 23 chunking.go:98] Retrieved 17/17 results with rv 25729 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjksInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0726 13:07:48.827926 23 chunking.go:98] Retrieved 17/17 results with rv 25729 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjksInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0726 13:07:48.878853 23 chunking.go:98] Retrieved 17/17 results with rv 25729 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjksInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0726 13:07:48.929007 23 chunking.go:98] Retrieved 17/17 results with rv 25729 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjksInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0726 13:07:48.977132 23 chunking.go:98] Retrieved 17/17 results with rv 25729 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjksInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0726 13:07:49.027766 23 chunking.go:98] Retrieved 17/17 results with rv 25729 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjksInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0726 13:07:49.079302 23 chunking.go:98] Retrieved 17/17 results with rv 25729 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjksInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0726 13:07:49.127686 23 chunking.go:98] Retrieved 17/17 results with rv 25729 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjksInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0726 13:07:49.178712 23 chunking.go:98] Retrieved 17/17 results with rv 25729 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjksInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0726 13:07:49.229190 23 chunking.go:98] Retrieved 17/17 results with rv 25729 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjksInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0726 13:07:49.277310 23 chunking.go:98] Retrieved 17/17 results with rv 25729 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjksInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0726 13:07:49.328483 23 chunking.go:98] Retrieved 17/17 results with rv 25729 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjksInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0726 13:07:49.378589 23 chunking.go:98] Retrieved 17/17 results with rv 25729 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjksInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0726 13:07:49.427823 23 chunking.go:98] Retrieved 17/17 results with rv 25729 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjksInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0726 13:07:49.478336 23 chunking.go:98] Retrieved 17/17 results with rv 25729 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjksInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0726 13:07:49.528670 23 chunking.go:98] Retrieved 17/17 results with rv 25729 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjksInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0726 13:07:49.577741 23 chunking.go:98] Retrieved 9/17 results with rv 25729 and continue 
  STEP: retrieving those results all at once @ 07/26/25 13:07:49.577
  I0726 13:07:49.632714 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-2495" for this suite. @ 07/26/25 13:07:49.68
  E0726 13:07:49.716028      23 retrywatcher.go:169] "Watch failed" err="context canceled"
• [21.460 seconds]
------------------------------
[sig-api-machinery] CustomResourceFieldSelectors [Privileged:ClusterAdmin] CustomResourceFieldSelectors MUST list and watch custom resources matching the field selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_selectable_fields.go:124
  STEP: Creating a kubernetes client @ 07/26/25 13:07:49.732
  I0726 13:07:49.732226 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename crd-selectable-fields @ 07/26/25 13:07:49.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:07:49.747
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:07:49.75
  STEP: Setting up server cert @ 07/26/25 13:07:49.752
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 07/26/25 13:07:50.022
  STEP: Deploying the custom resource conversion webhook pod @ 07/26/25 13:07:50.029
  STEP: Wait for the deployment to be ready @ 07/26/25 13:07:50.043
  I0726 13:07:50.061493 23 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0726 13:07:50.716150      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:07:51.716858      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/26/25 13:07:52.079
  STEP: Verifying the service has paired with the endpoint @ 07/26/25 13:07:52.1
  E0726 13:07:52.717511      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:07:53.100926 23 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  STEP: Creating a custom resource definition with selectable fields @ 07/26/25 13:07:53.107
  I0726 13:07:53.107345 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Creating a custom resource conversion webhook @ 07/26/25 13:07:53.62
  E0726 13:07:53.718159      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:07:54.718235      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Watching with field selectors @ 07/26/25 13:07:55.676
  STEP: Registering informers with field selectors @ 07/26/25 13:07:55.68
  STEP: Creating custom resources @ 07/26/25 13:07:55.68
  STEP: Listing v2 custom resources with field selector host=host1 @ 07/26/25 13:07:55.705
  STEP: Listing v2 custom resources with field selector host=host1,port=80 @ 07/26/25 13:07:55.711
  STEP: Listing v1 custom resources with field selector hostPort=host1:80 @ 07/26/25 13:07:55.715
  E0726 13:07:55.718668      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Listing v1 custom resources with field selector hostPort=host1:8080 @ 07/26/25 13:07:55.72
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1 @ 07/26/25 13:07:55.821
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1,port=80 @ 07/26/25 13:07:55.826
  STEP: Waiting for watch events to contain v1 custom resources for field selector hostPort=host1:80 @ 07/26/25 13:07:55.826
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1 @ 07/26/25 13:07:55.826
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1,port=80 @ 07/26/25 13:07:55.826
  STEP: Deleting one custom resources to ensure that deletions are observed @ 07/26/25 13:07:55.826
  STEP: Updating one custom resources to ensure that deletions are observed @ 07/26/25 13:07:55.844
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1 @ 07/26/25 13:07:55.862
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1,port=80 @ 07/26/25 13:07:55.935
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1 @ 07/26/25 13:07:56.035
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1,port=80 @ 07/26/25 13:07:56.04
  STEP: Waiting for v1 watch events after updates and deletes for field selector hostPort=host1:80 @ 07/26/25 13:07:56.04
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1 @ 07/26/25 13:07:56.04
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1,port=80 @ 07/26/25 13:07:56.04
  I0726 13:07:56.624002 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-selectable-fields-2198" for this suite. @ 07/26/25 13:07:56.634
• [6.913 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:278
  STEP: Creating a kubernetes client @ 07/26/25 13:07:56.645
  I0726 13:07:56.645129 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/26/25 13:07:56.645
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:07:56.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:07:56.662
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 07/26/25 13:07:56.664
  I0726 13:07:56.665251 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  E0726 13:07:56.718872      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:07:57.719565      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:07:57.877379 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  E0726 13:07:58.720643      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:07:59.721130      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:08:00.721299      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:08:01.721595      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:08:02.722265      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:08:02.776703 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5097" for this suite. @ 07/26/25 13:08:02.785
• [6.149 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1794
  STEP: Creating a kubernetes client @ 07/26/25 13:08:02.794
  I0726 13:08:02.794404 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename kubectl @ 07/26/25 13:08:02.794
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:08:02.809
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:08:02.811
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 07/26/25 13:08:02.813
  I0726 13:08:02.813884 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-3183 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0726 13:08:02.860126 23 builder.go:146] stderr: ""
  I0726 13:08:02.860157 23 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 07/26/25 13:08:02.86
  E0726 13:08:03.722746      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:08:04.722844      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:08:05.722925      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:08:06.723125      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:08:07.723348      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 07/26/25 13:08:07.911
  I0726 13:08:07.911775 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-3183 get pod e2e-test-httpd-pod -o json'
  I0726 13:08:07.952078 23 builder.go:146] stderr: ""
  I0726 13:08:07.952251 23 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2025-07-26T13:08:02Z\",\n        \"generation\": 1,\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-3183\",\n        \"resourceVersion\": \"26293\",\n        \"uid\": \"4da14d43-b910-41b8-8444-66259fbfcd18\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-ns2hn\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-16-254\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-ns2hn\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-07-26T13:08:03Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-07-26T13:08:02Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-07-26T13:08:03Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-07-26T13:08:03Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-07-26T13:08:02Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://b19216b6f3a06811a13d2d21a58da5018ba84d2df9b4c7ddb7d922087974107a\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"resources\": {},\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2025-07-26T13:08:03Z\"\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-ns2hn\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"172.31.16.254\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.31.16.254\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"192.168.58.236\",\n        \"podIPs\": [\n            {\n                \"ip\": \"192.168.58.236\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2025-07-26T13:08:02Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 07/26/25 13:08:07.952
  I0726 13:08:07.952350 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-3183 replace -f -'
  I0726 13:08:08.034680 23 builder.go:146] stderr: ""
  I0726 13:08:08.034715 23 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 07/26/25 13:08:08.034
  I0726 13:08:08.039345 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-3183 delete pods e2e-test-httpd-pod'
  E0726 13:08:08.723476      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:08:09.723715      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:08:09.929000 23 builder.go:146] stderr: ""
  I0726 13:08:09.929037 23 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0726 13:08:09.929193 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3183" for this suite. @ 07/26/25 13:08:09.936
• [7.151 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:236
  STEP: Creating a kubernetes client @ 07/26/25 13:08:09.945
  I0726 13:08:09.945589 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename projected @ 07/26/25 13:08:09.946
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:08:09.96
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:08:09.962
  STEP: Creating a pod to test downward API volume plugin @ 07/26/25 13:08:09.964
  E0726 13:08:10.723835      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:08:11.724589      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:08:12.725184      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:08:13.725247      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 13:08:13.996
  I0726 13:08:14.000720 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod downwardapi-volume-549b772e-8daf-4114-a9bd-835afed243ba container client-container: <nil>
  STEP: delete the pod @ 07/26/25 13:08:14.011
  I0726 13:08:14.036387 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-184" for this suite. @ 07/26/25 13:08:14.042
• [4.107 seconds]
------------------------------
S
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:42
  STEP: Creating a kubernetes client @ 07/26/25 13:08:14.052
  I0726 13:08:14.052343 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename containers @ 07/26/25 13:08:14.052
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:08:14.065
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:08:14.067
  E0726 13:08:14.726263      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:08:15.726860      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:08:16.105264 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7049" for this suite. @ 07/26/25 13:08:16.112
• [2.070 seconds]
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 07/26/25 13:08:16.122
  I0726 13:08:16.122343 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename events @ 07/26/25 13:08:16.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:08:16.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:08:16.138
  STEP: Create set of events @ 07/26/25 13:08:16.141
  STEP: get a list of Events with a label in the current namespace @ 07/26/25 13:08:16.161
  STEP: delete a list of events @ 07/26/25 13:08:16.165
  I0726 13:08:16.165433 23 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 07/26/25 13:08:16.202
  I0726 13:08:16.207479 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-6015" for this suite. @ 07/26/25 13:08:16.213
• [0.101 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 07/26/25 13:08:16.223
  I0726 13:08:16.223128 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename var-expansion @ 07/26/25 13:08:16.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:08:16.237
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:08:16.239
  STEP: creating the pod with failed condition @ 07/26/25 13:08:16.241
  E0726 13:08:16.727460      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:08:17.727571      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:08:18.727801      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:08:19.727868      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:08:20.728513      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:08:21.728506      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:08:22.729210      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:08:23.729273      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:08:24.730169      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:08:25.730886      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:08:26.731008      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:08:27.731088      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:08:28.731841      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:08:29.732013      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:08:30.732177      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:08:31.732549      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:08:32.732825      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:08:33.733050      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:08:34.733205      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:08:35.733383      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:08:36.733769      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:08:37.734706      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:08:38.735552      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:08:39.735777      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:08:40.735926      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:08:41.736829      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:08:42.737311      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:08:43.737490      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:08:44.738343      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:08:45.738427      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:08:46.738622      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:08:47.738765      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:08:48.739732      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:08:49.739771      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:08:50.739860      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:08:51.740824      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:08:52.741258      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:08:53.741385      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:08:54.741825      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:08:55.741932      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:08:56.741993      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:08:57.742129      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:08:58.743108      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:08:59.743294      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:00.743402      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:01.743597      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:02.744048      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:03.744829      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:04.745084      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:05.745267      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:06.745913      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:07.746922      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:08.747117      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:09.747298      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:10.747468      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:11.747666      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:12.748537      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:13.749373      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:14.750210      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:15.750305      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:16.751371      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:17.752339      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:18.753388      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:19.753507      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:20.754214      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:21.754396      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:22.754944      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:23.755221      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:24.755282      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:25.755536      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:26.756299      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:27.756388      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:28.757321      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:29.757424      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:30.758317      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:31.758417      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:32.759133      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:33.759238      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:34.759332      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:35.759506      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:36.760389      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:37.761369      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:38.762380      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:39.762532      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:40.763288      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:41.763494      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:42.763847      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:43.764025      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:44.764921      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:45.765888      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:46.766334      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:47.767208      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:48.767981      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:49.768071      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:50.768753      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:51.768854      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:52.769434      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:53.769854      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:54.770243      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:55.770337      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:56.770847      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:57.771043      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:58.771833      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:09:59.772002      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:10:00.772700      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:10:01.772880      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:10:02.773117      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:10:03.773158      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:10:04.773743      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:10:05.773853      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:10:06.773987      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:10:07.774085      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:10:08.774287      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:10:09.774477      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:10:10.775227      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:10:11.775937      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:10:12.776020      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:10:13.776832      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:10:14.777229      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:10:15.777347      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: updating the pod @ 07/26/25 13:10:16.252
  I0726 13:10:16.768525 23 pod_client.go:173] Successfully updated pod "var-expansion-a7fd237a-bac0-4dbc-b108-b921f3f336b9"
  STEP: waiting for pod running @ 07/26/25 13:10:16.768
  E0726 13:10:16.778065      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:10:17.778229      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:10:18.778323      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 07/26/25 13:10:18.781
  I0726 13:10:18.781025 23 delete.go:62] Deleting pod "var-expansion-a7fd237a-bac0-4dbc-b108-b921f3f336b9" in namespace "var-expansion-5442"
  I0726 13:10:18.792019 23 delete.go:70] Wait up to 5m0s for pod "var-expansion-a7fd237a-bac0-4dbc-b108-b921f3f336b9" to be fully deleted
  E0726 13:10:19.778485      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:10:20.778560      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:10:21.778797      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:10:22.779559      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:10:23.779813      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:10:24.779890      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:10:25.779999      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:10:26.780072      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:10:27.781011      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:10:28.781182      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:10:29.781354      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:10:30.781428      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:10:31.781659      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:10:32.782731      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:10:33.782791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:10:34.782931      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:10:35.783117      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:10:36.783269      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:10:37.783871      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:10:38.783969      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:10:39.784164      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:10:40.784286      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:10:41.784433      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:10:42.785348      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:10:43.785660      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:10:44.785867      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:10:45.786452      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:10:46.786693      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:10:47.787298      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:10:48.787397      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:10:49.787802      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:10:50.787867      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:10:50.898390 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5442" for this suite. @ 07/26/25 13:10:50.905
• [154.693 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:174
  STEP: Creating a kubernetes client @ 07/26/25 13:10:50.915
  I0726 13:10:50.915897 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename projected @ 07/26/25 13:10:50.916
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:10:50.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:10:50.944
  STEP: Creating configMap with name cm-test-opt-del-1f0932bb-34be-4641-9cb4-9a24f8d4f7f0 @ 07/26/25 13:10:51.006
  STEP: Creating configMap with name cm-test-opt-upd-0b2ae419-2534-4ede-9f2c-dcf069a539ef @ 07/26/25 13:10:51.012
  STEP: Creating the pod @ 07/26/25 13:10:51.018
  E0726 13:10:51.788373      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:10:52.788442      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-1f0932bb-34be-4641-9cb4-9a24f8d4f7f0 @ 07/26/25 13:10:53.083
  STEP: Updating configmap cm-test-opt-upd-0b2ae419-2534-4ede-9f2c-dcf069a539ef @ 07/26/25 13:10:53.092
  STEP: Creating configMap with name cm-test-opt-create-de311bb6-c8cb-4b36-a25e-fe559cfe0af0 @ 07/26/25 13:10:53.099
  STEP: waiting to observe update in volume @ 07/26/25 13:10:53.106
  E0726 13:10:53.789223      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:10:54.789331      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:10:55.789409      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:10:56.789523      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:10:57.789616      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:10:58.789799      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:10:59.789887      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:00.789964      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:01.790813      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:02.791866      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:03.792024      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:04.792244      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:05.792861      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:06.792937      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:07.793077      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:08.793173      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:09.794258      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:10.794456      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:11.795451      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:12.796545      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:13.796730      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:14.796860      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:15.797002      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:16.797091      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:17.797251      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:18.797504      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:19.797661      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:20.797952      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:21.798051      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:22.798133      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:23.798261      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:24.798374      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:25.799156      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:26.799227      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:27.799860      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:28.799952      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:29.800859      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:30.800944      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:31.801662      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:32.802241      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:33.803030      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:34.803105      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:35.803196      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:36.803310      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:37.803573      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:38.803681      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:39.804571      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:40.804701      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:41.804804      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:42.804864      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:43.804985      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:44.805197      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:45.806103      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:46.806888      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:47.807870      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:48.808479      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:49.808855      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:50.809862      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:51.810401      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:52.810875      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:53.811379      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:54.811513      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:55.811847      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:56.811971      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:57.812855      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:58.812945      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:11:59.813137      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:12:00.813232      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:12:01.813318      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:12:02.813621      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:12:03.813574      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:12:04.813787      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:12:05.814735      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:12:06.814843      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:12:07.815702      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:12:08.815779      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:12:09.816325      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:12:10.816451      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:12:11.816548      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:12:12.817213      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:12:13.817608      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:12:14.817718      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:12:15.817816      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:12:16.817923      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:12:17.818116      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:12:18.818156      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:12:19.818830      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:12:20.818955      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:12:21.819466      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:12:22.819570      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:12:23.819864      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:12:24.819933      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:12:25.662757 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2034" for this suite. @ 07/26/25 13:12:25.669
• [94.763 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:817
  STEP: Creating a kubernetes client @ 07/26/25 13:12:25.68
  I0726 13:12:25.680348 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename webhook @ 07/26/25 13:12:25.681
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:12:25.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:12:25.701
  STEP: Setting up server cert @ 07/26/25 13:12:25.725
  E0726 13:12:25.820183      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/26/25 13:12:26.01
  STEP: Deploying the webhook pod @ 07/26/25 13:12:26.017
  STEP: Wait for the deployment to be ready @ 07/26/25 13:12:26.031
  I0726 13:12:26.044806 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0726 13:12:26.820854      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:12:27.821474      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/26/25 13:12:28.061
  STEP: Verifying the service has paired with the endpoint @ 07/26/25 13:12:28.082
  E0726 13:12:28.821594      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:12:29.082794 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 07/26/25 13:12:29.088
  I0726 13:12:29.158484 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2384" for this suite. @ 07/26/25 13:12:29.164
  STEP: Destroying namespace "webhook-markers-1322" for this suite. @ 07/26/25 13:12:29.177
• [3.506 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:426
  STEP: Creating a kubernetes client @ 07/26/25 13:12:29.185
  I0726 13:12:29.185950 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename replication-controller @ 07/26/25 13:12:29.186
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:12:29.2
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:12:29.202
  STEP: Creating ReplicationController "e2e-rc-khdrs" @ 07/26/25 13:12:29.204
  I0726 13:12:29.210242 23 rc.go:795] Get Replication Controller "e2e-rc-khdrs" to confirm replicas
  E0726 13:12:29.821846      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:12:30.210838 23 rc.go:795] Get Replication Controller "e2e-rc-khdrs" to confirm replicas
  I0726 13:12:30.216878 23 rc.go:804] Found 1 replicas for "e2e-rc-khdrs" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-khdrs" @ 07/26/25 13:12:30.216
  STEP: Updating a scale subresource @ 07/26/25 13:12:30.222
  STEP: Verifying replicas where modified for replication controller "e2e-rc-khdrs" @ 07/26/25 13:12:30.228
  I0726 13:12:30.228561 23 rc.go:795] Get Replication Controller "e2e-rc-khdrs" to confirm replicas
  E0726 13:12:30.822791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:12:31.229172 23 rc.go:795] Get Replication Controller "e2e-rc-khdrs" to confirm replicas
  I0726 13:12:31.235385 23 rc.go:804] Found 2 replicas for "e2e-rc-khdrs" replication controller
  I0726 13:12:31.235508 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9916" for this suite. @ 07/26/25 13:12:31.242
• [2.067 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 07/26/25 13:12:31.252
  I0726 13:12:31.252769 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename daemonsets @ 07/26/25 13:12:31.253
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:12:31.266
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:12:31.268
  I0726 13:12:31.356226 23 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/26/25 13:12:31.362
  I0726 13:12:31.443234 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-77-91 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 13:12:31.443271 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-89-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 13:12:31.448234 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0726 13:12:31.448254 23 fixtures.go:131] Node ip-172-31-16-254 is running 0 daemon pod, expected 1
  E0726 13:12:31.823698      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:12:32.370586 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-77-91 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 13:12:32.370616 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-89-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 13:12:32.375675 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0726 13:12:32.375694 23 fixtures.go:131] Node ip-172-31-3-117 is running 0 daemon pod, expected 1
  E0726 13:12:32.824452      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:12:33.370833 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-77-91 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 13:12:33.370873 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-89-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 13:12:33.375719 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0726 13:12:33.375737 23 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 07/26/25 13:12:33.395
  STEP: Check that daemon pods images are updated. @ 07/26/25 13:12:33.47
  I0726 13:12:33.477581 23 daemon_set.go:1193] Wrong image for pod: daemon-set-6mfph. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0726 13:12:33.477606 23 daemon_set.go:1193] Wrong image for pod: daemon-set-hrdp5. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0726 13:12:33.482432 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-77-91 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 13:12:33.482454 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-89-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0726 13:12:33.824713      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:12:34.474905 23 daemon_set.go:1193] Wrong image for pod: daemon-set-6mfph. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0726 13:12:34.482167 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-77-91 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 13:12:34.482991 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-89-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0726 13:12:34.825197      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:12:35.481932 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-77-91 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 13:12:35.481963 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-89-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0726 13:12:35.826262      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:12:36.477034 23 daemon_set.go:1198] Pod daemon-set-jrs7s is not available
  I0726 13:12:36.483313 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-77-91 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 13:12:36.483343 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-89-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 07/26/25 13:12:36.483
  I0726 13:12:36.488494 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-77-91 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 13:12:36.488516 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-89-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 13:12:36.495027 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0726 13:12:36.495050 23 fixtures.go:131] Node ip-172-31-3-117 is running 0 daemon pod, expected 1
  E0726 13:12:36.826389      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:12:37.489954 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-77-91 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 13:12:37.490022 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-89-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 13:12:37.496290 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0726 13:12:37.496310 23 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 07/26/25 13:12:37.521
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9089, will wait for the garbage collector to delete the pods @ 07/26/25 13:12:37.521
  I0726 13:12:37.588185 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 12.161921ms
  I0726 13:12:37.689160 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.968814ms
  E0726 13:12:37.826581      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:12:38.827324      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:12:38.993763 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0726 13:12:38.993798 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0726 13:12:38.999600 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"27394"},"items":null}

  I0726 13:12:39.004405 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"27394"},"items":null}

  I0726 13:12:39.025048 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9089" for this suite. @ 07/26/25 13:12:39.03
• [7.787 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:753
  STEP: Creating a kubernetes client @ 07/26/25 13:12:39.039
  I0726 13:12:39.039725 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename services @ 07/26/25 13:12:39.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:12:39.054
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:12:39.056
  STEP: creating service endpoint-test2 in namespace services-554 @ 07/26/25 13:12:39.058
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-554 to expose endpoints map[] @ 07/26/25 13:12:39.08
  I0726 13:12:39.085622      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0726 13:12:39.085668 23 service.go:4613] Failed go get Endpoints object: endpoints "endpoint-test2" not found
  E0726 13:12:39.827649      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:12:40.090966      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0726 13:12:40.097310 23 service.go:4645] successfully validated that service endpoint-test2 in namespace services-554 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-554 @ 07/26/25 13:12:40.097
  E0726 13:12:40.827982      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:12:41.828060      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-554 to expose endpoints map[pod1:[80]] @ 07/26/25 13:12:42.126
  I0726 13:12:42.135329      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0726 13:12:42.142886 23 service.go:4645] successfully validated that service endpoint-test2 in namespace services-554 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 07/26/25 13:12:42.142
  I0726 13:12:42.142931 23 resource.go:361] Creating new exec pod
  E0726 13:12:42.828863      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:12:43.828926      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:12:44.168453 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-554 exec execpodsv87s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0726 13:12:44.255470 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.152.183.231) 80 port [tcp/http] succeeded!\n"
  I0726 13:12:44.255510 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0726 13:12:44.255572 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-554 exec execpodsv87s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.231 80'
  I0726 13:12:44.331468 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.231 80\nConnection to 10.152.183.231 80 port [tcp/http] succeeded!\n"
  I0726 13:12:44.331506 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-554 @ 07/26/25 13:12:44.331
  E0726 13:12:44.829377      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:12:45.830185      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-554 to expose endpoints map[pod1:[80] pod2:[80]] @ 07/26/25 13:12:46.358
  I0726 13:12:46.372534      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0726 13:12:46.378831 23 service.go:4645] successfully validated that service endpoint-test2 in namespace services-554 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 07/26/25 13:12:46.378
  I0726 13:12:46.383698 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-554 exec execpodsv87s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0726 13:12:46.464945 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.152.183.231) 80 port [tcp/http] succeeded!\n"
  I0726 13:12:46.464980 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0726 13:12:46.465042 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-554 exec execpodsv87s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.231 80'
  I0726 13:12:46.540820 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.231 80\nConnection to 10.152.183.231 80 port [tcp/http] succeeded!\n"
  I0726 13:12:46.540857 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-554 @ 07/26/25 13:12:46.54
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-554 to expose endpoints map[pod2:[80]] @ 07/26/25 13:12:46.556
  I0726 13:12:46.569144      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  E0726 13:12:46.830279      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:12:47.581882      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0726 13:12:47.587571 23 service.go:4645] successfully validated that service endpoint-test2 in namespace services-554 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 07/26/25 13:12:47.587
  I0726 13:12:47.592348 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-554 exec execpodsv87s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0726 13:12:47.677908 23 builder.go:146] stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 (10.152.183.231) 80 port [tcp/http] succeeded!\n"
  I0726 13:12:47.677953 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0726 13:12:47.678076 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-554 exec execpodsv87s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.231 80'
  I0726 13:12:47.762356 23 builder.go:146] stderr: "+ + nc -v -t -w 2 10.152.183.231 80\necho hostName\nConnection to 10.152.183.231 80 port [tcp/http] succeeded!\n"
  I0726 13:12:47.762401 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-554 @ 07/26/25 13:12:47.762
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-554 to expose endpoints map[] @ 07/26/25 13:12:47.781
  I0726 13:12:47.786857      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0726 13:12:47.792241 23 service.go:4645] successfully validated that service endpoint-test2 in namespace services-554 exposes endpoints map[]
  I0726 13:12:47.828482 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0726 13:12:47.830450      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-554" for this suite. @ 07/26/25 13:12:47.836
• [8.806 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:240
  STEP: Creating a kubernetes client @ 07/26/25 13:12:47.845
  I0726 13:12:47.845620 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename configmap @ 07/26/25 13:12:47.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:12:47.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:12:47.862
  STEP: Creating configMap with name cm-test-opt-del-b865ce2e-d324-4411-85f3-7db8abbb9d40 @ 07/26/25 13:12:47.936
  STEP: Creating configMap with name cm-test-opt-upd-cab46600-2317-45c5-aed1-549a5513bf65 @ 07/26/25 13:12:47.942
  STEP: Creating the pod @ 07/26/25 13:12:47.949
  E0726 13:12:48.830835      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:12:49.830956      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-b865ce2e-d324-4411-85f3-7db8abbb9d40 @ 07/26/25 13:12:50.015
  STEP: Updating configmap cm-test-opt-upd-cab46600-2317-45c5-aed1-549a5513bf65 @ 07/26/25 13:12:50.023
  STEP: Creating configMap with name cm-test-opt-create-29ec53c7-9411-479f-952d-a0f1ef34b08b @ 07/26/25 13:12:50.029
  STEP: waiting to observe update in volume @ 07/26/25 13:12:50.034
  E0726 13:12:50.831842      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:12:51.831958      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:12:52.831995      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:12:53.832095      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:12:54.832213      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:12:55.832284      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:12:56.832835      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:12:57.833402      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:12:58.834139      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:12:59.834275      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:00.834831      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:01.834949      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:02.835944      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:03.836044      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:04.836181      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:05.836367      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:06.837092      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:07.837208      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:08.837291      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:09.837401      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:10.837553      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:11.837707      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:12.838677      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:13.838802      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:14.838909      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:15.838976      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:16.839056      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:17.839152      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:18.839847      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:19.839916      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:20.840037      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:21.840099      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:22.840217      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:23.840292      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:24.840405      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:25.840498      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:26.840684      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:27.840692      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:28.840841      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:29.840907      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:30.841037      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:31.841115      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:32.841214      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:33.841290      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:34.841402      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:35.841479      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:36.841614      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:37.842379      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:38.843343      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:39.843552      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:40.843811      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:41.843988      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:42.844930      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:43.845030      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:44.845874      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:45.845966      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:46.846105      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:47.846232      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:48.846852      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:49.846936      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:50.847839      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:51.847964      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:52.848124      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:53.848271      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:54.849293      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:55.849489      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:56.849761      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:57.850785      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:58.851528      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:13:59.851619      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:14:00.852533      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:14:01.852620      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:14:02.852901      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:14:03.853272      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:14:04.489196 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3252" for this suite. @ 07/26/25 13:14:04.496
• [76.660 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 07/26/25 13:14:04.505
  I0726 13:14:04.505855 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename deployment @ 07/26/25 13:14:04.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:14:04.521
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:14:04.523
  I0726 13:14:04.525764 23 deployment.go:798] Creating deployment "test-recreate-deployment"
  I0726 13:14:04.533713 23 deployment.go:804] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0726 13:14:04.543675 23 deployment.go:223] deployment "test-recreate-deployment" doesn't have the required revision set
  E0726 13:14:04.854096      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:14:05.854271      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:14:06.555372 23 deployment.go:808] Waiting deployment "test-recreate-deployment" to complete
  I0726 13:14:06.560255 23 deployment.go:813] Triggering a new rollout for deployment "test-recreate-deployment"
  I0726 13:14:06.572710 23 deployment.go:314] Updating deployment test-recreate-deployment
  I0726 13:14:06.572745 23 deployment.go:820] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0726 13:14:06.659043 23 deployment.go:632] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3825",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "caa23a02-c913-43f5-845f-0e41bf56ad5d",
      ResourceVersion: (string) (len=5) "27801",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889132444,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889132446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889132446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889132446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889132446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889132446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889132444,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=64) "ReplicaSet \"test-recreate-deployment-59cddbdd4b\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0726 13:14:06.665406 23 deployment.go:40] New ReplicaSet "test-recreate-deployment-59cddbdd4b" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3825",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "13e87e4c-4dcb-44d8-8af0-df726a3fe3e4",
      ResourceVersion: (string) (len=5) "27799",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889132446,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "caa23a02-c913-43f5-845f-0e41bf56ad5d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889132446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 63 61 61 32 33 61  30 32 2d 63 39 31 33 2d  |\"caa23a02-c913-|
              00000120  34 33 66 35 2d 38 34 35  66 2d 30 65 34 31 62 66  |43f5-845f-0e41bf|
              00000130  35 36 61 64 35 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |56ad5d\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889132446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b",
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0726 13:14:06.665929 23 deployment.go:45] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0726 13:14:06.666152 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-db85869db",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3825",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "17e6ed3f-d5f6-4fd0-9a06-b046a13e765f",
      ResourceVersion: (string) (len=5) "27790",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889132444,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "caa23a02-c913-43f5-845f-0e41bf56ad5d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889132446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 63 61 61 32 33 61  30 32 2d 63 39 31 33 2d  |\"caa23a02-c913-|
              00000120  34 33 66 35 2d 38 34 35  66 2d 30 65 34 31 62 66  |43f5-845f-0e41bf|
              00000130  35 36 61 64 35 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |56ad5d\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889132446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0726 13:14:06.671475 23 deployment.go:68] Pod "test-recreate-deployment-59cddbdd4b-gcsrv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-recreate-deployment-59cddbdd4b-gcsrv",
      GenerateName: (string) (len=36) "test-recreate-deployment-59cddbdd4b-",
      Namespace: (string) (len=15) "deployment-3825",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "560603ab-0b88-480f-a643-45e88a3db9a1",
      ResourceVersion: (string) (len=5) "27802",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889132446,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
          UID: (types.UID) (len=36) "13e87e4c-4dcb-44d8-8af0-df726a3fe3e4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889132446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 33  65 38 37 65 34 63 2d 34  |d\":\"13e87e4c-4|
              00000090  64 63 62 2d 34 34 64 38  2d 38 61 66 30 2d 64 66  |dcb-44d8-8af0-df|
              000000a0  37 32 36 61 33 66 65 33  65 34 5c 22 7d 22 3a 7b  |726a3fe3e4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889132446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vrw8d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vrw8d",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-16-254",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889132446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889132446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889132446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889132446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889132446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.16.254",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.16.254"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889132446,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-vrw8d",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0726 13:14:06.672489 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3825" for this suite. @ 07/26/25 13:14:06.678
• [2.181 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 07/26/25 13:14:06.686
  I0726 13:14:06.686737 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename secrets @ 07/26/25 13:14:06.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:14:06.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:14:06.703
  STEP: Creating secret with name secret-test-3cbc82a7-f418-491f-8a92-3fbe68f401b3 @ 07/26/25 13:14:06.724
  STEP: Creating a pod to test consume secrets @ 07/26/25 13:14:06.732
  E0726 13:14:06.855061      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:14:07.855234      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 13:14:08.758
  I0726 13:14:08.762840 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod pod-secrets-d4c3f646-c7b0-4daf-9cd9-9ce047c4be51 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/26/25 13:14:08.776
  I0726 13:14:08.799576 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1806" for this suite. @ 07/26/25 13:14:08.806
  STEP: Destroying namespace "secret-namespace-2145" for this suite. @ 07/26/25 13:14:08.816
• [2.144 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] CSINodes CSI Conformance should run through the lifecycle of a csinode [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_node.go:54
  STEP: Creating a kubernetes client @ 07/26/25 13:14:08.83
  I0726 13:14:08.830491 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename csinodes @ 07/26/25 13:14:08.831
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:14:08.848
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:14:08.852
  STEP: Creating initial csiNode "e2e-csinode-rb8bn" @ 07/26/25 13:14:08.855
  E0726 13:14:08.855159      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Getting initial csiNode "e2e-csinode-rb8bn" @ 07/26/25 13:14:08.861
  STEP: Patching initial csiNode: "e2e-csinode-rb8bn" @ 07/26/25 13:14:08.866
  STEP: Listing csiNodes with LabelSelector "e2e-csinode-rb8bn=patched" @ 07/26/25 13:14:08.871
  STEP: Delete initial csiNode: "e2e-csinode-rb8bn" @ 07/26/25 13:14:08.876
  STEP: Confirm deletion of csiNode "e2e-csinode-rb8bn" @ 07/26/25 13:14:08.885
  STEP: Creating replacement csiNode "e2e-csinode-p8l97" @ 07/26/25 13:14:08.889
  STEP: Getting replacement csiNode "e2e-csinode-p8l97" @ 07/26/25 13:14:08.895
  STEP: Updating replacement csiNode "e2e-csinode-p8l97" @ 07/26/25 13:14:08.9
  STEP: DeleteCollection of CSINodes with "e2e-csinode-p8l97=updated" label @ 07/26/25 13:14:08.911
  STEP: Confirm deletion of replacement csiNode with LabelSelector "e2e-csinode-p8l97=updated" @ 07/26/25 13:14:08.923
  I0726 13:14:08.928042 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csinodes-7415" for this suite. @ 07/26/25 13:14:08.935
• [0.115 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 07/26/25 13:14:08.945
  I0726 13:14:08.945734 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename configmap @ 07/26/25 13:14:08.946
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:14:08.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:14:08.961
  STEP: Creating configMap configmap-6844/configmap-test-71637d55-d2b2-425e-8bc3-4218d271cfe1 @ 07/26/25 13:14:08.963
  STEP: Creating a pod to test consume configMaps @ 07/26/25 13:14:08.969
  E0726 13:14:09.855369      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:14:10.855534      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:14:11.855695      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:14:12.856584      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 13:14:12.999
  I0726 13:14:13.003699 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod pod-configmaps-8520d6a3-da13-46a4-99fd-1ee84d95e010 container env-test: <nil>
  STEP: delete the pod @ 07/26/25 13:14:13.013
  I0726 13:14:13.038862 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6844" for this suite. @ 07/26/25 13:14:13.044
• [4.110 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:222
  STEP: Creating a kubernetes client @ 07/26/25 13:14:13.055
  I0726 13:14:13.055420 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename projected @ 07/26/25 13:14:13.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:14:13.068
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:14:13.071
  STEP: Creating a pod to test downward API volume plugin @ 07/26/25 13:14:13.073
  E0726 13:14:13.856854      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:14:14.856998      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:14:15.857137      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:14:16.857284      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 13:14:17.1
  I0726 13:14:17.106212 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod downwardapi-volume-4ced8634-d146-42b4-8b79-aa907bce0fae container client-container: <nil>
  STEP: delete the pod @ 07/26/25 13:14:17.114
  I0726 13:14:17.135226 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3121" for this suite. @ 07/26/25 13:14:17.142
• [4.097 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:189
  STEP: Creating a kubernetes client @ 07/26/25 13:14:17.152
  I0726 13:14:17.152608 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename emptydir @ 07/26/25 13:14:17.153
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:14:17.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:14:17.169
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 07/26/25 13:14:17.171
  E0726 13:14:17.858251      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:14:18.858325      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:14:19.858817      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:14:20.858882      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 13:14:21.2
  I0726 13:14:21.206170 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod pod-85172616-9e93-4530-a025-255c8e4a1118 container test-container: <nil>
  STEP: delete the pod @ 07/26/25 13:14:21.216
  I0726 13:14:21.237259 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9823" for this suite. @ 07/26/25 13:14:21.243
• [4.100 seconds]
------------------------------
S
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 07/26/25 13:14:21.253
  I0726 13:14:21.253025 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename pv @ 07/26/25 13:14:21.253
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:14:21.267
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:14:21.269
  STEP: Creating initial PV and PVC @ 07/26/25 13:14:21.271
  I0726 13:14:21.271576 23 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-8158" @ 07/26/25 13:14:21.29
  STEP: Listing PVCs in namespace "pv-8158" @ 07/26/25 13:14:21.294
  STEP: Reading "pvc-db4pm" Status @ 07/26/25 13:14:21.299
  STEP: Reading "pv-8158-82gcn" Status @ 07/26/25 13:14:21.305
  STEP: Patching "pvc-db4pm" Status @ 07/26/25 13:14:21.31
  STEP: Patching "pv-8158-82gcn" Status @ 07/26/25 13:14:21.318
  STEP: Updating "pvc-db4pm" Status @ 07/26/25 13:14:21.33
  STEP: Updating "pv-8158-82gcn" Status @ 07/26/25 13:14:21.342
  I0726 13:14:21.354495 23 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0726 13:14:21.354515 23 pv.go:205] Deleting PersistentVolumeClaim "pvc-db4pm"
  I0726 13:14:21.369259 23 pv.go:193] Deleting PersistentVolume "pv-8158-82gcn"
  I0726 13:14:21.377399 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-8158" for this suite. @ 07/26/25 13:14:21.383
• [0.139 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 07/26/25 13:14:21.391
  I0726 13:14:21.391928 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename security-context-test @ 07/26/25 13:14:21.392
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:14:21.409
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:14:21.411
  E0726 13:14:21.859781      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:14:22.860827      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:14:23.861615      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:14:24.861826      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:14:25.454517 23 security_context.go:619] Got logs for pod "busybox-privileged-false-5cc8e4ae-cbe4-4955-be99-dec5e1b85feb": "ip: RTNETLINK answers: Operation not permitted\n"
  I0726 13:14:25.454664 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8926" for this suite. @ 07/26/25 13:14:25.46
• [4.079 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:407
  STEP: Creating a kubernetes client @ 07/26/25 13:14:25.471
  I0726 13:14:25.471686 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename job @ 07/26/25 13:14:25.472
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:14:25.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:14:25.487
  STEP: Creating Indexed job @ 07/26/25 13:14:25.489
  STEP: Ensuring job reaches completions @ 07/26/25 13:14:25.495
  E0726 13:14:25.862367      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:14:26.862457      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:14:27.862801      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:14:28.862891      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:14:29.862998      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:14:30.863175      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:14:31.864089      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:14:32.865002      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 07/26/25 13:14:33.531
  I0726 13:14:33.536827 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3986" for this suite. @ 07/26/25 13:14:33.544
• [8.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:246
  STEP: Creating a kubernetes client @ 07/26/25 13:14:33.553
  I0726 13:14:33.553301 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename namespaces @ 07/26/25 13:14:33.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:14:33.566
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:14:33.569
  STEP: Creating a test namespace @ 07/26/25 13:14:33.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:14:33.585
  STEP: Creating a pod in the namespace @ 07/26/25 13:14:33.587
  STEP: Waiting for the pod to have running status @ 07/26/25 13:14:33.597
  E0726 13:14:33.865784      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:14:34.865878      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 07/26/25 13:14:35.607
  STEP: Waiting for the namespace to be removed. @ 07/26/25 13:14:35.616
  E0726 13:14:35.866859      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:14:36.867249      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:14:37.868165      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:14:38.868232      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:14:39.869223      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:14:40.869908      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:14:41.870306      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:14:42.870412      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:14:43.870494      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:14:44.871430      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:14:45.872519      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 07/26/25 13:14:46.622
  STEP: Verifying there are no pods in the namespace @ 07/26/25 13:14:46.637
  I0726 13:14:46.640984 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2943" for this suite. @ 07/26/25 13:14:46.646
  STEP: Destroying namespace "nsdeletetest-7143" for this suite. @ 07/26/25 13:14:46.659
  I0726 13:14:46.663452 23 framework.go:370] Namespace nsdeletetest-7143 was already deleted
  STEP: Destroying namespace "nsdeletetest-5417" for this suite. @ 07/26/25 13:14:46.663
• [13.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 07/26/25 13:14:46.673
  I0726 13:14:46.673822 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename pv @ 07/26/25 13:14:46.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:14:46.687
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:14:46.689
  STEP: Creating initial PV and PVC @ 07/26/25 13:14:46.692
  I0726 13:14:46.692139 23 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-7479" @ 07/26/25 13:14:46.713
  STEP: Listing PVCs in namespace "pv-7479" @ 07/26/25 13:14:46.718
  STEP: Patching the PV "pv-7479-4xwzx" @ 07/26/25 13:14:46.724
  STEP: Patching the PVC "pvc-bfb6f" @ 07/26/25 13:14:46.732
  STEP: Getting PV "pv-7479-4xwzx" @ 07/26/25 13:14:46.745
  STEP: Getting PVC "pvc-bfb6f" @ 07/26/25 13:14:46.749
  STEP: Deleting PVC "pvc-bfb6f" @ 07/26/25 13:14:46.754
  STEP: Confirm deletion of PVC "pvc-bfb6f" @ 07/26/25 13:14:46.763
  E0726 13:14:46.873148      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:14:47.873831      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-7479-4xwzx" @ 07/26/25 13:14:48.778
  STEP: Confirm deletion of PV "pv-7479-4xwzx" @ 07/26/25 13:14:48.788
  E0726 13:14:48.874100      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:14:49.874302      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Recreating another PV & PVC @ 07/26/25 13:14:50.797
  I0726 13:14:50.797970 23 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-7479-fsg6t" @ 07/26/25 13:14:50.813
  STEP: Updating the PVC "pvc-8wwd5" @ 07/26/25 13:14:50.825
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-8wwd5=updated" @ 07/26/25 13:14:50.836
  STEP: Deleting PVC "pvc-8wwd5" via DeleteCollection @ 07/26/25 13:14:50.841
  STEP: Confirm deletion of PVC "pvc-8wwd5" @ 07/26/25 13:14:50.858
  E0726 13:14:50.875010      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:14:51.875204      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-7479-fsg6t" via DeleteCollection @ 07/26/25 13:14:52.873
  E0726 13:14:52.876063      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Confirm deletion of PV "pv-7479-fsg6t" @ 07/26/25 13:14:52.887
  E0726 13:14:53.876225      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:14:54.876324      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:14:54.897920 23 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0726 13:14:54.897943 23 pv.go:205] Deleting PersistentVolumeClaim "pvc-8wwd5"
  I0726 13:14:54.904493 23 pv.go:193] Deleting PersistentVolume "pv-7479-fsg6t"
  I0726 13:14:54.908820 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-7479" for this suite. @ 07/26/25 13:14:54.915
• [8.251 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Node Lifecycle should run through the lifecycle of a node [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/node_lifecycle.go:51
  STEP: Creating a kubernetes client @ 07/26/25 13:14:54.925
  I0726 13:14:54.925123 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename fake-node @ 07/26/25 13:14:54.925
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:14:54.938
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:14:54.941
  STEP: Create "e2e-fake-node-29pgv" @ 07/26/25 13:14:54.943
  STEP: Getting "e2e-fake-node-29pgv" @ 07/26/25 13:14:54.949
  STEP: Patching "e2e-fake-node-29pgv" @ 07/26/25 13:14:54.954
  STEP: Listing nodes with LabelSelector "e2e-fake-node-29pgv=patched" @ 07/26/25 13:14:54.962
  STEP: Updating "e2e-fake-node-29pgv" @ 07/26/25 13:14:54.966
  STEP: Delete "e2e-fake-node-29pgv" @ 07/26/25 13:14:54.978
  STEP: Confirm deletion of "e2e-fake-node-29pgv" @ 07/26/25 13:14:54.987
  I0726 13:14:54.991177 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "fake-node-1604" for this suite. @ 07/26/25 13:14:54.995
• [0.080 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2222
  STEP: Creating a kubernetes client @ 07/26/25 13:14:55.005
  I0726 13:14:55.005224 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename services @ 07/26/25 13:14:55.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:14:55.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:14:55.02
  STEP: creating service in namespace services-5741 @ 07/26/25 13:14:55.022
  STEP: creating service affinity-nodeport in namespace services-5741 @ 07/26/25 13:14:55.022
  I0726 13:14:55.064439 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0726 13:14:55.876478      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:14:56.876609      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:14:57.097668 23 resource.go:361] Creating new exec pod
  E0726 13:14:57.877448      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:14:58.877473      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:14:59.132095 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-5741 exec execpod-affinityjbm5g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I0726 13:14:59.214173 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport (10.152.183.34) 80 port [tcp/http] succeeded!\n"
  I0726 13:14:59.214216 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0726 13:14:59.214267 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-5741 exec execpod-affinityjbm5g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.34 80'
  I0726 13:14:59.306092 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.34 80\nConnection to 10.152.183.34 80 port [tcp/http] succeeded!\n"
  I0726 13:14:59.306131 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0726 13:14:59.306195 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-5741 exec execpod-affinityjbm5g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.16.254 32668'
  I0726 13:14:59.384923 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.16.254 32668\nConnection to 172.31.16.254 32668 port [tcp/*] succeeded!\n"
  I0726 13:14:59.384967 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0726 13:14:59.385032 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-5741 exec execpod-affinityjbm5g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.72.233 32668'
  I0726 13:14:59.461433 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.72.233 32668\nConnection to 172.31.72.233 32668 port [tcp/*] succeeded!\n"
  I0726 13:14:59.461488 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0726 13:14:59.461552 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-5741 exec execpod-affinityjbm5g -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://172.31.16.254:32668/ ; done'
  I0726 13:14:59.603831 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.16.254:32668/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.16.254:32668/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.16.254:32668/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.16.254:32668/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.16.254:32668/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.16.254:32668/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.16.254:32668/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.16.254:32668/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.16.254:32668/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.16.254:32668/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.16.254:32668/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.16.254:32668/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.16.254:32668/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.16.254:32668/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.16.254:32668/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.16.254:32668/\n"
  I0726 13:14:59.603873 23 builder.go:147] stdout: "\naffinity-nodeport-85dffb5fc7-rq874\naffinity-nodeport-85dffb5fc7-rq874\naffinity-nodeport-85dffb5fc7-rq874\naffinity-nodeport-85dffb5fc7-rq874\naffinity-nodeport-85dffb5fc7-rq874\naffinity-nodeport-85dffb5fc7-rq874\naffinity-nodeport-85dffb5fc7-rq874\naffinity-nodeport-85dffb5fc7-rq874\naffinity-nodeport-85dffb5fc7-rq874\naffinity-nodeport-85dffb5fc7-rq874\naffinity-nodeport-85dffb5fc7-rq874\naffinity-nodeport-85dffb5fc7-rq874\naffinity-nodeport-85dffb5fc7-rq874\naffinity-nodeport-85dffb5fc7-rq874\naffinity-nodeport-85dffb5fc7-rq874\naffinity-nodeport-85dffb5fc7-rq874"
  I0726 13:14:59.603886 23 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-rq874
  I0726 13:14:59.603901 23 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-rq874
  I0726 13:14:59.603907 23 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-rq874
  I0726 13:14:59.603914 23 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-rq874
  I0726 13:14:59.603920 23 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-rq874
  I0726 13:14:59.603926 23 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-rq874
  I0726 13:14:59.603932 23 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-rq874
  I0726 13:14:59.603938 23 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-rq874
  I0726 13:14:59.603942 23 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-rq874
  I0726 13:14:59.603954 23 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-rq874
  I0726 13:14:59.603959 23 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-rq874
  I0726 13:14:59.603964 23 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-rq874
  I0726 13:14:59.603969 23 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-rq874
  I0726 13:14:59.603974 23 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-rq874
  I0726 13:14:59.603979 23 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-rq874
  I0726 13:14:59.603984 23 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-rq874
  I0726 13:14:59.604045 23 service.go:4352] Cleaning up the exec pod
  I0726 13:14:59.682990 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5741" for this suite. @ 07/26/25 13:14:59.688
• [4.694 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 07/26/25 13:14:59.699
  I0726 13:14:59.699175 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename downward-api @ 07/26/25 13:14:59.699
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:14:59.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:14:59.714
  STEP: Creating a pod to test downward api env vars @ 07/26/25 13:14:59.716
  E0726 13:14:59.878248      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:15:00.878367      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:15:01.878598      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:15:02.878681      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 13:15:03.745
  I0726 13:15:03.750754 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod downward-api-bc4b4a15-d1cd-44e7-bf1b-575fffae172f container dapi-container: <nil>
  STEP: delete the pod @ 07/26/25 13:15:03.76
  I0726 13:15:03.780919 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5977" for this suite. @ 07/26/25 13:15:03.786
• [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 07/26/25 13:15:03.796
  I0726 13:15:03.796915 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename conformance-tests @ 07/26/25 13:15:03.797
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:15:03.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:15:03.816
  STEP: Getting node addresses @ 07/26/25 13:15:03.818
  I0726 13:15:03.818289 23 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0726 13:15:03.879589      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:15:03.887729 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-2251" for this suite. @ 07/26/25 13:15:03.893
• [0.106 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1086
  STEP: Creating a kubernetes client @ 07/26/25 13:15:03.902
  I0726 13:15:03.902849 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename pods @ 07/26/25 13:15:03.903
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:15:03.915
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:15:03.917
  STEP: Create a pod @ 07/26/25 13:15:03.92
  E0726 13:15:04.879895      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:15:05.879940      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: patching /status @ 07/26/25 13:15:05.942
  I0726 13:15:05.952848 23 pods.go:1123] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0726 13:15:05.952973 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5531" for this suite. @ 07/26/25 13:15:05.959
• [2.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:194
  STEP: Creating a kubernetes client @ 07/26/25 13:15:05.969
  I0726 13:15:05.969767 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename downward-api @ 07/26/25 13:15:05.97
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:15:05.984
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:15:05.986
  STEP: Creating a pod to test downward API volume plugin @ 07/26/25 13:15:05.989
  E0726 13:15:06.880059      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:15:07.880181      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:15:08.880280      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:15:09.880353      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 13:15:10.018
  I0726 13:15:10.022350 23 output.go:207] Trying to get logs from node ip-172-31-72-233 pod downwardapi-volume-8a6f5fe9-46fb-4775-8302-c619bff3619a container client-container: <nil>
  STEP: delete the pod @ 07/26/25 13:15:10.032
  I0726 13:15:10.057544 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-615" for this suite. @ 07/26/25 13:15:10.064
• [4.105 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:109
  STEP: Creating a kubernetes client @ 07/26/25 13:15:10.074
  I0726 13:15:10.074778 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename configmap @ 07/26/25 13:15:10.075
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:15:10.092
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:15:10.094
  STEP: Creating configMap with name configmap-test-volume-map-b51365ad-5af9-4c64-b217-d0db7972c461 @ 07/26/25 13:15:10.097
  STEP: Creating a pod to test consume configMaps @ 07/26/25 13:15:10.104
  E0726 13:15:10.880825      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:15:11.880935      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:15:12.881459      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:15:13.881551      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 13:15:14.135
  I0726 13:15:14.139220 23 output.go:207] Trying to get logs from node ip-172-31-72-233 pod pod-configmaps-f3ef8736-1909-411c-a90b-8733dbc88466 container agnhost-container: <nil>
  STEP: delete the pod @ 07/26/25 13:15:14.148
  I0726 13:15:14.173656 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-869" for this suite. @ 07/26/25 13:15:14.18
• [4.114 seconds]
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:57
  STEP: Creating a kubernetes client @ 07/26/25 13:15:14.189
  I0726 13:15:14.189369 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename configmap @ 07/26/25 13:15:14.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:15:14.204
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:15:14.206
  STEP: Creating configMap with name configmap-test-volume-071af9f6-ca1e-43d6-aee3-ac0dbebf0cc3 @ 07/26/25 13:15:14.208
  STEP: Creating a pod to test consume configMaps @ 07/26/25 13:15:14.216
  E0726 13:15:14.881861      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:15:15.881966      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:15:16.882076      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:15:17.882360      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 13:15:18.247
  I0726 13:15:18.252974 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod pod-configmaps-7c5931c7-56d7-40c4-9957-2159b521b3d8 container agnhost-container: <nil>
  STEP: delete the pod @ 07/26/25 13:15:18.262
  I0726 13:15:18.281886 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7215" for this suite. @ 07/26/25 13:15:18.287
• [4.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:340
  STEP: Creating a kubernetes client @ 07/26/25 13:15:18.298
  I0726 13:15:18.298445 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename statefulset @ 07/26/25 13:15:18.299
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:15:18.312
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:15:18.314
  STEP: Creating service test in namespace statefulset-427 @ 07/26/25 13:15:18.316
  STEP: Creating a new StatefulSet @ 07/26/25 13:15:18.322
  I0726 13:15:18.336566 23 wait.go:44] Found 0 stateful pods, waiting for 3
  E0726 13:15:18.883351      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:15:19.883551      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:15:20.883791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:15:21.883851      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:15:22.884065      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:15:23.884190      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:15:24.884460      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:15:25.884578      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:15:26.884758      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:15:27.885450      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:15:28.337819 23 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0726 13:15:28.337850 23 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0726 13:15:28.337857 23 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 07/26/25 13:15:28.352
  I0726 13:15:28.363757 23 statefulset.go:2542] Updating stateful set ss2
  STEP: Creating a new revision @ 07/26/25 13:15:28.363
  E0726 13:15:28.885665      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:15:29.885786      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:15:30.885990      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:15:31.886089      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:15:32.886862      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:15:33.886942      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:15:34.887074      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:15:35.887189      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:15:36.887463      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:15:37.888407      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 07/26/25 13:15:38.375
  STEP: Performing a canary update @ 07/26/25 13:15:38.375
  I0726 13:15:38.388004 23 statefulset.go:2542] Updating stateful set ss2
  I0726 13:15:38.401808 23 wait.go:74] Waiting for Pod statefulset-427/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0726 13:15:38.889320      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:15:39.889388      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:15:40.889498      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:15:41.889568      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:15:42.890279      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:15:43.890852      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:15:44.890927      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:15:45.891140      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:15:46.891857      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:15:47.892856      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 07/26/25 13:15:48.399
  I0726 13:15:48.448266 23 wait.go:44] Found 2 stateful pods, waiting for 3
  E0726 13:15:48.892838      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:15:49.892936      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:15:50.893081      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:15:51.894017      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:15:52.894172      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:15:53.894281      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:15:54.894439      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:15:55.894868      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:15:56.894945      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:15:57.895045      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:15:58.446473 23 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0726 13:15:58.446507 23 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0726 13:15:58.446514 23 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 07/26/25 13:15:58.455
  I0726 13:15:58.470255 23 statefulset.go:2542] Updating stateful set ss2
  I0726 13:15:58.481578 23 wait.go:74] Waiting for Pod statefulset-427/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0726 13:15:58.896019      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:15:59.896114      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:16:00.896307      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:16:01.896857      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:16:02.897113      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:16:03.897005      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:16:04.897188      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:16:05.897369      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:16:06.897597      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:16:07.898432      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:16:08.495302 23 statefulset.go:2542] Updating stateful set ss2
  I0726 13:16:08.507244 23 wait.go:56] Waiting for StatefulSet statefulset-427/ss2 to complete update
  I0726 13:16:08.507272 23 wait.go:63] Waiting for Pod statefulset-427/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0726 13:16:08.898716      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:16:09.898782      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:16:10.898897      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:16:11.898970      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:16:12.899196      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:16:13.899857      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:16:14.899931      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:16:15.900045      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:16:16.900108      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:16:17.900192      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:16:18.506981 23 statefulset.go:138] Deleting all statefulset in ns statefulset-427
  I0726 13:16:18.512804 23 rest.go:153] Scaling statefulset ss2 to 0
  E0726 13:16:18.900859      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:16:19.900949      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:16:20.901114      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:16:21.901173      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:16:22.901355      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:16:23.901480      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:16:24.901563      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:16:25.901780      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:16:26.901977      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:16:27.902172      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:16:28.532195 23 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0726 13:16:28.536459 23 rest.go:91] Deleting statefulset ss2
  I0726 13:16:28.558890 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-427" for this suite. @ 07/26/25 13:16:28.566
• [70.276 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 07/26/25 13:16:28.574
  I0726 13:16:28.574441 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename replicaset @ 07/26/25 13:16:28.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:16:28.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:16:28.59
  I0726 13:16:28.592607 23 replica_set.go:192] Creating ReplicaSet my-hostname-basic-01b01c11-f1f8-4150-82a3-ba5c4a8185ec
  I0726 13:16:28.609605 23 resource.go:81] Pod name my-hostname-basic-01b01c11-f1f8-4150-82a3-ba5c4a8185ec: Found 1 pods out of 1
  I0726 13:16:28.609625 23 replica_set.go:205] Ensuring a pod for ReplicaSet "my-hostname-basic-01b01c11-f1f8-4150-82a3-ba5c4a8185ec" is running
  E0726 13:16:28.902776      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:16:29.902995      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:16:30.626298 23 replica_set.go:221] Pod "my-hostname-basic-01b01c11-f1f8-4150-82a3-ba5c4a8185ec-xwnlh" is running (conditions: [])
  I0726 13:16:30.626336 23 replica_set.go:229] Trying to dial the pod
  STEP: trying to dial each unique pod @ 07/26/25 13:16:30.626
  I0726 13:16:30.643491 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2975" for this suite. @ 07/26/25 13:16:30.649
• [2.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 07/26/25 13:16:30.658
  I0726 13:16:30.658658 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename field-validation @ 07/26/25 13:16:30.659
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:16:30.673
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:16:30.675
  STEP: apply creating a deployment @ 07/26/25 13:16:30.677
  I0726 13:16:30.695305 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9375" for this suite. @ 07/26/25 13:16:30.749
• [0.100 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 07/26/25 13:16:30.758
  I0726 13:16:30.758244 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename field-validation @ 07/26/25 13:16:30.758
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:16:30.77
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:16:30.773
  STEP: apply creating a deployment @ 07/26/25 13:16:30.775
  I0726 13:16:30.795309 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3062" for this suite. @ 07/26/25 13:16:30.85
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 07/26/25 13:16:30.86
  I0726 13:16:30.860496 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename init-container @ 07/26/25 13:16:30.861
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:16:30.874
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:16:30.877
  STEP: creating the pod @ 07/26/25 13:16:30.879
  I0726 13:16:30.879523 23 init_container.go:213] PodSpec: initContainers in spec.initContainers
  E0726 13:16:30.903769      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:16:31.904237      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:16:32.904846      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:16:33.905310      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:16:34.905392      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:16:34.942947 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8455" for this suite. @ 07/26/25 13:16:34.949
• [4.098 seconds]
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 07/26/25 13:16:34.958
  I0726 13:16:34.958388 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename deployment @ 07/26/25 13:16:34.958
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:16:34.973
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:16:34.975
  STEP: creating a Deployment @ 07/26/25 13:16:34.983
  STEP: waiting for Deployment to be created @ 07/26/25 13:16:34.99
  STEP: waiting for all Replicas to be Ready @ 07/26/25 13:16:34.991
  I0726 13:16:34.992278 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0726 13:16:34.992292 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0726 13:16:35.004842 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0726 13:16:35.004862 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0726 13:16:35.022209 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0726 13:16:35.022225 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0726 13:16:35.047517 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0726 13:16:35.047539 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0726 13:16:35.754263 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0726 13:16:35.754295 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0726 13:16:35.795383 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 07/26/25 13:16:35.795
  I0726 13:16:35.805033 23 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 07/26/25 13:16:35.805
  I0726 13:16:35.806364 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 0
  I0726 13:16:35.806381 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 0
  I0726 13:16:35.806389 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 0
  I0726 13:16:35.806394 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 0
  I0726 13:16:35.806401 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 0
  I0726 13:16:35.806408 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 0
  I0726 13:16:35.806426 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 0
  I0726 13:16:35.806431 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 0
  I0726 13:16:35.806764 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 1
  I0726 13:16:35.806779 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 1
  I0726 13:16:35.806794 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 2
  I0726 13:16:35.806799 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 2
  I0726 13:16:35.806807 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 2
  I0726 13:16:35.806812 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 2
  I0726 13:16:35.823249 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 2
  I0726 13:16:35.823268 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 2
  I0726 13:16:35.839944 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 2
  I0726 13:16:35.839964 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 2
  I0726 13:16:35.854322 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 1
  I0726 13:16:35.854339 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 1
  I0726 13:16:35.884358 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 1
  I0726 13:16:35.884380 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 1
  E0726 13:16:35.905436      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:16:36.804277 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 2
  I0726 13:16:36.804320 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 2
  I0726 13:16:36.831737 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 1
  STEP: listing Deployments @ 07/26/25 13:16:36.831
  I0726 13:16:36.839564 23 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 07/26/25 13:16:36.841
  I0726 13:16:36.866738 23 deployment.go:360] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 07/26/25 13:16:36.866
  I0726 13:16:36.875653 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0726 13:16:36.880444 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0726 13:16:36.903197 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E0726 13:16:36.906395      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:16:36.920175 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0726 13:16:36.940700 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0726 13:16:37.770857 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0726 13:16:37.825004 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  I0726 13:16:37.875712 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0726 13:16:37.906918      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:16:37.910684 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0726 13:16:38.777596 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 07/26/25 13:16:38.822
  STEP: fetching the DeploymentStatus @ 07/26/25 13:16:38.836
  I0726 13:16:38.843202 23 deployment.go:448] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 1
  I0726 13:16:38.843229 23 deployment.go:448] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 1
  I0726 13:16:38.843240 23 deployment.go:448] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 1
  I0726 13:16:38.843332 23 deployment.go:448] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 1
  I0726 13:16:38.843428 23 deployment.go:448] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 1
  I0726 13:16:38.843439 23 deployment.go:448] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 2
  I0726 13:16:38.843445 23 deployment.go:448] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 3
  I0726 13:16:38.843531 23 deployment.go:448] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 2
  I0726 13:16:38.843541 23 deployment.go:448] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 2
  I0726 13:16:38.843549 23 deployment.go:448] observed Deployment test-deployment in namespace deployment-5552 with ReadyReplicas 3
  STEP: deleting the Deployment @ 07/26/25 13:16:38.843
  I0726 13:16:38.857241 23 deployment.go:474] observed event type MODIFIED
  I0726 13:16:38.857264 23 deployment.go:474] observed event type MODIFIED
  I0726 13:16:38.857273 23 deployment.go:474] observed event type MODIFIED
  I0726 13:16:38.857353 23 deployment.go:474] observed event type MODIFIED
  I0726 13:16:38.857360 23 deployment.go:474] observed event type MODIFIED
  I0726 13:16:38.857366 23 deployment.go:474] observed event type MODIFIED
  I0726 13:16:38.857394 23 deployment.go:474] observed event type MODIFIED
  I0726 13:16:38.857476 23 deployment.go:474] observed event type MODIFIED
  I0726 13:16:38.857483 23 deployment.go:474] observed event type MODIFIED
  I0726 13:16:38.857489 23 deployment.go:474] observed event type MODIFIED
  I0726 13:16:38.857557 23 deployment.go:474] observed event type MODIFIED
  I0726 13:16:38.857563 23 deployment.go:474] observed event type MODIFIED
  I0726 13:16:38.857570 23 deployment.go:474] observed event type MODIFIED
  I0726 13:16:38.862565 23 deployment.go:649] Log out all the ReplicaSets if there is no deployment created
  I0726 13:16:38.868484 23 deployment.go:656] ReplicaSet "test-deployment-564597bcc":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-564597bcc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5552",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f6a8addc-4702-426d-9541-2048bae53e3f",
      ResourceVersion: (string) (len=5) "29482",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889132594,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "6f9415a8-5cd6-4f95-85cb-bf442cf1a582",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889132596,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 36 66 39 34  31 35 61 38 2d 35 63 64  |":\"6f9415a8-5cd|
              00000130  36 2d 34 66 39 35 2d 38  35 63 62 2d 62 66 34 34  |6-4f95-85cb-bf44|
              00000140  32 63 66 31 61 35 38 32  5c 22 7d 22 3a 7b 7d 7d  |2cf1a582\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889132596,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0726 13:16:38.876288 23 deployment.go:656] ReplicaSet "test-deployment-f78d658f9":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-f78d658f9",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5552",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cca2d4cc-29d3-4671-8bf6-9dbbe7f53079",
      ResourceVersion: (string) (len=5) "29583",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889132595,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "6f9415a8-5cd6-4f95-85cb-bf442cf1a582",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889132598,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 36 66 39 34  31 35 61 38 2d 35 63 64  |":\"6f9415a8-5cd|
              00000130  36 2d 34 66 39 35 2d 38  35 63 62 2d 62 66 34 34  |6-4f95-85cb-bf44|
              00000140  32 63 66 31 61 35 38 32  5c 22 7d 22 3a 7b 7d 7d  |2cf1a582\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889132598,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=26) "registry.k8s.io/pause:3.10",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0726 13:16:38.884142 23 deployment.go:668] pod: "test-deployment-f78d658f9-lclq6":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-f78d658f9-lclq6",
      GenerateName: (string) (len=26) "test-deployment-f78d658f9-",
      Namespace: (string) (len=15) "deployment-5552",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2347ae8f-1b63-4036-9cca-ea24d0cfa53f",
      ResourceVersion: (string) (len=5) "29579",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889132596,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889132600,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-f78d658f9",
          UID: (types.UID) (len=36) "cca2d4cc-29d3-4671-8bf6-9dbbe7f53079",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889132596,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  63 63 61 32 64 34 63 63  |uid\":\"cca2d4cc|
              000000a0  2d 32 39 64 33 2d 34 36  37 31 2d 38 62 66 36 2d  |-29d3-4671-8bf6-|
              000000b0  39 64 62 62 65 37 66 35  33 30 37 39 5c 22 7d 22  |9dbbe7f53079\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889132597,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 33  2e 31 39 5c 22 7d 22 3a  |2.168.13.19\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4kpg8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4kpg8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-72-233",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889132597,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889132596,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889132597,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889132597,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889132596,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.72.233",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.72.233"
        }
      },
      PodIP: (string) (len=13) "192.168.13.19",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.13.19"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889132596,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889132597,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:ee6521f290b2168b6e0935a181d4cff9be1ac3f505666ef0e3c98fae8199917a",
          ContainerID: (string) (len=77) "containerd://fefebf3b0ed42bb6a2e3f70e0902c4d133945d75d8c4e538e41849fed2fe1360",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-4kpg8",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0726 13:16:38.885479 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5552" for this suite. @ 07/26/25 13:16:38.892
• [3.947 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  E0726 13:16:38.907541      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a kubernetes client @ 07/26/25 13:16:38.907
  I0726 13:16:38.907716 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename cronjob @ 07/26/25 13:16:38.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:16:38.922
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:16:38.927
  STEP: Creating a suspended cronjob @ 07/26/25 13:16:38.929
  STEP: Ensuring no jobs are scheduled @ 07/26/25 13:16:38.936
  E0726 13:16:39.907916      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:16:40.908017      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:16:41.908799      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:16:42.909489      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:16:43.909867      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:16:44.909933      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:16:45.910877      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:16:46.910948      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:16:47.911393      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:16:48.911897      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:16:49.912012      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:16:50.912139      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:16:51.912949      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:16:52.913021      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:16:53.913171      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:16:54.913254      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:16:55.913992      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:16:56.914096      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:16:57.914179      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:16:58.914273      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:16:59.914379      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:00.914578      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:01.914803      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:02.915834      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:03.915988      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:04.916076      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:05.916197      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:06.916294      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:07.916854      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:08.916971      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:09.917102      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:10.917156      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:11.917303      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:12.918292      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:13.918800      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:14.918867      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:15.919854      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:16.919924      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:17.920465      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:18.920537      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:19.920790      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:20.920895      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:21.921443      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:22.921521      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:23.921658      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:24.921802      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:25.921895      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:26.921958      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:27.922075      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:28.922141      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:29.923175      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:30.923244      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:31.923799      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:32.924796      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:33.925859      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:34.925944      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:35.926027      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:36.926233      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:37.927176      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:38.927267      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:39.927486      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:40.927659      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:41.927822      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:42.928884      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:43.929057      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:44.929123      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:45.929239      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:46.929319      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:47.929417      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:48.929481      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:49.929877      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:50.929942      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:51.930849      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:52.931833      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:53.931993      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:54.932083      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:55.932753      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:56.932956      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:57.933054      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:58.933199      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:17:59.933850      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:00.933935      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:01.934100      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:02.934366      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:03.934277      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:04.934858      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:05.935458      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:06.935676      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:07.936546      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:08.936681      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:09.936708      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:10.936885      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:11.936929      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:12.937878      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:13.938241      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:14.939221      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:15.939841      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:16.939952      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:17.940086      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:18.940155      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:19.940844      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:20.940865      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:21.941779      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:22.942807      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:23.942883      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:24.943079      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:25.943179      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:26.943265      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:27.943426      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:28.943522      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:29.943678      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:30.943818      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:31.943975      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:32.944079      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:33.944936      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:34.945020      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:35.945160      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:36.945243      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:37.945332      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:38.945529      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:39.945963      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:40.946161      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:41.947037      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:42.947138      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:43.947304      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:44.947413      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:45.947606      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:46.947717      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:47.948254      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:48.948334      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:49.948462      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:50.948547      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:51.949561      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:52.949685      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:53.949805      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:54.949872      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:55.950856      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:56.950944      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:57.951735      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:58.951931      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:18:59.952369      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:00.952478      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:01.952595      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:02.953402      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:03.953845      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:04.953910      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:05.954005      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:06.954105      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:07.954214      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:08.954317      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:09.955329      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:10.955405      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:11.955602      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:12.955703      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:13.955852      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:14.956059      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:15.956782      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:16.957012      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:17.957181      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:18.957270      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:19.957614      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:20.957796      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:21.958511      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:22.959478      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:23.959823      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:24.960831      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:25.960954      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:26.961029      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:27.961366      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:28.961857      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:29.961927      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:30.961990      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:31.962154      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:32.962225      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:33.963270      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:34.963879      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:35.964083      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:36.964152      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:37.964367      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:38.964623      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:39.964906      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:40.965036      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:41.965177      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:42.965885      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:43.966878      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:44.966981      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:45.967942      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:46.968115      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:47.968508      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:48.968565      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:49.968702      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:50.968823      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:51.969844      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:52.970853      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:53.970973      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:54.971053      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:55.971214      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:56.971287      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:57.971493      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:58.971721      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:19:59.972325      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:00.972414      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:01.972809      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:02.973036      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:03.973798      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:04.973888      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:05.973996      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:06.974853      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:07.975869      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:08.975946      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:09.976883      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:10.977082      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:11.977259      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:12.977344      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:13.977832      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:14.977904      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:15.978001      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:16.978073      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:17.978287      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:18.978457      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:19.979271      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:20.979342      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:21.979455      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:22.980156      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:23.980254      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:24.980844      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:25.981854      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:26.981937      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:27.982858      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:28.982939      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:29.983904      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:30.984113      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:31.984873      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:32.985034      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:33.985882      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:34.986080      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:35.986254      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:36.986331      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:37.986419      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:38.986514      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:39.987336      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:40.987409      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:41.988067      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:42.988136      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:43.988210      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:44.989214      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:45.989849      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:46.989926      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:47.990940      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:48.991019      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:49.991300      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:50.991864      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:51.991963      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:52.992111      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:53.992256      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:54.992318      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:55.992535      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:56.992666      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:57.992762      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:58.992874      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:20:59.993926      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:21:00.994010      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:21:01.994938      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:21:02.995011      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:21:03.995163      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:21:04.995342      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:21:05.995914      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:21:06.996060      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:21:07.996170      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:21:08.996295      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:21:09.997083      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:21:10.997148      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:21:11.998032      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:21:12.998112      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:21:13.998310      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:21:14.998458      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:21:15.999030      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:21:16.999096      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:21:18.000070      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:21:19.000147      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:21:20.000560      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:21:21.000850      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:21:22.001337      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:21:23.001916      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:21:24.002505      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:21:25.002849      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:21:26.003176      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:21:27.003346      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:21:28.003935      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:21:29.004101      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:21:30.004215      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:21:31.004301      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:21:32.005382      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:21:33.005501      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:21:34.006439      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:21:35.006525      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:21:36.007260      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:21:37.007843      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:21:38.008846      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 07/26/25 13:21:38.937
  STEP: Removing cronjob @ 07/26/25 13:21:38.945
  I0726 13:21:38.956481 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6239" for this suite. @ 07/26/25 13:21:38.962
• [300.065 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:194
  STEP: Creating a kubernetes client @ 07/26/25 13:21:38.972
  I0726 13:21:38.972253 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename projected @ 07/26/25 13:21:38.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:21:38.988
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:21:38.99
  STEP: Creating a pod to test downward API volume plugin @ 07/26/25 13:21:38.992
  E0726 13:21:39.009223      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:21:40.009790      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:21:41.010860      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:21:42.011799      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:21:43.012651      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 13:21:43.023
  I0726 13:21:43.029496 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod downwardapi-volume-9ecbe86a-6eda-4fe7-98da-12e374e5b196 container client-container: <nil>
  STEP: delete the pod @ 07/26/25 13:21:43.048
  I0726 13:21:43.069470 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8848" for this suite. @ 07/26/25 13:21:43.075
• [4.112 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 07/26/25 13:21:43.084
  I0726 13:21:43.084646 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename pods @ 07/26/25 13:21:43.085
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:21:43.098
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:21:43.101
  STEP: creating pod @ 07/26/25 13:21:43.103
  E0726 13:21:44.012828      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:21:45.012910      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:21:45.137231 23 pods.go:83] Pod pod-hostip-982e2492-8b5a-4103-9961-53d2651ffc7c has hostIP: 172.31.16.254
  I0726 13:21:45.137335 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5590" for this suite. @ 07/26/25 13:21:45.143
• [2.068 seconds]
------------------------------
S
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:769
  STEP: Creating a kubernetes client @ 07/26/25 13:21:45.152
  I0726 13:21:45.152394 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename statefulset @ 07/26/25 13:21:45.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:21:45.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:21:45.171
  STEP: Creating service test in namespace statefulset-1289 @ 07/26/25 13:21:45.173
  STEP: Creating stateful set ss in namespace statefulset-1289 @ 07/26/25 13:21:45.18
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-1289 @ 07/26/25 13:21:45.19
  I0726 13:21:45.200471 23 wait.go:44] Found 0 stateful pods, waiting for 1
  E0726 13:21:46.013049      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:21:47.013238      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:21:48.014165      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:21:49.014395      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:21:50.014538      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:21:51.014661      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:21:52.014862      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:21:53.015574      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:21:54.015816      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:21:55.016004      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:21:55.198280 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 07/26/25 13:21:55.198
  I0726 13:21:55.203506 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=statefulset-1289 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0726 13:21:55.292883 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0726 13:21:55.292915 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0726 13:21:55.292924 23 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0726 13:21:55.298627 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0726 13:21:56.016227      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:21:57.016313      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:21:58.016422      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:21:59.016515      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:22:00.016678      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:22:01.016881      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:22:02.017011      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:22:03.017307      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:22:04.017252      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:22:05.017325      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:22:05.301203 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0726 13:22:05.301239 23 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0726 13:22:05.326339 23 resource.go:168] POD   NODE              PHASE    GRACE  CONDITIONS
  I0726 13:22:05.326384 23 resource.go:175] ss-0  ip-172-31-72-233  Running         [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-26 13:21:46 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-26 13:21:45 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-26 13:21:56 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-26 13:21:56 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-26 13:21:45 +0000 UTC  }]
  I0726 13:22:05.326391 23 resource.go:175] ss-1                    Pending         []
  I0726 13:22:05.326395 23 resource.go:178] 
  I0726 13:22:05.326401 23 statefulset.go:2448] StatefulSet ss has not reached scale 3, at 2
  E0726 13:22:06.018241      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:22:06.335371 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 8.991245951s
  E0726 13:22:07.018886      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:22:07.342435 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 7.981513415s
  E0726 13:22:08.019931      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:22:08.351443 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 6.974495207s
  E0726 13:22:09.020846      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:22:09.358520 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 5.965517932s
  E0726 13:22:10.021861      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:22:10.364534 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 4.95855267s
  E0726 13:22:11.022159      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:22:11.373741 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 3.952219241s
  E0726 13:22:12.022327      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:22:12.380857 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 2.943057553s
  E0726 13:22:13.022561      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:22:13.388863 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 1.93599086s
  E0726 13:22:14.022676      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:22:14.395800 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 928.790545ms
  E0726 13:22:15.022918      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-1289 @ 07/26/25 13:22:15.396
  I0726 13:22:15.404038 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=statefulset-1289 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0726 13:22:15.475007 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0726 13:22:15.475052 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0726 13:22:15.475062 23 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0726 13:22:15.475102 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=statefulset-1289 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0726 13:22:15.556605 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0726 13:22:15.556656 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0726 13:22:15.556664 23 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0726 13:22:15.556702 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=statefulset-1289 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0726 13:22:15.634594 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0726 13:22:15.634652 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0726 13:22:15.634663 23 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0726 13:22:15.642248 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  E0726 13:22:16.023861      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:22:17.023937      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:22:18.024045      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:22:19.024191      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:22:20.024283      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:22:21.024421      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:22:22.024528      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:22:23.024673      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:22:24.024885      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:22:25.024969      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:22:25.641605 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0726 13:22:25.641655 23 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0726 13:22:25.641664 23 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 07/26/25 13:22:25.641
  I0726 13:22:25.647435 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=statefulset-1289 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0726 13:22:25.721839 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0726 13:22:25.721877 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0726 13:22:25.721886 23 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0726 13:22:25.721947 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=statefulset-1289 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0726 13:22:25.822259 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0726 13:22:25.822298 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0726 13:22:25.822306 23 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0726 13:22:25.822343 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=statefulset-1289 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0726 13:22:25.907396 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0726 13:22:25.907436 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0726 13:22:25.907445 23 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0726 13:22:25.907453 23 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0726 13:22:25.911569 23 wait.go:122] Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0726 13:22:26.026004      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:22:27.026193      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:22:28.026329      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:22:29.026430      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:22:30.026592      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:22:31.026820      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:22:32.026956      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:22:33.027151      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:22:34.027401      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:22:35.027520      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:22:35.920068 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0726 13:22:35.920096 23 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0726 13:22:35.920101 23 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0726 13:22:35.949824 23 resource.go:168] POD   NODE              PHASE    GRACE  CONDITIONS
  I0726 13:22:35.949872 23 resource.go:175] ss-0  ip-172-31-72-233  Running         [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-26 13:21:46 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-26 13:21:45 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-26 13:22:26 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-26 13:22:26 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-26 13:21:45 +0000 UTC  }]
  I0726 13:22:35.949888 23 resource.go:175] ss-1  ip-172-31-16-254  Running         [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-26 13:22:06 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-26 13:22:05 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-26 13:22:26 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-26 13:22:26 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-26 13:22:05 +0000 UTC  }]
  I0726 13:22:35.949905 23 resource.go:175] ss-2  ip-172-31-3-117   Running  30s    [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-26 13:22:06 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-26 13:22:05 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-26 13:22:26 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-07-26 13:22:26 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-07-26 13:22:05 +0000 UTC  }]
  I0726 13:22:35.949910 23 resource.go:178] 
  I0726 13:22:35.949917 23 statefulset.go:2448] StatefulSet ss has not reached scale 0, at 3
  E0726 13:22:36.027960      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:22:36.958121 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 8.982881731s
  E0726 13:22:37.028447      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:22:37.964307 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 7.975324156s
  E0726 13:22:38.028485      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:22:38.972054 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 6.968726332s
  E0726 13:22:39.029329      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:22:39.978123 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 5.961284117s
  E0726 13:22:40.030297      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:22:40.985015 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 4.955381198s
  E0726 13:22:41.031216      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:22:41.992254 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 3.94836808s
  E0726 13:22:42.031462      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:22:42.998515 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 2.940660984s
  E0726 13:22:43.031712      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:22:44.004806 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 1.934949366s
  E0726 13:22:44.031970      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:22:45.011546 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 927.814943ms
  E0726 13:22:45.032761      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-1289 @ 07/26/25 13:22:46.011
  I0726 13:22:46.019235 23 rest.go:153] Scaling statefulset ss to 0
  I0726 13:22:46.028870 23 wait.go:159] Waiting for statefulset status.replicas updated to 0
  E0726 13:22:46.033087      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:22:46.034237 23 statefulset.go:138] Deleting all statefulset in ns statefulset-1289
  I0726 13:22:46.039852 23 rest.go:153] Scaling statefulset ss to 0
  I0726 13:22:46.047054 23 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0726 13:22:46.051887 23 rest.go:91] Deleting statefulset ss
  I0726 13:22:46.072226 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1289" for this suite. @ 07/26/25 13:22:46.078
• [60.934 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:139
  STEP: Creating a kubernetes client @ 07/26/25 13:22:46.086
  I0726 13:22:46.086439 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename emptydir @ 07/26/25 13:22:46.086
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:22:46.1
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:22:46.102
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 07/26/25 13:22:46.104
  E0726 13:22:47.033268      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:22:48.033489      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:22:49.033855      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:22:50.033940      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 13:22:50.137
  I0726 13:22:50.141548 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod pod-2b750f96-2906-4831-a8ba-8df001ccd33d container test-container: <nil>
  STEP: delete the pod @ 07/26/25 13:22:50.152
  I0726 13:22:50.177400 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5041" for this suite. @ 07/26/25 13:22:50.185
• [4.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:163
  STEP: Creating a kubernetes client @ 07/26/25 13:22:50.194
  I0726 13:22:50.194047 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename downward-api @ 07/26/25 13:22:50.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:22:50.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:22:50.211
  STEP: Creating the pod @ 07/26/25 13:22:50.213
  E0726 13:22:51.034117      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:22:52.034320      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:22:52.770538 23 pod_client.go:173] Successfully updated pod "annotationupdate65d2f832-f255-4883-a89f-b1978ed9307e"
  E0726 13:22:53.035095      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:22:54.035280      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:22:55.035995      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:22:56.036139      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:22:56.800798 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3596" for this suite. @ 07/26/25 13:22:56.807
• [6.623 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 07/26/25 13:22:56.817
  I0726 13:22:56.817187 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename configmap @ 07/26/25 13:22:56.817
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:22:56.833
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:22:56.835
  STEP: creating a ConfigMap @ 07/26/25 13:22:56.837
  STEP: fetching the ConfigMap @ 07/26/25 13:22:56.843
  STEP: patching the ConfigMap @ 07/26/25 13:22:56.847
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 07/26/25 13:22:56.854
  STEP: deleting the ConfigMap by collection with a label selector @ 07/26/25 13:22:56.858
  STEP: listing all ConfigMaps in test namespace @ 07/26/25 13:22:56.869
  I0726 13:22:56.874339 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4716" for this suite. @ 07/26/25 13:22:56.908
• [0.100 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:69
  STEP: Creating a kubernetes client @ 07/26/25 13:22:56.917
  I0726 13:22:56.917324 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename downward-api @ 07/26/25 13:22:56.917
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:22:56.93
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:22:56.932
  STEP: Creating a pod to test downward API volume plugin @ 07/26/25 13:22:56.935
  E0726 13:22:57.036522      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:22:58.036823      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:22:59.037844      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:23:00.037926      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 13:23:00.968
  I0726 13:23:00.973926 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod downwardapi-volume-827891e3-7732-4dc1-b375-749938e6a044 container client-container: <nil>
  STEP: delete the pod @ 07/26/25 13:23:00.984
  I0726 13:23:01.004322 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2564" for this suite. @ 07/26/25 13:23:01.011
• [4.103 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:306
  STEP: Creating a kubernetes client @ 07/26/25 13:23:01.02
  I0726 13:23:01.020461 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename namespaces @ 07/26/25 13:23:01.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:23:01.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:23:01.035
  STEP: Read namespace status @ 07/26/25 13:23:01.037
  E0726 13:23:01.037920      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:23:01.042756 23 namespace.go:319] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 07/26/25 13:23:01.042
  I0726 13:23:01.048085 23 namespace.go:339] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 07/26/25 13:23:01.048
  I0726 13:23:01.059891 23 namespace.go:364] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0726 13:23:01.059967 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9037" for this suite. @ 07/26/25 13:23:01.112
• [0.102 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:71
  STEP: Creating a kubernetes client @ 07/26/25 13:23:01.122
  I0726 13:23:01.122741 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/26/25 13:23:01.123
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:23:01.134
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:23:01.136
  I0726 13:23:01.139023 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  E0726 13:23:02.038683      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 07/26/25 13:23:02.358
  I0726 13:23:02.358766 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=crd-publish-openapi-2500 --namespace=crd-publish-openapi-2500 create -f -'
  E0726 13:23:03.038879      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:23:04.039858      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:23:04.428284 23 builder.go:146] stderr: ""
  I0726 13:23:04.428327 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7208-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0726 13:23:04.428460 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=crd-publish-openapi-2500 --namespace=crd-publish-openapi-2500 delete e2e-test-crd-publish-openapi-7208-crds test-foo'
  I0726 13:23:04.484990 23 builder.go:146] stderr: ""
  I0726 13:23:04.485025 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7208-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I0726 13:23:04.485100 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=crd-publish-openapi-2500 --namespace=crd-publish-openapi-2500 apply -f -'
  I0726 13:23:04.537752 23 builder.go:146] stderr: ""
  I0726 13:23:04.537787 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7208-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0726 13:23:04.537825 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=crd-publish-openapi-2500 --namespace=crd-publish-openapi-2500 delete e2e-test-crd-publish-openapi-7208-crds test-foo'
  I0726 13:23:04.586969 23 builder.go:146] stderr: ""
  I0726 13:23:04.587003 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7208-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 07/26/25 13:23:04.587
  I0726 13:23:04.587065 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=crd-publish-openapi-2500 --namespace=crd-publish-openapi-2500 create -f -'
  I0726 13:23:04.626538 23 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 07/26/25 13:23:04.626
  I0726 13:23:04.626653 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=crd-publish-openapi-2500 --namespace=crd-publish-openapi-2500 create -f -'
  I0726 13:23:04.664478 23 builder.go:135] rc: 1
  I0726 13:23:04.664546 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=crd-publish-openapi-2500 --namespace=crd-publish-openapi-2500 apply -f -'
  I0726 13:23:04.713395 23 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 07/26/25 13:23:04.713
  I0726 13:23:04.713502 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=crd-publish-openapi-2500 --namespace=crd-publish-openapi-2500 create -f -'
  I0726 13:23:04.752221 23 builder.go:135] rc: 1
  I0726 13:23:04.752293 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=crd-publish-openapi-2500 --namespace=crd-publish-openapi-2500 apply -f -'
  I0726 13:23:04.798479 23 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 07/26/25 13:23:04.798
  I0726 13:23:04.798572 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=crd-publish-openapi-2500 explain e2e-test-crd-publish-openapi-7208-crds'
  I0726 13:23:04.834380 23 builder.go:146] stderr: ""
  I0726 13:23:04.834431 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-7208-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 07/26/25 13:23:04.834
  I0726 13:23:04.834676 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=crd-publish-openapi-2500 explain e2e-test-crd-publish-openapi-7208-crds.metadata'
  I0726 13:23:04.873567 23 builder.go:146] stderr: ""
  I0726 13:23:04.873751 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-7208-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0726 13:23:04.873939 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=crd-publish-openapi-2500 explain e2e-test-crd-publish-openapi-7208-crds.spec'
  I0726 13:23:04.908718 23 builder.go:146] stderr: ""
  I0726 13:23:04.908751 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-7208-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0726 13:23:04.908824 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=crd-publish-openapi-2500 explain e2e-test-crd-publish-openapi-7208-crds.spec.bars'
  I0726 13:23:04.943847 23 builder.go:146] stderr: ""
  I0726 13:23:04.943880 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-7208-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 07/26/25 13:23:04.943
  I0726 13:23:04.944044 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=crd-publish-openapi-2500 explain e2e-test-crd-publish-openapi-7208-crds.spec.bars2'
  I0726 13:23:04.979217 23 builder.go:135] rc: 1
  E0726 13:23:05.040775      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:23:06.041830      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:23:06.253035 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2500" for this suite. @ 07/26/25 13:23:06.26
• [5.145 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1627
  STEP: Creating a kubernetes client @ 07/26/25 13:23:06.268
  I0726 13:23:06.268146 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename kubectl @ 07/26/25 13:23:06.268
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:23:06.28
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:23:06.282
  STEP: creating the pod @ 07/26/25 13:23:06.284
  I0726 13:23:06.284446 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-4372 create -f -'
  I0726 13:23:06.372155 23 builder.go:146] stderr: ""
  I0726 13:23:06.372189 23 builder.go:147] stdout: "pod/pause created\n"
  E0726 13:23:07.042769      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:23:08.043561      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 07/26/25 13:23:08.383
  I0726 13:23:08.383476 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-4372 label pods pause testing-label=testing-label-value'
  I0726 13:23:08.434751 23 builder.go:146] stderr: ""
  I0726 13:23:08.434796 23 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 07/26/25 13:23:08.434
  I0726 13:23:08.434863 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-4372 get pod pause -L testing-label'
  I0726 13:23:08.474124 23 builder.go:146] stderr: ""
  I0726 13:23:08.474159 23 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 07/26/25 13:23:08.474
  I0726 13:23:08.474234 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-4372 label pods pause testing-label-'
  I0726 13:23:08.523005 23 builder.go:146] stderr: ""
  I0726 13:23:08.523053 23 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 07/26/25 13:23:08.523
  I0726 13:23:08.523116 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-4372 get pod pause -L testing-label'
  I0726 13:23:08.564115 23 builder.go:146] stderr: ""
  I0726 13:23:08.564148 23 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 07/26/25 13:23:08.564
  I0726 13:23:08.564330 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-4372 delete --grace-period=0 --force -f -'
  I0726 13:23:08.616784 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0726 13:23:08.616816 23 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I0726 13:23:08.616870 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-4372 get rc,svc -l name=pause --no-headers'
  I0726 13:23:08.664497 23 builder.go:146] stderr: "No resources found in kubectl-4372 namespace.\n"
  I0726 13:23:08.664533 23 builder.go:147] stdout: ""
  I0726 13:23:08.664568 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-4372 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0726 13:23:08.702150 23 builder.go:146] stderr: ""
  I0726 13:23:08.702186 23 builder.go:147] stdout: ""
  I0726 13:23:08.702405 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4372" for this suite. @ 07/26/25 13:23:08.707
• [2.450 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:208
  STEP: Creating a kubernetes client @ 07/26/25 13:23:08.725
  I0726 13:23:08.725817 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename projected @ 07/26/25 13:23:08.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:23:08.74
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:23:08.742
  STEP: Creating a pod to test downward API volume plugin @ 07/26/25 13:23:08.743
  E0726 13:23:09.043696      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:23:10.043846      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 13:23:10.766
  I0726 13:23:10.770850 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod downwardapi-volume-4abee1d5-bfb6-42a8-95d3-a7f6b6778431 container client-container: <nil>
  STEP: delete the pod @ 07/26/25 13:23:10.784
  I0726 13:23:10.806898 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-350" for this suite. @ 07/26/25 13:23:10.813
• [2.098 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 07/26/25 13:23:10.822
  I0726 13:23:10.822455 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename daemonsets @ 07/26/25 13:23:10.822
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:23:10.836
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:23:10.837
  STEP: Creating simple DaemonSet "daemon-set" @ 07/26/25 13:23:10.932
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/26/25 13:23:10.939
  I0726 13:23:11.014676 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-77-91 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 13:23:11.014714 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-89-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 13:23:11.018526 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0726 13:23:11.018542 23 fixtures.go:131] Node ip-172-31-16-254 is running 0 daemon pod, expected 1
  E0726 13:23:11.044668      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:23:11.945468 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-77-91 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 13:23:11.945507 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-89-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 13:23:11.952548 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0726 13:23:11.952564 23 fixtures.go:131] Node ip-172-31-16-254 is running 0 daemon pod, expected 1
  E0726 13:23:12.045699      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:23:12.945753 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-77-91 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 13:23:12.945790 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-89-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 13:23:12.951603 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0726 13:23:12.951625 23 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 07/26/25 13:23:12.956
  I0726 13:23:12.961791 23 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 07/26/25 13:23:12.961
  I0726 13:23:12.972326 23 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 07/26/25 13:23:12.972
  I0726 13:23:12.974247 23 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I0726 13:23:12.974315 23 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0726 13:23:12.974373 23 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0726 13:23:12.974546 23 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0726 13:23:12.974660 23 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0726 13:23:12.974684 23 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-6867 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0726 13:23:12.974699 23 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 07/26/25 13:23:12.974
  STEP: watching for the daemon set status to be patched @ 07/26/25 13:23:12.987
  I0726 13:23:12.988748 23 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I0726 13:23:12.988874 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0726 13:23:12.988964 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0726 13:23:12.989120 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0726 13:23:12.989243 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0726 13:23:12.989262 23 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-6867 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0726 13:23:12.989341 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0726 13:23:12.989355 23 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-6867 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0726 13:23:12.989365 23 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 07/26/25 13:23:12.993
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6867, will wait for the garbage collector to delete the pods @ 07/26/25 13:23:12.993
  E0726 13:23:13.046590      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:23:13.056801 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 9.228532ms
  I0726 13:23:13.157851 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.044951ms
  E0726 13:23:14.047310      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:23:14.462612 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0726 13:23:14.462663 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0726 13:23:14.467510 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"31101"},"items":null}

  I0726 13:23:14.471186 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"31101"},"items":null}

  I0726 13:23:14.489904 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6867" for this suite. @ 07/26/25 13:23:14.494
• [3.681 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:59
  STEP: Creating a kubernetes client @ 07/26/25 13:23:14.503
  I0726 13:23:14.503889 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename volumeattachment @ 07/26/25 13:23:14.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:23:14.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:23:14.519
  STEP: Create VolumeAttachment "va-e2e-974mv" on node "ip-172-31-72-233" @ 07/26/25 13:23:14.576
  STEP: Get VolumeAttachment "va-e2e-974mv" on node "ip-172-31-72-233" @ 07/26/25 13:23:14.582
  STEP: Patch VolumeAttachment "va-e2e-974mv" on node "ip-172-31-72-233" @ 07/26/25 13:23:14.586
  STEP: List VolumeAttachments with "va-e2e-974mv=patched" label @ 07/26/25 13:23:14.593
  STEP: Delete VolumeAttachment "va-e2e-974mv" on node "ip-172-31-72-233" @ 07/26/25 13:23:14.596
  STEP: Confirm deletion of VolumeAttachment "va-e2e-974mv" on node "ip-172-31-72-233" @ 07/26/25 13:23:14.606
  STEP: Create VolumeAttachment "va-e2e-5qpp9" on node "ip-172-31-3-117" @ 07/26/25 13:23:14.677
  STEP: Update the VolumeAttachment "va-e2e-5qpp9" on node "ip-172-31-3-117" with label "va-e2e=updated" @ 07/26/25 13:23:14.682
  STEP: Create VolumeAttachment "va-e2e-2lpgv" on node "ip-172-31-77-91" @ 07/26/25 13:23:14.777
  STEP: Update the VolumeAttachment "va-e2e-2lpgv" on node "ip-172-31-77-91" with label "va-e2e=updated" @ 07/26/25 13:23:14.783
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 07/26/25 13:23:14.792
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 07/26/25 13:23:14.813
  I0726 13:23:14.817318 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-8539" for this suite. @ 07/26/25 13:23:14.878
• [0.382 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 07/26/25 13:23:14.886
  I0726 13:23:14.886536 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename events @ 07/26/25 13:23:14.887
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:23:14.899
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:23:14.901
  STEP: creating a test event @ 07/26/25 13:23:14.903
  STEP: listing events in all namespaces @ 07/26/25 13:23:14.912
  STEP: listing events in test namespace @ 07/26/25 13:23:14.917
  STEP: listing events with field selection filtering on source @ 07/26/25 13:23:14.922
  STEP: listing events with field selection filtering on reportingController @ 07/26/25 13:23:14.926
  STEP: getting the test event @ 07/26/25 13:23:14.929
  STEP: patching the test event @ 07/26/25 13:23:14.934
  STEP: getting the test event @ 07/26/25 13:23:14.946
  STEP: updating the test event @ 07/26/25 13:23:14.949
  STEP: getting the test event @ 07/26/25 13:23:14.958
  STEP: deleting the test event @ 07/26/25 13:23:14.962
  STEP: listing events in all namespaces @ 07/26/25 13:23:14.974
  STEP: listing events in test namespace @ 07/26/25 13:23:14.979
  I0726 13:23:14.983267 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8458" for this suite. @ 07/26/25 13:23:14.987
• [0.110 seconds]
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:255
  STEP: Creating a kubernetes client @ 07/26/25 13:23:14.996
  I0726 13:23:14.996907 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename namespaces @ 07/26/25 13:23:14.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:23:15.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:23:15.011
  STEP: Creating a test namespace @ 07/26/25 13:23:15.013
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:23:15.024
  STEP: Creating a service in the namespace @ 07/26/25 13:23:15.025
  E0726 13:23:15.048130      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 07/26/25 13:23:15.048
  STEP: Waiting for the namespace to be removed. @ 07/26/25 13:23:15.06
  E0726 13:23:16.048679      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:23:17.048799      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:23:18.048859      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:23:19.049082      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:23:20.049967      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:23:21.050095      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 07/26/25 13:23:21.065
  STEP: Verifying there is no service in the namespace @ 07/26/25 13:23:21.079
  I0726 13:23:21.082741 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9781" for this suite. @ 07/26/25 13:23:21.088
  STEP: Destroying namespace "nsdeletetest-8553" for this suite. @ 07/26/25 13:23:21.099
  I0726 13:23:21.103476 23 framework.go:370] Namespace nsdeletetest-8553 was already deleted
  STEP: Destroying namespace "nsdeletetest-6356" for this suite. @ 07/26/25 13:23:21.103
• [6.116 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 07/26/25 13:23:21.113
  I0726 13:23:21.113042 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename disruption @ 07/26/25 13:23:21.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:23:21.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:23:21.125
  STEP: creating the pdb @ 07/26/25 13:23:21.127
  STEP: Waiting for the pdb to be processed @ 07/26/25 13:23:21.132
  E0726 13:23:22.050798      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:23:23.051842      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 07/26/25 13:23:23.137
  STEP: Waiting for the pdb to be processed @ 07/26/25 13:23:23.149
  E0726 13:23:24.051961      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:23:25.052155      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: patching the pdb @ 07/26/25 13:23:25.155
  STEP: Waiting for the pdb to be processed @ 07/26/25 13:23:25.166
  E0726 13:23:26.052355      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:23:27.052538      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be deleted @ 07/26/25 13:23:27.18
  I0726 13:23:27.184856 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8384" for this suite. @ 07/26/25 13:23:27.189
• [6.085 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1070
  STEP: Creating a kubernetes client @ 07/26/25 13:23:27.198
  I0726 13:23:27.198328 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename resourcequota @ 07/26/25 13:23:27.198
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:23:27.212
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:23:27.214
  STEP: Creating resourceQuota "e2e-rq-status-2q95p" @ 07/26/25 13:23:27.22
  I0726 13:23:27.229261 23 resource_quota.go:1106] Resource quota "e2e-rq-status-2q95p" reports spec: hard cpu limit of 500m
  I0726 13:23:27.229285 23 resource_quota.go:1108] Resource quota "e2e-rq-status-2q95p" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-2q95p" /status @ 07/26/25 13:23:27.229
  STEP: Confirm /status for "e2e-rq-status-2q95p" resourceQuota via watch @ 07/26/25 13:23:27.238
  I0726 13:23:27.239573 23 resource_quota.go:1135] observed resourceQuota "e2e-rq-status-2q95p" in namespace "resourcequota-6683" with hard status: v1.ResourceList(nil)
  I0726 13:23:27.239624 23 resource_quota.go:1138] Found resourceQuota "e2e-rq-status-2q95p" in namespace "resourcequota-6683" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0726 13:23:27.239649 23 resource_quota.go:1145] ResourceQuota "e2e-rq-status-2q95p" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 07/26/25 13:23:27.244
  I0726 13:23:27.250186 23 resource_quota.go:1156] Resource quota "e2e-rq-status-2q95p" reports spec: hard cpu limit of 1
  I0726 13:23:27.250204 23 resource_quota.go:1157] Resource quota "e2e-rq-status-2q95p" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-2q95p" /status @ 07/26/25 13:23:27.25
  STEP: Confirm /status for "e2e-rq-status-2q95p" resourceQuota via watch @ 07/26/25 13:23:27.255
  I0726 13:23:27.256491 23 resource_quota.go:1179] observed resourceQuota "e2e-rq-status-2q95p" in namespace "resourcequota-6683" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0726 13:23:27.256515 23 resource_quota.go:1182] Found resourceQuota "e2e-rq-status-2q95p" in namespace "resourcequota-6683" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0726 13:23:27.256533 23 resource_quota.go:1189] ResourceQuota "e2e-rq-status-2q95p" /status was patched
  STEP: Get "e2e-rq-status-2q95p" /status @ 07/26/25 13:23:27.256
  I0726 13:23:27.260816 23 resource_quota.go:1200] Resourcequota "e2e-rq-status-2q95p" reports status: hard cpu of 1
  I0726 13:23:27.260837 23 resource_quota.go:1202] Resourcequota "e2e-rq-status-2q95p" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-2q95p" /status before checking Spec is unchanged @ 07/26/25 13:23:27.265
  I0726 13:23:27.278679 23 resource_quota.go:1222] Resourcequota "e2e-rq-status-2q95p" reports status: hard cpu of 2
  I0726 13:23:27.278700 23 resource_quota.go:1224] Resourcequota "e2e-rq-status-2q95p" reports status: hard memory of 2Gi
  I0726 13:23:27.279456 23 resource_quota.go:1233] observed resourceQuota "e2e-rq-status-2q95p" in namespace "resourcequota-6683" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0726 13:23:27.279474 23 resource_quota.go:1236] Found resourceQuota "e2e-rq-status-2q95p" in namespace "resourcequota-6683" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0726 13:23:27.283232 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2q95p" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2q95p", GenerateName:"", Namespace:"resourcequota-6683", SelfLink:"", UID:"d85ecffd-4982-42ed-80ca-5c1fa85e6903", ResourceVersion:"31280", Generation:0, CreationTimestamp:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2q95p"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e70b10), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e70b40), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e70b88), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0726 13:23:28.053245      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:23:29.053334      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:23:30.053476      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:23:31.053561      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:23:32.053700      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:23:32.284374 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2q95p" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2q95p", GenerateName:"", Namespace:"resourcequota-6683", SelfLink:"", UID:"d85ecffd-4982-42ed-80ca-5c1fa85e6903", ResourceVersion:"31280", Generation:0, CreationTimestamp:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2q95p"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005886a80), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005886ac8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005886af8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0726 13:23:33.054401      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:23:34.055006      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:23:35.055193      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:23:36.055390      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:23:37.056128      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:23:37.286181 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2q95p" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2q95p", GenerateName:"", Namespace:"resourcequota-6683", SelfLink:"", UID:"d85ecffd-4982-42ed-80ca-5c1fa85e6903", ResourceVersion:"31280", Generation:0, CreationTimestamp:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2q95p"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e70ea0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e70f18), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e70f48), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0726 13:23:38.056233      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:23:39.056356      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:23:40.056666      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:23:41.056846      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:23:42.057119      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:23:42.284856 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2q95p" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2q95p", GenerateName:"", Namespace:"resourcequota-6683", SelfLink:"", UID:"d85ecffd-4982-42ed-80ca-5c1fa85e6903", ResourceVersion:"31280", Generation:0, CreationTimestamp:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2q95p"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005886e70), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005886ea0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005886ed0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0726 13:23:43.057367      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:23:44.057433      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:23:45.057621      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:23:46.057831      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:23:47.058010      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:23:47.285428 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2q95p" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2q95p", GenerateName:"", Namespace:"resourcequota-6683", SelfLink:"", UID:"d85ecffd-4982-42ed-80ca-5c1fa85e6903", ResourceVersion:"31280", Generation:0, CreationTimestamp:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2q95p"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0058870f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005887128), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005887170), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0726 13:23:48.058191      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:23:49.058276      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:23:50.058359      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:23:51.058531      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:23:52.059465      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:23:52.285210 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2q95p" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2q95p", GenerateName:"", Namespace:"resourcequota-6683", SelfLink:"", UID:"d85ecffd-4982-42ed-80ca-5c1fa85e6903", ResourceVersion:"31280", Generation:0, CreationTimestamp:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2q95p"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e71020), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e71050), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e71080), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0726 13:23:53.059822      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:23:54.059921      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:23:55.060821      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:23:56.060993      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:23:57.061165      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:23:57.285106 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2q95p" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2q95p", GenerateName:"", Namespace:"resourcequota-6683", SelfLink:"", UID:"d85ecffd-4982-42ed-80ca-5c1fa85e6903", ResourceVersion:"31280", Generation:0, CreationTimestamp:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2q95p"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e71158), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e711a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e711e8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0726 13:23:58.062125      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:23:59.062219      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:24:00.062405      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:24:01.062829      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:24:02.063845      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:24:02.285221 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2q95p" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2q95p", GenerateName:"", Namespace:"resourcequota-6683", SelfLink:"", UID:"d85ecffd-4982-42ed-80ca-5c1fa85e6903", ResourceVersion:"31280", Generation:0, CreationTimestamp:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2q95p"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005887518), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005887560), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005887590), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0726 13:24:03.063987      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:24:04.064161      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:24:05.064331      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:24:06.064821      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:24:07.065002      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:24:07.286432 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2q95p" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2q95p", GenerateName:"", Namespace:"resourcequota-6683", SelfLink:"", UID:"d85ecffd-4982-42ed-80ca-5c1fa85e6903", ResourceVersion:"31280", Generation:0, CreationTimestamp:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2q95p"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e713e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e71410), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e71440), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0726 13:24:08.065117      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:24:09.065294      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:24:10.065478      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:24:11.065677      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:24:12.065763      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:24:12.284275 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2q95p" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2q95p", GenerateName:"", Namespace:"resourcequota-6683", SelfLink:"", UID:"d85ecffd-4982-42ed-80ca-5c1fa85e6903", ResourceVersion:"31280", Generation:0, CreationTimestamp:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2q95p"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e71638), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e71680), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e716b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0726 13:24:13.065956      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:24:14.066139      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:24:15.066314      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:24:16.066840      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:24:17.067030      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:24:17.285824 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2q95p" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2q95p", GenerateName:"", Namespace:"resourcequota-6683", SelfLink:"", UID:"d85ecffd-4982-42ed-80ca-5c1fa85e6903", ResourceVersion:"31280", Generation:0, CreationTimestamp:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2q95p"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e71770), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e717a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e717d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0726 13:24:18.067424      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:24:19.067533      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:24:20.067742      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:24:21.067770      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:24:22.067962      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:24:22.285983 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2q95p" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2q95p", GenerateName:"", Namespace:"resourcequota-6683", SelfLink:"", UID:"d85ecffd-4982-42ed-80ca-5c1fa85e6903", ResourceVersion:"31280", Generation:0, CreationTimestamp:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2q95p"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e718a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e718d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e71938), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0726 13:24:23.068048      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:24:24.069045      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:24:25.069138      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:24:26.069308      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:24:27.069886      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:24:27.284783 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2q95p" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2q95p", GenerateName:"", Namespace:"resourcequota-6683", SelfLink:"", UID:"d85ecffd-4982-42ed-80ca-5c1fa85e6903", ResourceVersion:"31280", Generation:0, CreationTimestamp:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2q95p"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005887b00), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005887b48), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005887b90), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0726 13:24:28.070172      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:24:29.070281      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:24:30.070823      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:24:31.071003      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:24:32.071833      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:24:32.285304 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2q95p" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2q95p", GenerateName:"", Namespace:"resourcequota-6683", SelfLink:"", UID:"d85ecffd-4982-42ed-80ca-5c1fa85e6903", ResourceVersion:"31280", Generation:0, CreationTimestamp:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2q95p"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005887da0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005887dd0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005887e00), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0726 13:24:33.071946      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:24:34.072121      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:24:35.072295      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:24:36.072496      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:24:37.072709      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:24:37.285314 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2q95p" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2q95p", GenerateName:"", Namespace:"resourcequota-6683", SelfLink:"", UID:"d85ecffd-4982-42ed-80ca-5c1fa85e6903", ResourceVersion:"31280", Generation:0, CreationTimestamp:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2q95p"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005887ec0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005887ef0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005887f20), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0726 13:24:38.072856      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:24:39.073050      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:24:40.073229      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:24:41.073419      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:24:42.073588      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:24:42.284067 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2q95p" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2q95p", GenerateName:"", Namespace:"resourcequota-6683", SelfLink:"", UID:"d85ecffd-4982-42ed-80ca-5c1fa85e6903", ResourceVersion:"31280", Generation:0, CreationTimestamp:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2q95p"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c0090), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c00c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c00f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0726 13:24:43.073731      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:24:44.073918      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:24:45.074097      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:24:46.074302      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:24:47.074483      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:24:47.284423 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2q95p" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2q95p", GenerateName:"", Namespace:"resourcequota-6683", SelfLink:"", UID:"d85ecffd-4982-42ed-80ca-5c1fa85e6903", ResourceVersion:"31280", Generation:0, CreationTimestamp:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2q95p"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c0240), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c0270), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c02a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0726 13:24:48.075413      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:24:49.075605      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:24:50.075842      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:24:51.076033      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:24:52.076224      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:24:52.286100 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2q95p" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2q95p", GenerateName:"", Namespace:"resourcequota-6683", SelfLink:"", UID:"d85ecffd-4982-42ed-80ca-5c1fa85e6903", ResourceVersion:"31280", Generation:0, CreationTimestamp:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2q95p"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c0378), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c03a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c03d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0726 13:24:53.077025      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:24:54.077144      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:24:55.077326      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:24:56.077503      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:24:57.077682      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:24:57.284725 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2q95p" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2q95p", GenerateName:"", Namespace:"resourcequota-6683", SelfLink:"", UID:"d85ecffd-4982-42ed-80ca-5c1fa85e6903", ResourceVersion:"31280", Generation:0, CreationTimestamp:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2q95p"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c04b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c04e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c0510), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0726 13:24:58.078262      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:24:59.078364      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:25:00.078840      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:25:01.079839      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:25:02.080817      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:25:02.284865 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2q95p" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2q95p", GenerateName:"", Namespace:"resourcequota-6683", SelfLink:"", UID:"d85ecffd-4982-42ed-80ca-5c1fa85e6903", ResourceVersion:"31280", Generation:0, CreationTimestamp:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2q95p"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c05d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c0600), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c0630), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0726 13:25:03.080893      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:25:04.081837      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:25:05.082012      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:25:06.082891      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:25:07.082976      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:25:07.286930 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2q95p" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2q95p", GenerateName:"", Namespace:"resourcequota-6683", SelfLink:"", UID:"d85ecffd-4982-42ed-80ca-5c1fa85e6903", ResourceVersion:"31280", Generation:0, CreationTimestamp:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2q95p"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c264f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c26540), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c26570), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0726 13:25:08.083189      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:25:09.083723      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:25:10.083884      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:25:11.084078      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:25:12.084259      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:25:12.285623 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2q95p" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2q95p", GenerateName:"", Namespace:"resourcequota-6683", SelfLink:"", UID:"d85ecffd-4982-42ed-80ca-5c1fa85e6903", ResourceVersion:"31280", Generation:0, CreationTimestamp:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2q95p"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c0108), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c01b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c01f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0726 13:25:13.084367      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:25:14.084565      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:25:15.084716      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:25:16.084909      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:25:17.085084      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:25:17.285946 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2q95p" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2q95p", GenerateName:"", Namespace:"resourcequota-6683", SelfLink:"", UID:"d85ecffd-4982-42ed-80ca-5c1fa85e6903", ResourceVersion:"31280", Generation:0, CreationTimestamp:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2q95p"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c0318), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c0360), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c0390), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0726 13:25:18.085830      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:25:19.086014      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:25:20.086248      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:25:21.086483      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:25:22.086686      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:25:22.284409 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2q95p" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2q95p", GenerateName:"", Namespace:"resourcequota-6683", SelfLink:"", UID:"d85ecffd-4982-42ed-80ca-5c1fa85e6903", ResourceVersion:"31280", Generation:0, CreationTimestamp:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2q95p"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c26108), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c26138), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c26168), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0726 13:25:23.087390      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:25:24.087430      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:25:25.087603      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:25:26.087749      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:25:27.088485      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:25:27.285252 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2q95p" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2q95p", GenerateName:"", Namespace:"resourcequota-6683", SelfLink:"", UID:"d85ecffd-4982-42ed-80ca-5c1fa85e6903", ResourceVersion:"31280", Generation:0, CreationTimestamp:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2q95p"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c05b8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c05e8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c0618), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0726 13:25:28.088838      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:25:29.089825      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:25:30.090824      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:25:31.091842      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:25:32.092027      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:25:32.285880 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2q95p" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2q95p", GenerateName:"", Namespace:"resourcequota-6683", SelfLink:"", UID:"d85ecffd-4982-42ed-80ca-5c1fa85e6903", ResourceVersion:"31280", Generation:0, CreationTimestamp:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2q95p"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c26318), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c26348), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c26390), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0726 13:25:33.092946      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:25:34.093149      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:25:35.093328      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:25:36.093504      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:25:37.093709      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:25:37.283884 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2q95p" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2q95p", GenerateName:"", Namespace:"resourcequota-6683", SelfLink:"", UID:"d85ecffd-4982-42ed-80ca-5c1fa85e6903", ResourceVersion:"31280", Generation:0, CreationTimestamp:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2q95p"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c0840), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c0870), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c08a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0726 13:25:38.093791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:25:39.093978      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:25:40.094156      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:25:41.094335      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:25:42.094509      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:25:42.284087 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2q95p" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2q95p", GenerateName:"", Namespace:"resourcequota-6683", SelfLink:"", UID:"d85ecffd-4982-42ed-80ca-5c1fa85e6903", ResourceVersion:"31280", Generation:0, CreationTimestamp:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2q95p"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c26750), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c26780), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c267b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0726 13:25:43.094769      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:25:44.094879      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:25:45.095832      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:25:46.096014      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:25:47.096201      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:25:47.286134 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2q95p" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2q95p", GenerateName:"", Namespace:"resourcequota-6683", SelfLink:"", UID:"d85ecffd-4982-42ed-80ca-5c1fa85e6903", ResourceVersion:"31280", Generation:0, CreationTimestamp:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2q95p"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c0ac8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c0af8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c0b28), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0726 13:25:48.097162      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:25:49.097267      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:25:50.097871      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:25:51.098049      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:25:52.098137      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:25:52.285042 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2q95p" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2q95p", GenerateName:"", Namespace:"resourcequota-6683", SelfLink:"", UID:"d85ecffd-4982-42ed-80ca-5c1fa85e6903", ResourceVersion:"31280", Generation:0, CreationTimestamp:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2q95p"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c0c18), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c0c60), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c0c90), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0726 13:25:53.098988      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:25:54.099085      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:25:55.099252      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:25:56.099837      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:25:57.100850      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:25:57.285275 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2q95p" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2q95p", GenerateName:"", Namespace:"resourcequota-6683", SelfLink:"", UID:"d85ecffd-4982-42ed-80ca-5c1fa85e6903", ResourceVersion:"31280", Generation:0, CreationTimestamp:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2q95p"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c0d68), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c0d98), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.July, 26, 13, 23, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c0dc8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0726 13:25:58.100949      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:25:59.101828      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:26:00.102048      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:26:01.102229      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:26:02.102403      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:26:02.285683 23 resource_quota.go:1264] ResourceQuota "e2e-rq-status-2q95p" Spec was unchanged and /status reset
  I0726 13:26:02.285852 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6683" for this suite. @ 07/26/25 13:26:02.291
• [155.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1426
  STEP: Creating a kubernetes client @ 07/26/25 13:26:02.3
  I0726 13:26:02.300581 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename services @ 07/26/25 13:26:02.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:26:02.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:26:02.317
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-4219 @ 07/26/25 13:26:02.318
  STEP: changing the ExternalName service to type=NodePort @ 07/26/25 13:26:02.325
  I0726 13:26:02.369751 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0726 13:26:03.102832      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:26:04.102923      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:26:04.375713 23 resource.go:361] Creating new exec pod
  E0726 13:26:05.103923      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:26:06.104017      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:26:06.407905 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-4219 exec execpodslhvm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0726 13:26:06.494520 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.152.183.179) 80 port [tcp/http] succeeded!\n"
  I0726 13:26:06.494555 23 builder.go:147] stdout: ""
  E0726 13:26:07.104853      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:26:07.408075 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-4219 exec execpodslhvm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0726 13:26:07.490456 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.152.183.179) 80 port [tcp/http] succeeded!\n"
  I0726 13:26:07.490532 23 builder.go:147] stdout: "externalname-service-6f5dd447dd-bfbf2"
  I0726 13:26:07.490615 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-4219 exec execpodslhvm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.179 80'
  I0726 13:26:07.563929 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.179 80\nConnection to 10.152.183.179 80 port [tcp/http] succeeded!\n"
  I0726 13:26:07.563970 23 builder.go:147] stdout: ""
  E0726 13:26:08.105750      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:26:08.491184 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-4219 exec execpodslhvm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.179 80'
  I0726 13:26:08.576920 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.179 80\nConnection to 10.152.183.179 80 port [tcp/http] succeeded!\n"
  I0726 13:26:08.576958 23 builder.go:147] stdout: ""
  E0726 13:26:09.106539      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:26:09.490746 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-4219 exec execpodslhvm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.179 80'
  I0726 13:26:09.565457 23 builder.go:146] stderr: "+ nc -v -t -w 2 10.152.183.179 80\n+ echo hostName\nConnection to 10.152.183.179 80 port [tcp/http] succeeded!\n"
  I0726 13:26:09.565498 23 builder.go:147] stdout: ""
  E0726 13:26:10.107119      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:26:10.491593 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-4219 exec execpodslhvm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.179 80'
  I0726 13:26:10.570535 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.179 80\nConnection to 10.152.183.179 80 port [tcp/http] succeeded!\n"
  I0726 13:26:10.570573 23 builder.go:147] stdout: "externalname-service-6f5dd447dd-bfbf2"
  I0726 13:26:10.570707 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-4219 exec execpodslhvm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.16.254 31186'
  I0726 13:26:10.649812 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.16.254 31186\nConnection to 172.31.16.254 31186 port [tcp/*] succeeded!\n"
  I0726 13:26:10.649849 23 builder.go:147] stdout: "externalname-service-6f5dd447dd-krhjj"
  I0726 13:26:10.649916 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-4219 exec execpodslhvm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.3.117 31186'
  I0726 13:26:10.730884 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.3.117 31186\nConnection to 172.31.3.117 31186 port [tcp/*] succeeded!\n"
  I0726 13:26:10.730920 23 builder.go:147] stdout: "externalname-service-6f5dd447dd-krhjj"
  I0726 13:26:10.730996 23 service.go:1435] Cleaning up the ExternalName to NodePort test service
  I0726 13:26:10.765680 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4219" for this suite. @ 07/26/25 13:26:10.77
• [8.482 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3714
  STEP: Creating a kubernetes client @ 07/26/25 13:26:10.782
  I0726 13:26:10.782395 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename services @ 07/26/25 13:26:10.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:26:10.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:26:10.795
  STEP: creating service multiprotocol-test in namespace services-2817 @ 07/26/25 13:26:10.797
  STEP: creating pod pod1 in namespace services-2817 @ 07/26/25 13:26:10.819
  STEP: Creating pod pod1 in namespace services-2817 @ 07/26/25 13:26:10.819
  E0726 13:26:11.107854      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:26:12.107946      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-2817 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 07/26/25 13:26:12.848
  I0726 13:26:12.857090      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0726 13:26:12.862056 23 service.go:4729] successfully validated that service multiprotocol-test in namespace services-2817 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 07/26/25 13:26:12.862
  I0726 13:26:12.862093 23 resource.go:361] Creating new exec pod
  E0726 13:26:13.108407      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:26:14.108476      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:26:14.878659 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-2817 exec execpodjmz5b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.32 80'
  I0726 13:26:14.958100 23 builder.go:146] stderr: "+ + ncecho -v hostName -t\n -w 2 10.152.183.32 80\nConnection to 10.152.183.32 80 port [tcp/http] succeeded!\n"
  I0726 13:26:14.958150 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0726 13:26:14.958216 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-2817 exec execpodjmz5b -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.32 80'
  E0726 13:26:15.108843      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:26:16.108928      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:26:17.038216 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.32 80\n"
  I0726 13:26:17.038269 23 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 07/26/25 13:26:17.038
  I0726 13:26:17.048887 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-2817 exec execpodjmz5b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.32 80'
  E0726 13:26:17.109230      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:26:17.132367 23 builder.go:146] stderr: "+ + ncecho -v hostName -t\n -w 2 10.152.183.32 80\nConnection to 10.152.183.32 80 port [tcp/http] succeeded!\n"
  I0726 13:26:17.132432 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0726 13:26:17.132548 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-2817 exec execpodjmz5b -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.32 80'
  E0726 13:26:18.109565      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:26:19.109850      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:26:19.214467 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.32 80\n"
  I0726 13:26:19.214512 23 builder.go:147] stdout: ""
  I0726 13:26:19.214568 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-2817 exec execpodjmz5b -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.32 80'
  E0726 13:26:20.110853      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:26:21.110930      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:26:21.315758 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.32 80\n"
  I0726 13:26:21.315801 23 builder.go:147] stdout: ""
  I0726 13:26:21.315857 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-2817 exec execpodjmz5b -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.32 80'
  E0726 13:26:22.111876      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:26:23.112052      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:26:23.395091 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.32 80\n"
  I0726 13:26:23.395141 23 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 07/26/25 13:26:23.395
  I0726 13:26:23.406867 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-2817 exec execpodjmz5b -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.32 80'
  E0726 13:26:24.112554      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:26:25.112770      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:26:25.506214 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.32 80\n"
  I0726 13:26:25.506252 23 builder.go:147] stdout: "pod1"
  I0726 13:26:25.506364 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-2817 exec execpodjmz5b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.32 80'
  E0726 13:26:26.113664      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:26:27.113792      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:26:27.590052 23 builder.go:135] rc: 1
  I0726 13:26:27.590517 23 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-2817 exec execpodjmz5b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.32 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.32 80
  nc: connect to 10.152.183.32 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0726 13:26:27.590605 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-2817 exec execpodjmz5b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.32 80'
  E0726 13:26:28.114365      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:26:29.114501      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:26:29.666194 23 builder.go:135] rc: 1
  I0726 13:26:29.666258 23 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-2817 exec execpodjmz5b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.32 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.32 80
  nc: connect to 10.152.183.32 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0726 13:26:29.666330 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-2817 exec execpodjmz5b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.32 80'
  E0726 13:26:30.114866      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:26:31.114952      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:26:31.741096 23 builder.go:135] rc: 1
  I0726 13:26:31.741157 23 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-2817 exec execpodjmz5b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.32 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.32 80
  nc: connect to 10.152.183.32 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0726 13:26:31.741331 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2817" for this suite. @ 07/26/25 13:26:31.747
• [20.975 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 07/26/25 13:26:31.757
  I0726 13:26:31.757433 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename endpointslicemirroring @ 07/26/25 13:26:31.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:26:31.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:26:31.771
  STEP: mirroring a new custom Endpoint @ 07/26/25 13:26:31.792
  I0726 13:26:31.798809      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0726 13:26:31.803792 23 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  E0726 13:26:32.115439      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:26:33.115560      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 07/26/25 13:26:33.81
  I0726 13:26:33.817220      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: mirroring deletion of a custom Endpoint @ 07/26/25 13:26:33.823
  I0726 13:26:33.831879      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0726 13:26:33.841872 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-7377" for this suite. @ 07/26/25 13:26:33.846
• [2.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 07/26/25 13:26:33.855
  I0726 13:26:33.855373 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename deployment @ 07/26/25 13:26:33.855
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:26:33.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:26:33.874
  I0726 13:26:33.876482 23 deployment.go:1664] Creating simple deployment test-new-deployment
  I0726 13:26:33.892691 23 deployment.go:223] deployment "test-new-deployment" doesn't have the required revision set
  E0726 13:26:34.116014      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:26:35.116121      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 07/26/25 13:26:35.911
  STEP: updating a scale subresource @ 07/26/25 13:26:35.915
  STEP: verifying the deployment Spec.Replicas was modified @ 07/26/25 13:26:35.923
  STEP: Patch a scale subresource @ 07/26/25 13:26:35.928
  I0726 13:26:35.950317 23 deployment.go:632] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8855",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "24841335-97de-4a93-b114-dc66d709d75e",
      ResourceVersion: (string) (len=5) "31889",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889133193,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889133193,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889133194,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889133194,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889133194,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889133194,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889133193,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-685b768f58\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0726 13:26:35.956948 23 deployment.go:40] New ReplicaSet "test-new-deployment-685b768f58" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8855",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "968ca369-66b9-43c9-9c51-36a29c015c6a",
      ResourceVersion: (string) (len=5) "31896",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889133193,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "24841335-97de-4a93-b114-dc66d709d75e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889133195,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 34 38 34 31 33  33 35 2d 39 37 64 65 2d  |\"24841335-97de-|
              00000120  34 61 39 33 2d 62 31 31  34 2d 64 63 36 36 64 37  |4a93-b114-dc66d7|
              00000130  30 39 64 37 35 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |09d75e\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889133195,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0726 13:26:35.963572 23 deployment.go:68] Pod "test-new-deployment-685b768f58-fxsx6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-fxsx6",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8855",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "54fb944c-7c1c-47cb-ba0e-0e011d3a6111",
      ResourceVersion: (string) (len=5) "31892",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889133195,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "968ca369-66b9-43c9-9c51-36a29c015c6a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889133195,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 36  38 63 61 33 36 39 2d 36  |d\":\"968ca369-6|
              00000090  36 62 39 2d 34 33 63 39  2d 39 63 35 31 2d 33 36  |6b9-43c9-9c51-36|
              000000a0  61 32 39 63 30 31 35 63  36 61 5c 22 7d 22 3a 7b  |a29c015c6a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-k7n8h",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-k7n8h",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-72-233",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889133195,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0726 13:26:35.964840 23 deployment.go:68] Pod "test-new-deployment-685b768f58-qrgrq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-qrgrq",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8855",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c61f998c-44a0-4b50-8a11-896cd10073e2",
      ResourceVersion: (string) (len=5) "31881",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889133193,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "968ca369-66b9-43c9-9c51-36a29c015c6a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889133193,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 36  38 63 61 33 36 39 2d 36  |d\":\"968ca369-6|
              00000090  36 62 39 2d 34 33 63 39  2d 39 63 35 31 2d 33 36  |6b9-43c9-9c51-36|
              000000a0  61 32 39 63 30 31 35 63  36 61 5c 22 7d 22 3a 7b  |a29c015c6a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889133194,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 35 38  2e 32 32 31 5c 22 7d 22  |2.168.58.221\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6q5nd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6q5nd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-16-254",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889133194,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889133193,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889133194,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889133194,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889133193,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.16.254",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.16.254"
        }
      },
      PodIP: (string) (len=14) "192.168.58.221",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.58.221"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889133193,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889133194,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ff62631987151accab25fb12d3b0793e3914a824860b159d1b7f69480f69b381",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6q5nd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0726 13:26:35.966464 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8855" for this suite. @ 07/26/25 13:26:35.976
• [2.135 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1464
  STEP: Creating a kubernetes client @ 07/26/25 13:26:35.99
  I0726 13:26:35.990568 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename services @ 07/26/25 13:26:35.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:26:36.008
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:26:36.01
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-746 @ 07/26/25 13:26:36.011
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 07/26/25 13:26:36.035
  STEP: creating service externalsvc in namespace services-746 @ 07/26/25 13:26:36.035
  I0726 13:26:36.072297 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0726 13:26:36.116495      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:26:37.116899      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: changing the ClusterIP service to type=ExternalName @ 07/26/25 13:26:38.093
  E0726 13:26:38.116900      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:26:38.119714 23 resource.go:361] Creating new exec pod
  E0726 13:26:39.117781      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:26:40.117860      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:26:40.143393 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-746 exec execpodjg9n6 -- /bin/sh -x -c nslookup clusterip-service.services-746.svc.cluster.local'
  I0726 13:26:40.249197 23 builder.go:146] stderr: "+ nslookup clusterip-service.services-746.svc.cluster.local\n"
  I0726 13:26:40.249248 23 builder.go:147] stdout: "Server:\t\t10.152.183.117\nAddress:\t10.152.183.117#53\n\nclusterip-service.services-746.svc.cluster.local\tcanonical name = externalsvc.services-746.svc.cluster.local.\nName:\texternalsvc.services-746.svc.cluster.local\nAddress: 10.152.183.221\n\n"
  I0726 13:26:40.295257 23 service.go:1473] Cleaning up the ClusterIP to ExternalName test service
  I0726 13:26:40.314613 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-746" for this suite. @ 07/26/25 13:26:40.318
• [4.337 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 07/26/25 13:26:40.327
  I0726 13:26:40.327416 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename webhook @ 07/26/25 13:26:40.327
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:26:40.338
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:26:40.34
  STEP: Setting up server cert @ 07/26/25 13:26:40.358
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/26/25 13:26:40.57
  STEP: Deploying the webhook pod @ 07/26/25 13:26:40.578
  STEP: Wait for the deployment to be ready @ 07/26/25 13:26:40.591
  I0726 13:26:40.602379 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0726 13:26:41.118860      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:26:42.119146      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/26/25 13:26:42.617
  STEP: Verifying the service has paired with the endpoint @ 07/26/25 13:26:42.634
  E0726 13:26:43.119076      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:26:43.635601 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 07/26/25 13:26:43.641
  STEP: create a pod that should be denied by the webhook @ 07/26/25 13:26:43.655
  STEP: create a pod that causes the webhook to hang @ 07/26/25 13:26:43.667
  E0726 13:26:44.119176      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:26:45.119216      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:26:46.119330      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:26:47.119400      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:26:48.119587      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:26:49.119805      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:26:50.120872      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:26:51.121073      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:26:52.121246      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:26:53.121378      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create a configmap that should be denied by the webhook @ 07/26/25 13:26:53.675
  STEP: create a configmap that should be admitted by the webhook @ 07/26/25 13:26:53.68
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 07/26/25 13:26:53.688
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 07/26/25 13:26:53.696
  STEP: create a namespace that bypass the webhook @ 07/26/25 13:26:53.701
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 07/26/25 13:26:53.713
  I0726 13:26:53.784964 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-199" for this suite. @ 07/26/25 13:26:53.795
  STEP: Destroying namespace "webhook-markers-8346" for this suite. @ 07/26/25 13:26:53.802
  STEP: Destroying namespace "exempted-namespace-7655" for this suite. @ 07/26/25 13:26:53.815
• [13.498 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:163
  STEP: Creating a kubernetes client @ 07/26/25 13:26:53.826
  I0726 13:26:53.826365 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename projected @ 07/26/25 13:26:53.826
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:26:53.837
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:26:53.84
  STEP: Creating the pod @ 07/26/25 13:26:53.843
  E0726 13:26:54.122096      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:26:55.122897      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:26:56.123838      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:26:56.404435 23 pod_client.go:173] Successfully updated pod "annotationupdate7ef02a99-337d-4f84-84dd-39b8dde95d77"
  E0726 13:26:57.124164      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:26:58.124303      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:26:59.124474      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:27:00.124566      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:27:00.432306 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2555" for this suite. @ 07/26/25 13:27:00.437
• [6.622 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:394
  STEP: Creating a kubernetes client @ 07/26/25 13:27:00.449
  I0726 13:27:00.449081 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename kubectl @ 07/26/25 13:27:00.449
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:27:00.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:27:00.462
  STEP: creating all guestbook components @ 07/26/25 13:27:00.463
  I0726 13:27:00.464054 23 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0726 13:27:00.464122 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-2723 create -f -'
  I0726 13:27:00.559990 23 builder.go:146] stderr: ""
  I0726 13:27:00.560024 23 builder.go:147] stdout: "service/agnhost-replica created\n"
  I0726 13:27:00.560073 23 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0726 13:27:00.560169 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-2723 create -f -'
  I0726 13:27:00.656753 23 builder.go:146] stderr: ""
  I0726 13:27:00.656790 23 builder.go:147] stdout: "service/agnhost-primary created\n"
  I0726 13:27:00.656825 23 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0726 13:27:00.656887 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-2723 create -f -'
  I0726 13:27:00.748506 23 builder.go:146] stderr: ""
  I0726 13:27:00.748541 23 builder.go:147] stdout: "service/frontend created\n"
  I0726 13:27:00.748604 23 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0726 13:27:00.748793 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-2723 create -f -'
  I0726 13:27:00.809921 23 builder.go:146] stderr: ""
  I0726 13:27:00.809955 23 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I0726 13:27:00.810020 23 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0726 13:27:00.810097 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-2723 create -f -'
  I0726 13:27:00.870940 23 builder.go:146] stderr: ""
  I0726 13:27:00.870974 23 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I0726 13:27:00.871027 23 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0726 13:27:00.871205 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-2723 create -f -'
  I0726 13:27:00.930051 23 builder.go:146] stderr: ""
  I0726 13:27:00.930085 23 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 07/26/25 13:27:00.93
  I0726 13:27:00.930151 23 kubectl.go:2275] Waiting for all frontend pods to be Running.
  E0726 13:27:01.124688      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:27:02.124796      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:27:03.125727      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:27:04.125841      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:27:05.125985      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:27:05.981695 23 kubectl.go:2279] Waiting for frontend to serve content.
  I0726 13:27:05.995052 23 kubectl.go:2284] Trying to add a new entry to the guestbook.
  I0726 13:27:06.008134 23 kubectl.go:2289] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 07/26/25 13:27:06.019
  I0726 13:27:06.019845 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-2723 delete --grace-period=0 --force -f -'
  I0726 13:27:06.091732 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0726 13:27:06.091763 23 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 07/26/25 13:27:06.091
  I0726 13:27:06.091870 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-2723 delete --grace-period=0 --force -f -'
  E0726 13:27:06.126167      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:27:06.162087 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0726 13:27:06.162113 23 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 07/26/25 13:27:06.162
  I0726 13:27:06.162221 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-2723 delete --grace-period=0 --force -f -'
  I0726 13:27:06.233776 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0726 13:27:06.233807 23 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 07/26/25 13:27:06.233
  I0726 13:27:06.233939 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-2723 delete --grace-period=0 --force -f -'
  I0726 13:27:06.281245 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0726 13:27:06.281280 23 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 07/26/25 13:27:06.281
  I0726 13:27:06.281397 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-2723 delete --grace-period=0 --force -f -'
  I0726 13:27:06.335066 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0726 13:27:06.335107 23 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 07/26/25 13:27:06.335
  I0726 13:27:06.335247 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-2723 delete --grace-period=0 --force -f -'
  I0726 13:27:06.383531 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0726 13:27:06.383571 23 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I0726 13:27:06.383699 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2723" for this suite. @ 07/26/25 13:27:06.39
• [5.949 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 07/26/25 13:27:06.398
  I0726 13:27:06.398693 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 07/26/25 13:27:06.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:27:06.417
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:27:06.419
  STEP: create the container to handle the HTTPGet hook request. @ 07/26/25 13:27:06.495
  E0726 13:27:07.126851      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:27:08.127859      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 07/26/25 13:27:08.525
  E0726 13:27:09.127933      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:27:10.128059      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 07/26/25 13:27:10.55
  STEP: delete the pod with lifecycle hook @ 07/26/25 13:27:10.565
  E0726 13:27:11.128152      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:27:12.128226      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:27:12.584447 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-3588" for this suite. @ 07/26/25 13:27:12.59
• [6.200 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 07/26/25 13:27:12.598
  I0726 13:27:12.598540 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename endpointslice @ 07/26/25 13:27:12.599
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:27:12.615
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:27:12.617
  I0726 13:27:12.626246      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0726 13:27:12.631138 23 endpointslice.go:1045] Endpoints addresses: [172.31.77.91 172.31.89.254] , ports: [6443]
  I0726 13:27:12.631159 23 endpointslice.go:1075] EndpointSlices addresses: [172.31.77.91 172.31.89.254] , ports: [6443]
  I0726 13:27:12.631232 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-7091" for this suite. @ 07/26/25 13:27:12.69
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:109
  STEP: Creating a kubernetes client @ 07/26/25 13:27:12.7
  I0726 13:27:12.700916 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename projected @ 07/26/25 13:27:12.701
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:27:12.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:27:12.714
  STEP: Creating configMap with name projected-configmap-test-volume-map-0c944b0e-c6dd-4105-8ffa-71d777ef5edf @ 07/26/25 13:27:12.715
  STEP: Creating a pod to test consume configMaps @ 07/26/25 13:27:12.72
  E0726 13:27:13.128860      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:27:14.128929      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:27:15.129860      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:27:16.129926      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 13:27:16.749
  I0726 13:27:16.754075 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod pod-projected-configmaps-9d3afbf9-9afa-4d66-988a-b56d2580198b container agnhost-container: <nil>
  STEP: delete the pod @ 07/26/25 13:27:16.765
  I0726 13:27:16.786690 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4908" for this suite. @ 07/26/25 13:27:16.792
• [4.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job with successPolicy succeededIndexes rule should succeeded even when some indexes remain pending [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:526
  STEP: Creating a kubernetes client @ 07/26/25 13:27:16.8
  I0726 13:27:16.800366 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename job @ 07/26/25 13:27:16.8
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:27:16.815
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:27:16.817
  STEP: Creating an indexed job with successPolicy succeededIndexes rule @ 07/26/25 13:27:16.819
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet with SuccessPolicy reason condition @ 07/26/25 13:27:16.826
  E0726 13:27:17.130534      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:27:18.130625      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:27:19.131336      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:27:20.131538      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensure that the job reaches completions @ 07/26/25 13:27:20.847
  STEP: Verifying that the only appropriately index succeeded @ 07/26/25 13:27:20.856
  I0726 13:27:20.860457 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9912" for this suite. @ 07/26/25 13:27:20.864
• [4.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:199
  STEP: Creating a kubernetes client @ 07/26/25 13:27:20.873
  I0726 13:27:20.873156 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename emptydir @ 07/26/25 13:27:20.873
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:27:20.887
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:27:20.888
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 07/26/25 13:27:20.89
  E0726 13:27:21.131762      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:27:22.131978      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:27:23.132878      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:27:24.133082      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 13:27:24.919
  I0726 13:27:24.922799 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod pod-5f77132e-daab-4cf3-9579-5670b25a8f5b container test-container: <nil>
  STEP: delete the pod @ 07/26/25 13:27:24.932
  I0726 13:27:24.957256 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1213" for this suite. @ 07/26/25 13:27:24.962
• [4.098 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 07/26/25 13:27:24.971
  I0726 13:27:24.971609 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename disruption @ 07/26/25 13:27:24.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:27:24.985
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:27:24.987
  STEP: Creating a kubernetes client @ 07/26/25 13:27:24.989
  I0726 13:27:24.989020 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename disruption-2 @ 07/26/25 13:27:24.989
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:27:25.005
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:27:25.007
  STEP: Waiting for the pdb to be processed @ 07/26/25 13:27:25.013
  E0726 13:27:25.133160      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:27:26.133258      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 07/26/25 13:27:27.023
  E0726 13:27:27.134148      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:27:28.134245      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 07/26/25 13:27:29.035
  E0726 13:27:29.135105      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:27:30.135301      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: listing a collection of PDBs across all namespaces @ 07/26/25 13:27:31.04
  STEP: listing a collection of PDBs in namespace disruption-5393 @ 07/26/25 13:27:31.045
  STEP: deleting a collection of PDBs @ 07/26/25 13:27:31.05
  STEP: Waiting for the PDB collection to be deleted @ 07/26/25 13:27:31.068
  I0726 13:27:31.072903 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-1373" for this suite. @ 07/26/25 13:27:31.078
  I0726 13:27:31.085784 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0726 13:27:31.135981      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "disruption-5393" for this suite. @ 07/26/25 13:27:31.178
• [6.218 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:96
  STEP: Creating a kubernetes client @ 07/26/25 13:27:31.189
  I0726 13:27:31.189348 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename replication-controller @ 07/26/25 13:27:31.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:27:31.202
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:27:31.204
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 07/26/25 13:27:31.205
  E0726 13:27:32.137084      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:27:33.138132      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 07/26/25 13:27:33.229
  STEP: Then the orphan pod is adopted @ 07/26/25 13:27:33.235
  E0726 13:27:34.138792      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:27:34.245278 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3044" for this suite. @ 07/26/25 13:27:34.249
• [3.071 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:444
  STEP: Creating a kubernetes client @ 07/26/25 13:27:34.259
  I0726 13:27:34.259947 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/26/25 13:27:34.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:27:34.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:27:34.273
  STEP: set up a multi version CRD @ 07/26/25 13:27:34.274
  I0726 13:27:34.275084 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  E0726 13:27:35.139398      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:27:36.140340      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:27:37.141316      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 07/26/25 13:27:37.344
  STEP: check the unserved version gets removed @ 07/26/25 13:27:37.36
  STEP: check the other version is not changed @ 07/26/25 13:27:38.108
  E0726 13:27:38.141851      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:27:39.142075      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:27:40.142467      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:27:40.509615 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8541" for this suite. @ 07/26/25 13:27:40.517
• [6.266 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 07/26/25 13:27:40.526
  I0726 13:27:40.526672 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename podtemplate @ 07/26/25 13:27:40.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:27:40.541
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:27:40.542
  STEP: Create set of pod templates @ 07/26/25 13:27:40.544
  I0726 13:27:40.552969 23 podtemplates.go:143] created test-podtemplate-1
  I0726 13:27:40.558822 23 podtemplates.go:143] created test-podtemplate-2
  I0726 13:27:40.563812 23 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 07/26/25 13:27:40.563
  STEP: delete collection of pod templates @ 07/26/25 13:27:40.567
  I0726 13:27:40.567825 23 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 07/26/25 13:27:40.593
  I0726 13:27:40.593713 23 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0726 13:27:40.597172 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-9815" for this suite. @ 07/26/25 13:27:40.617
• [0.100 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 07/26/25 13:27:40.626
  I0726 13:27:40.626778 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/26/25 13:27:40.627
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:27:40.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:27:40.642
  STEP: fetching the /apis discovery document @ 07/26/25 13:27:40.644
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 07/26/25 13:27:40.644
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 07/26/25 13:27:40.644
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 07/26/25 13:27:40.644
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 07/26/25 13:27:40.645
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 07/26/25 13:27:40.645
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 07/26/25 13:27:40.646
  I0726 13:27:40.646176 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7517" for this suite. @ 07/26/25 13:27:40.717
• [0.100 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 07/26/25 13:27:40.727
  I0726 13:27:40.727403 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename deployment @ 07/26/25 13:27:40.727
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:27:40.742
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:27:40.744
  I0726 13:27:40.746538 23 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0726 13:27:40.758401 23 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  E0726 13:27:41.143083      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:27:42.143228      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:27:43.143488      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:27:44.143702      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:27:45.143799      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:27:45.764248 23 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/26/25 13:27:45.764
  I0726 13:27:45.764317 23 deployment.go:769] Creating deployment "test-rolling-update-deployment"
  I0726 13:27:45.769832 23 deployment.go:775] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0726 13:27:45.778392 23 deployment.go:223] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E0726 13:27:46.144854      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:27:47.145087      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:27:47.789916 23 deployment.go:779] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0726 13:27:47.794372 23 deployment.go:784] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0726 13:27:47.807962 23 deployment.go:632] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8022",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9117c1d5-5d57-436e-bc89-d6245ca0d569",
      ResourceVersion: (string) (len=5) "33045",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889133265,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889133265,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889133266,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889133265,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889133265,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889133266,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889133265,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-6ff565599d\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0726 13:27:47.813323 23 deployment.go:40] New ReplicaSet "test-rolling-update-deployment-6ff565599d" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8022",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "35f7a80b-00e2-4e89-9c7e-4d2adcaffd87",
      ResourceVersion: (string) (len=5) "33035",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889133265,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "9117c1d5-5d57-436e-bc89-d6245ca0d569",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889133265,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 31 31 37 63 31  64 35 2d 35 64 35 37 2d  |\"9117c1d5-5d57-|
              00000120  34 33 36 65 2d 62 63 38  39 2d 64 36 32 34 35 63  |436e-bc89-d6245c|
              00000130  61 30 64 35 36 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |a0d569\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889133266,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0726 13:27:47.813827 23 deployment.go:45] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0726 13:27:47.814026 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8022",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "093267c0-0bcb-46e3-9851-0a864a9fc060",
      ResourceVersion: (string) (len=5) "33044",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889133260,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "9117c1d5-5d57-436e-bc89-d6245ca0d569",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889133260,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889133266,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 39 31 31 37 63 31 64  |"uid\":\"9117c1d|
              000000b0  35 2d 35 64 35 37 2d 34  33 36 65 2d 62 63 38 39  |5-5d57-436e-bc89|
              000000c0  2d 64 36 32 34 35 63 61  30 64 35 36 39 5c 22 7d  |-d6245ca0d569\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889133266,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0726 13:27:47.820274 23 deployment.go:68] Pod "test-rolling-update-deployment-6ff565599d-978x2" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-6ff565599d-978x2",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-6ff565599d-",
      Namespace: (string) (len=15) "deployment-8022",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "eb8c7b4d-ce3d-49e0-b98b-fbd6c9b0b00f",
      ResourceVersion: (string) (len=5) "33034",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889133265,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
          UID: (types.UID) (len=36) "35f7a80b-00e2-4e89-9c7e-4d2adcaffd87",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889133265,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 35  66 37 61 38 30 62 2d 30  |d\":\"35f7a80b-0|
              00000090  30 65 32 2d 34 65 38 39  2d 39 63 37 65 2d 34 64  |0e2-4e89-9c7e-4d|
              000000a0  32 61 64 63 61 66 66 64  38 37 5c 22 7d 22 3a 7b  |2adcaffd87\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889133266,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 33  2e 33 30 5c 22 7d 22 3a  |2.168.13.30\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l9hbq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l9hbq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-72-233",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889133266,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889133265,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889133266,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889133266,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889133265,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.72.233",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.72.233"
        }
      },
      PodIP: (string) (len=13) "192.168.13.30",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.13.30"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889133265,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889133266,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://58b33bb78766d7d9d143618a11f0bb0ee626151058bc7eaf877e32235cb8ddf2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-l9hbq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0726 13:27:47.821304 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8022" for this suite. @ 07/26/25 13:27:47.826
• [7.113 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 07/26/25 13:27:47.84
  I0726 13:27:47.841001 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename projected @ 07/26/25 13:27:47.841
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:27:47.855
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:27:47.857
  STEP: Creating secret with name projected-secret-test-4ca42c34-921f-4898-b185-ed768b931255 @ 07/26/25 13:27:47.859
  STEP: Creating a pod to test consume secrets @ 07/26/25 13:27:47.866
  E0726 13:27:48.145626      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:27:49.145736      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:27:50.146619      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:27:51.146745      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 13:27:51.893
  I0726 13:27:51.898750 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod pod-projected-secrets-9bee7839-bcf9-4470-a8ed-0cab3edccada container secret-volume-test: <nil>
  STEP: delete the pod @ 07/26/25 13:27:51.907
  I0726 13:27:51.931201 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2197" for this suite. @ 07/26/25 13:27:51.935
• [4.105 seconds]
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 07/26/25 13:27:51.946
  I0726 13:27:51.946200 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename cronjob @ 07/26/25 13:27:51.946
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:27:51.957
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:27:51.959
  STEP: Creating a ReplaceConcurrent cronjob @ 07/26/25 13:27:51.961
  STEP: Ensuring a job is scheduled @ 07/26/25 13:27:51.966
  E0726 13:27:52.147782      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:27:53.147790      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:27:54.147890      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:27:55.147983      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:27:56.148532      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:27:57.148598      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:27:58.148750      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:27:59.148821      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:00.149496      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:01.149577      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 07/26/25 13:28:01.971
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 07/26/25 13:28:01.975
  STEP: Ensuring the job is replaced with a new one @ 07/26/25 13:28:01.98
  E0726 13:28:02.150229      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:03.150873      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:04.151574      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:05.151790      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:06.152012      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:07.152101      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:08.152594      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:09.152788      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:10.153846      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:11.154376      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:12.155331      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:13.155428      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:14.155524      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:15.155720      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:16.156478      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:17.156826      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:18.157533      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:19.157828      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:20.157939      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:21.158054      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:22.158840      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:23.159833      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:24.160320      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:25.160409      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:26.161181      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:27.161957      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:28.162121      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:29.162853      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:30.163397      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:31.163706      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:32.164737      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:33.165739      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:34.166725      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:35.166907      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:36.167026      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:37.167304      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:38.167751      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:39.167942      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:40.168498      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:41.169436      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:42.169506      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:43.169595      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:44.170210      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:45.170862      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:46.170937      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:47.171842      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:48.172254      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:49.172434      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:50.172512      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:51.172728      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:52.173456      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:53.173614      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:54.173685      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:55.173881      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:56.174717      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:57.174791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:58.175451      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:28:59.175665      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:29:00.176365      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:29:01.176551      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 07/26/25 13:29:01.985
  I0726 13:29:01.994886 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1885" for this suite. @ 07/26/25 13:29:02
• [70.067 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:423
  STEP: Creating a kubernetes client @ 07/26/25 13:29:02.013
  I0726 13:29:02.013346 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename configmap @ 07/26/25 13:29:02.013
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:29:02.025
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:29:02.027
  STEP: Creating configMap with name configmap-test-volume-2a067416-b7c1-4bfd-a207-793a200cf167 @ 07/26/25 13:29:02.029
  STEP: Creating a pod to test consume configMaps @ 07/26/25 13:29:02.036
  E0726 13:29:02.176860      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:29:03.177870      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 13:29:04.056
  I0726 13:29:04.060811 23 output.go:207] Trying to get logs from node ip-172-31-72-233 pod pod-configmaps-9f099e76-5621-418f-9a14-072686badc9a container configmap-volume-test: <nil>
  STEP: delete the pod @ 07/26/25 13:29:04.073
  I0726 13:29:04.097433 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5760" for this suite. @ 07/26/25 13:29:04.102
• [2.098 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 07/26/25 13:29:04.111
  I0726 13:29:04.111649 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename disruption @ 07/26/25 13:29:04.112
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:29:04.125
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:29:04.127
  STEP: Waiting for the pdb to be processed @ 07/26/25 13:29:04.137
  E0726 13:29:04.178169      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:29:05.178251      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 07/26/25 13:29:06.169
  I0726 13:29:06.176012 23 disruption.go:691] running pods: 0 < 3
  E0726 13:29:06.179223      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:29:07.179279      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:29:08.179072 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0726 13:29:08.179225      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "disruption-7170" for this suite. @ 07/26/25 13:29:08.183
• [4.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:693
  STEP: Creating a kubernetes client @ 07/26/25 13:29:08.193
  I0726 13:29:08.193063 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename security-context-test @ 07/26/25 13:29:08.193
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:29:08.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:29:08.209
  E0726 13:29:09.179387      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:29:10.179457      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:29:11.179863      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:29:12.179926      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:29:12.249179 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-9718" for this suite. @ 07/26/25 13:29:12.253
• [4.069 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 07/26/25 13:29:12.261
  I0726 13:29:12.261804 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename field-validation @ 07/26/25 13:29:12.262
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:29:12.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:29:12.279
  I0726 13:29:12.281275 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  W0726 13:29:12.281717      23 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc0047b9080 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0726 13:29:13.180047      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:29:14.180120      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:29:14.813138      23 warnings.go:110] "Warning: unknown field \"alpha\""
  I0726 13:29:14.813158      23 warnings.go:110] "Warning: unknown field \"beta\""
  I0726 13:29:14.813163      23 warnings.go:110] "Warning: unknown field \"delta\""
  I0726 13:29:14.813169      23 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0726 13:29:14.813174      23 warnings.go:110] "Warning: unknown field \"gamma\""
  E0726 13:29:15.180239      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:29:15.361673 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2706" for this suite. @ 07/26/25 13:29:15.366
• [3.114 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:175
  STEP: Creating a kubernetes client @ 07/26/25 13:29:15.375
  I0726 13:29:15.375464 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename configmap @ 07/26/25 13:29:15.375
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:29:15.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:29:15.39
  STEP: Creating configMap with name configmap-test-upd-85122205-9f96-46f1-ba7c-e50f4b69b09a @ 07/26/25 13:29:15.467
  STEP: Creating the pod @ 07/26/25 13:29:15.473
  E0726 13:29:16.180342      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:29:17.180407      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 07/26/25 13:29:17.492
  STEP: Waiting for pod with binary data @ 07/26/25 13:29:17.501
  I0726 13:29:17.510355 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4709" for this suite. @ 07/26/25 13:29:17.515
• [2.147 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:920
  STEP: Creating a kubernetes client @ 07/26/25 13:29:17.522
  I0726 13:29:17.522616 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename statefulset @ 07/26/25 13:29:17.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:29:17.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:29:17.536
  STEP: Creating service test in namespace statefulset-4426 @ 07/26/25 13:29:17.537
  STEP: Creating statefulset ss in namespace statefulset-4426 @ 07/26/25 13:29:17.543
  I0726 13:29:17.555899 23 wait.go:44] Found 0 stateful pods, waiting for 1
  E0726 13:29:18.180553      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:29:19.180602      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:29:20.180803      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:29:21.180872      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:29:22.180993      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:29:23.181054      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:29:24.181185      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:29:25.181264      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:29:26.181386      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:29:27.181459      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:29:27.559931 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 07/26/25 13:29:27.568
  STEP: updating a scale subresource @ 07/26/25 13:29:27.573
  STEP: verifying the statefulset Spec.Replicas was modified @ 07/26/25 13:29:27.579
  STEP: Patch a scale subresource @ 07/26/25 13:29:27.583
  STEP: verifying the statefulset Spec.Replicas was modified @ 07/26/25 13:29:27.592
  I0726 13:29:27.596183 23 statefulset.go:138] Deleting all statefulset in ns statefulset-4426
  I0726 13:29:27.600412 23 rest.go:153] Scaling statefulset ss to 0
  E0726 13:29:28.181589      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:29:29.181699      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:29:30.181902      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:29:31.181996      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:29:32.182165      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:29:33.182268      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:29:34.182336      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:29:35.182464      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:29:36.182549      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:29:37.182712      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:29:37.620414 23 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0726 13:29:37.624317 23 rest.go:91] Deleting statefulset ss
  I0726 13:29:37.643517 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4426" for this suite. @ 07/26/25 13:29:37.649
• [20.135 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 07/26/25 13:29:37.658
  I0726 13:29:37.658196 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename limitrange @ 07/26/25 13:29:37.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:29:37.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:29:37.672
  STEP: Creating LimitRange "e2e-limitrange-xw9lg" in namespace "limitrange-1425" @ 07/26/25 13:29:37.674
  STEP: Creating another limitRange in another namespace @ 07/26/25 13:29:37.681
  I0726 13:29:37.691116 23 limit_range.go:299] Namespace "e2e-limitrange-xw9lg-63" created
  I0726 13:29:37.691138 23 limit_range.go:300] Creating LimitRange "e2e-limitrange-xw9lg" in namespace "e2e-limitrange-xw9lg-63"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-xw9lg" @ 07/26/25 13:29:37.697
  I0726 13:29:37.701464 23 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-xw9lg" in "limitrange-1425" namespace @ 07/26/25 13:29:37.701
  I0726 13:29:37.707505 23 limit_range.go:335] LimitRange "e2e-limitrange-xw9lg" has been patched
  STEP: Delete LimitRange "e2e-limitrange-xw9lg" by Collection with labelSelector: "e2e-limitrange-xw9lg=patched" @ 07/26/25 13:29:37.707
  STEP: Confirm that the limitRange "e2e-limitrange-xw9lg" has been deleted @ 07/26/25 13:29:37.718
  I0726 13:29:37.718756 23 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0726 13:29:37.723260 23 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-xw9lg=patched"
  I0726 13:29:37.723281 23 limit_range.go:344] LimitRange "e2e-limitrange-xw9lg" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-xw9lg" @ 07/26/25 13:29:37.723
  I0726 13:29:37.726751 23 limit_range.go:350] Found 1 limitRange
  I0726 13:29:37.726834 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-1425" for this suite. @ 07/26/25 13:29:37.749
  STEP: Destroying namespace "e2e-limitrange-xw9lg-63" for this suite. @ 07/26/25 13:29:37.758
• [0.110 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:275
  STEP: Creating a kubernetes client @ 07/26/25 13:29:37.767
  I0726 13:29:37.767896 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename namespaces @ 07/26/25 13:29:37.768
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:29:37.778
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:29:37.781
  STEP: creating a Namespace @ 07/26/25 13:29:37.783
  STEP: patching the Namespace @ 07/26/25 13:29:37.796
  STEP: get the Namespace and ensuring it has the label @ 07/26/25 13:29:37.803
  I0726 13:29:37.807913 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2534" for this suite. @ 07/26/25 13:29:37.85
  STEP: Destroying namespace "nspatchtest-1ae289d6-ffd9-46e1-a9f4-06647096ce06-2004" for this suite. @ 07/26/25 13:29:37.858
• [0.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 07/26/25 13:29:37.866
  I0726 13:29:37.866318 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename prestop @ 07/26/25 13:29:37.866
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:29:37.88
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:29:37.882
  STEP: Creating server pod server in namespace prestop-7555 @ 07/26/25 13:29:37.884
  STEP: Waiting for pods to come up. @ 07/26/25 13:29:37.896
  E0726 13:29:38.183537      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:29:39.183653      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-7555 @ 07/26/25 13:29:39.91
  E0726 13:29:40.184093      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:29:41.184907      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 07/26/25 13:29:41.927
  E0726 13:29:42.185007      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:29:43.185167      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:29:44.185400      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:29:45.185507      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:29:46.185585      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:29:46.946302 23 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 07/26/25 13:29:46.946
  I0726 13:29:46.964452 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-7555" for this suite. @ 07/26/25 13:29:46.97
• [9.113 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 07/26/25 13:29:46.979
  I0726 13:29:46.979407 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename security-context @ 07/26/25 13:29:46.979
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:29:46.992
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:29:46.993
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 07/26/25 13:29:46.995
  E0726 13:29:47.186620      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:29:48.186886      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:29:49.187223      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:29:50.187828      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 13:29:51.02
  I0726 13:29:51.025156 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod security-context-0a3b613b-18c5-4608-826d-854817b21910 container test-container: <nil>
  STEP: delete the pod @ 07/26/25 13:29:51.034
  I0726 13:29:51.056585 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-5923" for this suite. @ 07/26/25 13:29:51.061
• [4.090 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 07/26/25 13:29:51.069
  I0726 13:29:51.069795 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename secrets @ 07/26/25 13:29:51.07
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:29:51.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:29:51.084
  STEP: Creating secret with name secret-test-c7d3990a-200a-44f0-a2f9-15c5a79cd2a9 @ 07/26/25 13:29:51.086
  STEP: Creating a pod to test consume secrets @ 07/26/25 13:29:51.091
  E0726 13:29:51.188081      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:29:52.188287      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:29:53.188565      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:29:54.188688      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 13:29:55.116
  I0726 13:29:55.120302 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod pod-secrets-fb35c19a-227f-4094-9b25-aebf1f8292a2 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/26/25 13:29:55.13
  I0726 13:29:55.177819 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6281" for this suite. @ 07/26/25 13:29:55.182
  E0726 13:29:55.189372      23 retrywatcher.go:169] "Watch failed" err="context canceled"
• [4.132 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should apply changes to a volumeattachment status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:180
  STEP: Creating a kubernetes client @ 07/26/25 13:29:55.202
  I0726 13:29:55.202138 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename volumeattachment @ 07/26/25 13:29:55.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:29:55.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:29:55.227
  STEP: Create VolumeAttachment "va-e2e-f4r9w" on node "ip-172-31-77-91" @ 07/26/25 13:29:55.283
  STEP: Patch VolumeAttachment "va-e2e-f4r9w" on node "ip-172-31-77-91" @ 07/26/25 13:29:55.289
  STEP: Reading "va-e2e-f4r9w" Status @ 07/26/25 13:29:55.296
  STEP: Patching "va-e2e-f4r9w" Status @ 07/26/25 13:29:55.303
  I0726 13:29:55.307519 23 volume_attachment.go:224] "va-e2e-f4r9w" Status.Attached: true
  STEP: Updating "va-e2e-f4r9w" Status @ 07/26/25 13:29:55.307
  I0726 13:29:55.317192 23 volume_attachment.go:240] "va-e2e-f4r9w" Status.Attached: false
  STEP: Delete VolumeAttachment "va-e2e-f4r9w" on node "ip-172-31-77-91" @ 07/26/25 13:29:55.317
  STEP: Confirm deletion of VolumeAttachment "va-e2e-f4r9w" on node "ip-172-31-77-91" @ 07/26/25 13:29:55.324
  I0726 13:29:55.328760 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-560" for this suite. @ 07/26/25 13:29:55.384
• [0.192 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:129
  STEP: Creating a kubernetes client @ 07/26/25 13:29:55.394
  I0726 13:29:55.394380 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename emptydir @ 07/26/25 13:29:55.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:29:55.413
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:29:55.415
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 07/26/25 13:29:55.416
  E0726 13:29:56.189848      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:29:57.189916      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:29:58.190028      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:29:59.190102      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 13:29:59.448
  I0726 13:29:59.452158 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod pod-f483d7ea-6985-4c2d-b72f-a1fb0b2869f0 container test-container: <nil>
  STEP: delete the pod @ 07/26/25 13:29:59.46
  I0726 13:29:59.481748 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1454" for this suite. @ 07/26/25 13:29:59.487
• [4.103 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 07/26/25 13:29:59.497
  I0726 13:29:59.497079 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename container-probe @ 07/26/25 13:29:59.497
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:29:59.509
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:29:59.511
  STEP: Creating pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411 @ 07/26/25 13:29:59.513
  E0726 13:30:00.190873      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:30:01.190965      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/26/25 13:30:01.533
  I0726 13:30:01.538126 23 container_probe.go:1748] Initial restart count of pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 is 0
  I0726 13:30:01.542768 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:30:02.191067      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:30:03.191169      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:30:03.547944 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:30:04.191830      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:30:05.191938      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:30:05.553426 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:30:06.192116      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:30:07.192316      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:30:07.559356 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:30:08.193110      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:30:09.193230      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:30:09.564600 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:30:10.193314      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:30:11.193449      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:30:11.570525 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:30:12.194041      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:30:13.194165      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:30:13.576479 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:30:14.194252      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:30:15.194344      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:30:15.581461 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:30:16.195239      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:30:17.195399      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:30:17.586899 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:30:18.195470      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:30:19.195703      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:30:19.592565 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:30:20.195818      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:30:21.196017      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:30:21.598820 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:30:22.196154      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:30:23.196242      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:30:23.605102 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:30:24.196749      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:30:25.196949      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:30:25.610816 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:30:26.197061      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:30:27.197131      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:30:27.617196 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:30:28.197930      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:30:29.198009      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:30:29.623005 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:30:30.198127      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:30:31.198215      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:30:31.628140 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:30:32.198732      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:30:33.199438      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:30:33.633833 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:30:34.199524      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:30:35.199595      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:30:35.639651 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:30:36.199795      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:30:37.200826      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:30:37.645340 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:30:38.200939      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:30:39.201053      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:30:39.650318 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:30:40.201850      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:30:41.202859      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:30:41.656925 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:30:42.203620      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:30:43.203766      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:30:43.661818 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:30:44.204568      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:30:45.204874      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:30:45.667442 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:30:46.205091      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:30:47.205183      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:30:47.673739 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:30:48.205314      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:30:49.205399      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:30:49.677972 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:30:50.205566      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:30:51.205792      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:30:51.684904 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:30:52.206600      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:30:53.206694      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:30:53.689682 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:30:54.207278      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:30:55.207431      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:30:55.695783 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:30:56.207486      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:30:57.207692      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:30:57.701884 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:30:58.208514      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:30:59.208736      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:30:59.706736 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:31:00.208816      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:31:01.208891      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:31:01.712139 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:31:02.209448      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:31:03.209581      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:31:03.719598 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:31:04.209850      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:31:05.209918      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:31:05.725818 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:31:06.210035      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:31:07.210106      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:31:07.732781 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:31:08.210217      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:31:09.210282      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:31:09.738276 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:31:10.210798      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:31:11.210871      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:31:11.744455 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:31:12.210990      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:31:13.211148      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:31:13.749485 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:31:14.211850      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:31:15.212085      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:31:15.756073 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:31:16.212688      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:31:17.212833      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:31:17.760596 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:31:18.213854      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:31:19.213934      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:31:19.766611 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:31:20.214074      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:31:21.214167      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:31:21.772456 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:31:22.214879      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:31:23.215874      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:31:23.777955 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:31:24.216324      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:31:25.216407      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:31:25.783491 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:31:26.216844      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:31:27.217038      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:31:27.789984 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:31:28.217478      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:31:29.217562      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:31:29.795676 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:31:30.217948      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:31:31.218016      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:31:31.802902 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:31:32.218231      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:31:33.218325      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:31:33.808386 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:31:34.218871      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:31:35.218964      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:31:35.814451 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:31:36.219999      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:31:37.220091      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:31:37.821319 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:31:38.220931      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:31:39.221214      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:31:39.826500 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:31:40.222063      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:31:41.222271      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:31:41.831695 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:31:42.223177      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:31:43.223243      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:31:43.837874 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:31:44.223505      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:31:45.223728      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:31:45.842905 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:31:46.224582      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:31:47.225612      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:31:47.848403 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:31:48.225842      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:31:49.226026      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:31:49.853582 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:31:50.226847      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:31:51.226933      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:31:51.858914 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:31:52.227397      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:31:53.227501      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:31:53.865762 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:31:54.228210      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:31:55.228323      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:31:55.870447 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:31:56.229033      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:31:57.229121      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:31:57.875961 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:31:58.229309      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:31:59.229859      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:31:59.881552 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:32:00.230825      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:32:01.230940      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:32:01.886737 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:32:02.231146      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:32:03.231352      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:32:03.891814 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:32:04.232336      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:32:05.232450      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:32:05.897960 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:32:06.233266      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:32:07.233363      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:32:07.902869 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:32:08.234091      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:32:09.234176      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:32:09.909981 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:32:10.234324      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:32:11.234835      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:32:11.914669 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:32:12.234920      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:32:13.235015      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:32:13.919701 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:32:14.235882      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:32:15.235971      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:32:15.926794 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:32:16.236063      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:32:17.236830      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:32:17.932537 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:32:18.236977      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:32:19.237869      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:32:19.937606 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:32:20.238856      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:32:21.238953      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:32:21.944298 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:32:22.239626      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:32:23.239770      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:32:23.949581 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:32:24.239869      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:32:25.240826      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:32:25.954959 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:32:26.241276      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:32:27.241403      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:32:27.960794 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:32:28.242226      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:32:29.242889      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:32:29.967497 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:32:30.243934      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:32:31.244822      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:32:31.973483 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:32:32.245820      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:32:33.246859      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:32:33.978890 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:32:34.247236      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:32:35.247417      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:32:35.985259 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:32:36.247586      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:32:37.247755      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:32:37.989697 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:32:38.247940      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:32:39.250806      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:32:39.996187 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:32:40.251600      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:32:41.251826      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:32:42.002332 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:32:42.252714      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:32:43.253709      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:32:44.007581 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:32:44.253764      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:32:45.254139      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:32:46.013930 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:32:46.254304      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:32:47.254884      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:32:48.020855 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:32:48.255155      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:32:49.255910      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:32:50.026623 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:32:50.256931      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:32:51.257043      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:32:52.032951 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:32:52.257164      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:32:53.257279      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:32:54.037493 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:32:54.257883      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:32:55.257975      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:32:56.043440 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:32:56.258758      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:32:57.258851      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:32:58.049226 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:32:58.259587      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:32:59.259879      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:33:00.054625 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:33:00.260875      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:33:01.260987      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:33:02.061026 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:33:02.261096      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:33:03.261302      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:33:04.067557 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:33:04.261922      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:33:05.262023      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:33:06.072226 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:33:06.262536      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:33:07.262797      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:33:08.077823 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:33:08.262894      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:33:09.263841      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:33:10.082940 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:33:10.264285      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:33:11.264937      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:33:12.088516 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:33:12.265758      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:33:13.265867      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:33:14.094236 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:33:14.266502      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:33:15.266703      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:33:16.098936 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:33:16.267278      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:33:17.267458      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:33:18.104148 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:33:18.268498      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:33:19.269434      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:33:20.110219 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:33:20.270434      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:33:21.270577      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:33:22.114937 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:33:22.271190      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:33:23.271862      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:33:24.120533 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:33:24.272942      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:33:25.273105      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:33:26.126906 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:33:26.273221      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:33:27.273936      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:33:28.132098 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:33:28.274406      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:33:29.274489      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:33:30.138548 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:33:30.274898      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:33:31.275076      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:33:32.144019 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:33:32.275290      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:33:33.275941      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:33:34.150152 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:33:34.276467      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:33:35.276700      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:33:36.156419 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:33:36.277708      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:33:37.277806      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:33:38.161548 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:33:38.278761      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:33:39.278890      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:33:40.167337 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:33:40.279593      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:33:41.279756      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:33:42.173737 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:33:42.279848      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:33:43.280852      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:33:44.178932 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:33:44.281088      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:33:45.281188      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:33:46.184843 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:33:46.282142      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:33:47.282325      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:33:48.191331 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:33:48.282598      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:33:49.282670      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:33:50.197966 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:33:50.283169      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:33:51.283347      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:33:52.202980 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:33:52.284128      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:33:53.284222      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:33:54.208876 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:33:54.285011      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:33:55.285098      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:33:56.216273 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:33:56.285409      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:33:57.285601      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:33:58.220798 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:33:58.286157      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:33:59.286372      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:34:00.226143 23 container_probe.go:1758] Get pod liveness-a3e42373-70fb-4389-84c4-3e4325672541 in namespace container-probe-1411
  E0726 13:34:00.287297      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:34:01.287547      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 07/26/25 13:34:02.226
  I0726 13:34:02.247811 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1411" for this suite. @ 07/26/25 13:34:02.252
• [242.763 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 07/26/25 13:34:02.259
  I0726 13:34:02.259936 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename chunking @ 07/26/25 13:34:02.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:34:02.274
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:34:02.276
  STEP: creating a large number of resources @ 07/26/25 13:34:02.279
  E0726 13:34:02.287960      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:34:03.288117      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:34:04.289062      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:34:05.289584      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:34:06.289723      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:34:07.290722      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:34:08.291283      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:34:09.291689      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:34:10.292057      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:34:11.292746      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:34:12.293250      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:34:13.294224      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:34:14.294754      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:34:15.295104      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:34:16.295720      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:34:17.296400      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:34:18.297231      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:34:19.298211      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the first page @ 07/26/25 13:34:19.97
  I0726 13:34:20.016018 23 chunking.go:163] Retrieved 40/40 results with rv 34994 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ5OTQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ
  STEP: retrieving the second page until the token expires @ 07/26/25 13:34:20.016
  E0726 13:34:20.299262      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:34:21.299324      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:34:22.299504      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:34:23.299559      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:34:24.299653      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:34:25.299786      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:34:26.299904      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:34:27.299963      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:34:28.300054      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:34:29.300137      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:34:30.300824      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:34:31.301033      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:34:32.302023      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:34:33.302220      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:34:34.302432      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:34:35.302551      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:34:36.302764      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:34:37.302995      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:34:38.303839      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:34:39.304026      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:34:40.023241 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ5OTQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0726 13:34:40.304679      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:34:41.304871      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:34:42.305055      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:34:43.305179      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:34:44.305365      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:34:45.305720      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:34:46.305914      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:34:47.306104      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:34:48.306216      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:34:49.306859      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:34:50.307069      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:34:51.307275      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:34:52.307582      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:34:53.307756      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:34:54.307949      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:34:55.308050      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:34:56.308243      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:34:57.308342      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:34:58.309323      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:34:59.309414      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:35:00.022111 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ5OTQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0726 13:35:00.309587      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:01.309781      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:02.309866      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:03.309944      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:04.310835      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:05.311840      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:06.312027      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:07.312211      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:08.312323      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:09.312567      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:10.313493      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:11.313708      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:12.313892      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:13.314137      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:14.314844      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:15.315846      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:16.316042      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:17.316261      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:18.316392      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:19.316602      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:35:20.022292 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ5OTQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0726 13:35:20.317585      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:21.317795      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:22.317985      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:23.318841      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:24.319855      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:25.320835      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:26.321827      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:27.322002      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:28.322101      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:29.322296      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:30.322520      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:31.322756      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:32.322802      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:33.322918      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:34.323118      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:35.323337      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:36.323559      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:37.323779      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:38.323870      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:39.324079      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:35:40.023218 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ5OTQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0726 13:35:40.324372      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:41.324572      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:42.324769      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:43.324876      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:44.325018      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:45.325911      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:46.326843      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:47.327850      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:48.328126      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:49.328289      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:50.328829      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:51.329841      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:52.330871      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:53.331879      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:54.332107      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:55.332285      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:56.332470      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:57.332681      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:58.332773      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:35:59.332975      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:36:00.022257 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ5OTQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0726 13:36:00.333710      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:01.333903      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:02.334097      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:03.334289      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:04.334477      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:05.334707      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:06.334803      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:07.335015      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:08.335118      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:09.335959      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:10.336083      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:11.336827      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:12.336966      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:13.337127      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:14.337319      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:15.337508      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:16.337625      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:17.338537      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:18.338680      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:19.339282      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:36:20.023965 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ5OTQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0726 13:36:20.340096      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:21.340188      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:22.340883      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:23.340990      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:24.341177      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:25.341286      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:26.341520      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:27.341684      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:28.341787      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:29.342839      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:30.343490      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:31.343765      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:32.343965      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:33.344153      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:34.344374      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:35.344577      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:36.344772      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:37.345003      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:38.345205      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:39.345402      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:36:40.022597 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ5OTQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0726 13:36:40.345927      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:41.346037      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:42.346221      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:43.346361      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:44.346612      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:45.346760      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:46.346783      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:47.346970      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:48.347149      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:49.347341      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:50.347582      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:51.347688      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:52.347874      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:53.347975      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:54.348154      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:55.348894      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:56.348991      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:57.349203      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:58.349830      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:36:59.350834      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:37:00.022347 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ5OTQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0726 13:37:00.351731      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:01.351769      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:02.351961      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:03.352179      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:04.352359      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:05.352549      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:06.352661      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:07.352842      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:08.352948      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:09.353124      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:10.354020      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:11.354205      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:12.354399      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:13.354522      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:14.354762      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:15.354941      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:16.355198      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:17.355380      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:18.355573      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:19.355788      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:37:20.023115 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ5OTQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0726 13:37:20.356526      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:21.356735      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:22.356841      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:23.356991      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:24.357819      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:25.357918      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:26.358017      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:27.359138      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:28.359833      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:29.359933      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:30.360828      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:31.361824      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:32.362011      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:33.362109      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:34.362300      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:35.362506      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:36.362723      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:37.362911      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:38.363203      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:39.363445      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:37:40.022711 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ5OTQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0726 13:37:40.364039      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:41.364177      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:42.364456      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:43.364596      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:44.364977      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:45.365090      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:46.365286      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:47.365511      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:48.365838      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:49.365958      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:50.366050      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:51.366170      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:52.366360      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:53.366514      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:54.366753      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:55.366945      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:56.367265      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:57.367453      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:58.367602      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:37:59.367884      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:38:00.021938 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ5OTQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0726 13:38:00.368575      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:01.369458      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:02.369964      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:03.370092      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:04.370825      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:05.371854      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:06.371949      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:07.372169      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:08.372273      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:09.372460      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:10.372830      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:11.373824      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:12.374004      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:13.374141      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:14.374477      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:15.374698      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:16.374913      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:17.375198      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:18.375428      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:19.375616      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:38:20.021707 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ5OTQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0726 13:38:20.375981      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:21.376941      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:22.377169      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:23.377307      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:24.377529      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:25.377830      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:26.378382      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:27.378485      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:28.378581      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:29.378851      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:30.378948      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:31.379845      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:32.379931      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:33.380047      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:34.380866      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:35.381838      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:36.382021      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:37.382214      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:38.382350      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:39.382542      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:38:40.022093 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ5OTQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0726 13:38:40.383453      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:41.383680      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:42.383867      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:43.384001      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:44.384240      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:45.384431      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:46.384690      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:47.384883      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:48.385001      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:49.385083      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:50.385823      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:51.385966      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:52.386168      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:53.386341      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:54.386558      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:55.386769      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:56.386970      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:57.387200      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:58.387468      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:38:59.387737      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:39:00.023300 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ5OTQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0726 13:39:00.388733      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:01.389279      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:02.390024      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:03.390831      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:04.391860      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:05.392855      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:06.393191      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:07.393871      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:08.394013      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:09.394203      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:10.394392      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:11.394586      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:12.394815      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:13.394897      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:14.395023      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:15.395288      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:16.395590      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:17.395797      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:18.395966      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:19.396155      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:39:20.021950 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ5OTQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0726 13:39:20.396402      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:21.396840      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:22.397049      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:23.397282      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:24.397499      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:25.397824      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:26.397953      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:27.398151      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:28.398280      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:29.398515      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:30.399592      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:31.399800      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:32.399938      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:33.400850      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:34.401850      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:35.402037      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:36.402322      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:37.402514      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:38.402736      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:39.402923      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:39:40.022737 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ5OTQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0726 13:39:40.403850      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:41.404042      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:42.404231      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:43.404405      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:44.404586      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:45.404835      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:46.405019      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:47.405284      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:48.405548      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:49.405527      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:50.405620      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:51.405776      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:52.405972      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:53.406134      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:54.406334      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:55.406931      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:56.407049      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:57.407259      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:58.407551      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:39:59.407763      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:40:00.022358 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ5OTQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0726 13:40:00.408551      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:40:01.408656      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:40:02.408777      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:40:03.409847      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:40:04.409942      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:40:05.410830      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:40:06.410942      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:40:07.411826      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:40:08.411889      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:40:09.412095      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:40:10.412841      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:40:11.413168      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:40:12.413375      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:40:13.413590      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:40:14.413807      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:40:15.414119      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:40:16.414202      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:40:17.414264      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:40:18.414400      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:40:19.414573      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:40:20.022321 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ5OTQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0726 13:40:20.414776      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:40:21.415006      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:40:22.415855      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:40:23.416006      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:40:24.416193      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:40:25.416393      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:40:26.416513      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:40:27.416717      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:40:28.416779      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:40:29.416999      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:40:30.417261      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:40:31.417457      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:40:32.417542      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:40:33.417699      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:40:34.417901      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:40:35.418105      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:40:36.418300      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:40:37.418499      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:40:38.418721      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:40:39.418782      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:40:40.022304 23 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0726 13:40:40.022338 23 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 07/26/25 13:40:40.022
  STEP: retrieving all remaining pages @ 07/26/25 13:40:40.027
  I0726 13:40:40.031655 23 chunking.go:221] Retrieved 40/40 results with rv 35774 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3NzQsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I0726 13:40:40.037101 23 chunking.go:221] Retrieved 40/40 results with rv 35774 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3NzQsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I0726 13:40:40.041340 23 chunking.go:221] Retrieved 40/40 results with rv 35774 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3NzQsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I0726 13:40:40.045864 23 chunking.go:221] Retrieved 40/40 results with rv 35774 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3NzQsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I0726 13:40:40.051201 23 chunking.go:221] Retrieved 40/40 results with rv 35774 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3NzQsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I0726 13:40:40.055677 23 chunking.go:221] Retrieved 40/40 results with rv 35774 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3NzQsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I0726 13:40:40.060388 23 chunking.go:221] Retrieved 40/40 results with rv 35774 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3NzQsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I0726 13:40:40.066134 23 chunking.go:221] Retrieved 40/40 results with rv 35774 and continue 
  I0726 13:40:40.066257 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-5433" for this suite. @ 07/26/25 13:40:40.071
• [397.821 seconds]
------------------------------
SSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 07/26/25 13:40:40.08
  I0726 13:40:40.080975 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename pod-network-test @ 07/26/25 13:40:40.081
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:40:40.094
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:40:40.097
  STEP: Performing setup for networking test in namespace pod-network-test-9318 @ 07/26/25 13:40:40.098
  STEP: creating a selector @ 07/26/25 13:40:40.098
  STEP: Creating the service pods in kubernetes @ 07/26/25 13:40:40.098
  I0726 13:40:40.098795 23 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0726 13:40:40.419301      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:40:41.419373      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:40:42.419722      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:40:43.419869      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:40:44.420184      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:40:45.420242      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:40:46.421074      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:40:47.421156      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:40:48.422156      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:40:49.422256      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:40:50.423074      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:40:51.423220      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:40:52.424321      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:40:53.424445      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 07/26/25 13:40:54.273
  E0726 13:40:54.424505      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:40:55.424955      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:40:56.311263 23 utils.go:802] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0726 13:40:56.311300 23 utils.go:495] Going to poll 192.168.58.245 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0726 13:40:56.314816 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.58.245 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9318 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0726 13:40:56.314839 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0726 13:40:56.314875 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9318/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.58.245+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0726 13:40:56.425950      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:40:57.357366 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0726 13:40:57.357412 23 utils.go:512] Found all 1 expected endpoints: [netserver-0]
  I0726 13:40:57.357424 23 utils.go:495] Going to poll 192.168.248.148 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0726 13:40:57.363101 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.248.148 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9318 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0726 13:40:57.363119 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0726 13:40:57.363156 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9318/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.248.148+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0726 13:40:57.426879      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:40:58.395753 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0726 13:40:58.395800 23 utils.go:512] Found all 1 expected endpoints: [netserver-1]
  I0726 13:40:58.395812 23 utils.go:495] Going to poll 192.168.13.37 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0726 13:40:58.400772 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.13.37 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9318 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0726 13:40:58.400792 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0726 13:40:58.400830 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9318/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.13.37+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0726 13:40:58.427469      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:40:59.427580      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:40:59.447010 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0726 13:40:59.447064 23 utils.go:512] Found all 1 expected endpoints: [netserver-2]
  I0726 13:40:59.447158 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9318" for this suite. @ 07/26/25 13:40:59.454
• [19.381 seconds]
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:811
  STEP: Creating a kubernetes client @ 07/26/25 13:40:59.462
  I0726 13:40:59.462410 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename statefulset @ 07/26/25 13:40:59.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:40:59.477
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:40:59.479
  STEP: Creating service test in namespace statefulset-3125 @ 07/26/25 13:40:59.481
  STEP: Looking for a node to schedule stateful set and pod @ 07/26/25 13:40:59.487
  STEP: Creating pod with conflicting port in namespace statefulset-3125 @ 07/26/25 13:40:59.555
  STEP: Waiting until pod test-pod will start running in namespace statefulset-3125 @ 07/26/25 13:40:59.568
  E0726 13:41:00.427780      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:41:01.427863      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-3125 @ 07/26/25 13:41:01.578
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-3125 @ 07/26/25 13:41:01.585
  I0726 13:41:01.607584 23 statefulset.go:884] Observed stateful pod in namespace: statefulset-3125, name: ss-0, uid: de6fbf1f-41b4-480d-a26a-8894da5bb843, status phase: Pending. Waiting for statefulset controller to delete.
  I0726 13:41:01.627303 23 statefulset.go:884] Observed stateful pod in namespace: statefulset-3125, name: ss-0, uid: de6fbf1f-41b4-480d-a26a-8894da5bb843, status phase: Failed. Waiting for statefulset controller to delete.
  I0726 13:41:01.648681 23 statefulset.go:884] Observed stateful pod in namespace: statefulset-3125, name: ss-0, uid: de6fbf1f-41b4-480d-a26a-8894da5bb843, status phase: Failed. Waiting for statefulset controller to delete.
  I0726 13:41:01.653063 23 statefulset.go:878] Observed delete event for stateful pod ss-0 in namespace statefulset-3125
  STEP: Removing pod with conflicting port in namespace statefulset-3125 @ 07/26/25 13:41:01.653
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-3125 and will be in running state @ 07/26/25 13:41:01.671
  E0726 13:41:02.428179      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:41:03.428316      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:41:03.682616 23 statefulset.go:138] Deleting all statefulset in ns statefulset-3125
  I0726 13:41:03.687315 23 rest.go:153] Scaling statefulset ss to 0
  E0726 13:41:04.428360      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:41:05.428448      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:41:06.428515      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:41:07.428668      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:41:08.428800      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:41:09.428868      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:41:10.428978      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:41:11.429046      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:41:12.429172      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:41:13.429238      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:41:13.709739 23 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0726 13:41:13.713876 23 rest.go:91] Deleting statefulset ss
  I0726 13:41:13.735965 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3125" for this suite. @ 07/26/25 13:41:13.741
• [14.288 seconds]
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 07/26/25 13:41:13.75
  I0726 13:41:13.750298 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename pods @ 07/26/25 13:41:13.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:41:13.763
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:41:13.765
  I0726 13:41:13.766785 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: creating the pod @ 07/26/25 13:41:13.767
  STEP: submitting the pod to kubernetes @ 07/26/25 13:41:13.767
  E0726 13:41:14.429351      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:41:15.429420      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:41:15.847076 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2059" for this suite. @ 07/26/25 13:41:15.852
• [2.114 seconds]
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:677
  STEP: Creating a kubernetes client @ 07/26/25 13:41:15.864
  I0726 13:41:15.864542 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename svcaccounts @ 07/26/25 13:41:15.865
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:41:15.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:41:15.88
  STEP: creating a ServiceAccount @ 07/26/25 13:41:15.881
  STEP: watching for the ServiceAccount to be added @ 07/26/25 13:41:15.889
  STEP: patching the ServiceAccount @ 07/26/25 13:41:15.89
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 07/26/25 13:41:15.896
  STEP: deleting the ServiceAccount @ 07/26/25 13:41:15.9
  I0726 13:41:15.921002 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1671" for this suite. @ 07/26/25 13:41:15.953
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:90
  STEP: Creating a kubernetes client @ 07/26/25 13:41:15.963
  I0726 13:41:15.963584 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename containers @ 07/26/25 13:41:15.964
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:41:15.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:41:15.977
  STEP: Creating a pod to test override all @ 07/26/25 13:41:15.984
  E0726 13:41:16.429980      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:41:17.430957      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:41:18.431915      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:41:19.432033      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 13:41:20.015
  I0726 13:41:20.020552 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod client-containers-169b79df-52bd-4c94-8f23-3424e1903fa2 container agnhost-container: <nil>
  STEP: delete the pod @ 07/26/25 13:41:20.04
  I0726 13:41:20.063721 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-5932" for this suite. @ 07/26/25 13:41:20.068
• [4.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:659
  STEP: Creating a kubernetes client @ 07/26/25 13:41:20.079
  I0726 13:41:20.079082 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename statefulset @ 07/26/25 13:41:20.079
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:41:20.09
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:41:20.092
  STEP: Creating service test in namespace statefulset-4091 @ 07/26/25 13:41:20.094
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 07/26/25 13:41:20.1
  STEP: Creating stateful set ss in namespace statefulset-4091 @ 07/26/25 13:41:20.106
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-4091 @ 07/26/25 13:41:20.114
  I0726 13:41:20.132685 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  E0726 13:41:20.432116      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:41:21.432786      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:41:22.432876      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:41:23.433024      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:41:24.433094      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:41:25.433304      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:41:26.433508      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:41:27.433627      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:41:28.433774      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:41:29.433903      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:41:30.120583 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 07/26/25 13:41:30.12
  I0726 13:41:30.125147 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=statefulset-4091 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0726 13:41:30.212946 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0726 13:41:30.212989 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0726 13:41:30.212996 23 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0726 13:41:30.217255 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0726 13:41:30.434676      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:41:31.434896      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:41:32.434969      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:41:33.435133      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:41:34.435241      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:41:35.435425      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:41:36.435509      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:41:37.435755      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:41:38.435949      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:41:39.436070      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:41:40.220084 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0726 13:41:40.220124 23 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0726 13:41:40.321177 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 9.99999982s
  E0726 13:41:40.436498      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:41:41.328969 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 8.91382055s
  E0726 13:41:41.437221      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:41:42.335295 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 7.906254163s
  E0726 13:41:42.437481      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:41:43.341739 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 6.899982302s
  E0726 13:41:43.438131      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:41:44.347414 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 5.893601883s
  E0726 13:41:44.438603      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:41:45.354200 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 4.887213951s
  E0726 13:41:45.439419      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:41:46.361012 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 3.881249751s
  E0726 13:41:46.440231      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:41:47.367409 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 2.873822221s
  E0726 13:41:47.440551      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:41:48.374296 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 1.868055591s
  E0726 13:41:48.440785      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:41:49.380275 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 861.111982ms
  E0726 13:41:49.441397      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-4091 @ 07/26/25 13:41:50.381
  I0726 13:41:50.388320 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=statefulset-4091 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0726 13:41:50.441685      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:41:50.466918 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0726 13:41:50.466959 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0726 13:41:50.466969 23 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0726 13:41:50.472392 23 wait.go:44] Found 1 stateful pods, waiting for 3
  E0726 13:41:51.441860      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:41:52.442594      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:41:53.442765      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:41:54.442981      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:41:55.443250      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:41:56.443379      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:41:57.443497      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:41:58.444003      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:41:59.444174      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:42:00.444359      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:42:00.473498 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0726 13:42:00.473533 23 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0726 13:42:00.473539 23 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 07/26/25 13:42:00.473
  STEP: Scale down will halt with unhealthy stateful pod @ 07/26/25 13:42:00.473
  I0726 13:42:00.483231 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=statefulset-4091 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0726 13:42:00.557418 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0726 13:42:00.557463 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0726 13:42:00.557473 23 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0726 13:42:00.557514 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=statefulset-4091 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0726 13:42:00.651541 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0726 13:42:00.651586 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0726 13:42:00.651596 23 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0726 13:42:00.651673 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=statefulset-4091 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0726 13:42:00.748094 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0726 13:42:00.748138 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0726 13:42:00.748148 23 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0726 13:42:00.748156 23 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0726 13:42:00.753682 23 wait.go:122] Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0726 13:42:01.444563      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:42:02.445616      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:42:03.445786      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:42:04.445878      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:42:05.446021      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:42:06.446216      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:42:07.446474      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:42:08.446675      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:42:09.446852      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:42:10.447033      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:42:10.757780 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0726 13:42:10.757813 23 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0726 13:42:10.757821 23 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0726 13:42:10.858496 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 9.999999805s
  E0726 13:42:11.447122      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:42:11.864918 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 8.909170163s
  E0726 13:42:12.447518      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:42:12.870884 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 7.903691835s
  E0726 13:42:13.448569      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:42:13.877855 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 6.896995965s
  E0726 13:42:14.449442      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:42:14.884338 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 5.889813346s
  E0726 13:42:15.449792      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:42:15.891288 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 4.883497892s
  E0726 13:42:16.450862      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:42:16.898569 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 3.87646455s
  E0726 13:42:17.451855      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:42:17.904439 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 2.869713983s
  E0726 13:42:18.452071      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:42:18.911394 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 1.863234581s
  E0726 13:42:19.452849      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:42:19.917810 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 856.446361ms
  E0726 13:42:20.453286      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-4091 @ 07/26/25 13:42:20.918
  I0726 13:42:20.924382 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=statefulset-4091 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0726 13:42:21.004584 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0726 13:42:21.004809 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0726 13:42:21.004820 23 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0726 13:42:21.004865 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=statefulset-4091 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0726 13:42:21.086777 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0726 13:42:21.086814 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0726 13:42:21.086823 23 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0726 13:42:21.086870 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=statefulset-4091 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0726 13:42:21.160957 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0726 13:42:21.160994 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0726 13:42:21.161003 23 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0726 13:42:21.161013 23 rest.go:153] Scaling statefulset ss to 0
  E0726 13:42:21.453435      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:42:22.453508      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:42:23.453760      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:42:24.453957      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:42:25.454170      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:42:26.454350      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:42:27.454492      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:42:28.454754      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:42:29.454962      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:42:30.455155      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 07/26/25 13:42:31.171
  I0726 13:42:31.171749 23 statefulset.go:138] Deleting all statefulset in ns statefulset-4091
  I0726 13:42:31.176926 23 rest.go:153] Scaling statefulset ss to 0
  I0726 13:42:31.185284 23 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0726 13:42:31.188864 23 rest.go:91] Deleting statefulset ss
  I0726 13:42:31.208531 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4091" for this suite. @ 07/26/25 13:42:31.214
• [71.143 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 07/26/25 13:42:31.222
  I0726 13:42:31.222290 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 07/26/25 13:42:31.222
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:42:31.235
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:42:31.237
  STEP: create the container to handle the HTTPGet hook request. @ 07/26/25 13:42:31.315
  E0726 13:42:31.455254      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:42:32.455411      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 07/26/25 13:42:33.344
  E0726 13:42:33.456168      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:42:34.456255      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 07/26/25 13:42:35.368
  STEP: delete the pod with lifecycle hook @ 07/26/25 13:42:35.384
  E0726 13:42:35.456562      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:42:36.456702      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:42:37.401986 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-2622" for this suite. @ 07/26/25 13:42:37.406
• [6.194 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:678
  STEP: Creating a kubernetes client @ 07/26/25 13:42:37.416
  I0726 13:42:37.416154 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename validating-admission-policy @ 07/26/25 13:42:37.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:42:37.429
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:42:37.431
  STEP: getting /apis @ 07/26/25 13:42:37.439
  STEP: getting /apis/admissionregistration.k8s.io @ 07/26/25 13:42:37.441
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 07/26/25 13:42:37.442
  STEP: creating @ 07/26/25 13:42:37.442
  E0726 13:42:37.456939      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: getting @ 07/26/25 13:42:37.46
  STEP: listing @ 07/26/25 13:42:37.463
  STEP: watching @ 07/26/25 13:42:37.468
  I0726 13:42:37.468437 23 validatingadmissionpolicy.go:773] starting watch
  STEP: patching @ 07/26/25 13:42:37.469
  STEP: updating @ 07/26/25 13:42:37.473
  I0726 13:42:37.483197 23 validatingadmissionpolicy.go:801] waiting for watch events with expected annotations
  STEP: deleting @ 07/26/25 13:42:37.483
  STEP: deleting a collection @ 07/26/25 13:42:37.498
  I0726 13:42:37.524776 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-7735" for this suite. @ 07/26/25 13:42:37.529
• [0.122 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 07/26/25 13:42:37.538
  I0726 13:42:37.538156 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename deployment @ 07/26/25 13:42:37.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:42:37.552
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:42:37.554
  I0726 13:42:37.566510 23 resource.go:81] Pod name rollover-pod: Found 0 pods out of 1
  E0726 13:42:38.457103      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:42:39.457194      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:42:40.457343      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:42:41.457421      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:42:42.457549      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:42:42.571567 23 resource.go:81] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/26/25 13:42:42.571
  I0726 13:42:42.571652 23 deployment.go:930] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E0726 13:42:43.457793      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:42:44.457909      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:42:44.576651 23 deployment.go:940] Creating deployment "test-rollover-deployment"
  I0726 13:42:44.586841 23 deployment.go:953] Make sure deployment "test-rollover-deployment" performs scaling operations
  E0726 13:42:45.457998      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:42:46.458090      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:42:46.596061 23 deployment.go:958] Check revision of new replica set for deployment "test-rollover-deployment"
  I0726 13:42:46.606552 23 deployment.go:962] Ensure that both replica sets have 1 created replica
  I0726 13:42:46.615247 23 deployment.go:971] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0726 13:42:46.624610 23 deployment.go:314] Updating deployment test-rollover-deployment
  I0726 13:42:46.624648 23 deployment.go:980] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E0726 13:42:47.458374      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:42:48.458468      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:42:48.636316 23 deployment.go:985] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0726 13:42:48.646149 23 deployment.go:989] Make sure deployment "test-rollover-deployment" is complete
  I0726 13:42:48.656064 23 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0726 13:42:48.656106 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.July, 26, 13, 42, 44, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 26, 13, 42, 44, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 26, 13, 42, 47, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 26, 13, 42, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0726 13:42:49.458802      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:42:50.459007      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:42:50.667028 23 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0726 13:42:50.667087 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.July, 26, 13, 42, 44, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 26, 13, 42, 44, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 26, 13, 42, 47, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 26, 13, 42, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0726 13:42:51.459787      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:42:52.459894      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:42:52.668155 23 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0726 13:42:52.668215 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.July, 26, 13, 42, 44, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 26, 13, 42, 44, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 26, 13, 42, 47, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 26, 13, 42, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0726 13:42:53.460849      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:42:54.460921      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:42:54.667120 23 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0726 13:42:54.667178 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.July, 26, 13, 42, 44, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 26, 13, 42, 44, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 26, 13, 42, 47, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 26, 13, 42, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0726 13:42:55.461852      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:42:56.461934      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:42:56.667909 23 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0726 13:42:56.667964 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.July, 26, 13, 42, 44, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 26, 13, 42, 44, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 26, 13, 42, 47, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 26, 13, 42, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0726 13:42:57.462037      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:42:58.462252      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:42:58.667609 23 deployment.go:95] 
  I0726 13:42:58.667672 23 deployment.go:993] Ensure that both old replica sets have no replicas
  I0726 13:42:58.680967 23 deployment.go:632] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3163",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "eaf03b31-3677-4e34-91dc-cc49258e4ec4",
      ResourceVersion: (string) (len=5) "37182",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889134164,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889134166,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889134177,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889134164,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889134164,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889134177,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889134164,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-7fb4c746bc\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0726 13:42:58.685665 23 deployment.go:40] New ReplicaSet "test-rollover-deployment-7fb4c746bc" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3163",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "69bc7385-be4d-414e-9714-5bfabd81740a",
      ResourceVersion: (string) (len=5) "37172",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889134166,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "eaf03b31-3677-4e34-91dc-cc49258e4ec4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889134166,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 61 66 30 33 62  33 31 2d 33 36 37 37 2d  |\"eaf03b31-3677-|
              00000120  34 65 33 34 2d 39 31 64  63 2d 63 63 34 39 32 35  |4e34-91dc-cc4925|
              00000130  38 65 34 65 63 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |8e4ec4\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889134177,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0726 13:42:58.686135 23 deployment.go:45] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0726 13:42:58.686432 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3163",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e6a01be1-e027-4e03-b8cd-977e57f9b6d6",
      ResourceVersion: (string) (len=5) "37181",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889134157,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "eaf03b31-3677-4e34-91dc-cc49258e4ec4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889134157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889134177,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  65 61 66 30 33 62 33 31  2d 33 36 37 37 2d 34 65  |eaf03b31-3677-4e|
              000000c0  33 34 2d 39 31 64 63 2d  63 63 34 39 32 35 38 65  |34-91dc-cc49258e|
              000000d0  34 65 63 34 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |4ec4\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889134177,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0726 13:42:58.687888 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-6f6c9688c5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3163",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5915034f-009b-4dec-ab5d-4422295ba350",
      ResourceVersion: (string) (len=5) "37132",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889134164,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "eaf03b31-3677-4e34-91dc-cc49258e4ec4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889134166,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 61 66 30 33 62  33 31 2d 33 36 37 37 2d  |\"eaf03b31-3677-|
              00000120  34 65 33 34 2d 39 31 64  63 2d 63 63 34 39 32 35  |4e34-91dc-cc4925|
              00000130  38 65 34 65 63 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |8e4ec4\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889134166,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0726 13:42:58.693852 23 deployment.go:68] Pod "test-rollover-deployment-7fb4c746bc-dpssq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-7fb4c746bc-dpssq",
      GenerateName: (string) (len=36) "test-rollover-deployment-7fb4c746bc-",
      Namespace: (string) (len=15) "deployment-3163",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6a3d1b49-76fa-43df-914d-a80bae94cb60",
      ResourceVersion: (string) (len=5) "37149",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889134166,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
          UID: (types.UID) (len=36) "69bc7385-be4d-414e-9714-5bfabd81740a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889134166,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 39  62 63 37 33 38 35 2d 62  |d\":\"69bc7385-b|
              00000090  65 34 64 2d 34 31 34 65  2d 39 37 31 34 2d 35 62  |e4d-414e-9714-5b|
              000000a0  66 61 62 64 38 31 37 34  30 61 5c 22 7d 22 3a 7b  |fabd81740a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889134167,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 35 38  2e 32 35 31 5c 22 7d 22  |2.168.58.251\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wkllh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wkllh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-16-254",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889134167,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889134166,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889134167,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889134167,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889134166,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.16.254",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.16.254"
        }
      },
      PodIP: (string) (len=14) "192.168.58.251",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.58.251"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889134166,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889134167,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://6e361b35b980f05f76cdb276eccf8d408646d7baae18fe240e003921ef7dce93",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wkllh",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0726 13:42:58.694901 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3163" for this suite. @ 07/26/25 13:42:58.699
• [21.173 seconds]
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 07/26/25 13:42:58.71
  I0726 13:42:58.710957 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename secrets @ 07/26/25 13:42:58.711
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:42:58.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:42:58.724
  STEP: Creating secret with name secret-test-map-8c6af94f-f70c-4ef6-a902-406a539ec6d7 @ 07/26/25 13:42:58.726
  STEP: Creating a pod to test consume secrets @ 07/26/25 13:42:58.731
  E0726 13:42:59.462370      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:43:00.462502      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:43:01.462791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:43:02.462867      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 13:43:02.761
  I0726 13:43:02.765319 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod pod-secrets-e0e29c6e-4491-43b0-9449-bcf69b330f2f container secret-volume-test: <nil>
  STEP: delete the pod @ 07/26/25 13:43:02.779
  I0726 13:43:02.803330 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9920" for this suite. @ 07/26/25 13:43:02.807
• [4.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:54
  STEP: Creating a kubernetes client @ 07/26/25 13:43:02.818
  I0726 13:43:02.818314 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename downward-api @ 07/26/25 13:43:02.818
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:43:02.83
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:43:02.831
  STEP: Creating a pod to test downward API volume plugin @ 07/26/25 13:43:02.832
  E0726 13:43:03.463674      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:43:04.463884      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:43:05.464670      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:43:06.464785      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 13:43:06.862
  I0726 13:43:06.866805 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod downwardapi-volume-af33fe5f-5f99-47fa-88a9-9e3f07ac21bc container client-container: <nil>
  STEP: delete the pod @ 07/26/25 13:43:06.875
  I0726 13:43:06.898685 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8407" for this suite. @ 07/26/25 13:43:06.904
• [4.094 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1726
  STEP: Creating a kubernetes client @ 07/26/25 13:43:06.912
  I0726 13:43:06.912741 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename kubectl @ 07/26/25 13:43:06.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:43:06.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:43:06.927
  I0726 13:43:06.929846 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-8441 version'
  I0726 13:43:06.964072 23 builder.go:146] stderr: ""
  I0726 13:43:06.964097 23 builder.go:147] stdout: "Client Version: v1.33.3\nKustomize Version: v5.6.0\nServer Version: v1.33.3\n"
  I0726 13:43:06.964253 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8441" for this suite. @ 07/26/25 13:43:07.005
• [0.105 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 07/26/25 13:43:07.017
  I0726 13:43:07.017530 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename endpointslice @ 07/26/25 13:43:07.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:43:07.029
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:43:07.031
  STEP: getting /apis @ 07/26/25 13:43:07.032
  STEP: getting /apis/discovery.k8s.io @ 07/26/25 13:43:07.034
  STEP: getting /apis/discovery.k8s.iov1 @ 07/26/25 13:43:07.035
  STEP: creating @ 07/26/25 13:43:07.036
  STEP: getting @ 07/26/25 13:43:07.05
  STEP: listing @ 07/26/25 13:43:07.054
  STEP: watching @ 07/26/25 13:43:07.058
  I0726 13:43:07.058044 23 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 07/26/25 13:43:07.058
  STEP: cluster-wide watching @ 07/26/25 13:43:07.063
  I0726 13:43:07.063352 23 endpointslice.go:459] starting watch
  STEP: patching @ 07/26/25 13:43:07.064
  STEP: updating @ 07/26/25 13:43:07.069
  I0726 13:43:07.081975 23 endpointslice.go:482] waiting for watch events with expected annotations
  I0726 13:43:07.082001 23 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 07/26/25 13:43:07.082
  STEP: deleting a collection @ 07/26/25 13:43:07.097
  I0726 13:43:07.120029 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-1199" for this suite. @ 07/26/25 13:43:07.124
• [0.116 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1081
  STEP: Creating a kubernetes client @ 07/26/25 13:43:07.133
  I0726 13:43:07.133339 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename kubectl @ 07/26/25 13:43:07.133
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:43:07.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:43:07.149
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 07/26/25 13:43:07.151
  I0726 13:43:07.151335 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-9085 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0726 13:43:07.200606 23 builder.go:146] stderr: ""
  I0726 13:43:07.200648 23 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 07/26/25 13:43:07.2
  I0726 13:43:07.200727 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-9085 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I0726 13:43:07.250058 23 builder.go:146] stderr: ""
  I0726 13:43:07.250082 23 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 07/26/25 13:43:07.25
  I0726 13:43:07.255190 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-9085 delete pods e2e-test-httpd-pod'
  E0726 13:43:07.465530      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:43:08.369323 23 builder.go:146] stderr: ""
  I0726 13:43:08.369361 23 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0726 13:43:08.369467 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9085" for this suite. @ 07/26/25 13:43:08.375
• [1.251 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:85
  STEP: Creating a kubernetes client @ 07/26/25 13:43:08.384
  I0726 13:43:08.384276 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename projected @ 07/26/25 13:43:08.384
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:43:08.398
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:43:08.399
  STEP: Creating a pod to test downward API volume plugin @ 07/26/25 13:43:08.401
  E0726 13:43:08.466105      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:43:09.466943      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:43:10.467624      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:43:11.467797      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 13:43:12.428
  I0726 13:43:12.431756 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod downwardapi-volume-9ccedfbb-63dc-4313-b32c-77c96d62d516 container client-container: <nil>
  STEP: delete the pod @ 07/26/25 13:43:12.439
  I0726 13:43:12.461889 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3532" for this suite. @ 07/26/25 13:43:12.466
  E0726 13:43:12.468235      23 retrywatcher.go:169] "Watch failed" err="context canceled"
• [4.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:47
  STEP: Creating a kubernetes client @ 07/26/25 13:43:12.475
  I0726 13:43:12.475120 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename configmap @ 07/26/25 13:43:12.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:43:12.486
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:43:12.488
  STEP: Creating configMap with name configmap-test-volume-abad4157-662e-418a-9fdc-8d61b7d08ac2 @ 07/26/25 13:43:12.49
  STEP: Creating a pod to test consume configMaps @ 07/26/25 13:43:12.497
  E0726 13:43:13.468788      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:43:14.468971      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 13:43:14.519
  I0726 13:43:14.524992 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod pod-configmaps-21fc7054-d755-4cf4-b7d9-6311338282e5 container agnhost-container: <nil>
  STEP: delete the pod @ 07/26/25 13:43:14.533
  I0726 13:43:14.557855 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6725" for this suite. @ 07/26/25 13:43:14.562
• [2.097 seconds]
------------------------------
SS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 07/26/25 13:43:14.572
  I0726 13:43:14.572106 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename certificates @ 07/26/25 13:43:14.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:43:14.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:43:14.587
  STEP: getting /apis @ 07/26/25 13:43:15.334
  STEP: getting /apis/certificates.k8s.io @ 07/26/25 13:43:15.337
  STEP: getting /apis/certificates.k8s.io/v1 @ 07/26/25 13:43:15.337
  STEP: creating @ 07/26/25 13:43:15.338
  STEP: getting @ 07/26/25 13:43:15.359
  STEP: listing @ 07/26/25 13:43:15.37
  STEP: watching @ 07/26/25 13:43:15.374
  I0726 13:43:15.374843 23 certificates.go:316] starting watch
  STEP: patching @ 07/26/25 13:43:15.375
  STEP: updating @ 07/26/25 13:43:15.383
  I0726 13:43:15.391252 23 certificates.go:332] waiting for watch events with expected annotations
  I0726 13:43:15.391289 23 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 07/26/25 13:43:15.391
  STEP: patching /approval @ 07/26/25 13:43:15.395
  STEP: updating /approval @ 07/26/25 13:43:15.4
  STEP: getting /status @ 07/26/25 13:43:15.409
  STEP: patching /status @ 07/26/25 13:43:15.412
  STEP: updating /status @ 07/26/25 13:43:15.42
  STEP: deleting @ 07/26/25 13:43:15.429
  STEP: deleting a collection @ 07/26/25 13:43:15.445
  I0726 13:43:15.468320 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0726 13:43:15.469264      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "certificates-8520" for this suite. @ 07/26/25 13:43:15.473
• [0.910 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 07/26/25 13:43:15.482
  I0726 13:43:15.482072 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename container-probe @ 07/26/25 13:43:15.482
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:43:15.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:43:15.497
  STEP: Creating pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294 @ 07/26/25 13:43:15.498
  E0726 13:43:16.469786      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:43:17.469849      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/26/25 13:43:17.52
  I0726 13:43:17.524025 23 container_probe.go:1748] Initial restart count of pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 is 0
  I0726 13:43:17.528079 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:43:18.469972      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:43:19.470034      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:43:19.533816 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:43:20.470794      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:43:21.470831      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:43:21.538725 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:43:22.470954      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:43:23.471027      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:43:23.544756 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:43:24.471794      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:43:25.472008      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:43:25.550101 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:43:26.472145      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:43:27.472391      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:43:27.555947 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:43:28.472535      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:43:29.472738      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:43:29.561556 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:43:30.472893      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:43:31.473111      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:43:31.566290 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:43:32.473303      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:43:33.473541      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:43:33.572813 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:43:34.473683      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:43:35.473895      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:43:35.578125 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:43:36.474849      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:43:37.475885      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:43:37.583922 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:43:38.475976      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:43:39.476763      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:43:39.590298 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:43:40.476914      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:43:41.477153      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:43:41.595686 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:43:42.477474      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:43:43.477872      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:43:43.601470 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:43:44.478360      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:43:45.478502      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:43:45.607486 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:43:46.478838      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:43:47.479879      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:43:47.612660 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:43:48.480145      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:43:49.480087      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:43:49.618747 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:43:50.480670      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:43:51.480764      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:43:51.623937 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:43:52.481845      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:43:53.481952      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:43:53.629297 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:43:54.482056      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:43:55.482248      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:43:55.635225 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:43:56.482359      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:43:57.482547      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:43:57.640234 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:43:58.482762      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:43:59.482857      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:43:59.646393 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:44:00.483814      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:44:01.484032      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:44:01.653107 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:44:02.485106      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:44:03.485231      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:44:03.658086 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:44:04.485477      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:44:05.485691      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:44:05.663586 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:44:06.486490      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:44:07.486718      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:44:07.669899 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:44:08.486876      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:44:09.487058      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:44:09.676206 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:44:10.487854      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:44:11.488039      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:44:11.682180 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:44:12.488841      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:44:13.488958      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:44:13.688137 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:44:14.489827      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:44:15.489927      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:44:15.694726 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:44:16.490031      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:44:17.490825      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:44:17.699463 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:44:18.490926      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:44:19.491836      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:44:19.705330 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:44:20.492063      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:44:21.492241      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:44:21.711049 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:44:22.492787      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:44:23.492903      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:44:23.715657 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:44:24.493666      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:44:25.493851      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:44:25.721678 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:44:26.493967      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:44:27.494149      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:44:27.728316 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:44:28.495223      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:44:29.495434      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:44:29.732985 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:44:30.495758      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:44:31.495949      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:44:31.738929 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:44:32.496754      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:44:33.496882      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:44:33.743687 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:44:34.497477      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:44:35.497689      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:44:35.749746 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:44:36.498616      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:44:37.498787      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:44:37.755947 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:44:38.499346      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:44:39.499447      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:44:39.760939 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:44:40.499545      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:44:41.499838      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:44:41.765900 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:44:42.500701      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:44:43.500825      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:44:43.770524 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:44:44.501331      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:44:45.501827      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:44:45.776575 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:44:46.501925      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:44:47.502128      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:44:47.783586 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:44:48.502935      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:44:49.503182      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:44:49.789460 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:44:50.503837      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:44:51.504023      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:44:51.795708 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:44:52.504418      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:44:53.504576      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:44:53.801102 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:44:54.504717      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:44:55.504951      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:44:55.806286 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:44:56.505034      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:44:57.505834      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:44:57.813087 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:44:58.506907      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:44:59.507831      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:44:59.818411 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:45:00.508159      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:45:01.508345      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:45:01.824304 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:45:02.508766      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:45:03.508875      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:45:03.831072 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:45:04.509259      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:45:05.509830      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:45:05.836447 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:45:06.509924      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:45:07.510824      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:45:07.842571 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:45:08.511374      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:45:09.511830      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:45:09.847909 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:45:10.512736      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:45:11.512870      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:45:11.853718 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:45:12.512988      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:45:13.513119      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:45:13.860892 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:45:14.513664      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:45:15.513858      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:45:15.866003 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:45:16.514879      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:45:17.515069      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:45:17.872172 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:45:18.515937      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:45:19.516117      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:45:19.877901 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:45:20.516611      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:45:21.516812      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:45:21.882666 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:45:22.517313      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:45:23.517450      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:45:23.888094 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:45:24.517766      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:45:25.517932      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:45:25.894959 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:45:26.518737      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:45:27.519003      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:45:27.899764 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:45:28.519116      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:45:29.519842      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:45:29.905730 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:45:30.520393      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:45:31.520593      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:45:31.910604 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:45:32.521151      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:45:33.521346      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:45:33.916019 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:45:34.521696      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:45:35.521877      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:45:35.921340 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:45:36.521978      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:45:37.522058      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:45:37.926433 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:45:38.522865      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:45:39.522963      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:45:39.932209 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:45:40.523906      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:45:41.524096      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:45:41.938243 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:45:42.525109      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:45:43.525288      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:45:43.943246 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:45:44.525402      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:45:45.525593      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:45:45.949852 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:45:46.525670      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:45:47.525787      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:45:47.956378 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:45:48.526164      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:45:49.526360      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:45:49.961687 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:45:50.527337      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:45:51.527437      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:45:51.968422 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:45:52.528080      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:45:53.528255      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:45:53.972966 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:45:54.528360      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:45:55.528556      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:45:55.978915 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:45:56.529512      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:45:57.530065      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:45:57.985517 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:45:58.530826      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:45:59.531832      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:45:59.990759 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:46:00.532822      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:46:01.533837      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:46:01.996092 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:46:02.533912      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:46:03.534104      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:46:04.002517 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:46:04.535150      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:46:05.535261      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:46:06.007249 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:46:06.535762      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:46:07.536812      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:46:08.012497 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:46:08.536933      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:46:09.537124      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:46:10.017441 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:46:10.538043      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:46:11.538137      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:46:12.023235 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:46:12.539036      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:46:13.540041      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:46:14.029156 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:46:14.540753      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:46:15.540846      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:46:16.034150 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:46:16.541746      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:46:17.541942      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:46:18.040224 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:46:18.542864      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:46:19.543881      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:46:20.046940 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:46:20.544579      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:46:21.544823      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:46:22.051981 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:46:22.545793      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:46:23.545887      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:46:24.057461 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:46:24.546777      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:46:25.546963      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:46:26.063577 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:46:26.547058      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:46:27.547225      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:46:28.069020 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:46:28.547388      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:46:29.547853      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:46:30.073765 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:46:30.547951      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:46:31.548458      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:46:32.078790 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:46:32.549201      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:46:33.549290      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:46:34.085747 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:46:34.550202      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:46:35.550826      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:46:36.090778 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:46:36.550943      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:46:37.551086      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:46:38.097083 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:46:38.551759      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:46:39.552830      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:46:40.103333 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:46:40.553894      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:46:41.553994      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:46:42.108137 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:46:42.554766      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:46:43.554856      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:46:44.113544 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:46:44.554930      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:46:45.555754      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:46:46.119907 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:46:46.556407      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:46:47.557125      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:46:48.124966 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:46:48.557457      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:46:49.557689      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:46:50.131328 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:46:50.557775      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:46:51.558831      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:46:52.137204 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:46:52.559809      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:46:53.559872      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:46:54.143600 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:46:54.560836      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:46:55.560976      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:46:56.149557 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:46:56.561808      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:46:57.561888      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:46:58.156730 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:46:58.562105      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:46:59.562275      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:47:00.162839 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:47:00.563334      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:47:01.563546      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:47:02.167860 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:47:02.563591      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:47:03.563785      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:47:04.174153 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:47:04.564816      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:47:05.564938      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:47:06.180388 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:47:06.565867      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:47:07.566070      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:47:08.185558 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:47:08.567111      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:47:09.567867      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:47:10.191393 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:47:10.568560      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:47:11.568766      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:47:12.196788 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:47:12.569260      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:47:13.570802      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:47:14.203314 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:47:14.571826      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:47:15.572003      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:47:16.209522 23 container_probe.go:1758] Get pod test-webserver-ee78fa7d-75e1-42c8-84cf-fbf788fd16c1 in namespace container-probe-6294
  E0726 13:47:16.572846      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:47:17.573080      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 07/26/25 13:47:18.209
  I0726 13:47:18.229128 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6294" for this suite. @ 07/26/25 13:47:18.234
• [242.762 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3630
  STEP: Creating a kubernetes client @ 07/26/25 13:47:18.244
  I0726 13:47:18.244818 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename services @ 07/26/25 13:47:18.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:47:18.256
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:47:18.258
  STEP: creating a collection of services @ 07/26/25 13:47:18.259
  I0726 13:47:18.259969 23 service.go:3666] Creating e2e-svc-a-6s4bt
  I0726 13:47:18.277340 23 service.go:3666] Creating e2e-svc-b-6m4n6
  I0726 13:47:18.294036 23 service.go:3666] Creating e2e-svc-c-dmssd
  STEP: deleting service collection @ 07/26/25 13:47:18.314
  I0726 13:47:18.372975 23 service.go:3701] Collection of services has been deleted
  I0726 13:47:18.373083 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3297" for this suite. @ 07/26/25 13:47:18.377
• [0.141 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 07/26/25 13:47:18.386
  I0726 13:47:18.386022 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename cronjob @ 07/26/25 13:47:18.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:47:18.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:47:18.401
  STEP: Creating a cronjob @ 07/26/25 13:47:18.402
  STEP: Ensuring more than one job is running at a time @ 07/26/25 13:47:18.41
  E0726 13:47:18.573193      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:47:19.573280      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:47:20.573706      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:47:21.573783      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:47:22.574744      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:47:23.574826      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:47:24.575455      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:47:25.575577      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:47:26.575807      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:47:27.575921      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:47:28.576719      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:47:29.576935      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:47:30.577663      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:47:31.577798      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:47:32.578689      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:47:33.579176      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:47:34.579760      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:47:35.579795      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:47:36.580321      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:47:37.581248      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:47:38.581865      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:47:39.581943      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:47:40.582411      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:47:41.582532      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:47:42.582681      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:47:43.582798      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:47:44.583431      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:47:45.583622      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:47:46.584102      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:47:47.584473      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:47:48.584738      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:47:49.584717      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:47:50.585179      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:47:51.585354      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:47:52.586401      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:47:53.586488      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:47:54.587146      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:47:55.587252      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:47:56.587870      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:47:57.588105      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:47:58.588446      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:47:59.588545      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:00.589426      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:01.589976      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:02.590563      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:03.590922      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:04.591258      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:05.591361      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:06.592356      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:07.593108      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:08.593750      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:09.593862      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:10.594560      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:11.594771      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:12.595001      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:13.595209      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:14.595328      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:15.595561      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:16.596266      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:17.597161      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:18.597956      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:19.598053      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:20.598833      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:21.598920      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:22.599375      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:23.599469      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:24.599825      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:25.599921      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:26.600361      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:27.601114      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:28.601227      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:29.601819      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:30.601971      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:31.602833      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:32.602941      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:33.603115      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:34.603986      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:35.604104      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:36.604565      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:37.605137      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:38.606139      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:39.606836      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:40.607879      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:41.608820      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:42.609626      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:43.609794      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:44.610579      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:45.610737      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:46.611316      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:47.612120      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:48.612535      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:49.612843      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:50.613175      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:51.613824      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:52.614902      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:53.614996      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:54.615752      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:55.615864      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:56.615991      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:57.616104      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:58.616895      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:48:59.617074      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 07/26/25 13:49:00.417
  STEP: Removing cronjob @ 07/26/25 13:49:00.421
  I0726 13:49:00.430171 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9296" for this suite. @ 07/26/25 13:49:00.435
• [102.058 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 07/26/25 13:49:00.443
  I0726 13:49:00.443833 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename validating-admission-policy @ 07/26/25 13:49:00.444
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:49:00.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:49:00.461
  STEP: creating a policy with variables @ 07/26/25 13:49:00.472
  STEP: waiting until the marker is denied @ 07/26/25 13:49:00.488
  E0726 13:49:00.617255      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: testing a replicated Deployment to be allowed @ 07/26/25 13:49:00.995
  STEP: testing a non-replicated ReplicaSet not to be denied @ 07/26/25 13:49:01.011
  I0726 13:49:01.056538 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-2568" for this suite. @ 07/26/25 13:49:01.06
• [0.632 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:74
  STEP: Creating a kubernetes client @ 07/26/25 13:49:01.076
  I0726 13:49:01.076294 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename configmap @ 07/26/25 13:49:01.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:49:01.099
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:49:01.101
  STEP: Creating configMap with name configmap-test-volume-dd247a25-b8ed-4785-a098-e1096c9a44c9 @ 07/26/25 13:49:01.102
  STEP: Creating a pod to test consume configMaps @ 07/26/25 13:49:01.108
  E0726 13:49:01.618329      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:49:02.619219      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:49:03.619850      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:49:04.619924      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 13:49:05.135
  I0726 13:49:05.139507 23 output.go:207] Trying to get logs from node ip-172-31-3-117 pod pod-configmaps-8ad86966-8fd9-4a1f-95c2-4a04679c0ff2 container agnhost-container: <nil>
  STEP: delete the pod @ 07/26/25 13:49:05.154
  I0726 13:49:05.177947 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3095" for this suite. @ 07/26/25 13:49:05.183
• [4.118 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1368
  STEP: Creating a kubernetes client @ 07/26/25 13:49:05.193
  I0726 13:49:05.193991 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename kubectl @ 07/26/25 13:49:05.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:49:05.206
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:49:05.208
  STEP: validating cluster-info @ 07/26/25 13:49:05.21
  I0726 13:49:05.210180 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-6633 cluster-info'
  I0726 13:49:05.251917 23 builder.go:146] stderr: ""
  I0726 13:49:05.251959 23 builder.go:147] stdout: "Kubernetes control plane is running at https://10.152.183.1:443\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0726 13:49:05.252073 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6633" for this suite. @ 07/26/25 13:49:05.284
• [0.100 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:89
  STEP: Creating a kubernetes client @ 07/26/25 13:49:05.293
  I0726 13:49:05.293869 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename configmap @ 07/26/25 13:49:05.294
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:49:05.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:49:05.31
  STEP: Creating configMap with name configmap-test-volume-map-595dafb1-a61a-4c98-8703-32ef28b3dbfa @ 07/26/25 13:49:05.311
  STEP: Creating a pod to test consume configMaps @ 07/26/25 13:49:05.317
  E0726 13:49:05.620774      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:49:06.620910      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:49:07.621537      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:49:08.621668      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 13:49:09.344
  I0726 13:49:09.349278 23 output.go:207] Trying to get logs from node ip-172-31-72-233 pod pod-configmaps-680b7a45-0799-49c9-84fc-f9654f5b1d21 container agnhost-container: <nil>
  STEP: delete the pod @ 07/26/25 13:49:09.364
  I0726 13:49:09.387626 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9112" for this suite. @ 07/26/25 13:49:09.392
• [4.107 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:722
  STEP: Creating a kubernetes client @ 07/26/25 13:49:09.401
  I0726 13:49:09.401247 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename gc @ 07/26/25 13:49:09.401
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:49:09.413
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:49:09.415
  STEP: create the rc1 @ 07/26/25 13:49:09.493
  STEP: create the rc2 @ 07/26/25 13:49:09.502
  E0726 13:49:09.621934      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:49:10.627764      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:49:11.627465      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:49:12.629343      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:49:13.628648      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:49:14.628832      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 07/26/25 13:49:15.511
  E0726 13:49:15.629209      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the rc simpletest-rc-to-be-deleted @ 07/26/25 13:49:15.979
  STEP: wait for the rc to be deleted @ 07/26/25 13:49:15.992
  E0726 13:49:16.629885      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:49:17.629980      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:49:18.630946      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:49:19.631107      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:49:20.631103      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:49:21.004879 23 garbage_collector.go:770] 66 pods remaining
  I0726 13:49:21.004907 23 garbage_collector.go:777] 66 pods has nil DeletionTimestamp
  I0726 13:49:21.004912 23 garbage_collector.go:778] 
  E0726 13:49:21.631856      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:49:22.632902      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:49:23.633177      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:49:24.633246      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:49:25.633434      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 07/26/25 13:49:26.004
  W0726 13:49:26.009621      23 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0726 13:49:26.009670 23 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0726 13:49:26.009714 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-264fx" in namespace "gc-7780"
  I0726 13:49:26.029831 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2kj94" in namespace "gc-7780"
  I0726 13:49:26.049090 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2nsvt" in namespace "gc-7780"
  I0726 13:49:26.069028 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2nwj8" in namespace "gc-7780"
  I0726 13:49:26.085974 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-45fbf" in namespace "gc-7780"
  I0726 13:49:26.102860 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-49wk6" in namespace "gc-7780"
  I0726 13:49:26.121627 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4lf5n" in namespace "gc-7780"
  I0726 13:49:26.141808 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4r2jk" in namespace "gc-7780"
  I0726 13:49:26.160353 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4ttpl" in namespace "gc-7780"
  I0726 13:49:26.179315 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4vhmx" in namespace "gc-7780"
  I0726 13:49:26.199510 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-56smj" in namespace "gc-7780"
  I0726 13:49:26.220372 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5qqmq" in namespace "gc-7780"
  I0726 13:49:26.239987 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5s7s6" in namespace "gc-7780"
  I0726 13:49:26.260674 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6xk2k" in namespace "gc-7780"
  I0726 13:49:26.283578 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-78skl" in namespace "gc-7780"
  I0726 13:49:26.300906 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-79dc9" in namespace "gc-7780"
  I0726 13:49:26.317891 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7hdwm" in namespace "gc-7780"
  I0726 13:49:26.337153 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7lcj8" in namespace "gc-7780"
  I0726 13:49:26.357962 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7nx5d" in namespace "gc-7780"
  I0726 13:49:26.383109 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7vfqt" in namespace "gc-7780"
  I0726 13:49:26.402164 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-88rkd" in namespace "gc-7780"
  I0726 13:49:26.419545 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8h8jr" in namespace "gc-7780"
  I0726 13:49:26.439039 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-988qt" in namespace "gc-7780"
  I0726 13:49:26.456706 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9drvq" in namespace "gc-7780"
  I0726 13:49:26.471827 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9hnpb" in namespace "gc-7780"
  I0726 13:49:26.489406 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9s9gc" in namespace "gc-7780"
  I0726 13:49:26.515890 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b849k" in namespace "gc-7780"
  I0726 13:49:26.534856 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bd8rw" in namespace "gc-7780"
  I0726 13:49:26.549591 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bjwvl" in namespace "gc-7780"
  I0726 13:49:26.572473 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bknhs" in namespace "gc-7780"
  I0726 13:49:26.589611 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bpm27" in namespace "gc-7780"
  I0726 13:49:26.614367 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cdp49" in namespace "gc-7780"
  I0726 13:49:26.633543 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-chq7p" in namespace "gc-7780"
  E0726 13:49:26.634921      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:49:26.647276 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cwz9w" in namespace "gc-7780"
  I0726 13:49:26.669946 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d4zgj" in namespace "gc-7780"
  I0726 13:49:26.688085 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dc829" in namespace "gc-7780"
  I0726 13:49:26.706132 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dcc4m" in namespace "gc-7780"
  I0726 13:49:26.727240 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dh42l" in namespace "gc-7780"
  I0726 13:49:26.745590 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dnnfv" in namespace "gc-7780"
  I0726 13:49:26.770164 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dq274" in namespace "gc-7780"
  I0726 13:49:26.794312 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dvxgf" in namespace "gc-7780"
  I0726 13:49:26.818296 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dwml6" in namespace "gc-7780"
  I0726 13:49:26.836223 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f4x8f" in namespace "gc-7780"
  I0726 13:49:26.857047 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fqwh9" in namespace "gc-7780"
  I0726 13:49:26.876785 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ftlh4" in namespace "gc-7780"
  I0726 13:49:26.897324 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fxqjf" in namespace "gc-7780"
  I0726 13:49:26.914442 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gdsvd" in namespace "gc-7780"
  I0726 13:49:26.929048 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gmwmb" in namespace "gc-7780"
  I0726 13:49:26.949579 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hf4r2" in namespace "gc-7780"
  I0726 13:49:26.967573 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hf5wg" in namespace "gc-7780"
  I0726 13:49:26.989139 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7780" for this suite. @ 07/26/25 13:49:26.994
• [17.602 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 07/26/25 13:49:27.003
  I0726 13:49:27.003186 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename secrets @ 07/26/25 13:49:27.003
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:49:27.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:49:27.02
  STEP: Creating secret with name s-test-opt-del-04f6b49d-42de-476c-836d-d36870ad9ea6 @ 07/26/25 13:49:27.095
  STEP: Creating secret with name s-test-opt-upd-6bb9f1b2-d320-4db3-a65a-af45d066df6d @ 07/26/25 13:49:27.1
  STEP: Creating the pod @ 07/26/25 13:49:27.106
  E0726 13:49:27.635485      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:49:28.635802      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-04f6b49d-42de-476c-836d-d36870ad9ea6 @ 07/26/25 13:49:29.164
  STEP: Updating secret s-test-opt-upd-6bb9f1b2-d320-4db3-a65a-af45d066df6d @ 07/26/25 13:49:29.173
  STEP: Creating secret with name s-test-opt-create-e6b24b08-db42-46ab-95c1-8f80156d6f96 @ 07/26/25 13:49:29.179
  STEP: waiting to observe update in volume @ 07/26/25 13:49:29.185
  E0726 13:49:29.636430      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:49:30.636869      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:49:31.637762      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:49:32.638556      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:49:33.639462      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:49:34.639539      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:49:35.639761      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:49:36.639883      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:49:37.640180      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:49:38.640246      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:49:39.641279      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:49:40.641405      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:49:41.642354      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:49:42.643216      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:49:43.643495      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:49:44.643579      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:49:45.644356      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:49:46.644490      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:49:47.644617      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:49:48.644985      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:49:49.645787      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:49:50.645973      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:49:51.646671      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:49:52.647089      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:49:53.647254      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:49:54.647848      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:49:55.648469      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:49:56.648560      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:49:57.649165      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:49:58.649234      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:49:59.649590      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:50:00.649775      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:50:01.649886      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:50:02.649949      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:50:03.650871      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:50:04.650943      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:50:05.651866      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:50:06.652010      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:50:07.652053      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:50:08.652141      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:50:09.652971      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:50:10.653272      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:50:11.654193      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:50:12.655206      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:50:13.655711      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:50:14.655772      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:50:15.656774      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:50:16.657848      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:50:17.658851      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:50:18.658926      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:50:19.659319      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:50:20.659393      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:50:21.659609      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:50:22.660435      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:50:23.661383      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:50:24.661470      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:50:25.662538      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:50:26.662627      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:50:27.663381      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:50:28.663872      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:50:29.664862      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:50:30.665080      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:50:31.665590      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:50:32.666323      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:50:33.667014      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:50:34.667164      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:50:35.667366      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:50:36.667490      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:50:37.667972      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:50:38.669010      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:50:39.669608      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:50:40.669773      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:50:41.577246 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5243" for this suite. @ 07/26/25 13:50:41.583
• [74.591 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:89
  STEP: Creating a kubernetes client @ 07/26/25 13:50:41.594
  I0726 13:50:41.594180 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename emptydir @ 07/26/25 13:50:41.594
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:50:41.606
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:50:41.61
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 07/26/25 13:50:41.612
  E0726 13:50:41.670005      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:50:42.670093      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:50:43.670786      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:50:44.670875      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 13:50:45.644
  I0726 13:50:45.649369 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod pod-d4473e8c-e025-4aba-aaee-489c01e8e6e0 container test-container: <nil>
  STEP: delete the pod @ 07/26/25 13:50:45.665
  E0726 13:50:45.671508      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:50:45.694117 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6219" for this suite. @ 07/26/25 13:50:45.698
• [4.116 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:709
  STEP: Creating a kubernetes client @ 07/26/25 13:50:45.71
  I0726 13:50:45.710061 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename webhook @ 07/26/25 13:50:45.71
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:50:45.722
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:50:45.724
  STEP: Setting up server cert @ 07/26/25 13:50:45.759
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/26/25 13:50:45.904
  STEP: Deploying the webhook pod @ 07/26/25 13:50:45.909
  STEP: Wait for the deployment to be ready @ 07/26/25 13:50:45.922
  I0726 13:50:45.933569 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0726 13:50:46.671806      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:50:47.672117      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/26/25 13:50:47.95
  STEP: Verifying the service has paired with the endpoint @ 07/26/25 13:50:47.971
  E0726 13:50:48.672407      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:50:48.971652 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 07/26/25 13:50:48.977
  STEP: verifying the validating webhook match conditions @ 07/26/25 13:50:48.986
  STEP: updating the validating webhook match conditions @ 07/26/25 13:50:48.989
  STEP: verifying the validating webhook match conditions @ 07/26/25 13:50:49.002
  I0726 13:50:49.069590 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5226" for this suite. @ 07/26/25 13:50:49.074
  STEP: Destroying namespace "webhook-markers-4093" for this suite. @ 07/26/25 13:50:49.084
• [3.381 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 07/26/25 13:50:49.091
  I0726 13:50:49.091114 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename downward-api @ 07/26/25 13:50:49.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:50:49.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:50:49.106
  STEP: Creating a pod to test downward api env vars @ 07/26/25 13:50:49.107
  E0726 13:50:49.672654      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:50:50.672812      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:50:51.672911      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:50:52.673007      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 13:50:53.137
  I0726 13:50:53.143174 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod downward-api-969a7d5d-453b-4097-8b1c-c364e636440b container dapi-container: <nil>
  STEP: delete the pod @ 07/26/25 13:50:53.152
  I0726 13:50:53.177609 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7976" for this suite. @ 07/26/25 13:50:53.182
• [4.100 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:921
  STEP: Creating a kubernetes client @ 07/26/25 13:50:53.191
  I0726 13:50:53.191607 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename job @ 07/26/25 13:50:53.192
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:50:53.206
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:50:53.208
  STEP: Creating a job @ 07/26/25 13:50:53.21
  STEP: Ensuring active pods == parallelism @ 07/26/25 13:50:53.218
  E0726 13:50:53.673173      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:50:54.673272      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 07/26/25 13:50:55.229
  E0726 13:50:55.673859      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:50:55.748483 23 pod_client.go:173] Successfully updated pod "adopt-release-5krfp"
  STEP: Checking that the Job readopts the Pod @ 07/26/25 13:50:55.748
  E0726 13:50:56.674072      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:50:57.674111      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 07/26/25 13:50:57.76
  I0726 13:50:58.271251 23 pod_client.go:173] Successfully updated pod "adopt-release-5krfp"
  STEP: Checking that the Job releases the Pod @ 07/26/25 13:50:58.271
  E0726 13:50:58.674951      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:50:59.675124      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:51:00.280820 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8870" for this suite. @ 07/26/25 13:51:00.286
• [7.103 seconds]
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:262
  STEP: Creating a kubernetes client @ 07/26/25 13:51:00.294
  I0726 13:51:00.294279 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename projected @ 07/26/25 13:51:00.294
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:51:00.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:51:00.309
  STEP: Creating a pod to test downward API volume plugin @ 07/26/25 13:51:00.311
  E0726 13:51:00.675789      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:51:01.675879      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:51:02.676182      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:51:03.676391      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 13:51:04.341
  I0726 13:51:04.346198 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod downwardapi-volume-6a097135-514d-4564-b581-c608be62a330 container client-container: <nil>
  STEP: delete the pod @ 07/26/25 13:51:04.353
  I0726 13:51:04.377768 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2932" for this suite. @ 07/26/25 13:51:04.382
• [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:411
  STEP: Creating a kubernetes client @ 07/26/25 13:51:04.391
  I0726 13:51:04.391373 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename validating-admission-policy @ 07/26/25 13:51:04.391
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:51:04.404
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:51:04.406
  STEP: getting /apis @ 07/26/25 13:51:04.416
  STEP: getting /apis/admissionregistration.k8s.io @ 07/26/25 13:51:04.419
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 07/26/25 13:51:04.42
  STEP: creating @ 07/26/25 13:51:04.42
  STEP: getting @ 07/26/25 13:51:04.438
  STEP: listing @ 07/26/25 13:51:04.444
  STEP: watching @ 07/26/25 13:51:04.448
  I0726 13:51:04.448434 23 validatingadmissionpolicy.go:528] starting watch
  STEP: patching @ 07/26/25 13:51:04.449
  STEP: updating @ 07/26/25 13:51:04.454
  I0726 13:51:04.464119 23 validatingadmissionpolicy.go:557] waiting for watch events with expected annotations
  I0726 13:51:04.464155 23 validatingadmissionpolicy.go:573] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 07/26/25 13:51:04.464
  STEP: patching /status @ 07/26/25 13:51:04.468
  STEP: updating /status @ 07/26/25 13:51:04.479
  STEP: deleting @ 07/26/25 13:51:04.508
  STEP: deleting a collection @ 07/26/25 13:51:04.524
  I0726 13:51:04.551224 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-3807" for this suite. @ 07/26/25 13:51:04.556
• [0.173 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:547
  STEP: Creating a kubernetes client @ 07/26/25 13:51:04.568
  I0726 13:51:04.568567 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename gc @ 07/26/25 13:51:04.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:51:04.584
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:51:04.586
  STEP: create the deployment @ 07/26/25 13:51:04.588
  I0726 13:51:04.597228      23 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: Wait for the Deployment to create new ReplicaSet @ 07/26/25 13:51:04.597
  E0726 13:51:04.676861      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 07/26/25 13:51:05.108
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 07/26/25 13:51:05.119
  E0726 13:51:05.677756      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 07/26/25 13:51:05.733
  W0726 13:51:05.738079      23 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0726 13:51:05.738106 23 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0726 13:51:05.738216 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4618" for this suite. @ 07/26/25 13:51:05.742
• [1.183 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:160
  STEP: Creating a kubernetes client @ 07/26/25 13:51:05.751
  I0726 13:51:05.751826 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename runtimeclass @ 07/26/25 13:51:05.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:51:05.765
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:51:05.767
  STEP: Deleting RuntimeClass runtimeclass-6420-delete-me @ 07/26/25 13:51:05.774
  STEP: Waiting for the RuntimeClass to disappear @ 07/26/25 13:51:05.781
  I0726 13:51:05.794706 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-6420" for this suite. @ 07/26/25 13:51:05.843
• [0.101 seconds]
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 07/26/25 13:51:05.853
  I0726 13:51:05.853303 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename secrets @ 07/26/25 13:51:05.853
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:51:05.865
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:51:05.866
  STEP: Creating secret with name secret-test-map-1a249b7b-9a37-4876-9d03-8e5240a5ef1f @ 07/26/25 13:51:05.868
  STEP: Creating a pod to test consume secrets @ 07/26/25 13:51:05.872
  E0726 13:51:06.678590      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:51:07.679296      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:51:08.679376      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:51:09.679447      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 13:51:09.919
  I0726 13:51:09.923248 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod pod-secrets-5ed59f89-8b98-49ac-b813-c82fc2d7f5f8 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/26/25 13:51:09.93
  I0726 13:51:09.953691 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7119" for this suite. @ 07/26/25 13:51:09.958
• [4.114 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:335
  STEP: Creating a kubernetes client @ 07/26/25 13:51:09.967
  I0726 13:51:09.967304 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename resourcequota @ 07/26/25 13:51:09.967
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:51:09.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:51:09.983
  E0726 13:51:10.679836      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:51:11.679963      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:51:12.680053      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:51:13.680850      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:51:14.680938      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:51:15.681030      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:51:16.681866      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:51:17.682190      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:51:18.682295      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:51:19.682867      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:51:20.682975      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:51:21.683219      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:51:22.684244      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:51:23.684407      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:51:24.684533      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:51:25.684655      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:51:26.684785      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 07/26/25 13:51:26.99
  E0726 13:51:27.685098      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:51:28.685208      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:51:29.685287      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:51:30.685437      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:51:31.685563      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/26/25 13:51:31.995
  STEP: Ensuring resource quota status is calculated @ 07/26/25 13:51:32.002
  E0726 13:51:32.686423      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:51:33.686654      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 07/26/25 13:51:34.008
  STEP: Ensuring resource quota status captures configMap creation @ 07/26/25 13:51:34.021
  E0726 13:51:34.687273      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:51:35.687484      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 07/26/25 13:51:36.027
  STEP: Ensuring resource quota status released usage @ 07/26/25 13:51:36.037
  E0726 13:51:36.688337      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:51:37.689215      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:51:38.043289 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3497" for this suite. @ 07/26/25 13:51:38.048
• [28.090 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2185
  STEP: Creating a kubernetes client @ 07/26/25 13:51:38.056
  I0726 13:51:38.056954 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename services @ 07/26/25 13:51:38.057
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:51:38.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:51:38.073
  STEP: creating service in namespace services-5862 @ 07/26/25 13:51:38.075
  STEP: creating service affinity-clusterip in namespace services-5862 @ 07/26/25 13:51:38.075
  I0726 13:51:38.111172 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0726 13:51:38.689796      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:51:39.690854      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:51:40.137670 23 resource.go:361] Creating new exec pod
  E0726 13:51:40.690969      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:51:41.691050      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:51:42.166383 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-5862 exec execpod-affinityj7fp6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I0726 13:51:42.256302 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip (10.152.183.54) 80 port [tcp/http] succeeded!\n"
  I0726 13:51:42.256334 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0726 13:51:42.256386 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-5862 exec execpod-affinityj7fp6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.54 80'
  I0726 13:51:42.336562 23 builder.go:146] stderr: "+ + nc -v -t -w 2 10.152.183.54 80\necho hostName\nConnection to 10.152.183.54 80 port [tcp/http] succeeded!\n"
  I0726 13:51:42.336600 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0726 13:51:42.336669 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-5862 exec execpod-affinityj7fp6 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.54:80/ ; done'
  I0726 13:51:42.475741 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.54:80/\n"
  I0726 13:51:42.475787 23 builder.go:147] stdout: "\naffinity-clusterip-6dd57cf8dc-zn6gk\naffinity-clusterip-6dd57cf8dc-zn6gk\naffinity-clusterip-6dd57cf8dc-zn6gk\naffinity-clusterip-6dd57cf8dc-zn6gk\naffinity-clusterip-6dd57cf8dc-zn6gk\naffinity-clusterip-6dd57cf8dc-zn6gk\naffinity-clusterip-6dd57cf8dc-zn6gk\naffinity-clusterip-6dd57cf8dc-zn6gk\naffinity-clusterip-6dd57cf8dc-zn6gk\naffinity-clusterip-6dd57cf8dc-zn6gk\naffinity-clusterip-6dd57cf8dc-zn6gk\naffinity-clusterip-6dd57cf8dc-zn6gk\naffinity-clusterip-6dd57cf8dc-zn6gk\naffinity-clusterip-6dd57cf8dc-zn6gk\naffinity-clusterip-6dd57cf8dc-zn6gk\naffinity-clusterip-6dd57cf8dc-zn6gk"
  I0726 13:51:42.475798 23 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-zn6gk
  I0726 13:51:42.475805 23 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-zn6gk
  I0726 13:51:42.475811 23 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-zn6gk
  I0726 13:51:42.475817 23 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-zn6gk
  I0726 13:51:42.475823 23 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-zn6gk
  I0726 13:51:42.475830 23 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-zn6gk
  I0726 13:51:42.475835 23 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-zn6gk
  I0726 13:51:42.475840 23 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-zn6gk
  I0726 13:51:42.475845 23 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-zn6gk
  I0726 13:51:42.475850 23 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-zn6gk
  I0726 13:51:42.475854 23 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-zn6gk
  I0726 13:51:42.475859 23 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-zn6gk
  I0726 13:51:42.475863 23 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-zn6gk
  I0726 13:51:42.475868 23 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-zn6gk
  I0726 13:51:42.475873 23 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-zn6gk
  I0726 13:51:42.475878 23 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-zn6gk
  I0726 13:51:42.475938 23 service.go:4352] Cleaning up the exec pod
  I0726 13:51:42.537792 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5862" for this suite. @ 07/26/25 13:51:42.547
• [4.499 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should terminate job execution when the number of failed indexes exceeds maxFailedIndexes [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:643
  STEP: Creating a kubernetes client @ 07/26/25 13:51:42.556
  I0726 13:51:42.556504 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename job @ 07/26/25 13:51:42.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:51:42.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:51:42.574
  STEP: Creating an indexed job with backoffLimit per index and maxFailedIndexes @ 07/26/25 13:51:42.576
  STEP: Awaiting for the job to fail as the number of max failed indexes is exceeded @ 07/26/25 13:51:42.583
  E0726 13:51:42.691198      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:51:43.691425      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:51:44.691703      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:51:45.691873      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the Job status fields to ensure early termination of the job @ 07/26/25 13:51:46.599
  I0726 13:51:46.603317 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9901" for this suite. @ 07/26/25 13:51:46.607
• [4.061 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:359
  STEP: Creating a kubernetes client @ 07/26/25 13:51:46.617
  I0726 13:51:46.617369 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/26/25 13:51:46.617
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:51:46.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:51:46.633
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 07/26/25 13:51:46.635
  I0726 13:51:46.635439 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  E0726 13:51:46.692244      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:51:47.692375      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:51:47.925028 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  E0726 13:51:48.693120      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:51:49.693269      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:51:50.693394      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:51:51.694068      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:51:52.694389      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:51:52.750998 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2412" for this suite. @ 07/26/25 13:51:52.757
• [6.152 seconds]
------------------------------
[sig-apps] Job should execute all indexes despite some failing when using backoffLimitPerIndex [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:609
  STEP: Creating a kubernetes client @ 07/26/25 13:51:52.769
  I0726 13:51:52.769402 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename job @ 07/26/25 13:51:52.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:51:52.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:51:52.782
  STEP: Creating an indexed job with backoffLimit per index and failing pods @ 07/26/25 13:51:52.784
  STEP: Awaiting for the job to fail as there are failed indexes @ 07/26/25 13:51:52.79
  E0726 13:51:53.694521      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:51:54.694990      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:51:55.695117      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:51:56.695177      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:51:57.695860      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:51:58.696002      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:51:59.696313      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:00.696521      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:01.696663      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:02.697482      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:03.697552      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:04.697753      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:05.698382      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:06.698450      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:07.698575      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:08.698772      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:09.699057      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:10.699125      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:11.699245      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:12.699325      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:13.699793      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:14.700832      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the Job status fields to ensure all indexes were executed @ 07/26/25 13:52:14.855
  I0726 13:52:14.861047 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5584" for this suite. @ 07/26/25 13:52:14.865
• [22.105 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 07/26/25 13:52:14.874
  I0726 13:52:14.874554 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename taint-single-pod @ 07/26/25 13:52:14.875
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:52:14.888
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:52:14.89
  I0726 13:52:14.892614 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0726 13:52:15.700953      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:16.701038      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:17.701151      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:18.701216      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:19.702115      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:20.702623      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:21.703537      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:22.703605      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:23.703742      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:24.703932      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:25.703986      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:26.704174      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:27.704526      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:28.704736      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:29.704871      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:30.705867      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:31.705975      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:32.706092      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:33.706190      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:34.706377      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:35.706502      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:36.707222      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:37.708298      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:38.708406      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:39.708762      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:40.708856      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:41.708943      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:42.709034      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:43.709132      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:44.709828      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:45.709939      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:46.710828      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:47.710998      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:48.711830      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:49.712755      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:50.712939      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:51.713070      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:52.713187      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:53.713314      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:54.713491      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:55.713762      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:56.713861      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:57.714326      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:58.714424      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:52:59.714813      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:00.714914      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:01.715517      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:02.716454      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:03.716839      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:04.717019      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:05.717800      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:06.717839      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:07.718266      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:08.718460      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:09.718555      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:10.719375      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:11.719679      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:12.720234      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:13.720329      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:14.720838      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:53:14.893109 23 util.go:390] Waiting for terminating namespaces to be deleted...
  I0726 13:53:14.899001 23 taints.go:144] Starting informer...
  STEP: Starting pod... @ 07/26/25 13:53:14.899
  I0726 13:53:15.116359 23 taints.go:294] Pod is running on ip-172-31-16-254. Tainting Node
  STEP: Trying to apply a taint on the Node @ 07/26/25 13:53:15.116
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 07/26/25 13:53:15.126
  STEP: Waiting short time to make sure Pod is queued for deletion @ 07/26/25 13:53:15.13
  I0726 13:53:15.130446 23 taints.go:313] Pod wasn't evicted. Proceeding
  I0726 13:53:15.130459 23 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 07/26/25 13:53:15.145
  STEP: Waiting some time to make sure that toleration time passed. @ 07/26/25 13:53:15.152
  E0726 13:53:15.721774      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:16.721934      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:17.722134      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:18.722258      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:19.722377      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:20.722450      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:21.722682      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:22.723655      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:23.723764      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:24.723880      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:25.723973      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:26.724151      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:27.724214      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:28.724867      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:29.725040      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:30.725215      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:31.725337      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:32.726370      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:33.726463      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:34.726828      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:35.727840      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:36.727916      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:37.728748      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:38.728843      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:39.729843      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:40.730840      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:41.731026      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:42.731143      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:43.731340      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:44.731551      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:45.732327      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:46.732540      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:47.733481      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:48.733576      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:49.733733      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:50.733990      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:51.734077      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:52.735192      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:53.735392      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:54.735577      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:55.735760      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:56.736827      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:57.737390      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:58.738426      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:53:59.739427      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:00.739520      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:01.739833      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:02.740034      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:03.741044      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:04.741167      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:05.741301      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:06.741490      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:07.741563      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:08.741769      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:09.742838      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:10.743082      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:11.743270      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:12.743363      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:13.743521      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:14.743734      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:15.744453      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:16.744685      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:17.745332      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:18.745462      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:19.745674      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:20.745885      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:21.745981      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:22.746084      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:23.746231      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:24.746411      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:25.746606      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:26.746835      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:27.747851      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:28.748038      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:29.748149      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:54:30.152275 23 taints.go:329] Pod wasn't evicted. Test successful
  I0726 13:54:30.152451 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-3097" for this suite. @ 07/26/25 13:54:30.159
• [135.296 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:388
  STEP: Creating a kubernetes client @ 07/26/25 13:54:30.17
  I0726 13:54:30.170748 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename gc @ 07/26/25 13:54:30.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:54:30.182
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:54:30.184
  STEP: create the rc @ 07/26/25 13:54:30.26
  I0726 13:54:30.265894      23 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  E0726 13:54:30.748356      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:31.749012      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:32.749854      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:33.757855      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:34.753436      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:35.760582      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the rc @ 07/26/25 13:54:36.269
  STEP: wait for the rc to be deleted @ 07/26/25 13:54:36.28
  E0726 13:54:36.754156      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:37.754940      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:38.755147      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:39.755352      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:40.755487      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 07/26/25 13:54:41.286
  E0726 13:54:41.756456      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:42.757507      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:43.757605      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:44.757768      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:45.757793      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:46.757894      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:47.758042      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:48.758212      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:49.758310      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:50.759328      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:51.759413      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:52.760271      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:53.760371      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:54.760820      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:55.761832      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:56.762840      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:57.762928      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:58.763110      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:54:59.763278      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:55:00.763485      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:55:01.763690      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:55:02.764740      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:55:03.764838      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:55:04.764983      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:55:05.765168      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:55:06.766011      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:55:07.767049      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:55:08.767844      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:55:09.768092      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:55:10.768159      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 07/26/25 13:55:11.295
  W0726 13:55:11.301523      23 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0726 13:55:11.301550 23 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0726 13:55:11.301595 23 delete.go:95] Deleting pod "simpletest.rc-265w6" in namespace "gc-1694"
  I0726 13:55:11.321207 23 delete.go:95] Deleting pod "simpletest.rc-2k2w2" in namespace "gc-1694"
  I0726 13:55:11.339794 23 delete.go:95] Deleting pod "simpletest.rc-2v5h4" in namespace "gc-1694"
  I0726 13:55:11.359225 23 delete.go:95] Deleting pod "simpletest.rc-4bwpl" in namespace "gc-1694"
  I0726 13:55:11.377796 23 delete.go:95] Deleting pod "simpletest.rc-4fxt8" in namespace "gc-1694"
  I0726 13:55:11.396529 23 delete.go:95] Deleting pod "simpletest.rc-4jt97" in namespace "gc-1694"
  I0726 13:55:11.413505 23 delete.go:95] Deleting pod "simpletest.rc-4slfz" in namespace "gc-1694"
  I0726 13:55:11.432717 23 delete.go:95] Deleting pod "simpletest.rc-4vx7r" in namespace "gc-1694"
  I0726 13:55:11.453897 23 delete.go:95] Deleting pod "simpletest.rc-5mtt6" in namespace "gc-1694"
  I0726 13:55:11.470306 23 delete.go:95] Deleting pod "simpletest.rc-62chg" in namespace "gc-1694"
  I0726 13:55:11.491434 23 delete.go:95] Deleting pod "simpletest.rc-62srr" in namespace "gc-1694"
  I0726 13:55:11.509337 23 delete.go:95] Deleting pod "simpletest.rc-6lnnq" in namespace "gc-1694"
  I0726 13:55:11.529223 23 delete.go:95] Deleting pod "simpletest.rc-6mfbs" in namespace "gc-1694"
  I0726 13:55:11.547430 23 delete.go:95] Deleting pod "simpletest.rc-79ht4" in namespace "gc-1694"
  I0726 13:55:11.564264 23 delete.go:95] Deleting pod "simpletest.rc-7tjhm" in namespace "gc-1694"
  I0726 13:55:11.582323 23 delete.go:95] Deleting pod "simpletest.rc-859cd" in namespace "gc-1694"
  I0726 13:55:11.596157 23 delete.go:95] Deleting pod "simpletest.rc-895fd" in namespace "gc-1694"
  I0726 13:55:11.618803 23 delete.go:95] Deleting pod "simpletest.rc-8bcx6" in namespace "gc-1694"
  I0726 13:55:11.638679 23 delete.go:95] Deleting pod "simpletest.rc-8xpbd" in namespace "gc-1694"
  I0726 13:55:11.660261 23 delete.go:95] Deleting pod "simpletest.rc-8xs9c" in namespace "gc-1694"
  I0726 13:55:11.679968 23 delete.go:95] Deleting pod "simpletest.rc-99c5p" in namespace "gc-1694"
  I0726 13:55:11.696525 23 delete.go:95] Deleting pod "simpletest.rc-9dbg9" in namespace "gc-1694"
  I0726 13:55:11.714609 23 delete.go:95] Deleting pod "simpletest.rc-9j275" in namespace "gc-1694"
  I0726 13:55:11.737590 23 delete.go:95] Deleting pod "simpletest.rc-9jg42" in namespace "gc-1694"
  I0726 13:55:11.755699 23 delete.go:95] Deleting pod "simpletest.rc-9svvw" in namespace "gc-1694"
  E0726 13:55:11.768357      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:55:11.772774 23 delete.go:95] Deleting pod "simpletest.rc-b6b2g" in namespace "gc-1694"
  I0726 13:55:11.794495 23 delete.go:95] Deleting pod "simpletest.rc-b74ql" in namespace "gc-1694"
  I0726 13:55:11.812109 23 delete.go:95] Deleting pod "simpletest.rc-b8mzz" in namespace "gc-1694"
  I0726 13:55:11.826627 23 delete.go:95] Deleting pod "simpletest.rc-bc8fl" in namespace "gc-1694"
  I0726 13:55:11.848039 23 delete.go:95] Deleting pod "simpletest.rc-bjkls" in namespace "gc-1694"
  I0726 13:55:11.868903 23 delete.go:95] Deleting pod "simpletest.rc-bzkwb" in namespace "gc-1694"
  I0726 13:55:11.893079 23 delete.go:95] Deleting pod "simpletest.rc-c2xzp" in namespace "gc-1694"
  I0726 13:55:11.919570 23 delete.go:95] Deleting pod "simpletest.rc-c4c5z" in namespace "gc-1694"
  I0726 13:55:11.940508 23 delete.go:95] Deleting pod "simpletest.rc-c72xz" in namespace "gc-1694"
  I0726 13:55:11.954483 23 delete.go:95] Deleting pod "simpletest.rc-c9w2s" in namespace "gc-1694"
  I0726 13:55:11.976484 23 delete.go:95] Deleting pod "simpletest.rc-cg5t8" in namespace "gc-1694"
  I0726 13:55:11.998149 23 delete.go:95] Deleting pod "simpletest.rc-cpff5" in namespace "gc-1694"
  I0726 13:55:12.014623 23 delete.go:95] Deleting pod "simpletest.rc-crhgh" in namespace "gc-1694"
  I0726 13:55:12.032300 23 delete.go:95] Deleting pod "simpletest.rc-cvppm" in namespace "gc-1694"
  I0726 13:55:12.051327 23 delete.go:95] Deleting pod "simpletest.rc-dk48p" in namespace "gc-1694"
  I0726 13:55:12.069481 23 delete.go:95] Deleting pod "simpletest.rc-dv2sx" in namespace "gc-1694"
  I0726 13:55:12.089894 23 delete.go:95] Deleting pod "simpletest.rc-dz6th" in namespace "gc-1694"
  I0726 13:55:12.109090 23 delete.go:95] Deleting pod "simpletest.rc-dz7j4" in namespace "gc-1694"
  I0726 13:55:12.126365 23 delete.go:95] Deleting pod "simpletest.rc-f7g55" in namespace "gc-1694"
  I0726 13:55:12.146826 23 delete.go:95] Deleting pod "simpletest.rc-f8tkn" in namespace "gc-1694"
  I0726 13:55:12.167686 23 delete.go:95] Deleting pod "simpletest.rc-ffxzj" in namespace "gc-1694"
  I0726 13:55:12.185192 23 delete.go:95] Deleting pod "simpletest.rc-g4h5f" in namespace "gc-1694"
  I0726 13:55:12.206765 23 delete.go:95] Deleting pod "simpletest.rc-g7jvt" in namespace "gc-1694"
  I0726 13:55:12.226203 23 delete.go:95] Deleting pod "simpletest.rc-g9tjq" in namespace "gc-1694"
  I0726 13:55:12.244477 23 delete.go:95] Deleting pod "simpletest.rc-gj7xl" in namespace "gc-1694"
  I0726 13:55:12.259396 23 delete.go:95] Deleting pod "simpletest.rc-gr6f8" in namespace "gc-1694"
  I0726 13:55:12.278418 23 delete.go:95] Deleting pod "simpletest.rc-gtpsn" in namespace "gc-1694"
  I0726 13:55:12.296418 23 delete.go:95] Deleting pod "simpletest.rc-hf8vt" in namespace "gc-1694"
  I0726 13:55:12.314830 23 delete.go:95] Deleting pod "simpletest.rc-jhdf2" in namespace "gc-1694"
  I0726 13:55:12.332912 23 delete.go:95] Deleting pod "simpletest.rc-jn8b4" in namespace "gc-1694"
  I0726 13:55:12.352523 23 delete.go:95] Deleting pod "simpletest.rc-jrvhr" in namespace "gc-1694"
  I0726 13:55:12.367705 23 delete.go:95] Deleting pod "simpletest.rc-k2dx4" in namespace "gc-1694"
  I0726 13:55:12.384871 23 delete.go:95] Deleting pod "simpletest.rc-k6rwg" in namespace "gc-1694"
  I0726 13:55:12.402822 23 delete.go:95] Deleting pod "simpletest.rc-kzpxk" in namespace "gc-1694"
  I0726 13:55:12.424516 23 delete.go:95] Deleting pod "simpletest.rc-lmj4s" in namespace "gc-1694"
  I0726 13:55:12.441604 23 delete.go:95] Deleting pod "simpletest.rc-lmrm9" in namespace "gc-1694"
  I0726 13:55:12.455911 23 delete.go:95] Deleting pod "simpletest.rc-m2qdm" in namespace "gc-1694"
  I0726 13:55:12.471538 23 delete.go:95] Deleting pod "simpletest.rc-md82h" in namespace "gc-1694"
  I0726 13:55:12.483404 23 delete.go:95] Deleting pod "simpletest.rc-mslh7" in namespace "gc-1694"
  I0726 13:55:12.499028 23 delete.go:95] Deleting pod "simpletest.rc-n4js2" in namespace "gc-1694"
  I0726 13:55:12.517679 23 delete.go:95] Deleting pod "simpletest.rc-n7rrf" in namespace "gc-1694"
  I0726 13:55:12.537903 23 delete.go:95] Deleting pod "simpletest.rc-n8rpw" in namespace "gc-1694"
  I0726 13:55:12.556833 23 delete.go:95] Deleting pod "simpletest.rc-ndtdq" in namespace "gc-1694"
  I0726 13:55:12.575539 23 delete.go:95] Deleting pod "simpletest.rc-ng4wg" in namespace "gc-1694"
  I0726 13:55:12.594044 23 delete.go:95] Deleting pod "simpletest.rc-njx8p" in namespace "gc-1694"
  I0726 13:55:12.611107 23 delete.go:95] Deleting pod "simpletest.rc-nr89p" in namespace "gc-1694"
  I0726 13:55:12.630586 23 delete.go:95] Deleting pod "simpletest.rc-p5fmd" in namespace "gc-1694"
  I0726 13:55:12.654393 23 delete.go:95] Deleting pod "simpletest.rc-p7m8w" in namespace "gc-1694"
  I0726 13:55:12.673234 23 delete.go:95] Deleting pod "simpletest.rc-pvbvd" in namespace "gc-1694"
  I0726 13:55:12.694143 23 delete.go:95] Deleting pod "simpletest.rc-q84lc" in namespace "gc-1694"
  I0726 13:55:12.719319 23 delete.go:95] Deleting pod "simpletest.rc-q8s8d" in namespace "gc-1694"
  I0726 13:55:12.738924 23 delete.go:95] Deleting pod "simpletest.rc-qsfj6" in namespace "gc-1694"
  I0726 13:55:12.756825 23 delete.go:95] Deleting pod "simpletest.rc-rl26h" in namespace "gc-1694"
  E0726 13:55:12.768935      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:55:12.806543 23 delete.go:95] Deleting pod "simpletest.rc-s4ddj" in namespace "gc-1694"
  I0726 13:55:12.858347 23 delete.go:95] Deleting pod "simpletest.rc-t9v6d" in namespace "gc-1694"
  I0726 13:55:12.904946 23 delete.go:95] Deleting pod "simpletest.rc-tjtfn" in namespace "gc-1694"
  I0726 13:55:12.957352 23 delete.go:95] Deleting pod "simpletest.rc-trnmj" in namespace "gc-1694"
  I0726 13:55:13.012500 23 delete.go:95] Deleting pod "simpletest.rc-tz845" in namespace "gc-1694"
  I0726 13:55:13.058767 23 delete.go:95] Deleting pod "simpletest.rc-tz8ds" in namespace "gc-1694"
  I0726 13:55:13.110150 23 delete.go:95] Deleting pod "simpletest.rc-v7bcm" in namespace "gc-1694"
  I0726 13:55:13.157418 23 delete.go:95] Deleting pod "simpletest.rc-vbnrk" in namespace "gc-1694"
  I0726 13:55:13.205529 23 delete.go:95] Deleting pod "simpletest.rc-vkksh" in namespace "gc-1694"
  I0726 13:55:13.255351 23 delete.go:95] Deleting pod "simpletest.rc-vtnks" in namespace "gc-1694"
  I0726 13:55:13.311580 23 delete.go:95] Deleting pod "simpletest.rc-vwx6b" in namespace "gc-1694"
  I0726 13:55:13.350775 23 delete.go:95] Deleting pod "simpletest.rc-w4bl6" in namespace "gc-1694"
  I0726 13:55:13.406992 23 delete.go:95] Deleting pod "simpletest.rc-w9jdw" in namespace "gc-1694"
  I0726 13:55:13.459730 23 delete.go:95] Deleting pod "simpletest.rc-wfpnk" in namespace "gc-1694"
  I0726 13:55:13.507136 23 delete.go:95] Deleting pod "simpletest.rc-wjfl9" in namespace "gc-1694"
  I0726 13:55:13.556597 23 delete.go:95] Deleting pod "simpletest.rc-wml4m" in namespace "gc-1694"
  I0726 13:55:13.611071 23 delete.go:95] Deleting pod "simpletest.rc-xlvzj" in namespace "gc-1694"
  I0726 13:55:13.659177 23 delete.go:95] Deleting pod "simpletest.rc-xptv8" in namespace "gc-1694"
  I0726 13:55:13.709724 23 delete.go:95] Deleting pod "simpletest.rc-xxkfz" in namespace "gc-1694"
  I0726 13:55:13.755475 23 delete.go:95] Deleting pod "simpletest.rc-z5h8w" in namespace "gc-1694"
  E0726 13:55:13.771201      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:55:13.806720 23 delete.go:95] Deleting pod "simpletest.rc-znxct" in namespace "gc-1694"
  I0726 13:55:13.860299 23 delete.go:95] Deleting pod "simpletest.rc-zpkl7" in namespace "gc-1694"
  I0726 13:55:13.913291 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1694" for this suite. @ 07/26/25 13:55:13.953
• [43.826 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:194
  STEP: Creating a kubernetes client @ 07/26/25 13:55:14.007
  I0726 13:55:14.009703 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename downward-api @ 07/26/25 13:55:14.01
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:55:14.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:55:14.033
  STEP: Creating a pod to test downward api env vars @ 07/26/25 13:55:14.041
  E0726 13:55:14.771120      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:55:15.771346      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:55:16.771908      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:55:17.772751      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:55:18.772894      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:55:19.772988      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 13:55:20.074
  I0726 13:55:20.079240 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod downward-api-831e2b45-885d-47b6-9849-0da44c675614 container dapi-container: <nil>
  STEP: delete the pod @ 07/26/25 13:55:20.092
  I0726 13:55:20.117676 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1793" for this suite. @ 07/26/25 13:55:20.123
• [6.126 seconds]
------------------------------
SS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 07/26/25 13:55:20.13
  I0726 13:55:20.130344 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename configmap @ 07/26/25 13:55:20.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:55:20.144
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:55:20.145
  STEP: Creating configMap configmap-1782/configmap-test-ab7b3769-bf5b-4ae7-afe2-838f12417659 @ 07/26/25 13:55:20.147
  STEP: Creating a pod to test consume configMaps @ 07/26/25 13:55:20.153
  E0726 13:55:20.773141      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:55:21.773240      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:55:22.774318      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:55:23.774391      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 13:55:24.182
  I0726 13:55:24.187824 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod pod-configmaps-ed2bff4c-6a53-4f71-a5f9-6930644d8244 container env-test: <nil>
  STEP: delete the pod @ 07/26/25 13:55:24.196
  I0726 13:55:24.219435 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1782" for this suite. @ 07/26/25 13:55:24.226
• [4.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:488
  STEP: Creating a kubernetes client @ 07/26/25 13:55:24.233
  I0726 13:55:24.233496 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename deployment @ 07/26/25 13:55:24.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:55:24.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:55:24.248
  STEP: creating a Deployment @ 07/26/25 13:55:24.255
  I0726 13:55:24.255374 23 deployment.go:506] Creating simple deployment test-deployment-dlcfr
  I0726 13:55:24.271192 23 deployment.go:223] new replicaset for deployment "test-deployment-dlcfr" is yet to be created
  E0726 13:55:24.774868      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:55:25.775073      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Getting /status @ 07/26/25 13:55:26.29
  I0726 13:55:26.295462 23 deployment.go:531] Deployment test-deployment-dlcfr has Conditions: [{Available True 2025-07-26 13:55:25 +0000 UTC 2025-07-26 13:55:25 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2025-07-26 13:55:25 +0000 UTC 2025-07-26 13:55:24 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-dlcfr-6fb4c74686" has successfully progressed.}]
  STEP: updating Deployment Status @ 07/26/25 13:55:26.295
  I0726 13:55:26.308410 23 deployment.go:551] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.July, 26, 13, 55, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 26, 13, 55, 25, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.July, 26, 13, 55, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.July, 26, 13, 55, 24, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-dlcfr-6fb4c74686\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 07/26/25 13:55:26.308
  I0726 13:55:26.309604 23 deployment.go:578] Observed &Deployment event: ADDED
  I0726 13:55:26.309627 23 deployment.go:574] Observed Deployment test-deployment-dlcfr in namespace deployment-4383 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-26 13:55:24 +0000 UTC 2025-07-26 13:55:24 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-dlcfr-6fb4c74686"}
  I0726 13:55:26.309782 23 deployment.go:578] Observed &Deployment event: MODIFIED
  I0726 13:55:26.309810 23 deployment.go:574] Observed Deployment test-deployment-dlcfr in namespace deployment-4383 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-26 13:55:24 +0000 UTC 2025-07-26 13:55:24 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-dlcfr-6fb4c74686"}
  I0726 13:55:26.309857 23 deployment.go:574] Observed Deployment test-deployment-dlcfr in namespace deployment-4383 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-07-26 13:55:24 +0000 UTC 2025-07-26 13:55:24 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0726 13:55:26.309977 23 deployment.go:578] Observed &Deployment event: MODIFIED
  I0726 13:55:26.309989 23 deployment.go:574] Observed Deployment test-deployment-dlcfr in namespace deployment-4383 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-07-26 13:55:24 +0000 UTC 2025-07-26 13:55:24 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0726 13:55:26.310032 23 deployment.go:574] Observed Deployment test-deployment-dlcfr in namespace deployment-4383 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-26 13:55:24 +0000 UTC 2025-07-26 13:55:24 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-dlcfr-6fb4c74686" is progressing.}
  I0726 13:55:26.310097 23 deployment.go:578] Observed &Deployment event: MODIFIED
  I0726 13:55:26.310108 23 deployment.go:574] Observed Deployment test-deployment-dlcfr in namespace deployment-4383 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-07-26 13:55:25 +0000 UTC 2025-07-26 13:55:25 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0726 13:55:26.310116 23 deployment.go:574] Observed Deployment test-deployment-dlcfr in namespace deployment-4383 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-26 13:55:25 +0000 UTC 2025-07-26 13:55:24 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-dlcfr-6fb4c74686" has successfully progressed.}
  I0726 13:55:26.310154 23 deployment.go:578] Observed &Deployment event: MODIFIED
  I0726 13:55:26.310163 23 deployment.go:574] Observed Deployment test-deployment-dlcfr in namespace deployment-4383 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-07-26 13:55:25 +0000 UTC 2025-07-26 13:55:25 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0726 13:55:26.310170 23 deployment.go:574] Observed Deployment test-deployment-dlcfr in namespace deployment-4383 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-26 13:55:25 +0000 UTC 2025-07-26 13:55:24 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-dlcfr-6fb4c74686" has successfully progressed.}
  I0726 13:55:26.310179 23 deployment.go:571] Found Deployment test-deployment-dlcfr in namespace deployment-4383 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0726 13:55:26.310186 23 deployment.go:582] Deployment test-deployment-dlcfr has an updated status
  STEP: patching the Statefulset Status @ 07/26/25 13:55:26.31
  I0726 13:55:26.310205 23 deployment.go:586] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0726 13:55:26.318094 23 deployment.go:590] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 07/26/25 13:55:26.318
  I0726 13:55:26.318993 23 deployment.go:615] Observed &Deployment event: ADDED
  I0726 13:55:26.319016 23 deployment.go:611] Observed deployment test-deployment-dlcfr in namespace deployment-4383 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-26 13:55:24 +0000 UTC 2025-07-26 13:55:24 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-dlcfr-6fb4c74686"}
  I0726 13:55:26.319085 23 deployment.go:615] Observed &Deployment event: MODIFIED
  I0726 13:55:26.319115 23 deployment.go:611] Observed deployment test-deployment-dlcfr in namespace deployment-4383 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-26 13:55:24 +0000 UTC 2025-07-26 13:55:24 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-dlcfr-6fb4c74686"}
  I0726 13:55:26.319123 23 deployment.go:611] Observed deployment test-deployment-dlcfr in namespace deployment-4383 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-07-26 13:55:24 +0000 UTC 2025-07-26 13:55:24 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0726 13:55:26.319262 23 deployment.go:615] Observed &Deployment event: MODIFIED
  I0726 13:55:26.319292 23 deployment.go:611] Observed deployment test-deployment-dlcfr in namespace deployment-4383 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-07-26 13:55:24 +0000 UTC 2025-07-26 13:55:24 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0726 13:55:26.319301 23 deployment.go:611] Observed deployment test-deployment-dlcfr in namespace deployment-4383 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-26 13:55:24 +0000 UTC 2025-07-26 13:55:24 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-dlcfr-6fb4c74686" is progressing.}
  I0726 13:55:26.319360 23 deployment.go:615] Observed &Deployment event: MODIFIED
  I0726 13:55:26.319408 23 deployment.go:611] Observed deployment test-deployment-dlcfr in namespace deployment-4383 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-07-26 13:55:25 +0000 UTC 2025-07-26 13:55:25 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0726 13:55:26.319416 23 deployment.go:611] Observed deployment test-deployment-dlcfr in namespace deployment-4383 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-26 13:55:25 +0000 UTC 2025-07-26 13:55:24 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-dlcfr-6fb4c74686" has successfully progressed.}
  I0726 13:55:26.319481 23 deployment.go:615] Observed &Deployment event: MODIFIED
  I0726 13:55:26.319546 23 deployment.go:611] Observed deployment test-deployment-dlcfr in namespace deployment-4383 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-07-26 13:55:25 +0000 UTC 2025-07-26 13:55:25 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0726 13:55:26.319575 23 deployment.go:611] Observed deployment test-deployment-dlcfr in namespace deployment-4383 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-07-26 13:55:25 +0000 UTC 2025-07-26 13:55:24 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-dlcfr-6fb4c74686" has successfully progressed.}
  I0726 13:55:26.319584 23 deployment.go:611] Observed deployment test-deployment-dlcfr in namespace deployment-4383 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0726 13:55:26.319678 23 deployment.go:615] Observed &Deployment event: MODIFIED
  I0726 13:55:26.319712 23 deployment.go:608] Found deployment test-deployment-dlcfr in namespace deployment-4383 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0726 13:55:26.319721 23 deployment.go:619] Deployment test-deployment-dlcfr has a patched status
  I0726 13:55:26.324084 23 deployment.go:632] Deployment "test-deployment-dlcfr":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-dlcfr",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4383",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "58f0915e-721b-4f2e-9e6d-47901fa53548",
      ResourceVersion: (string) (len=5) "45361",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889134924,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889134924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889134926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889134926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=3) "e2e": (string) (len=7) "testing"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889134926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889134926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-dlcfr-6fb4c74686\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0726 13:55:26.385431 23 deployment.go:40] New ReplicaSet "test-deployment-dlcfr-6fb4c74686" of Deployment "test-deployment-dlcfr":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-dlcfr-6fb4c74686",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4383",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "75a0096f-d964-47fd-9ca6-5147cb212ee2",
      ResourceVersion: (string) (len=5) "45344",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889134924,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-dlcfr",
          UID: (types.UID) (len=36) "58f0915e-721b-4f2e-9e6d-47901fa53548",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889134924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 35 38 66  |k:{\"uid\":\"58f|
              00000120  30 39 31 35 65 2d 37 32  31 62 2d 34 66 32 65 2d  |0915e-721b-4f2e-|
              00000130  39 65 36 64 2d 34 37 39  30 31 66 61 35 33 35 34  |9e6d-47901fa5354|
              00000140  38 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |8\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889134925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0726 13:55:26.392400 23 deployment.go:68] Pod "test-deployment-dlcfr-6fb4c74686-86qnx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-dlcfr-6fb4c74686-86qnx",
      GenerateName: (string) (len=33) "test-deployment-dlcfr-6fb4c74686-",
      Namespace: (string) (len=15) "deployment-4383",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "aef2b044-7d75-4e19-ad37-9fb2e53be976",
      ResourceVersion: (string) (len=5) "45343",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889134924,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-dlcfr-6fb4c74686",
          UID: (types.UID) (len=36) "75a0096f-d964-47fd-9ca6-5147cb212ee2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889134924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 37 35 61 30 30 39 36  66 2d 64 39 36 34 2d 34  |"75a0096f-d964-4|
              000000a0  37 66 64 2d 39 63 61 36  2d 35 31 34 37 63 62 32  |7fd-9ca6-5147cb2|
              000000b0  31 32 65 65 32 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |12ee2\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889134925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 35 38  2e 32 32 32 5c 22 7d 22  |2.168.58.222\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mvf9t",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mvf9t",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-16-254",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889134925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889134924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889134925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889134925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63889134924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.16.254",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.16.254"
        }
      },
      PodIP: (string) (len=14) "192.168.58.222",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.58.222"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63889134924,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63889134924,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://4fbe0fc2930fe6fd0710ba1f6623b8394748cd7728247c196123797717cb409d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-mvf9t",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0726 13:55:26.393413 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4383" for this suite. @ 07/26/25 13:55:26.398
• [2.175 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:863
  STEP: Creating a kubernetes client @ 07/26/25 13:55:26.408
  I0726 13:55:26.408289 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename resourcequota @ 07/26/25 13:55:26.408
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:55:26.422
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:55:26.424
  STEP: Creating a ResourceQuota with best effort scope @ 07/26/25 13:55:26.426
  STEP: Ensuring ResourceQuota status is calculated @ 07/26/25 13:55:26.43
  E0726 13:55:26.775164      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:55:27.775277      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 07/26/25 13:55:28.436
  STEP: Ensuring ResourceQuota status is calculated @ 07/26/25 13:55:28.442
  E0726 13:55:28.776294      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:55:29.776470      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 07/26/25 13:55:30.447
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 07/26/25 13:55:30.464
  E0726 13:55:30.776907      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:55:31.777137      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 07/26/25 13:55:32.47
  E0726 13:55:32.777287      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:55:33.777428      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 07/26/25 13:55:34.475
  STEP: Ensuring resource quota status released the pod usage @ 07/26/25 13:55:34.494
  E0726 13:55:34.778073      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:55:35.778152      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 07/26/25 13:55:36.499
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 07/26/25 13:55:36.512
  E0726 13:55:36.778701      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:55:37.778761      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 07/26/25 13:55:38.518
  E0726 13:55:38.778837      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:55:39.778904      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 07/26/25 13:55:40.523
  STEP: Ensuring resource quota status released the pod usage @ 07/26/25 13:55:40.544
  E0726 13:55:40.779873      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:55:41.779967      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:55:42.551460 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2268" for this suite. @ 07/26/25 13:55:42.556
• [16.158 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 07/26/25 13:55:42.566
  I0726 13:55:42.566849 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename container-runtime @ 07/26/25 13:55:42.567
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:55:42.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:55:42.583
  STEP: create the container @ 07/26/25 13:55:42.585
  I0726 13:55:42.596006      23 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 07/26/25 13:55:42.596
  E0726 13:55:42.780624      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:55:43.781510      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:55:44.782086      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: get the container status @ 07/26/25 13:55:45.62
  STEP: the container should be terminated @ 07/26/25 13:55:45.625
  STEP: the termination message should be set @ 07/26/25 13:55:45.625
  I0726 13:55:45.625408 23 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 07/26/25 13:55:45.625
  I0726 13:55:45.649280 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4531" for this suite. @ 07/26/25 13:55:45.655
• [3.098 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 07/26/25 13:55:45.664
  I0726 13:55:45.664547 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename replicaset @ 07/26/25 13:55:45.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:55:45.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:55:45.685
  I0726 13:55:45.702889 23 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  E0726 13:55:45.783156      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:55:46.783378      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:55:47.784395      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:55:48.784486      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:55:49.784661      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:55:50.708351 23 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/26/25 13:55:50.708
  STEP: Scaling up "test-rs" replicaset @ 07/26/25 13:55:50.708
  I0726 13:55:50.721136 23 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 07/26/25 13:55:50.721
  I0726 13:55:50.731027 23 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-2053 with ReadyReplicas 1, AvailableReplicas 1
  I0726 13:55:50.748604 23 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-2053 with ReadyReplicas 1, AvailableReplicas 1
  I0726 13:55:50.766941 23 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-2053 with ReadyReplicas 1, AvailableReplicas 1
  I0726 13:55:50.773743 23 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-2053 with ReadyReplicas 1, AvailableReplicas 1
  E0726 13:55:50.785025      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:55:51.421446 23 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-2053 with ReadyReplicas 2, AvailableReplicas 2
  E0726 13:55:51.786000      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:55:52.013173 23 replica_set.go:547] observed Replicaset test-rs in namespace replicaset-2053 with ReadyReplicas 3 found true
  I0726 13:55:52.013304 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2053" for this suite. @ 07/26/25 13:55:52.018
• [6.362 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:250
  STEP: Creating a kubernetes client @ 07/26/25 13:55:52.026
  I0726 13:55:52.026346 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename downward-api @ 07/26/25 13:55:52.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:55:52.04
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:55:52.042
  STEP: Creating a pod to test downward API volume plugin @ 07/26/25 13:55:52.044
  E0726 13:55:52.786112      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:55:53.786204      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:55:54.786906      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:55:55.787878      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 13:55:56.075
  I0726 13:55:56.080176 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod downwardapi-volume-5efc6f3d-88a0-4c25-8432-79fb9dee2aeb container client-container: <nil>
  STEP: delete the pod @ 07/26/25 13:55:56.094
  I0726 13:55:56.119417 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2481" for this suite. @ 07/26/25 13:55:56.124
• [4.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:239
  STEP: Creating a kubernetes client @ 07/26/25 13:55:56.134
  I0726 13:55:56.134476 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename resourcequota @ 07/26/25 13:55:56.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:55:56.147
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:55:56.15
  STEP: Counting existing ResourceQuota @ 07/26/25 13:55:56.152
  E0726 13:55:56.788886      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:55:57.789348      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:55:58.789843      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:55:59.790422      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:56:00.790532      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/26/25 13:56:01.158
  STEP: Ensuring resource quota status is calculated @ 07/26/25 13:56:01.164
  E0726 13:56:01.790862      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:56:02.791441      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 07/26/25 13:56:03.169
  STEP: Ensuring ResourceQuota status captures the pod usage @ 07/26/25 13:56:03.188
  E0726 13:56:03.792356      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:56:04.792850      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 07/26/25 13:56:05.195
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 07/26/25 13:56:05.197
  STEP: Ensuring a pod cannot update its resource requirements @ 07/26/25 13:56:05.198
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 07/26/25 13:56:05.202
  E0726 13:56:05.793659      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:56:06.793876      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 07/26/25 13:56:07.207
  STEP: Ensuring resource quota status released the pod usage @ 07/26/25 13:56:07.229
  E0726 13:56:07.793999      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:56:08.794085      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:56:09.235502 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7071" for this suite. @ 07/26/25 13:56:09.243
• [13.121 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide hostIPs as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:118
  STEP: Creating a kubernetes client @ 07/26/25 13:56:09.256
  I0726 13:56:09.256016 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename downward-api @ 07/26/25 13:56:09.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:56:09.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:56:09.271
  STEP: Creating a pod to test downward api env vars @ 07/26/25 13:56:09.272
  E0726 13:56:09.794949      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:56:10.795032      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:56:11.795227      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:56:12.795383      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 13:56:13.304
  I0726 13:56:13.309401 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod downward-api-795a5170-750c-4af2-8072-121f899f7833 container dapi-container: <nil>
  STEP: delete the pod @ 07/26/25 13:56:13.317
  I0726 13:56:13.341226 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4690" for this suite. @ 07/26/25 13:56:13.346
• [4.103 seconds]
------------------------------
S
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 07/26/25 13:56:13.358
  I0726 13:56:13.358777 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename pod-network-test @ 07/26/25 13:56:13.359
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:56:13.369
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:56:13.371
  STEP: Performing setup for networking test in namespace pod-network-test-3971 @ 07/26/25 13:56:13.373
  STEP: creating a selector @ 07/26/25 13:56:13.373
  STEP: Creating the service pods in kubernetes @ 07/26/25 13:56:13.373
  I0726 13:56:13.373596 23 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0726 13:56:13.796308      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:56:14.796489      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:56:15.797147      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:56:16.797237      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:56:17.798160      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:56:18.798247      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:56:19.798434      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:56:20.799399      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:56:21.800159      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:56:22.800189      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:56:23.800869      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:56:24.800930      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:56:25.801058      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:56:26.801130      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 07/26/25 13:56:27.538
  E0726 13:56:27.801775      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:56:28.801811      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:56:29.560799 23 utils.go:802] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0726 13:56:29.560830 23 networking.go:42] Breadth first check of 192.168.58.199 on host 172.31.16.254...
  I0726 13:56:29.565090 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.58.198:9080/dial?request=hostname&protocol=udp&host=192.168.58.199&port=8081&tries=1'] Namespace:pod-network-test-3971 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0726 13:56:29.565114 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0726 13:56:29.565153 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3971/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.58.198%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.58.199%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0726 13:56:29.609287 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0726 13:56:29.609328 23 utils.go:355] Waiting for responses: map[]
  I0726 13:56:29.609337 23 utils.go:359] reached 192.168.58.199 after 0/1 tries
  I0726 13:56:29.609344 23 networking.go:42] Breadth first check of 192.168.248.152 on host 172.31.3.117...
  I0726 13:56:29.614277 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.58.198:9080/dial?request=hostname&protocol=udp&host=192.168.248.152&port=8081&tries=1'] Namespace:pod-network-test-3971 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0726 13:56:29.614290 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0726 13:56:29.614326 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3971/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.58.198%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.248.152%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0726 13:56:29.653798 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0726 13:56:29.653843 23 utils.go:355] Waiting for responses: map[]
  I0726 13:56:29.653851 23 utils.go:359] reached 192.168.248.152 after 0/1 tries
  I0726 13:56:29.653859 23 networking.go:42] Breadth first check of 192.168.13.55 on host 172.31.72.233...
  I0726 13:56:29.658198 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.58.198:9080/dial?request=hostname&protocol=udp&host=192.168.13.55&port=8081&tries=1'] Namespace:pod-network-test-3971 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0726 13:56:29.658212 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0726 13:56:29.658258 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3971/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.58.198%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.13.55%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0726 13:56:29.696476 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0726 13:56:29.696517 23 utils.go:355] Waiting for responses: map[]
  I0726 13:56:29.696526 23 utils.go:359] reached 192.168.13.55 after 0/1 tries
  I0726 13:56:29.696534 23 networking.go:53] Going to retry 0 out of 3 pods....
  I0726 13:56:29.696626 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3971" for this suite. @ 07/26/25 13:56:29.701
• [16.351 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:802
  STEP: Creating a kubernetes client @ 07/26/25 13:56:29.71
  I0726 13:56:29.710303 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename job @ 07/26/25 13:56:29.711
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:56:29.726
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:56:29.728
  STEP: Creating a job @ 07/26/25 13:56:29.73
  STEP: Ensuring job reaches completions @ 07/26/25 13:56:29.737
  E0726 13:56:29.802888      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:56:30.803019      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:56:31.803319      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:56:32.803486      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:56:33.804352      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:56:34.804882      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:56:35.805589      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:56:36.805797      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:56:37.767970 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7457" for this suite. @ 07/26/25 13:56:37.772
• [8.073 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:87
  STEP: Creating a kubernetes client @ 07/26/25 13:56:37.783
  I0726 13:56:37.783269 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename replication-controller @ 07/26/25 13:56:37.784
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:56:37.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:56:37.798
  I0726 13:56:37.801564 23 rc.go:546] Creating quota "condition-test" that allows only two pods to run in the current namespace
  E0726 13:56:37.806687      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:56:38.806808      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 07/26/25 13:56:38.817
  STEP: Checking rc "condition-test" has the desired failure condition set @ 07/26/25 13:56:38.823
  E0726 13:56:39.806927      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 07/26/25 13:56:39.831
  I0726 13:56:39.842855 23 rc.go:733] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 07/26/25 13:56:39.842
  I0726 13:56:39.848390 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7362" for this suite. @ 07/26/25 13:56:39.852
• [2.077 seconds]
------------------------------
S
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:79
  STEP: Creating a kubernetes client @ 07/26/25 13:56:39.86
  I0726 13:56:39.860100 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename svcaccounts @ 07/26/25 13:56:39.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:56:39.875
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:56:39.877
  E0726 13:56:40.807798      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:56:41.807891      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 07/26/25 13:56:41.916
  I0726 13:56:41.916150 23 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7566 pod-service-account-2d023d5a-03a6-4117-96c3-047db0232a73 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 07/26/25 13:56:41.995
  I0726 13:56:41.995081 23 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7566 pod-service-account-2d023d5a-03a6-4117-96c3-047db0232a73 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 07/26/25 13:56:42.074
  I0726 13:56:42.074501 23 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7566 pod-service-account-2d023d5a-03a6-4117-96c3-047db0232a73 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0726 13:56:42.154897 23 service_accounts.go:119] Got root ca configmap in namespace "svcaccounts-7566"
  I0726 13:56:42.156199 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7566" for this suite. @ 07/26/25 13:56:42.161
• [2.310 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:647
  STEP: Creating a kubernetes client @ 07/26/25 13:56:42.17
  I0726 13:56:42.170771 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename gc @ 07/26/25 13:56:42.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:56:42.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:56:42.186
  STEP: create the rc @ 07/26/25 13:56:42.262
  I0726 13:56:42.271504      23 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  E0726 13:56:42.808099      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:56:43.808526      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:56:44.808556      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:56:45.812495      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:56:46.813235      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:56:47.813322      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the rc @ 07/26/25 13:56:48.282
  STEP: wait for the rc to be deleted @ 07/26/25 13:56:48.302
  E0726 13:56:48.814867      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:56:49.358515 23 garbage_collector.go:678] 80 pods remaining
  I0726 13:56:49.360587 23 garbage_collector.go:685] 80 pods has nil DeletionTimestamp
  I0726 13:56:49.360596 23 garbage_collector.go:686] 
  E0726 13:56:49.815614      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:56:50.318008 23 garbage_collector.go:678] 70 pods remaining
  I0726 13:56:50.318049 23 garbage_collector.go:685] 70 pods has nil DeletionTimestamp
  I0726 13:56:50.318055 23 garbage_collector.go:686] 
  E0726 13:56:50.816064      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:56:51.316868 23 garbage_collector.go:678] 60 pods remaining
  I0726 13:56:51.316898 23 garbage_collector.go:685] 60 pods has nil DeletionTimestamp
  I0726 13:56:51.316903 23 garbage_collector.go:686] 
  E0726 13:56:51.816353      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:56:52.313826 23 garbage_collector.go:678] 40 pods remaining
  I0726 13:56:52.313862 23 garbage_collector.go:685] 40 pods has nil DeletionTimestamp
  I0726 13:56:52.313867 23 garbage_collector.go:686] 
  E0726 13:56:52.817040      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:56:53.313342 23 garbage_collector.go:678] 31 pods remaining
  I0726 13:56:53.313366 23 garbage_collector.go:685] 30 pods has nil DeletionTimestamp
  I0726 13:56:53.313372 23 garbage_collector.go:686] 
  E0726 13:56:53.819245      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:56:54.311283 23 garbage_collector.go:678] 20 pods remaining
  I0726 13:56:54.311315 23 garbage_collector.go:685] 20 pods has nil DeletionTimestamp
  I0726 13:56:54.311321 23 garbage_collector.go:686] 
  E0726 13:56:54.820320      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 07/26/25 13:56:55.314
  W0726 13:56:55.320545      23 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0726 13:56:55.320581 23 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0726 13:56:55.320727 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9962" for this suite. @ 07/26/25 13:56:55.325
• [13.165 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:124
  STEP: Creating a kubernetes client @ 07/26/25 13:56:55.335
  I0726 13:56:55.335621 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename projected @ 07/26/25 13:56:55.336
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:56:55.35
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:56:55.352
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-1a0f329f-9fab-4f14-a56b-50ee99dab570 @ 07/26/25 13:56:55.426
  STEP: Creating the pod @ 07/26/25 13:56:55.433
  E0726 13:56:55.820423      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:56:56.820522      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-1a0f329f-9fab-4f14-a56b-50ee99dab570 @ 07/26/25 13:56:57.474
  STEP: waiting to observe update in volume @ 07/26/25 13:56:57.48
  E0726 13:56:57.821235      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:56:58.821396      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:56:59.822078      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:00.822311      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:01.822397      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:02.823377      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:03.824282      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:04.824369      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:05.824790      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:06.825798      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:07.826479      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:08.826678      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:09.826949      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:10.827155      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:11.827417      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:12.828339      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:13.829120      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:14.829204      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:15.829828      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:16.830832      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:17.831013      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:18.831224      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:19.831342      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:20.831855      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:21.832231      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:22.832357      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:23.832547      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:24.832708      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:25.833184      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:26.833277      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:27.833326      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:28.833417      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:29.834143      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:30.834231      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:31.834767      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:32.834885      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:33.834984      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:34.835146      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:35.835793      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:36.835883      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:37.836732      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:38.836940      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:39.837485      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:40.837750      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:41.838289      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:42.839319      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:43.839727      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:44.839790      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:45.840578      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:46.840916      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:47.841249      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:48.841333      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:49.841714      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:50.841826      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:51.842762      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:52.843409      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:53.844017      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:54.844247      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:55.845144      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:56.845364      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:57.845409      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:58.845523      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:57:59.845876      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:58:00.846028      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:58:01.846678      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:58:02.847559      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:58:03.848477      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:58:04.848703      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:58:05.849244      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:58:06.849350      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:58:07.849770      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:58:08.850852      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:58:09.851024      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:58:10.851189      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:58:11.851252      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:58:12.852315      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:58:13.852407      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:58:14.852542      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:58:15.852759      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:58:16.852908      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:58:17.853851      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:58:18.853977      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:58:19.854038      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:58:20.854223      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:58:21.854366      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:58:21.923649 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5276" for this suite. @ 07/26/25 13:58:21.928
• [86.602 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 07/26/25 13:58:21.937
  I0726 13:58:21.937837 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 07/26/25 13:58:21.938
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:58:21.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:58:21.954
  STEP: create the container to handle the HTTPGet hook request. @ 07/26/25 13:58:22.029
  E0726 13:58:22.854560      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:58:23.854749      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 07/26/25 13:58:24.059
  E0726 13:58:24.854861      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:58:25.854961      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 07/26/25 13:58:26.078
  E0726 13:58:26.855878      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:58:27.856054      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:58:28.856090      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:58:29.856300      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 07/26/25 13:58:30.103
  I0726 13:58:30.120791 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-3693" for this suite. @ 07/26/25 13:58:30.125
• [8.196 seconds]
------------------------------
S
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 07/26/25 13:58:30.134
  I0726 13:58:30.134355 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename configmap @ 07/26/25 13:58:30.134
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:58:30.147
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:58:30.149
  STEP: Creating configMap that has name configmap-test-emptyKey-fbf8efb0-ce15-4459-8c1a-6ae3dd4c799c @ 07/26/25 13:58:30.15
  I0726 13:58:30.152444 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6326" for this suite. @ 07/26/25 13:58:30.225
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 07/26/25 13:58:30.237
  I0726 13:58:30.237072 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename container-probe @ 07/26/25 13:58:30.237
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:58:30.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:58:30.251
  E0726 13:58:30.856406      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:58:31.856580      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:58:32.856765      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:58:33.856958      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:58:34.857870      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:58:35.858653      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:58:36.858835      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:58:37.859862      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:58:38.859962      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:58:39.860056      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:58:40.860875      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:58:41.861681      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:58:42.862313      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:58:43.862871      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:58:44.863777      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:58:45.863864      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:58:46.864863      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:58:47.865469      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:58:48.866177      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:58:49.867020      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:58:50.867480      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:58:51.868093      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:58:52.868629      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:58:53.868857      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:58:54.869134      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:58:55.869222      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:58:56.869315      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:58:57.869859      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:58:58.870707      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:58:59.871463      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:59:00.871609      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:59:01.872438      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:59:02.872528      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:59:03.872853      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:59:04.873549      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:59:05.873904      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:59:06.874794      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:59:07.874896      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:59:08.875008      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:59:09.875318      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:59:10.875500      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:59:11.876366      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:59:12.876654      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:59:13.876686      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:59:14.877646      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:59:15.878664      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:59:16.878790      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:59:17.879421      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:59:18.880199      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:59:19.880363      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:59:20.881249      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:59:21.881751      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:59:22.882371      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:59:23.882439      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:59:24.883234      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:59:25.883836      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:59:26.883945      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:59:27.884535      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:59:28.884869      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:59:29.885917      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:59:30.268604 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6285" for this suite. @ 07/26/25 13:59:30.273
• [60.046 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1394
  STEP: Creating a kubernetes client @ 07/26/25 13:59:30.282
  I0726 13:59:30.282969 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename kubectl @ 07/26/25 13:59:30.283
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:59:30.306
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:59:30.308
  I0726 13:59:30.311571 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-2299 create -f -'
  I0726 13:59:30.390198 23 builder.go:146] stderr: ""
  I0726 13:59:30.390233 23 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I0726 13:59:30.390271 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-2299 create -f -'
  I0726 13:59:30.485427 23 builder.go:146] stderr: ""
  I0726 13:59:30.485473 23 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 07/26/25 13:59:30.485
  E0726 13:59:30.886040      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:59:31.491884 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0726 13:59:31.491914 23 framework.go:733] Found 1 / 1
  I0726 13:59:31.491929 23 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0726 13:59:31.497429 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0726 13:59:31.497454 23 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0726 13:59:31.497491 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-2299 describe pod agnhost-primary-8qrk5'
  I0726 13:59:31.548163 23 builder.go:146] stderr: ""
  I0726 13:59:31.548225 23 builder.go:147] stdout: "Name:             agnhost-primary-8qrk5\nNamespace:        kubectl-2299\nPriority:         0\nService Account:  default\nNode:             ip-172-31-72-233/172.31.72.233\nStart Time:       Sat, 26 Jul 2025 13:59:30 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               192.168.13.24\nIPs:\n  IP:           192.168.13.24\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://1135a918b72e526df82a4838d7b8bfc12e71958d60f8bcbe47fb4c8f69c1f3f9\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.53\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sat, 26 Jul 2025 13:59:30 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-57tzv (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-57tzv:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    Optional:                false\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-2299/agnhost-primary-8qrk5 to ip-172-31-72-233\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.53\" already present on machine\n  Normal  Created    1s    kubelet            Created container: agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  I0726 13:59:31.548274 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-2299 describe rc agnhost-primary'
  I0726 13:59:31.598298 23 builder.go:146] stderr: ""
  I0726 13:59:31.598352 23 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-2299\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.53\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  1s    replication-controller  Created pod: agnhost-primary-8qrk5\n"
  I0726 13:59:31.598400 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-2299 describe service agnhost-primary'
  I0726 13:59:31.649475 23 builder.go:146] stderr: ""
  I0726 13:59:31.649519 23 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-2299\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.152.183.185\nIPs:                      10.152.183.185\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                192.168.13.24:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I0726 13:59:31.655108 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-2299 describe node ip-172-31-16-254'
  I0726 13:59:31.725439 23 builder.go:146] stderr: ""
  I0726 13:59:31.725525 23 builder.go:147] stdout: "Name:               ip-172-31-16-254\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    juju-application=kubernetes-worker\n                    juju-charm=kubernetes-worker\n                    juju.io/cloud=ec2\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-16-254\n                    kubernetes.io/os=linux\n                    topology.kubernetes.io/zone=us-east-1c\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sat, 26 Jul 2025 12:12:41 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-16-254\n  AcquireTime:     <unset>\n  RenewTime:       Sat, 26 Jul 2025 13:59:28 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Sat, 26 Jul 2025 12:20:36 +0000   Sat, 26 Jul 2025 12:20:36 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Sat, 26 Jul 2025 13:55:01 +0000   Sat, 26 Jul 2025 12:12:41 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Sat, 26 Jul 2025 13:55:01 +0000   Sat, 26 Jul 2025 12:12:41 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Sat, 26 Jul 2025 13:55:01 +0000   Sat, 26 Jul 2025 12:12:41 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Sat, 26 Jul 2025 13:55:01 +0000   Sat, 26 Jul 2025 12:16:07 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  172.31.16.254\n  Hostname:    ip-172-31-16-254\nCapacity:\n  cpu:                2\n  ephemeral-storage:  15159300Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7967624Ki\n  pods:               110\nAllocatable:\n  cpu:                2\n  ephemeral-storage:  13970810857\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7865224Ki\n  pods:               110\nSystem Info:\n  Machine ID:                      ec2c4ea55a5d240794943b788670e5ac\n  System UUID:                     ec2c4ea5-5a5d-2407-9494-3b788670e5ac\n  Boot ID:                         c0983b80-97e2-476c-b541-61158237ef04\n  Kernel Version:                  6.8.0-1030-aws\n  OS Image:                        Ubuntu 24.04.2 LTS\n  Operating System:                linux\n  Architecture:                    amd64\n  Container Runtime Version:       containerd://1.6.38\n  Kubelet Version:                 v1.33.3\n  Kube-Proxy Version:              \nNon-terminated Pods:               (5 in total)\n  Namespace                        Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                        ----                                                       ------------  ----------  ---------------  -------------  ---\n  container-probe-6285             test-webserver-7107a0fc-46f5-4d76-b4ae-eab9bbfb4d43        0 (0%)        0 (0%)      0 (0%)           0 (0%)         61s\n  ingress-nginx-kubernetes-worker  nginx-ingress-controller-kubernetes-worker-dd4tx           0 (0%)        0 (0%)      0 (0%)           0 (0%)         6m5s\n  kube-system                      calico-node-blf7s                                          250m (12%)    0 (0%)      0 (0%)           0 (0%)         98m\n  sonobuoy                         sonobuoy                                                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         97m\n  sonobuoy                         sonobuoy-systemd-logs-daemon-set-b24d58e9d81c4ec2-9zvnc    0 (0%)        0 (0%)      0 (0%)           0 (0%)         97m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                250m (12%)  0 (0%)\n  memory             0 (0%)      0 (0%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:              <none>\n"
  I0726 13:59:31.725596 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-2299 describe namespace kubectl-2299'
  I0726 13:59:31.777231 23 builder.go:146] stderr: ""
  I0726 13:59:31.777268 23 builder.go:147] stdout: "Name:         kubectl-2299\nLabels:       e2e-framework=kubectl\n              e2e-run=fcb8c729-7b66-4bcf-9daa-e32cad6521b4\n              kubernetes.io/metadata.name=kubectl-2299\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0726 13:59:31.777390 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2299" for this suite. @ 07/26/25 13:59:31.781
• [1.506 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 07/26/25 13:59:31.789
  I0726 13:59:31.789532 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename events @ 07/26/25 13:59:31.79
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:59:31.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:59:31.804
  STEP: creating a test event @ 07/26/25 13:59:31.806
  STEP: listing all events in all namespaces @ 07/26/25 13:59:31.812
  STEP: patching the test event @ 07/26/25 13:59:31.816
  STEP: fetching the test event @ 07/26/25 13:59:31.824
  STEP: updating the test event @ 07/26/25 13:59:31.828
  STEP: getting the test event @ 07/26/25 13:59:31.841
  STEP: deleting the test event @ 07/26/25 13:59:31.845
  STEP: listing all events in all namespaces @ 07/26/25 13:59:31.855
  I0726 13:59:31.861136 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-6771" for this suite. @ 07/26/25 13:59:31.865
• [0.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 07/26/25 13:59:31.874
  I0726 13:59:31.874622 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 07/26/25 13:59:31.875
  E0726 13:59:31.886084      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:59:31.886
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:59:31.888
  STEP: creating a target pod @ 07/26/25 13:59:31.889
  E0726 13:59:32.886422      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:59:33.886545      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 07/26/25 13:59:33.917
  E0726 13:59:34.886806      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:59:35.886889      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod's generation is 2 @ 07/26/25 13:59:35.936
  STEP: checking pod container endpoints @ 07/26/25 13:59:35.94
  I0726 13:59:35.940586 23 exec_util.go:63] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-73 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0726 13:59:35.940604 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0726 13:59:35.940658 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-73/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0726 13:59:35.981567 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0726 13:59:35.981591 23 exec_util.go:112] Exec stderr: ""
  I0726 13:59:35.989429 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-73" for this suite. @ 07/26/25 13:59:35.994
• [4.128 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 07/26/25 13:59:36.002
  I0726 13:59:36.002464 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename sysctl @ 07/26/25 13:59:36.002
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:59:36.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:59:36.016
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 07/26/25 13:59:36.017
  STEP: Watching for error events or started pod @ 07/26/25 13:59:36.029
  E0726 13:59:36.887196      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:59:37.887897      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 07/26/25 13:59:38.034
  STEP: Checking that the pod succeeded @ 07/26/25 13:59:38.043
  STEP: Getting logs from the pod @ 07/26/25 13:59:38.043
  STEP: Checking that the sysctl is actually updated @ 07/26/25 13:59:38.052
  I0726 13:59:38.052263 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-5270" for this suite. @ 07/26/25 13:59:38.056
• [2.064 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:333
  STEP: Creating a kubernetes client @ 07/26/25 13:59:38.066
  I0726 13:59:38.066191 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename sched-pred @ 07/26/25 13:59:38.066
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:59:38.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:59:38.079
  I0726 13:59:38.081299 23 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0726 13:59:38.164852 23 util.go:390] Waiting for terminating namespaces to be deleted...
  I0726 13:59:38.171203 23 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-16-254 before test
  I0726 13:59:38.176168 23 predicates.go:958] ephemeral-containers-target-pod from ephemeral-containers-test-73 started at 2025-07-26 13:59:31 +0000 UTC (1 container statuses recorded)
  I0726 13:59:38.176184 23 predicates.go:960] 	Container test-container-1 ready: true, restart count 0
  I0726 13:59:38.176190 23 predicates.go:958] nginx-ingress-controller-kubernetes-worker-dd4tx from ingress-nginx-kubernetes-worker started at 2025-07-26 13:53:26 +0000 UTC (1 container statuses recorded)
  I0726 13:59:38.176195 23 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0726 13:59:38.176200 23 predicates.go:958] calico-node-blf7s from kube-system started at 2025-07-26 12:20:34 +0000 UTC (1 container statuses recorded)
  I0726 13:59:38.176205 23 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0726 13:59:38.176210 23 predicates.go:958] sonobuoy from sonobuoy started at 2025-07-26 12:22:08 +0000 UTC (1 container statuses recorded)
  I0726 13:59:38.176214 23 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0726 13:59:38.176219 23 predicates.go:958] sonobuoy-systemd-logs-daemon-set-b24d58e9d81c4ec2-9zvnc from sonobuoy started at 2025-07-26 12:22:10 +0000 UTC (2 container statuses recorded)
  I0726 13:59:38.176223 23 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0726 13:59:38.176228 23 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0726 13:59:38.176234 23 predicates.go:958] sysctl-bcf6a96b-c9d5-49b6-b614-9974f579cfe3 from sysctl-5270 started at 2025-07-26 13:59:36 +0000 UTC (1 container statuses recorded)
  I0726 13:59:38.176239 23 predicates.go:960] 	Container test-container ready: false, restart count 0
  I0726 13:59:38.176244 23 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-3-117 before test
  I0726 13:59:38.181314 23 predicates.go:958] nginx-ingress-controller-kubernetes-worker-nds9b from ingress-nginx-kubernetes-worker started at 2025-07-26 12:09:43 +0000 UTC (1 container statuses recorded)
  I0726 13:59:38.181328 23 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0726 13:59:38.181334 23 predicates.go:958] calico-node-9cfgl from kube-system started at 2025-07-26 12:20:20 +0000 UTC (1 container statuses recorded)
  I0726 13:59:38.181339 23 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0726 13:59:38.181346 23 predicates.go:958] coredns-5d946bb58-9c75c from kube-system started at 2025-07-26 12:09:42 +0000 UTC (1 container statuses recorded)
  I0726 13:59:38.181351 23 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0726 13:59:38.181356 23 predicates.go:958] kube-state-metrics-b84f44f45-hmmkc from kube-system started at 2025-07-26 12:09:42 +0000 UTC (1 container statuses recorded)
  I0726 13:59:38.181360 23 predicates.go:960] 	Container kube-state-metrics ready: true, restart count 0
  I0726 13:59:38.181365 23 predicates.go:958] metrics-server-v0.7.2-7d878b47f8-v6f7l from kube-system started at 2025-07-26 12:09:42 +0000 UTC (2 container statuses recorded)
  I0726 13:59:38.181371 23 predicates.go:960] 	Container metrics-server ready: true, restart count 0
  I0726 13:59:38.181381 23 predicates.go:960] 	Container metrics-server-nanny ready: true, restart count 0
  I0726 13:59:38.181385 23 predicates.go:958] dashboard-metrics-scraper-5cf87bc988-nlxsl from kubernetes-dashboard started at 2025-07-26 12:09:42 +0000 UTC (1 container statuses recorded)
  I0726 13:59:38.181389 23 predicates.go:960] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I0726 13:59:38.181394 23 predicates.go:958] kubernetes-dashboard-6858576c98-5drtf from kubernetes-dashboard started at 2025-07-26 12:09:42 +0000 UTC (1 container statuses recorded)
  I0726 13:59:38.181398 23 predicates.go:960] 	Container kubernetes-dashboard ready: true, restart count 2
  I0726 13:59:38.181403 23 predicates.go:958] sonobuoy-systemd-logs-daemon-set-b24d58e9d81c4ec2-l9c94 from sonobuoy started at 2025-07-26 12:22:10 +0000 UTC (2 container statuses recorded)
  I0726 13:59:38.181407 23 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0726 13:59:38.181411 23 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0726 13:59:38.181415 23 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-72-233 before test
  I0726 13:59:38.184906 23 predicates.go:958] nginx-ingress-controller-kubernetes-worker-ktvqz from ingress-nginx-kubernetes-worker started at 2025-07-26 12:16:51 +0000 UTC (1 container statuses recorded)
  I0726 13:59:38.184919 23 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0726 13:59:38.184924 23 predicates.go:958] calico-node-5sb6s from kube-system started at 2025-07-26 12:19:38 +0000 UTC (1 container statuses recorded)
  I0726 13:59:38.184928 23 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0726 13:59:38.184933 23 predicates.go:958] sonobuoy-e2e-job-99de9743d9bd4869 from sonobuoy started at 2025-07-26 12:22:10 +0000 UTC (2 container statuses recorded)
  I0726 13:59:38.184937 23 predicates.go:960] 	Container e2e ready: true, restart count 0
  I0726 13:59:38.184942 23 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0726 13:59:38.184947 23 predicates.go:958] sonobuoy-systemd-logs-daemon-set-b24d58e9d81c4ec2-mn48h from sonobuoy started at 2025-07-26 12:22:10 +0000 UTC (2 container statuses recorded)
  I0726 13:59:38.184951 23 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0726 13:59:38.184956 23 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-16-254 @ 07/26/25 13:59:38.199
  STEP: verifying the node has the label node ip-172-31-3-117 @ 07/26/25 13:59:38.214
  STEP: verifying the node has the label node ip-172-31-72-233 @ 07/26/25 13:59:38.227
  I0726 13:59:38.278984 23 predicates.go:373] Pod ephemeral-containers-target-pod requesting resource cpu=0m on Node ip-172-31-16-254
  I0726 13:59:38.279023 23 predicates.go:373] Pod nginx-ingress-controller-kubernetes-worker-dd4tx requesting resource cpu=0m on Node ip-172-31-16-254
  I0726 13:59:38.279030 23 predicates.go:373] Pod nginx-ingress-controller-kubernetes-worker-ktvqz requesting resource cpu=0m on Node ip-172-31-72-233
  I0726 13:59:38.279036 23 predicates.go:373] Pod nginx-ingress-controller-kubernetes-worker-nds9b requesting resource cpu=0m on Node ip-172-31-3-117
  I0726 13:59:38.279043 23 predicates.go:373] Pod calico-node-5sb6s requesting resource cpu=250m on Node ip-172-31-72-233
  I0726 13:59:38.279050 23 predicates.go:373] Pod calico-node-9cfgl requesting resource cpu=250m on Node ip-172-31-3-117
  I0726 13:59:38.279056 23 predicates.go:373] Pod calico-node-blf7s requesting resource cpu=250m on Node ip-172-31-16-254
  I0726 13:59:38.279062 23 predicates.go:373] Pod coredns-5d946bb58-9c75c requesting resource cpu=100m on Node ip-172-31-3-117
  I0726 13:59:38.279067 23 predicates.go:373] Pod kube-state-metrics-b84f44f45-hmmkc requesting resource cpu=0m on Node ip-172-31-3-117
  I0726 13:59:38.279144 23 predicates.go:373] Pod metrics-server-v0.7.2-7d878b47f8-v6f7l requesting resource cpu=5m on Node ip-172-31-3-117
  I0726 13:59:38.279178 23 predicates.go:373] Pod dashboard-metrics-scraper-5cf87bc988-nlxsl requesting resource cpu=0m on Node ip-172-31-3-117
  I0726 13:59:38.279185 23 predicates.go:373] Pod kubernetes-dashboard-6858576c98-5drtf requesting resource cpu=0m on Node ip-172-31-3-117
  I0726 13:59:38.279190 23 predicates.go:373] Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-16-254
  I0726 13:59:38.279197 23 predicates.go:373] Pod sonobuoy-e2e-job-99de9743d9bd4869 requesting resource cpu=0m on Node ip-172-31-72-233
  I0726 13:59:38.279203 23 predicates.go:373] Pod sonobuoy-systemd-logs-daemon-set-b24d58e9d81c4ec2-9zvnc requesting resource cpu=0m on Node ip-172-31-16-254
  I0726 13:59:38.279208 23 predicates.go:373] Pod sonobuoy-systemd-logs-daemon-set-b24d58e9d81c4ec2-l9c94 requesting resource cpu=0m on Node ip-172-31-3-117
  I0726 13:59:38.279213 23 predicates.go:373] Pod sonobuoy-systemd-logs-daemon-set-b24d58e9d81c4ec2-mn48h requesting resource cpu=0m on Node ip-172-31-72-233
  STEP: Starting Pods to consume most of the cluster CPU. @ 07/26/25 13:59:38.279
  I0726 13:59:38.279334 23 predicates.go:383] Creating a pod which consumes cpu=1225m on Node ip-172-31-16-254
  I0726 13:59:38.290366 23 predicates.go:383] Creating a pod which consumes cpu=1151m on Node ip-172-31-3-117
  I0726 13:59:38.298180 23 predicates.go:383] Creating a pod which consumes cpu=1225m on Node ip-172-31-72-233
  E0726 13:59:38.888610      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:59:39.888728      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 07/26/25 13:59:40.323
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-7deba90a-a57d-4555-bfb9-2b26b2b61e5c.1855d1dd4b20b90b], Reason = [Scheduled], Message = [Successfully assigned sched-pred-4735/filler-pod-7deba90a-a57d-4555-bfb9-2b26b2b61e5c to ip-172-31-3-117] @ 07/26/25 13:59:40.327
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-7deba90a-a57d-4555-bfb9-2b26b2b61e5c.1855d1dd6a27f0f1], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 07/26/25 13:59:40.327
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-7deba90a-a57d-4555-bfb9-2b26b2b61e5c.1855d1dd6b769ab5], Reason = [Created], Message = [Created container: filler-pod-7deba90a-a57d-4555-bfb9-2b26b2b61e5c] @ 07/26/25 13:59:40.327
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-7deba90a-a57d-4555-bfb9-2b26b2b61e5c.1855d1dd6e01c16f], Reason = [Started], Message = [Started container filler-pod-7deba90a-a57d-4555-bfb9-2b26b2b61e5c] @ 07/26/25 13:59:40.327
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-7fcebdb5-c371-416d-89e4-09c4e84d4b5f.1855d1dd4a64e613], Reason = [Scheduled], Message = [Successfully assigned sched-pred-4735/filler-pod-7fcebdb5-c371-416d-89e4-09c4e84d4b5f to ip-172-31-16-254] @ 07/26/25 13:59:40.327
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-7fcebdb5-c371-416d-89e4-09c4e84d4b5f.1855d1dd6ae086a4], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 07/26/25 13:59:40.327
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-7fcebdb5-c371-416d-89e4-09c4e84d4b5f.1855d1dd6c646c85], Reason = [Created], Message = [Created container: filler-pod-7fcebdb5-c371-416d-89e4-09c4e84d4b5f] @ 07/26/25 13:59:40.327
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-7fcebdb5-c371-416d-89e4-09c4e84d4b5f.1855d1dd6f27932f], Reason = [Started], Message = [Started container filler-pod-7fcebdb5-c371-416d-89e4-09c4e84d4b5f] @ 07/26/25 13:59:40.327
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-c7e83911-6a01-4521-9ca6-dc9bb5debc84.1855d1dd4b36498b], Reason = [Scheduled], Message = [Successfully assigned sched-pred-4735/filler-pod-c7e83911-6a01-4521-9ca6-dc9bb5debc84 to ip-172-31-72-233] @ 07/26/25 13:59:40.327
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-c7e83911-6a01-4521-9ca6-dc9bb5debc84.1855d1dd696c90ee], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 07/26/25 13:59:40.327
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-c7e83911-6a01-4521-9ca6-dc9bb5debc84.1855d1dd6ab9ccdb], Reason = [Created], Message = [Created container: filler-pod-c7e83911-6a01-4521-9ca6-dc9bb5debc84] @ 07/26/25 13:59:40.327
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-c7e83911-6a01-4521-9ca6-dc9bb5debc84.1855d1dd6d90b0fb], Reason = [Started], Message = [Started container filler-pod-c7e83911-6a01-4521-9ca6-dc9bb5debc84] @ 07/26/25 13:59:40.327
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.1855d1ddc3cf97ba], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 Insufficient cpu. preemption: 0/5 nodes are available: 2 Preemption is not helpful for scheduling, 3 No preemption victims found for incoming pod.] @ 07/26/25 13:59:40.342
  E0726 13:59:40.889077      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: removing the label node off the node ip-172-31-16-254 @ 07/26/25 13:59:41.34
  STEP: verifying the node doesn't have the label node @ 07/26/25 13:59:41.352
  STEP: removing the label node off the node ip-172-31-3-117 @ 07/26/25 13:59:41.357
  STEP: verifying the node doesn't have the label node @ 07/26/25 13:59:41.369
  STEP: removing the label node off the node ip-172-31-72-233 @ 07/26/25 13:59:41.374
  STEP: verifying the node doesn't have the label node @ 07/26/25 13:59:41.386
  I0726 13:59:41.391029 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4735" for this suite. @ 07/26/25 13:59:41.395
• [3.337 seconds]
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1162
  STEP: Creating a kubernetes client @ 07/26/25 13:59:41.405
  I0726 13:59:41.406706 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename job @ 07/26/25 13:59:41.407
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:59:41.422
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:59:41.427
  STEP: Creating a suspended job @ 07/26/25 13:59:41.432
  STEP: Patching the Job @ 07/26/25 13:59:41.438
  STEP: Watching for Job to be patched @ 07/26/25 13:59:41.455
  I0726 13:59:41.456173 23 job.go:1369] Event ADDED observed for Job e2e-4f5nj in namespace job-918 with labels: map[e2e-job-label:e2e-4f5nj] and annotations: map[]
  I0726 13:59:41.456190 23 job.go:1369] Event MODIFIED observed for Job e2e-4f5nj in namespace job-918 with labels: map[e2e-job-label:e2e-4f5nj] and annotations: map[]
  I0726 13:59:41.456200 23 job.go:1372] Event MODIFIED found for Job e2e-4f5nj in namespace job-918 with labels: map[e2e-4f5nj:patched e2e-job-label:e2e-4f5nj] and annotations: map[]
  STEP: Updating the job @ 07/26/25 13:59:41.456
  STEP: Watching for Job to be updated @ 07/26/25 13:59:41.469
  I0726 13:59:41.470533 23 job.go:1372] Event MODIFIED found for Job e2e-4f5nj in namespace job-918 with labels: map[e2e-4f5nj:patched e2e-job-label:e2e-4f5nj] and annotations: map[updated:true]
  I0726 13:59:41.470557 23 job.go:1240] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 07/26/25 13:59:41.47
  I0726 13:59:41.473875 23 job.go:1247] Job: e2e-4f5nj as labels: map[e2e-4f5nj:patched e2e-job-label:e2e-4f5nj]
  STEP: Waiting for job to complete @ 07/26/25 13:59:41.473
  E0726 13:59:41.889180      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:59:42.889260      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:59:43.889856      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:59:44.889930      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:59:45.890503      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:59:46.890621      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:59:47.891220      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:59:48.891400      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 07/26/25 13:59:49.503
  STEP: Watching for Job to be deleted @ 07/26/25 13:59:49.516
  I0726 13:59:49.517949 23 job.go:1369] Event MODIFIED observed for Job e2e-4f5nj in namespace job-918 with labels: map[e2e-4f5nj:patched e2e-job-label:e2e-4f5nj] and annotations: map[updated:true]
  I0726 13:59:49.517983 23 job.go:1369] Event MODIFIED observed for Job e2e-4f5nj in namespace job-918 with labels: map[e2e-4f5nj:patched e2e-job-label:e2e-4f5nj] and annotations: map[updated:true]
  I0726 13:59:49.518009 23 job.go:1369] Event MODIFIED observed for Job e2e-4f5nj in namespace job-918 with labels: map[e2e-4f5nj:patched e2e-job-label:e2e-4f5nj] and annotations: map[updated:true]
  I0726 13:59:49.518081 23 job.go:1369] Event MODIFIED observed for Job e2e-4f5nj in namespace job-918 with labels: map[e2e-4f5nj:patched e2e-job-label:e2e-4f5nj] and annotations: map[updated:true]
  I0726 13:59:49.518094 23 job.go:1369] Event MODIFIED observed for Job e2e-4f5nj in namespace job-918 with labels: map[e2e-4f5nj:patched e2e-job-label:e2e-4f5nj] and annotations: map[updated:true]
  I0726 13:59:49.518114 23 job.go:1369] Event MODIFIED observed for Job e2e-4f5nj in namespace job-918 with labels: map[e2e-4f5nj:patched e2e-job-label:e2e-4f5nj] and annotations: map[updated:true]
  I0726 13:59:49.518235 23 job.go:1369] Event MODIFIED observed for Job e2e-4f5nj in namespace job-918 with labels: map[e2e-4f5nj:patched e2e-job-label:e2e-4f5nj] and annotations: map[updated:true]
  I0726 13:59:49.518249 23 job.go:1372] Event DELETED found for Job e2e-4f5nj in namespace job-918 with labels: map[e2e-4f5nj:patched e2e-job-label:e2e-4f5nj] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 07/26/25 13:59:49.518
  I0726 13:59:49.523303 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-918" for this suite. @ 07/26/25 13:59:49.527
• [8.137 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:155
  STEP: Creating a kubernetes client @ 07/26/25 13:59:49.543
  I0726 13:59:49.543229 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/26/25 13:59:49.543
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:59:49.558
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:59:49.56
  I0726 13:59:49.562223 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  E0726 13:59:49.891461      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 07/26/25 13:59:50.804
  I0726 13:59:50.804778 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=crd-publish-openapi-8301 --namespace=crd-publish-openapi-8301 create -f -'
  E0726 13:59:50.892227      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:59:51.892385      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:59:52.867826 23 builder.go:146] stderr: ""
  I0726 13:59:52.867868 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-62-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0726 13:59:52.867916 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=crd-publish-openapi-8301 --namespace=crd-publish-openapi-8301 delete e2e-test-crd-publish-openapi-62-crds test-cr'
  E0726 13:59:52.894285      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:59:52.926539 23 builder.go:146] stderr: ""
  I0726 13:59:52.926575 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-62-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I0726 13:59:52.926662 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=crd-publish-openapi-8301 --namespace=crd-publish-openapi-8301 apply -f -'
  I0726 13:59:52.982073 23 builder.go:146] stderr: ""
  I0726 13:59:52.982105 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-62-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0726 13:59:52.982144 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=crd-publish-openapi-8301 --namespace=crd-publish-openapi-8301 delete e2e-test-crd-publish-openapi-62-crds test-cr'
  I0726 13:59:53.031213 23 builder.go:146] stderr: ""
  I0726 13:59:53.031248 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-62-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 07/26/25 13:59:53.031
  I0726 13:59:53.031314 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=crd-publish-openapi-8301 explain e2e-test-crd-publish-openapi-62-crds'
  I0726 13:59:53.067028 23 builder.go:146] stderr: ""
  I0726 13:59:53.067077 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-62-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E0726 13:59:53.894876      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:59:54.314722 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8301" for this suite. @ 07/26/25 13:59:54.321
• [4.788 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 07/26/25 13:59:54.331
  I0726 13:59:54.331070 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename container-probe @ 07/26/25 13:59:54.331
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 13:59:54.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 13:59:54.347
  STEP: Creating pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138 @ 07/26/25 13:59:54.349
  E0726 13:59:54.895843      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:59:55.895951      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/26/25 13:59:56.372
  I0726 13:59:56.376238 23 container_probe.go:1748] Initial restart count of pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 is 0
  I0726 13:59:56.380226 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 13:59:56.896984      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:59:57.897098      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 13:59:58.386275 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 13:59:58.897913      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 13:59:59.898020      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:00:00.391007 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:00:00.898144      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:00:01.898270      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:00:02.397156 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:00:02.898859      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:00:03.898930      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:00:04.403324 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:00:04.899456      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:00:05.899662      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:00:06.410242 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:00:06.899807      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:00:07.900826      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:00:08.417326 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:00:08.900921      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:00:09.900982      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:00:10.422408 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:00:10.902035      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:00:11.902938      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:00:12.428355 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:00:12.903993      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:00:13.904211      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:00:14.434245 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:00:14.904779      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:00:15.904986      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:00:16.439416 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  I0726 14:00:16.439457 23 container_probe.go:1762] Restart count of pod container-probe-7138/liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 is now 1 (20.063194828s elapsed)
  E0726 14:00:16.906000      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:00:17.906137      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:00:18.446256 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:00:18.906799      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:00:19.907050      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:00:20.450764 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:00:20.907221      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:00:21.907401      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:00:22.456344 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:00:22.908049      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:00:23.908256      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:00:24.463377 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:00:24.908722      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:00:25.908785      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:00:26.468393 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:00:26.909860      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:00:27.910865      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:00:28.474410 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:00:28.911865      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:00:29.911968      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:00:30.479287 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:00:30.912778      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:00:31.912870      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:00:32.484874 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:00:32.913505      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:00:33.913625      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:00:34.490601 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:00:34.913776      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:00:35.913843      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:00:36.496697 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  I0726 14:00:36.496740 23 container_probe.go:1762] Restart count of pod container-probe-7138/liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 is now 2 (40.120477391s elapsed)
  E0726 14:00:36.913979      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:00:37.914186      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:00:38.503770 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:00:38.915272      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:00:39.915452      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:00:40.508796 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:00:40.916481      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:00:41.916569      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:00:42.515479 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:00:42.916847      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:00:43.916989      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:00:44.522540 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:00:44.917025      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:00:45.917122      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:00:46.526911 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:00:46.917269      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:00:47.917374      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:00:48.533425 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:00:48.917508      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:00:49.917612      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:00:50.539009 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:00:50.918551      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:00:51.918627      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:00:52.545486 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:00:52.918802      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:00:53.919874      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:00:54.552494 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:00:54.920868      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:00:55.920931      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:00:56.557660 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  I0726 14:00:56.557696 23 container_probe.go:1762] Restart count of pod container-probe-7138/liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 is now 3 (1m0.181434042s elapsed)
  E0726 14:00:56.921869      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:00:57.922931      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:00:58.565103 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:00:58.923618      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:00:59.923875      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:01:00.569947 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:01:00.924526      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:01:01.924718      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:01:02.575217 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:01:02.925656      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:01:03.925859      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:01:04.581876 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:01:04.926336      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:01:05.926425      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:01:06.586614 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:01:06.927072      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:01:07.927277      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:01:08.592704 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:01:08.927991      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:01:09.928101      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:01:10.598194 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:01:10.928424      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:01:11.928495      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:01:12.604618 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:01:12.928883      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:01:13.928951      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:01:14.611917 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:01:14.929216      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:01:15.929408      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:01:16.618038 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  I0726 14:01:16.618085 23 container_probe.go:1762] Restart count of pod container-probe-7138/liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 is now 4 (1m20.241823142s elapsed)
  E0726 14:01:16.930440      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:01:17.931157      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:01:18.624693 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:01:18.932044      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:01:19.932490      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:01:20.630049 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:01:20.933403      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:01:21.933497      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:01:22.635816 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:01:22.934131      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:01:23.934236      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:01:24.642347 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:01:24.934767      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:01:25.934990      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:01:26.646701 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:01:26.936019      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:01:27.936140      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:01:28.653087 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:01:28.936257      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:01:29.936468      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:01:30.658048 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:01:30.937391      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:01:31.937507      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:01:32.664806 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:01:32.938298      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:01:33.938398      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:01:34.671600 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:01:34.939069      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:01:35.939126      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:01:36.677537 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:01:36.939855      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:01:37.940844      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:01:38.683282 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:01:38.941707      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:01:39.941923      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:01:40.688668 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:01:40.942076      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:01:41.942790      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:01:42.694950 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:01:42.943356      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:01:43.943599      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:01:44.699500 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:01:44.944284      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:01:45.944346      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:01:46.704758 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:01:46.945133      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:01:47.945223      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:01:48.710848 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:01:48.946166      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:01:49.946346      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:01:50.716188 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:01:50.946525      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:01:51.946764      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:01:52.722291 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:01:52.947697      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:01:53.947774      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:01:54.727062 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:01:54.948450      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:01:55.948596      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:01:56.732494 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:01:56.948737      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:01:57.949479      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:01:58.738297 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:01:58.949593      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:01:59.949759      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:02:00.743310 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:02:00.950643      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:02:01.950780      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:02:02.749453 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:02:02.950867      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:02:03.951845      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:02:04.755714 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:02:04.951943      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:02:05.952122      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:02:06.760456 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:02:06.952750      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:02:07.953494      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:02:08.765969 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:02:08.954323      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:02:09.954526      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:02:10.771009 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:02:10.955316      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:02:11.955537      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:02:12.776620 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:02:12.955902      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:02:13.956090      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:02:14.782131 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:02:14.956547      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:02:15.956767      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:02:16.787151 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:02:16.957458      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:02:17.958369      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:02:18.792758 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:02:18.959021      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:02:19.959853      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:02:20.797534 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:02:20.960745      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:02:21.960926      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:02:22.802987 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:02:22.961261      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:02:23.961817      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:02:24.809239 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  E0726 14:02:24.962545      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:02:25.962827      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:02:26.814303 23 container_probe.go:1758] Get pod liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 in namespace container-probe-7138
  I0726 14:02:26.814340 23 container_probe.go:1762] Restart count of pod container-probe-7138/liveness-1fde949c-cc68-4af2-a3e0-c80e1b738f99 is now 5 (2m30.43807851s elapsed)
  STEP: deleting the pod @ 07/26/25 14:02:26.814
  I0726 14:02:26.833399 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7138" for this suite. @ 07/26/25 14:02:26.838
• [152.516 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 07/26/25 14:02:26.847
  I0726 14:02:26.847553 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename podtemplate @ 07/26/25 14:02:26.848
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 14:02:26.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 14:02:26.866
  I0726 14:02:26.903673 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-4154" for this suite. @ 07/26/25 14:02:26.957
  E0726 14:02:26.963479      23 retrywatcher.go:169] "Watch failed" err="context canceled"
• [0.120 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 07/26/25 14:02:26.967
  I0726 14:02:26.967967 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename var-expansion @ 07/26/25 14:02:26.968
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 14:02:26.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 14:02:26.983
  E0726 14:02:27.963936      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:02:28.964025      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:02:29.010829 23 delete.go:62] Deleting pod "var-expansion-2f25b26b-a706-4113-9cfa-8b723e39aea4" in namespace "var-expansion-1657"
  I0726 14:02:29.020095 23 delete.go:70] Wait up to 5m0s for pod "var-expansion-2f25b26b-a706-4113-9cfa-8b723e39aea4" to be fully deleted
  E0726 14:02:29.964257      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:02:30.964428      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:02:31.030626 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1657" for this suite. @ 07/26/25 14:02:31.035
• [4.077 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:944
  STEP: Creating a kubernetes client @ 07/26/25 14:02:31.045
  I0726 14:02:31.045313 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename resourcequota @ 07/26/25 14:02:31.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 14:02:31.058
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 14:02:31.06
  STEP: Creating a ResourceQuota @ 07/26/25 14:02:31.061
  STEP: Getting a ResourceQuota @ 07/26/25 14:02:31.067
  STEP: Updating a ResourceQuota @ 07/26/25 14:02:31.074
  STEP: Verifying a ResourceQuota was modified @ 07/26/25 14:02:31.08
  STEP: Deleting a ResourceQuota @ 07/26/25 14:02:31.085
  STEP: Verifying the deleted ResourceQuota @ 07/26/25 14:02:31.094
  I0726 14:02:31.097544 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7744" for this suite. @ 07/26/25 14:02:31.136
• [0.100 seconds]
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 07/26/25 14:02:31.145
  I0726 14:02:31.145467 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/26/25 14:02:31.146
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 14:02:31.158
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 14:02:31.16
  I0726 14:02:31.162297 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  E0726 14:02:31.965406      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:02:32.965520      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:02:33.966242      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:02:34.243746 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8405" for this suite. @ 07/26/25 14:02:34.25
• [3.114 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 07/26/25 14:02:34.259
  I0726 14:02:34.259434 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename csiinlinevolumes @ 07/26/25 14:02:34.259
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 14:02:34.274
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 14:02:34.275
  STEP: creating @ 07/26/25 14:02:34.277
  STEP: getting @ 07/26/25 14:02:34.299
  STEP: listing in namespace @ 07/26/25 14:02:34.304
  STEP: patching @ 07/26/25 14:02:34.308
  STEP: deleting @ 07/26/25 14:02:34.318
  I0726 14:02:34.339773 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-9462" for this suite. @ 07/26/25 14:02:34.35
• [0.101 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:308
  STEP: Creating a kubernetes client @ 07/26/25 14:02:34.36
  I0726 14:02:34.360471 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename dns @ 07/26/25 14:02:34.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 14:02:34.374
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 14:02:34.375
  STEP: Creating a test headless service @ 07/26/25 14:02:34.377
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7291.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-querier-2.dns-test-service-2.dns-7291.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7291.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-querier-2.dns-test-service-2.dns-7291.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-7291.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service-2.dns-7291.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-7291.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service-2.dns-7291.svc.cluster.local;sleep 1; done
   @ 07/26/25 14:02:34.382
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7291.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-7291.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7291.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-7291.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-7291.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-7291.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-7291.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-7291.svc.cluster.local;sleep 1; done
   @ 07/26/25 14:02:34.382
  STEP: creating a pod to probe DNS @ 07/26/25 14:02:34.382
  STEP: submitting the pod to kubernetes @ 07/26/25 14:02:34.382
  E0726 14:02:34.966285      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:02:35.966498      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/26/25 14:02:36.405
  STEP: looking for the results for each expected name from probers @ 07/26/25 14:02:36.409
  I0726 14:02:36.415674 23 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-7291.svc.cluster.local from pod dns-7291/dns-test-618f3edb-4e67-4e9f-a562-d30b6229400f: the server could not find the requested resource (get pods dns-test-618f3edb-4e67-4e9f-a562-d30b6229400f)
  I0726 14:02:36.420048 23 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-7291.svc.cluster.local from pod dns-7291/dns-test-618f3edb-4e67-4e9f-a562-d30b6229400f: the server could not find the requested resource (get pods dns-test-618f3edb-4e67-4e9f-a562-d30b6229400f)
  I0726 14:02:36.424396 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-7291.svc.cluster.local from pod dns-7291/dns-test-618f3edb-4e67-4e9f-a562-d30b6229400f: the server could not find the requested resource (get pods dns-test-618f3edb-4e67-4e9f-a562-d30b6229400f)
  I0726 14:02:36.429448 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-7291.svc.cluster.local from pod dns-7291/dns-test-618f3edb-4e67-4e9f-a562-d30b6229400f: the server could not find the requested resource (get pods dns-test-618f3edb-4e67-4e9f-a562-d30b6229400f)
  I0726 14:02:36.433477 23 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-7291.svc.cluster.local from pod dns-7291/dns-test-618f3edb-4e67-4e9f-a562-d30b6229400f: the server could not find the requested resource (get pods dns-test-618f3edb-4e67-4e9f-a562-d30b6229400f)
  I0726 14:02:36.437751 23 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-7291.svc.cluster.local from pod dns-7291/dns-test-618f3edb-4e67-4e9f-a562-d30b6229400f: the server could not find the requested resource (get pods dns-test-618f3edb-4e67-4e9f-a562-d30b6229400f)
  I0726 14:02:36.442976 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-7291.svc.cluster.local from pod dns-7291/dns-test-618f3edb-4e67-4e9f-a562-d30b6229400f: the server could not find the requested resource (get pods dns-test-618f3edb-4e67-4e9f-a562-d30b6229400f)
  I0726 14:02:36.446874 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-7291.svc.cluster.local from pod dns-7291/dns-test-618f3edb-4e67-4e9f-a562-d30b6229400f: the server could not find the requested resource (get pods dns-test-618f3edb-4e67-4e9f-a562-d30b6229400f)
  I0726 14:02:36.446910 23 dns_common.go:506] Lookups using dns-7291/dns-test-618f3edb-4e67-4e9f-a562-d30b6229400f failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-7291.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-7291.svc.cluster.local agnhost_udp@dns-test-service-2.dns-7291.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-7291.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-7291.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-7291.svc.cluster.local jessie_udp@dns-test-service-2.dns-7291.svc.cluster.local jessie_tcp@dns-test-service-2.dns-7291.svc.cluster.local]

  I0726 14:02:36.465179 23 dns_common.go:514] Pod client logs for webserver: 
  I0726 14:02:36.474354 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0726 14:02:36.481042 23 dns_common.go:514] Pod client logs for jessie-querier: 
  E0726 14:02:36.966676      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:02:37.966816      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:02:38.966890      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:02:39.966988      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:02:40.967195      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:02:41.450845 23 dns_common.go:546] DNS probes using dns-7291/dns-test-618f3edb-4e67-4e9f-a562-d30b6229400f succeeded

  STEP: deleting the pod @ 07/26/25 14:02:41.45
  STEP: deleting the test headless service @ 07/26/25 14:02:41.473
  I0726 14:02:41.491430 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7291" for this suite. @ 07/26/25 14:02:41.495
• [7.144 seconds]
------------------------------
SS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 07/26/25 14:02:41.504
  I0726 14:02:41.504532 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename subpath @ 07/26/25 14:02:41.505
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 14:02:41.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 14:02:41.52
  STEP: Setting up data @ 07/26/25 14:02:41.521
  STEP: Creating pod pod-subpath-test-configmap-jcbj @ 07/26/25 14:02:41.532
  STEP: Creating a pod to test atomic-volume-subpath @ 07/26/25 14:02:41.532
  E0726 14:02:41.967324      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:02:42.967518      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:02:43.967873      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:02:44.967942      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:02:45.968731      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:02:46.968808      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:02:47.969854      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:02:48.969922      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:02:49.970856      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:02:50.970938      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:02:51.971507      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:02:52.971617      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:02:53.971759      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:02:54.971982      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:02:55.972738      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:02:56.972950      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:02:57.973305      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:02:58.973412      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:02:59.973550      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:03:00.973709      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:03:01.974427      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:03:02.974536      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:03:03.974678      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:03:04.974808      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 14:03:05.616
  I0726 14:03:05.621856 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod pod-subpath-test-configmap-jcbj container test-container-subpath-configmap-jcbj: <nil>
  STEP: delete the pod @ 07/26/25 14:03:05.63
  STEP: Deleting pod pod-subpath-test-configmap-jcbj @ 07/26/25 14:03:05.653
  I0726 14:03:05.653969 23 delete.go:62] Deleting pod "pod-subpath-test-configmap-jcbj" in namespace "subpath-6079"
  I0726 14:03:05.657609 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6079" for this suite. @ 07/26/25 14:03:05.662
• [24.168 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:393
  STEP: Creating a kubernetes client @ 07/26/25 14:03:05.672
  I0726 14:03:05.673010 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/26/25 14:03:05.673
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 14:03:05.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 14:03:05.688
  STEP: set up a multi version CRD @ 07/26/25 14:03:05.689
  I0726 14:03:05.689946 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  E0726 14:03:05.975188      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:03:06.975564      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:03:07.975680      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: rename a version @ 07/26/25 14:03:08.7
  STEP: check the new version name is served @ 07/26/25 14:03:08.712
  E0726 14:03:08.975785      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check the old version name is removed @ 07/26/25 14:03:09.453
  E0726 14:03:09.975765      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 07/26/25 14:03:10.061
  E0726 14:03:10.976670      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:03:11.977693      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:03:12.456010 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2774" for this suite. @ 07/26/25 14:03:12.465
• [6.802 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:305
  STEP: Creating a kubernetes client @ 07/26/25 14:03:12.474
  I0726 14:03:12.474890 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename svcaccounts @ 07/26/25 14:03:12.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 14:03:12.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 14:03:12.492
  STEP: Creating a pod to test service account token:  @ 07/26/25 14:03:12.494
  E0726 14:03:12.978594      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:03:13.978802      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:03:14.978916      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:03:15.979839      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 14:03:16.528
  I0726 14:03:16.533439 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod test-pod-d21ad899-7395-4d98-8c9e-1d47a1071ac4 container agnhost-container: <nil>
  STEP: delete the pod @ 07/26/25 14:03:16.55
  I0726 14:03:16.573492 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9615" for this suite. @ 07/26/25 14:03:16.581
• [4.117 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:105
  STEP: Creating a kubernetes client @ 07/26/25 14:03:16.592
  I0726 14:03:16.592212 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename replication-controller @ 07/26/25 14:03:16.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 14:03:16.608
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 14:03:16.612
  STEP: Given a ReplicationController is created @ 07/26/25 14:03:16.616
  STEP: When the matched label of one of its pods change @ 07/26/25 14:03:16.623
  I0726 14:03:16.632280 23 resource.go:81] Pod name pod-release: Found 0 pods out of 1
  E0726 14:03:16.980784      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:03:17.981488      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:03:18.981668      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:03:19.981876      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:03:20.981953      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:03:21.637732 23 resource.go:81] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 07/26/25 14:03:21.652
  E0726 14:03:21.982073      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:03:22.668095 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5347" for this suite. @ 07/26/25 14:03:22.674
• [6.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:504
  STEP: Creating a kubernetes client @ 07/26/25 14:03:22.684
  I0726 14:03:22.684875 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename configmap @ 07/26/25 14:03:22.685
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 14:03:22.7
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 14:03:22.703
  I0726 14:03:22.763933 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4367" for this suite. @ 07/26/25 14:03:22.775
• [0.100 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 07/26/25 14:03:22.785
  I0726 14:03:22.785397 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename container-runtime @ 07/26/25 14:03:22.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 14:03:22.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 14:03:22.802
  STEP: create the container @ 07/26/25 14:03:22.804
  I0726 14:03:22.816755      23 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 07/26/25 14:03:22.816
  E0726 14:03:22.983122      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:03:23.983301      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:03:24.983604      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: get the container status @ 07/26/25 14:03:25.842
  STEP: the container should be terminated @ 07/26/25 14:03:25.847
  STEP: the termination message should be set @ 07/26/25 14:03:25.847
  I0726 14:03:25.847908 23 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 07/26/25 14:03:25.847
  I0726 14:03:25.868280 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9958" for this suite. @ 07/26/25 14:03:25.876
• [3.101 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:209
  STEP: Creating a kubernetes client @ 07/26/25 14:03:25.886
  I0726 14:03:25.886381 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename dns @ 07/26/25 14:03:25.886
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 14:03:25.9
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 14:03:25.903
  STEP: Creating a test headless service @ 07/26/25 14:03:25.905
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-450 A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-450;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-450 A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-450;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-450.svc A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-450.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-450.svc A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-450.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-450.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-450.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-450.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-450.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-450.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-450.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-450.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-450.svc;check="$$(dig +notcp +noall +answer +search 131.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.131_udp@PTR;check="$$(dig +tcp +noall +answer +search 131.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.131_tcp@PTR;sleep 1; done
   @ 07/26/25 14:03:25.935
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-450 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-450;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-450 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-450;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-450.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-450.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-450.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-450.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-450.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-450.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-450.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-450.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-450.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-450.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-450.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-450.svc;check="$$(dig +notcp +noall +answer +search 131.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.131_udp@PTR;check="$$(dig +tcp +noall +answer +search 131.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.131_tcp@PTR;sleep 1; done
   @ 07/26/25 14:03:25.935
  STEP: creating a pod to probe DNS @ 07/26/25 14:03:25.935
  STEP: submitting the pod to kubernetes @ 07/26/25 14:03:25.935
  E0726 14:03:25.983611      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:03:26.983961      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/26/25 14:03:27.968
  STEP: looking for the results for each expected name from probers @ 07/26/25 14:03:27.972
  I0726 14:03:27.979757 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-450/dns-test-128eeb2e-4286-4740-953a-e05775ca8a1a: the server could not find the requested resource (get pods dns-test-128eeb2e-4286-4740-953a-e05775ca8a1a)
  E0726 14:03:27.984913      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:03:27.985864 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-450/dns-test-128eeb2e-4286-4740-953a-e05775ca8a1a: the server could not find the requested resource (get pods dns-test-128eeb2e-4286-4740-953a-e05775ca8a1a)
  I0726 14:03:27.990777 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-450 from pod dns-450/dns-test-128eeb2e-4286-4740-953a-e05775ca8a1a: the server could not find the requested resource (get pods dns-test-128eeb2e-4286-4740-953a-e05775ca8a1a)
  I0726 14:03:27.996237 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-450 from pod dns-450/dns-test-128eeb2e-4286-4740-953a-e05775ca8a1a: the server could not find the requested resource (get pods dns-test-128eeb2e-4286-4740-953a-e05775ca8a1a)
  I0726 14:03:28.001129 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-450.svc from pod dns-450/dns-test-128eeb2e-4286-4740-953a-e05775ca8a1a: the server could not find the requested resource (get pods dns-test-128eeb2e-4286-4740-953a-e05775ca8a1a)
  I0726 14:03:28.007423 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-450.svc from pod dns-450/dns-test-128eeb2e-4286-4740-953a-e05775ca8a1a: the server could not find the requested resource (get pods dns-test-128eeb2e-4286-4740-953a-e05775ca8a1a)
  I0726 14:03:28.013096 23 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-450.svc from pod dns-450/dns-test-128eeb2e-4286-4740-953a-e05775ca8a1a: the server could not find the requested resource (get pods dns-test-128eeb2e-4286-4740-953a-e05775ca8a1a)
  I0726 14:03:28.018017 23 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-450.svc from pod dns-450/dns-test-128eeb2e-4286-4740-953a-e05775ca8a1a: the server could not find the requested resource (get pods dns-test-128eeb2e-4286-4740-953a-e05775ca8a1a)
  I0726 14:03:28.046365 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-450/dns-test-128eeb2e-4286-4740-953a-e05775ca8a1a: the server could not find the requested resource (get pods dns-test-128eeb2e-4286-4740-953a-e05775ca8a1a)
  I0726 14:03:28.051232 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-450/dns-test-128eeb2e-4286-4740-953a-e05775ca8a1a: the server could not find the requested resource (get pods dns-test-128eeb2e-4286-4740-953a-e05775ca8a1a)
  I0726 14:03:28.056433 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-450 from pod dns-450/dns-test-128eeb2e-4286-4740-953a-e05775ca8a1a: the server could not find the requested resource (get pods dns-test-128eeb2e-4286-4740-953a-e05775ca8a1a)
  I0726 14:03:28.061897 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-450 from pod dns-450/dns-test-128eeb2e-4286-4740-953a-e05775ca8a1a: the server could not find the requested resource (get pods dns-test-128eeb2e-4286-4740-953a-e05775ca8a1a)
  I0726 14:03:28.066393 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-450.svc from pod dns-450/dns-test-128eeb2e-4286-4740-953a-e05775ca8a1a: the server could not find the requested resource (get pods dns-test-128eeb2e-4286-4740-953a-e05775ca8a1a)
  I0726 14:03:28.070946 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-450.svc from pod dns-450/dns-test-128eeb2e-4286-4740-953a-e05775ca8a1a: the server could not find the requested resource (get pods dns-test-128eeb2e-4286-4740-953a-e05775ca8a1a)
  I0726 14:03:28.076201 23 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-450.svc from pod dns-450/dns-test-128eeb2e-4286-4740-953a-e05775ca8a1a: the server could not find the requested resource (get pods dns-test-128eeb2e-4286-4740-953a-e05775ca8a1a)
  I0726 14:03:28.080870 23 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-450.svc from pod dns-450/dns-test-128eeb2e-4286-4740-953a-e05775ca8a1a: the server could not find the requested resource (get pods dns-test-128eeb2e-4286-4740-953a-e05775ca8a1a)
  I0726 14:03:28.101777 23 dns_common.go:506] Lookups using dns-450/dns-test-128eeb2e-4286-4740-953a-e05775ca8a1a failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-450 agnhost_tcp@dns-test-service.dns-450 agnhost_udp@dns-test-service.dns-450.svc agnhost_tcp@dns-test-service.dns-450.svc agnhost_udp@_http._tcp.dns-test-service.dns-450.svc agnhost_tcp@_http._tcp.dns-test-service.dns-450.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-450 jessie_tcp@dns-test-service.dns-450 jessie_udp@dns-test-service.dns-450.svc jessie_tcp@dns-test-service.dns-450.svc jessie_udp@_http._tcp.dns-test-service.dns-450.svc jessie_tcp@_http._tcp.dns-test-service.dns-450.svc]

  I0726 14:03:28.110824 23 dns_common.go:514] Pod client logs for webserver: 
  I0726 14:03:28.120690 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0726 14:03:28.131231 23 dns_common.go:514] Pod client logs for jessie-querier: 
  E0726 14:03:28.985849      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:03:29.986055      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:03:30.986869      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:03:31.986966      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:03:32.987029      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:03:33.111989 23 dns_common.go:546] DNS probes using dns-450/dns-test-128eeb2e-4286-4740-953a-e05775ca8a1a succeeded

  STEP: deleting the pod @ 07/26/25 14:03:33.112
  STEP: deleting the test service @ 07/26/25 14:03:33.131
  STEP: deleting the test headless service @ 07/26/25 14:03:33.167
  I0726 14:03:33.184418 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-450" for this suite. @ 07/26/25 14:03:33.19
• [7.314 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2244
  STEP: Creating a kubernetes client @ 07/26/25 14:03:33.2
  I0726 14:03:33.200274 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename services @ 07/26/25 14:03:33.2
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 14:03:33.213
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 14:03:33.216
  STEP: creating service in namespace services-6677 @ 07/26/25 14:03:33.218
  STEP: creating service affinity-nodeport-transition in namespace services-6677 @ 07/26/25 14:03:33.218
  I0726 14:03:33.256219 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0726 14:03:33.988051      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:03:34.988143      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:03:35.290693 23 resource.go:361] Creating new exec pod
  E0726 14:03:35.988240      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:03:36.989231      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:03:37.318810 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-6677 exec execpod-affinityzhbdh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I0726 14:03:37.427910 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition (10.152.183.206) 80 port [tcp/http] succeeded!\n"
  I0726 14:03:37.427948 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0726 14:03:37.428024 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-6677 exec execpod-affinityzhbdh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.206 80'
  I0726 14:03:37.507958 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.206 80\nConnection to 10.152.183.206 80 port [tcp/http] succeeded!\n"
  I0726 14:03:37.507995 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0726 14:03:37.508059 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-6677 exec execpod-affinityzhbdh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.3.117 31810'
  I0726 14:03:37.590477 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.3.117 31810\nConnection to 172.31.3.117 31810 port [tcp/*] succeeded!\n"
  I0726 14:03:37.590521 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0726 14:03:37.590590 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-6677 exec execpod-affinityzhbdh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.72.233 31810'
  I0726 14:03:37.670463 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.72.233 31810\nConnection to 172.31.72.233 31810 port [tcp/*] succeeded!\n"
  I0726 14:03:37.670503 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0726 14:03:37.683849 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-6677 exec execpod-affinityzhbdh -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://172.31.16.254:31810/ ; done'
  I0726 14:03:37.821965 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.16.254:31810/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.16.254:31810/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.16.254:31810/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.16.254:31810/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.16.254:31810/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.16.254:31810/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.16.254:31810/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.16.254:31810/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.16.254:31810/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.16.254:31810/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.16.254:31810/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.16.254:31810/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.16.254:31810/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.16.254:31810/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.16.254:31810/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.16.254:31810/\n"
  I0726 14:03:37.822014 23 builder.go:147] stdout: "\naffinity-nodeport-transition-7d57658b6c-qd4hb\naffinity-nodeport-transition-7d57658b6c-qd4hb\naffinity-nodeport-transition-7d57658b6c-qd4hb\naffinity-nodeport-transition-7d57658b6c-zsjdx\naffinity-nodeport-transition-7d57658b6c-qd4hb\naffinity-nodeport-transition-7d57658b6c-qd4hb\naffinity-nodeport-transition-7d57658b6c-zsjdx\naffinity-nodeport-transition-7d57658b6c-qd4hb\naffinity-nodeport-transition-7d57658b6c-qd4hb\naffinity-nodeport-transition-7d57658b6c-qd4hb\naffinity-nodeport-transition-7d57658b6c-zsjdx\naffinity-nodeport-transition-7d57658b6c-zsjdx\naffinity-nodeport-transition-7d57658b6c-qd4hb\naffinity-nodeport-transition-7d57658b6c-qd4hb\naffinity-nodeport-transition-7d57658b6c-5sd5v\naffinity-nodeport-transition-7d57658b6c-zsjdx"
  I0726 14:03:37.822025 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-qd4hb
  I0726 14:03:37.822032 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-qd4hb
  I0726 14:03:37.822037 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-qd4hb
  I0726 14:03:37.822041 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-zsjdx
  I0726 14:03:37.822046 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-qd4hb
  I0726 14:03:37.822050 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-qd4hb
  I0726 14:03:37.822055 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-zsjdx
  I0726 14:03:37.822059 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-qd4hb
  I0726 14:03:37.822065 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-qd4hb
  I0726 14:03:37.822069 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-qd4hb
  I0726 14:03:37.822074 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-zsjdx
  I0726 14:03:37.822078 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-zsjdx
  I0726 14:03:37.822082 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-qd4hb
  I0726 14:03:37.822089 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-qd4hb
  I0726 14:03:37.822094 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-5sd5v
  I0726 14:03:37.822099 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-zsjdx
  I0726 14:03:37.834821 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-6677 exec execpod-affinityzhbdh -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://172.31.16.254:31810/ ; done'
  I0726 14:03:37.969739 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.16.254:31810/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.16.254:31810/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.16.254:31810/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.16.254:31810/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.16.254:31810/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.16.254:31810/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.16.254:31810/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.16.254:31810/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.16.254:31810/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.16.254:31810/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.16.254:31810/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.16.254:31810/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.16.254:31810/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.16.254:31810/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.16.254:31810/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.16.254:31810/\n"
  I0726 14:03:37.969789 23 builder.go:147] stdout: "\naffinity-nodeport-transition-7d57658b6c-5sd5v\naffinity-nodeport-transition-7d57658b6c-5sd5v\naffinity-nodeport-transition-7d57658b6c-5sd5v\naffinity-nodeport-transition-7d57658b6c-5sd5v\naffinity-nodeport-transition-7d57658b6c-5sd5v\naffinity-nodeport-transition-7d57658b6c-5sd5v\naffinity-nodeport-transition-7d57658b6c-5sd5v\naffinity-nodeport-transition-7d57658b6c-5sd5v\naffinity-nodeport-transition-7d57658b6c-5sd5v\naffinity-nodeport-transition-7d57658b6c-5sd5v\naffinity-nodeport-transition-7d57658b6c-5sd5v\naffinity-nodeport-transition-7d57658b6c-5sd5v\naffinity-nodeport-transition-7d57658b6c-5sd5v\naffinity-nodeport-transition-7d57658b6c-5sd5v\naffinity-nodeport-transition-7d57658b6c-5sd5v\naffinity-nodeport-transition-7d57658b6c-5sd5v"
  I0726 14:03:37.969800 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-5sd5v
  I0726 14:03:37.969807 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-5sd5v
  I0726 14:03:37.969813 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-5sd5v
  I0726 14:03:37.969818 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-5sd5v
  I0726 14:03:37.969823 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-5sd5v
  I0726 14:03:37.969828 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-5sd5v
  I0726 14:03:37.969832 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-5sd5v
  I0726 14:03:37.969837 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-5sd5v
  I0726 14:03:37.969843 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-5sd5v
  I0726 14:03:37.969847 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-5sd5v
  I0726 14:03:37.969853 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-5sd5v
  I0726 14:03:37.969858 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-5sd5v
  I0726 14:03:37.969863 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-5sd5v
  I0726 14:03:37.969868 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-5sd5v
  I0726 14:03:37.969873 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-5sd5v
  I0726 14:03:37.969877 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-5sd5v
  I0726 14:03:37.969940 23 service.go:4352] Cleaning up the exec pod
  E0726 14:03:37.990098      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:03:38.054601 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6677" for this suite. @ 07/26/25 14:03:38.063
• [4.875 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 07/26/25 14:03:38.075
  I0726 14:03:38.075181 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename endpointslice @ 07/26/25 14:03:38.075
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 14:03:38.091
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 14:03:38.097
  E0726 14:03:38.990601      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:03:39.991160      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 07/26/25 14:03:40.208
  I0726 14:03:40.219552      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: referencing matching pods with named port @ 07/26/25 14:03:40.219
  I0726 14:03:40.232445      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 07/26/25 14:03:40.232
  I0726 14:03:40.319256      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: recreating EndpointSlices after they've been deleted @ 07/26/25 14:03:40.319
  I0726 14:03:40.347494 23 endpointslice.go:938] EndpointSlice for Service endpointslice-5991/example-named-port not found
  E0726 14:03:40.991843      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:03:41.992865      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:03:42.355793      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0726 14:03:42.355969 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5991" for this suite. @ 07/26/25 14:03:42.362
• [4.298 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:229
  STEP: Creating a kubernetes client @ 07/26/25 14:03:42.373
  I0726 14:03:42.373026 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename emptydir @ 07/26/25 14:03:42.373
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 14:03:42.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 14:03:42.39
  STEP: Creating Pod @ 07/26/25 14:03:42.392
  E0726 14:03:42.993872      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:03:43.994013      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 07/26/25 14:03:44.421
  I0726 14:03:44.421684 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-7542 PodName:pod-sharedvolume-bffe019e-b5a6-4fc9-a1d8-d8475c7352d3 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0726 14:03:44.421702 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0726 14:03:44.421741 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/emptydir-7542/pods/pod-sharedvolume-bffe019e-b5a6-4fc9-a1d8-d8475c7352d3/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&stderr=true&stdout=true)
  I0726 14:03:44.460241 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0726 14:03:44.460286 23 exec_util.go:112] Exec stderr: ""
  I0726 14:03:44.460419 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7542" for this suite. @ 07/26/25 14:03:44.47
• [2.111 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:89
  STEP: Creating a kubernetes client @ 07/26/25 14:03:44.484
  I0726 14:03:44.484446 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename projected @ 07/26/25 14:03:44.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 14:03:44.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 14:03:44.505
  STEP: Creating configMap with name projected-configmap-test-volume-map-8cb264e3-1e60-482b-a78c-d2d3dc526d1e @ 07/26/25 14:03:44.507
  STEP: Creating a pod to test consume configMaps @ 07/26/25 14:03:44.513
  E0726 14:03:44.995002      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:03:45.995207      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 14:03:46.539
  I0726 14:03:46.545418 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod pod-projected-configmaps-61614888-54e4-4649-8f8f-d57eaec74cfe container agnhost-container: <nil>
  STEP: delete the pod @ 07/26/25 14:03:46.555
  I0726 14:03:46.576550 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3253" for this suite. @ 07/26/25 14:03:46.583
• [2.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 07/26/25 14:03:46.595
  I0726 14:03:46.595734 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename webhook @ 07/26/25 14:03:46.596
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 14:03:46.61
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 14:03:46.613
  STEP: Setting up server cert @ 07/26/25 14:03:46.636
  E0726 14:03:46.995297      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/26/25 14:03:47.009
  STEP: Deploying the webhook pod @ 07/26/25 14:03:47.017
  STEP: Wait for the deployment to be ready @ 07/26/25 14:03:47.03
  I0726 14:03:47.042980 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0726 14:03:47.996139      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:03:48.996230      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/26/25 14:03:49.061
  STEP: Verifying the service has paired with the endpoint @ 07/26/25 14:03:49.081
  E0726 14:03:49.996854      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:03:50.081900 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 07/26/25 14:03:50.088
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/26/25 14:03:50.104
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 07/26/25 14:03:50.11
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/26/25 14:03:50.124
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 07/26/25 14:03:50.14
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/26/25 14:03:50.147
  I0726 14:03:50.220560 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8577" for this suite. @ 07/26/25 14:03:50.226
  STEP: Destroying namespace "webhook-markers-7613" for this suite. @ 07/26/25 14:03:50.238
• [3.652 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1050
  STEP: Creating a kubernetes client @ 07/26/25 14:03:50.248
  I0726 14:03:50.248235 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename kubectl @ 07/26/25 14:03:50.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 14:03:50.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 14:03:50.264
  STEP: create deployment with httpd image @ 07/26/25 14:03:50.271
  I0726 14:03:50.271258 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-588 create -f -'
  I0726 14:03:50.333655 23 builder.go:146] stderr: ""
  I0726 14:03:50.333683 23 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 07/26/25 14:03:50.333
  I0726 14:03:50.333742 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-588 diff -f -'
  E0726 14:03:50.997749      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:03:51.997953      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:03:52.998027      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:03:53.998110      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:03:54.614297 23 builder.go:135] rc: 1
  I0726 14:03:54.614383 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-588 delete -f -'
  I0726 14:03:54.664325 23 builder.go:146] stderr: ""
  I0726 14:03:54.664361 23 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I0726 14:03:54.664488 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-588" for this suite. @ 07/26/25 14:03:54.671
• [4.432 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 07/26/25 14:03:54.68
  I0726 14:03:54.680253 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename webhook @ 07/26/25 14:03:54.68
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 14:03:54.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 14:03:54.7
  STEP: Setting up server cert @ 07/26/25 14:03:54.723
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/26/25 14:03:54.949
  STEP: Deploying the webhook pod @ 07/26/25 14:03:54.958
  STEP: Wait for the deployment to be ready @ 07/26/25 14:03:54.977
  I0726 14:03:54.995399 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0726 14:03:54.998432      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:03:55.998563      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:03:56.998869      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/26/25 14:03:57.011
  STEP: Verifying the service has paired with the endpoint @ 07/26/25 14:03:57.034
  E0726 14:03:57.999857      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:03:58.034901 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0726 14:03:58.041042 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7618-crds.webhook.example.com via the AdmissionRegistration API @ 07/26/25 14:03:58.551
  STEP: Creating a custom resource that should be mutated by the webhook @ 07/26/25 14:03:58.567
  E0726 14:03:59.000856      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:04:00.000952      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:04:01.001432      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:04:01.198217 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3849" for this suite. @ 07/26/25 14:04:01.205
  STEP: Destroying namespace "webhook-markers-244" for this suite. @ 07/26/25 14:04:01.216
• [6.546 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 07/26/25 14:04:01.226
  I0726 14:04:01.226624 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename csi-storageclass @ 07/26/25 14:04:01.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 14:04:01.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 14:04:01.244
  STEP: Creating a StorageClass @ 07/26/25 14:04:01.246
  STEP: Get StorageClass "e2e-hlgj7" @ 07/26/25 14:04:01.252
  STEP: Patching the StorageClass "e2e-hlgj7" @ 07/26/25 14:04:01.257
  STEP: Delete StorageClass "e2e-hlgj7" @ 07/26/25 14:04:01.264
  STEP: Confirm deletion of StorageClass "e2e-hlgj7" @ 07/26/25 14:04:01.273
  STEP: Create a replacement StorageClass @ 07/26/25 14:04:01.278
  STEP: Updating StorageClass "e2e-v2-wm996" @ 07/26/25 14:04:01.283
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-wm996=updated" @ 07/26/25 14:04:01.294
  STEP: Deleting StorageClass "e2e-v2-wm996" via DeleteCollection @ 07/26/25 14:04:01.299
  STEP: Confirm deletion of StorageClass "e2e-v2-wm996" @ 07/26/25 14:04:01.312
  I0726 14:04:01.317897 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-526" for this suite. @ 07/26/25 14:04:01.324
• [0.108 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 07/26/25 14:04:01.334
  I0726 14:04:01.334291 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename container-runtime @ 07/26/25 14:04:01.334
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 14:04:01.348
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 14:04:01.351
  STEP: create the container @ 07/26/25 14:04:01.353
  I0726 14:04:01.365110      23 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Failed @ 07/26/25 14:04:01.365
  E0726 14:04:02.002391      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:04:03.003453      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:04:04.003780      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: get the container status @ 07/26/25 14:04:04.389
  STEP: the container should be terminated @ 07/26/25 14:04:04.394
  STEP: the termination message should be set @ 07/26/25 14:04:04.394
  I0726 14:04:04.394327 23 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 07/26/25 14:04:04.394
  I0726 14:04:04.415297 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4194" for this suite. @ 07/26/25 14:04:04.422
• [3.098 seconds]
------------------------------
S
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:366
  STEP: Creating a kubernetes client @ 07/26/25 14:04:04.432
  I0726 14:04:04.432351 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename cronjob @ 07/26/25 14:04:04.432
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 14:04:04.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 14:04:04.45
  STEP: Creating a cronjob @ 07/26/25 14:04:04.453
  STEP: creating @ 07/26/25 14:04:04.453
  STEP: getting @ 07/26/25 14:04:04.461
  STEP: listing @ 07/26/25 14:04:04.465
  STEP: watching @ 07/26/25 14:04:04.47
  I0726 14:04:04.470317 23 cronjob.go:395] starting watch
  STEP: cluster-wide listing @ 07/26/25 14:04:04.471
  STEP: cluster-wide watching @ 07/26/25 14:04:04.477
  I0726 14:04:04.477187 23 cronjob.go:407] starting watch
  STEP: patching @ 07/26/25 14:04:04.478
  STEP: updating @ 07/26/25 14:04:04.484
  I0726 14:04:04.494930 23 cronjob.go:431] waiting for watch events with expected annotations
  I0726 14:04:04.494956 23 cronjob.go:445] saw patched and updated annotations
  STEP: patching /status @ 07/26/25 14:04:04.495
  STEP: updating /status @ 07/26/25 14:04:04.501
  STEP: get /status @ 07/26/25 14:04:04.512
  STEP: deleting @ 07/26/25 14:04:04.516
  STEP: deleting a collection @ 07/26/25 14:04:04.537
  I0726 14:04:04.555529 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6720" for this suite. @ 07/26/25 14:04:04.562
• [0.141 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:311
  STEP: Creating a kubernetes client @ 07/26/25 14:04:04.573
  I0726 14:04:04.573109 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/26/25 14:04:04.573
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 14:04:04.586
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 14:04:04.589
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 07/26/25 14:04:04.591
  I0726 14:04:04.592090 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  E0726 14:04:05.003913      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:04:06.004716      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:04:07.004759      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:04:08.004853      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:04:09.005574      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 07/26/25 14:04:09.473
  I0726 14:04:09.473984 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  E0726 14:04:10.005964      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:04:10.731478 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  E0726 14:04:11.006196      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:04:12.006373      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:04:13.006743      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:04:14.007521      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:04:15.007560      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:04:15.527407 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5627" for this suite. @ 07/26/25 14:04:15.534
• [10.969 seconds]
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 07/26/25 14:04:15.542
  I0726 14:04:15.542229 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename daemonsets @ 07/26/25 14:04:15.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 14:04:15.559
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 14:04:15.561
  STEP: Creating simple DaemonSet "daemon-set" @ 07/26/25 14:04:15.647
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/26/25 14:04:15.653
  I0726 14:04:15.736091 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-77-91 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 14:04:15.736128 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-89-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 14:04:15.740134 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0726 14:04:15.740153 23 fixtures.go:131] Node ip-172-31-16-254 is running 0 daemon pod, expected 1
  E0726 14:04:16.008357      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:04:16.659031 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-77-91 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 14:04:16.659072 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-89-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 14:04:16.663850 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0726 14:04:16.663872 23 fixtures.go:131] Node ip-172-31-72-233 is running 0 daemon pod, expected 1
  E0726 14:04:17.009356      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:04:17.661116 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-77-91 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 14:04:17.661154 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-89-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 14:04:17.665364 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0726 14:04:17.665388 23 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 07/26/25 14:04:17.67
  I0726 14:04:17.763196 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-77-91 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 14:04:17.763242 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-89-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 14:04:17.767381 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0726 14:04:17.767397 23 fixtures.go:131] Node ip-172-31-72-233 is running 0 daemon pod, expected 1
  E0726 14:04:18.010531      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:04:18.689874 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-77-91 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 14:04:18.689909 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-89-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 14:04:18.694660 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0726 14:04:18.694699 23 fixtures.go:131] Node ip-172-31-72-233 is running 0 daemon pod, expected 1
  E0726 14:04:19.010730      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:04:19.690358 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-77-91 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 14:04:19.690408 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-89-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0726 14:04:19.695886 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0726 14:04:19.695905 23 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 07/26/25 14:04:19.699
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8820, will wait for the garbage collector to delete the pods @ 07/26/25 14:04:19.699
  I0726 14:04:19.764022 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 9.885271ms
  I0726 14:04:19.864131 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.103128ms
  E0726 14:04:20.011757      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:04:20.970498 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0726 14:04:20.970531 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0726 14:04:20.975531 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"51283"},"items":null}

  I0726 14:04:20.978732 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"51283"},"items":null}

  I0726 14:04:20.994811 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8820" for this suite. @ 07/26/25 14:04:20.999
• [5.466 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 07/26/25 14:04:21.008
  I0726 14:04:21.008116 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename aggregateddiscovery @ 07/26/25 14:04:21.008
  E0726 14:04:21.012016      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 14:04:21.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 14:04:21.021
  I0726 14:04:21.025780 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-1050" for this suite. @ 07/26/25 14:04:21.084
• [0.085 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1759
  STEP: Creating a kubernetes client @ 07/26/25 14:04:21.092
  I0726 14:04:21.093016 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename kubectl @ 07/26/25 14:04:21.093
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 14:04:21.106
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 14:04:21.108
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 07/26/25 14:04:21.109
  I0726 14:04:21.109717 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-7690 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I0726 14:04:21.160412 23 builder.go:146] stderr: ""
  I0726 14:04:21.160440 23 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 07/26/25 14:04:21.16
  I0726 14:04:21.166326 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-7690 delete pods e2e-test-httpd-pod'
  E0726 14:04:22.012772      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:04:22.336885 23 builder.go:146] stderr: ""
  I0726 14:04:22.336920 23 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0726 14:04:22.337025 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7690" for this suite. @ 07/26/25 14:04:22.341
• [1.258 seconds]
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 07/26/25 14:04:22.35
  I0726 14:04:22.350913 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename projected @ 07/26/25 14:04:22.351
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 14:04:22.362
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 14:04:22.364
  STEP: Creating projection with secret that has name projected-secret-test-e1d50a91-b1e8-4eb0-950d-2f4401d6efb0 @ 07/26/25 14:04:22.366
  STEP: Creating a pod to test consume secrets @ 07/26/25 14:04:22.373
  E0726 14:04:23.012935      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:04:24.013032      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:04:25.013290      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:04:26.013361      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 14:04:26.401
  I0726 14:04:26.405085 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod pod-projected-secrets-c739d224-8b84-4ad8-895f-fa910f24cac0 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/26/25 14:04:26.412
  I0726 14:04:26.434099 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9956" for this suite. @ 07/26/25 14:04:26.439
• [4.102 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1251
  STEP: Creating a kubernetes client @ 07/26/25 14:04:26.453
  I0726 14:04:26.453328 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename services @ 07/26/25 14:04:26.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 14:04:26.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 14:04:26.468
  STEP: creating service nodeport-test with type=NodePort in namespace services-6347 @ 07/26/25 14:04:26.469
  I0726 14:04:26.505693 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0726 14:04:27.013933      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:04:28.014736      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:04:28.510116 23 resource.go:361] Creating new exec pod
  E0726 14:04:29.015343      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:04:30.015915      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:04:30.543588 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-6347 exec execpod7gwm8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0726 14:04:30.627737 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.152.183.196) 80 port [tcp/http] succeeded!\n"
  I0726 14:04:30.627774 23 builder.go:147] stdout: ""
  E0726 14:04:31.016259      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:04:31.543739 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-6347 exec execpod7gwm8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0726 14:04:31.626540 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.152.183.196) 80 port [tcp/http] succeeded!\n"
  I0726 14:04:31.626579 23 builder.go:147] stdout: "nodeport-test-784d4cccf7-k96sp"
  I0726 14:04:31.626674 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-6347 exec execpod7gwm8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.196 80'
  I0726 14:04:31.711939 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.196 80\nConnection to 10.152.183.196 80 port [tcp/http] succeeded!\n"
  I0726 14:04:31.711977 23 builder.go:147] stdout: ""
  E0726 14:04:32.016406      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:04:32.627159 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-6347 exec execpod7gwm8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.196 80'
  I0726 14:04:32.704112 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.196 80\nConnection to 10.152.183.196 80 port [tcp/http] succeeded!\n"
  I0726 14:04:32.704165 23 builder.go:147] stdout: "nodeport-test-784d4cccf7-bz7kf"
  I0726 14:04:32.704265 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-6347 exec execpod7gwm8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.72.233 30571'
  I0726 14:04:32.785906 23 builder.go:146] stderr: "+ nc -v -t -w 2 172.31.72.233 30571\n+ echo hostName\nConnection to 172.31.72.233 30571 port [tcp/*] succeeded!\n"
  I0726 14:04:32.785942 23 builder.go:147] stdout: "nodeport-test-784d4cccf7-bz7kf"
  I0726 14:04:32.786009 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=services-6347 exec execpod7gwm8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.16.254 30571'
  I0726 14:04:32.861780 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.16.254 30571\nConnection to 172.31.16.254 30571 port [tcp/*] succeeded!\n"
  I0726 14:04:32.861824 23 builder.go:147] stdout: "nodeport-test-784d4cccf7-k96sp"
  I0726 14:04:32.862003 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6347" for this suite. @ 07/26/25 14:04:32.868
• [6.424 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 07/26/25 14:04:32.877
  I0726 14:04:32.877043 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename podtemplate @ 07/26/25 14:04:32.877
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 14:04:32.89
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 14:04:32.892
  STEP: Create a pod template @ 07/26/25 14:04:32.894
  STEP: Replace a pod template @ 07/26/25 14:04:32.901
  I0726 14:04:32.910361 23 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0726 14:04:32.910476 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-9499" for this suite. @ 07/26/25 14:04:32.969
• [0.102 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 07/26/25 14:04:32.979
  I0726 14:04:32.979564 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename container-probe @ 07/26/25 14:04:32.98
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 14:04:32.992
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 14:04:32.994
  STEP: Creating pod test-grpc-dfa4996a-d988-473c-bba7-1d0be971f651 in namespace container-probe-3741 @ 07/26/25 14:04:32.995
  E0726 14:04:33.016508      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:04:34.016730      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:04:35.016722      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/26/25 14:04:35.019
  I0726 14:04:35.023169 23 container_probe.go:1748] Initial restart count of pod test-grpc-dfa4996a-d988-473c-bba7-1d0be971f651 is 0
  I0726 14:04:35.027328 23 container_probe.go:1758] Get pod test-grpc-dfa4996a-d988-473c-bba7-1d0be971f651 in namespace container-probe-3741
  E0726 14:04:36.017746      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:04:37.018289      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:04:37.034486 23 container_probe.go:1758] Get pod test-grpc-dfa4996a-d988-473c-bba7-1d0be971f651 in namespace container-probe-3741
  E0726 14:04:38.018359      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:04:39.018767      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:04:39.039258 23 container_probe.go:1758] Get pod test-grpc-dfa4996a-d988-473c-bba7-1d0be971f651 in namespace container-probe-3741
  E0726 14:04:40.018834      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:04:41.019849      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:04:41.044863 23 container_probe.go:1758] Get pod test-grpc-dfa4996a-d988-473c-bba7-1d0be971f651 in namespace container-probe-3741
  E0726 14:04:42.020425      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:04:43.021139      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:04:43.050961 23 container_probe.go:1758] Get pod test-grpc-dfa4996a-d988-473c-bba7-1d0be971f651 in namespace container-probe-3741
  E0726 14:04:44.021573      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:04:45.021830      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:04:45.056302 23 container_probe.go:1758] Get pod test-grpc-dfa4996a-d988-473c-bba7-1d0be971f651 in namespace container-probe-3741
  E0726 14:04:46.022869      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:04:47.022943      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:04:47.062134 23 container_probe.go:1758] Get pod test-grpc-dfa4996a-d988-473c-bba7-1d0be971f651 in namespace container-probe-3741
  E0726 14:04:48.023081      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:04:49.023314      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:04:49.067005 23 container_probe.go:1758] Get pod test-grpc-dfa4996a-d988-473c-bba7-1d0be971f651 in namespace container-probe-3741
  E0726 14:04:50.023578      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:04:51.023691      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:04:51.073283 23 container_probe.go:1758] Get pod test-grpc-dfa4996a-d988-473c-bba7-1d0be971f651 in namespace container-probe-3741
  E0726 14:04:52.024301      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:04:53.024415      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:04:53.079608 23 container_probe.go:1758] Get pod test-grpc-dfa4996a-d988-473c-bba7-1d0be971f651 in namespace container-probe-3741
  E0726 14:04:54.024547      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:04:55.024791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:04:55.084757 23 container_probe.go:1758] Get pod test-grpc-dfa4996a-d988-473c-bba7-1d0be971f651 in namespace container-probe-3741
  E0726 14:04:56.025733      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:04:57.025805      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:04:57.090262 23 container_probe.go:1758] Get pod test-grpc-dfa4996a-d988-473c-bba7-1d0be971f651 in namespace container-probe-3741
  E0726 14:04:58.026542      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:04:59.026778      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:04:59.097844 23 container_probe.go:1758] Get pod test-grpc-dfa4996a-d988-473c-bba7-1d0be971f651 in namespace container-probe-3741
  E0726 14:05:00.026878      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:05:01.026951      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:05:01.102237 23 container_probe.go:1758] Get pod test-grpc-dfa4996a-d988-473c-bba7-1d0be971f651 in namespace container-probe-3741
  E0726 14:05:02.027085      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:05:03.027373      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:05:03.107365 23 container_probe.go:1758] Get pod test-grpc-dfa4996a-d988-473c-bba7-1d0be971f651 in namespace container-probe-3741
  E0726 14:05:04.028263      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:05:05.028368      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:05:05.114274 23 container_probe.go:1758] Get pod test-grpc-dfa4996a-d988-473c-bba7-1d0be971f651 in namespace container-probe-3741
  E0726 14:05:06.028474      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:05:07.028548      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:05:07.118964 23 container_probe.go:1758] Get pod test-grpc-dfa4996a-d988-473c-bba7-1d0be971f651 in namespace container-probe-3741
  E0726 14:05:08.028864      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:05:09.029412      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:05:09.124903 23 container_probe.go:1758] Get pod test-grpc-dfa4996a-d988-473c-bba7-1d0be971f651 in namespace container-probe-3741
  E0726 14:05:10.029789      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:05:11.029853      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:05:11.130800 23 container_probe.go:1758] Get pod test-grpc-dfa4996a-d988-473c-bba7-1d0be971f651 in namespace container-probe-3741
  E0726 14:05:12.029981      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:05:13.030043      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:05:13.136735 23 container_probe.go:1758] Get pod test-grpc-dfa4996a-d988-473c-bba7-1d0be971f651 in namespace container-probe-3741
  E0726 14:05:14.030862      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:05:15.030954      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:05:15.143437 23 container_probe.go:1758] Get pod test-grpc-dfa4996a-d988-473c-bba7-1d0be971f651 in namespace container-probe-3741
  E0726 14:05:16.031077      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:05:17.031272      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:05:17.148959 23 container_probe.go:1758] Get pod test-grpc-dfa4996a-d988-473c-bba7-1d0be971f651 in namespace container-probe-3741
  E0726 14:05:18.031860      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:05:19.031976      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:05:19.155284 23 container_probe.go:1758] Get pod test-grpc-dfa4996a-d988-473c-bba7-1d0be971f651 in namespace container-probe-3741
  E0726 14:05:20.032152      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:05:21.032340      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:05:21.161496 23 container_probe.go:1758] Get pod test-grpc-dfa4996a-d988-473c-bba7-1d0be971f651 in namespace container-probe-3741
  E0726 14:05:22.032542      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:05:23.033517      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:05:23.166569 23 container_probe.go:1758] Get pod test-grpc-dfa4996a-d988-473c-bba7-1d0be971f651 in namespace container-probe-3741
  E0726 14:05:24.033712      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:05:25.034182      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:05:25.173253 23 container_probe.go:1758] Get pod test-grpc-dfa4996a-d988-473c-bba7-1d0be971f651 in namespace container-probe-3741
  E0726 14:05:26.035238      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:05:27.035472      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:05:27.179733 23 container_probe.go:1758] Get pod test-grpc-dfa4996a-d988-473c-bba7-1d0be971f651 in namespace container-probe-3741
  E0726 14:05:28.035541      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:05:29.035779      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:05:29.185107 23 container_probe.go:1758] Get pod test-grpc-dfa4996a-d988-473c-bba7-1d0be971f651 in namespace container-probe-3741
  E0726 14:05:30.036839      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:05:31.036919      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:05:31.191919 23 container_probe.go:1758] Get pod test-grpc-dfa4996a-d988-473c-bba7-1d0be971f651 in namespace container-probe-3741
  E0726 14:05:32.037025      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:05:33.037206      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:05:33.196738 23 container_probe.go:1758] Get pod test-grpc-dfa4996a-d988-473c-bba7-1d0be971f651 in namespace container-probe-3741
  E0726 14:05:34.037582      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:05:35.037799      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:05:35.201764 23 container_probe.go:1758] Get pod test-grpc-dfa4996a-d988-473c-bba7-1d0be971f651 in namespace container-probe-3741
  E0726 14:05:36.038461      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:05:37.039426      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:05:37.208972 23 container_probe.go:1758] Get pod test-grpc-dfa4996a-d988-473c-bba7-1d0be971f651 in namespace container-probe-3741
  E0726 14:05:38.039562      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:05:39.039666      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:05:39.214439 23 container_probe.go:1758] Get pod test-grpc-dfa4996a-d988-473c-bba7-1d0be971f651 in namespace container-probe-3741
  I0726 14:05:39.214477 23 container_probe.go:1762] Restart count of pod container-probe-3741/test-grpc-dfa4996a-d988-473c-bba7-1d0be971f651 is now 1 (1m4.191284557s elapsed)
  STEP: deleting the pod @ 07/26/25 14:05:39.214
  I0726 14:05:39.234239 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3741" for this suite. @ 07/26/25 14:05:39.239
• [66.268 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:458
  STEP: Creating a kubernetes client @ 07/26/25 14:05:39.247
  I0726 14:05:39.247798 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename resourcequota @ 07/26/25 14:05:39.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 14:05:39.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 14:05:39.263
  STEP: Counting existing ResourceQuota @ 07/26/25 14:05:39.266
  E0726 14:05:40.039798      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:05:41.039885      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:05:42.040599      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:05:43.040916      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:05:44.041784      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/26/25 14:05:44.273
  STEP: Ensuring resource quota status is calculated @ 07/26/25 14:05:44.279
  E0726 14:05:45.042243      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:05:46.042870      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 07/26/25 14:05:46.284
  STEP: Ensuring resource quota status captures replicaset creation @ 07/26/25 14:05:46.298
  E0726 14:05:47.042983      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:05:48.043923      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 07/26/25 14:05:48.305
  STEP: Ensuring resource quota status released usage @ 07/26/25 14:05:48.315
  E0726 14:05:49.044070      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:05:50.044855      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:05:50.320990 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2124" for this suite. @ 07/26/25 14:05:50.327
• [11.089 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:69
  STEP: Creating a kubernetes client @ 07/26/25 14:05:50.337
  I0726 14:05:50.337260 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename projected @ 07/26/25 14:05:50.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 14:05:50.35
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 14:05:50.352
  STEP: Creating a pod to test downward API volume plugin @ 07/26/25 14:05:50.353
  E0726 14:05:51.045925      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:05:52.046042      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:05:53.046147      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:05:54.046237      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/26/25 14:05:54.383
  I0726 14:05:54.388157 23 output.go:207] Trying to get logs from node ip-172-31-16-254 pod downwardapi-volume-e14f5aeb-5c09-41ad-987a-5780f7ffac97 container client-container: <nil>
  STEP: delete the pod @ 07/26/25 14:05:54.397
  I0726 14:05:54.421842 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9005" for this suite. @ 07/26/25 14:05:54.427
• [4.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:750
  STEP: Creating a kubernetes client @ 07/26/25 14:05:54.436
  I0726 14:05:54.436415 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename resourcequota @ 07/26/25 14:05:54.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 14:05:54.45
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 14:05:54.451
  STEP: Creating a ResourceQuota with terminating scope @ 07/26/25 14:05:54.454
  STEP: Ensuring ResourceQuota status is calculated @ 07/26/25 14:05:54.461
  E0726 14:05:55.046803      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:05:56.047016      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 07/26/25 14:05:56.467
  STEP: Ensuring ResourceQuota status is calculated @ 07/26/25 14:05:56.472
  E0726 14:05:57.047771      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:05:58.048559      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 07/26/25 14:05:58.479
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 07/26/25 14:05:58.498
  E0726 14:05:59.049379      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:06:00.049458      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 07/26/25 14:06:00.504
  E0726 14:06:01.049764      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:06:02.049792      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 07/26/25 14:06:02.51
  STEP: Ensuring resource quota status released the pod usage @ 07/26/25 14:06:02.526
  E0726 14:06:03.049887      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:06:04.049954      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 07/26/25 14:06:04.532
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 07/26/25 14:06:04.544
  E0726 14:06:05.050071      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:06:06.050141      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 07/26/25 14:06:06.551
  E0726 14:06:07.050860      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:06:08.051666      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 07/26/25 14:06:08.556
  STEP: Ensuring resource quota status released the pod usage @ 07/26/25 14:06:08.577
  E0726 14:06:09.052380      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:06:10.052903      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:06:10.583681 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2572" for this suite. @ 07/26/25 14:06:10.588
• [16.160 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 07/26/25 14:06:10.596
  I0726 14:06:10.596798 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename container-probe @ 07/26/25 14:06:10.597
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 14:06:10.609
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 14:06:10.611
  STEP: Creating pod busybox-bf692ec3-c31e-4624-9318-3a72ed7892d3 in namespace container-probe-164 @ 07/26/25 14:06:10.613
  E0726 14:06:11.053217      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:06:12.053310      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/26/25 14:06:12.636
  I0726 14:06:12.640415 23 container_probe.go:1748] Initial restart count of pod busybox-bf692ec3-c31e-4624-9318-3a72ed7892d3 is 0
  I0726 14:06:12.645172 23 container_probe.go:1758] Get pod busybox-bf692ec3-c31e-4624-9318-3a72ed7892d3 in namespace container-probe-164
  E0726 14:06:13.053607      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:06:14.053753      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:06:14.649848 23 container_probe.go:1758] Get pod busybox-bf692ec3-c31e-4624-9318-3a72ed7892d3 in namespace container-probe-164
  E0726 14:06:15.054070      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:06:16.054141      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:06:16.656126 23 container_probe.go:1758] Get pod busybox-bf692ec3-c31e-4624-9318-3a72ed7892d3 in namespace container-probe-164
  E0726 14:06:17.054986      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:06:18.055062      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:06:18.662905 23 container_probe.go:1758] Get pod busybox-bf692ec3-c31e-4624-9318-3a72ed7892d3 in namespace container-probe-164
  E0726 14:06:19.055278      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:06:20.055550      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:06:20.668381 23 container_probe.go:1758] Get pod busybox-bf692ec3-c31e-4624-9318-3a72ed7892d3 in namespace container-probe-164
  E0726 14:06:21.055836      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:06:22.056043      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:06:22.673969 23 container_probe.go:1758] Get pod busybox-bf692ec3-c31e-4624-9318-3a72ed7892d3 in namespace container-probe-164
  E0726 14:06:23.056168      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:06:24.056378      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:06:24.679973 23 container_probe.go:1758] Get pod busybox-bf692ec3-c31e-4624-9318-3a72ed7892d3 in namespace container-probe-164
  E0726 14:06:25.056471      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:06:26.056562      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:06:26.687484 23 container_probe.go:1758] Get pod busybox-bf692ec3-c31e-4624-9318-3a72ed7892d3 in namespace container-probe-164
  E0726 14:06:27.057343      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:06:28.057852      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:06:28.694329 23 container_probe.go:1758] Get pod busybox-bf692ec3-c31e-4624-9318-3a72ed7892d3 in namespace container-probe-164
  E0726 14:06:29.058769      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:06:30.058859      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:06:30.700028 23 container_probe.go:1758] Get pod busybox-bf692ec3-c31e-4624-9318-3a72ed7892d3 in namespace container-probe-164
  E0726 14:06:31.059449      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:06:32.059549      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:06:32.705402 23 container_probe.go:1758] Get pod busybox-bf692ec3-c31e-4624-9318-3a72ed7892d3 in namespace container-probe-164
  E0726 14:06:33.059759      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:06:34.059853      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:06:34.709960 23 container_probe.go:1758] Get pod busybox-bf692ec3-c31e-4624-9318-3a72ed7892d3 in namespace container-probe-164
  E0726 14:06:35.060375      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:06:36.060803      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:06:36.715232 23 container_probe.go:1758] Get pod busybox-bf692ec3-c31e-4624-9318-3a72ed7892d3 in namespace container-probe-164
  E0726 14:06:37.061812      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:06:38.062626      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:06:38.722586 23 container_probe.go:1758] Get pod busybox-bf692ec3-c31e-4624-9318-3a72ed7892d3 in namespace container-probe-164
  E0726 14:06:39.062767      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:06:40.062875      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:06:40.728407 23 container_probe.go:1758] Get pod busybox-bf692ec3-c31e-4624-9318-3a72ed7892d3 in namespace container-probe-164
  E0726 14:06:41.063824      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:06:42.064053      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:06:42.735435 23 container_probe.go:1758] Get pod busybox-bf692ec3-c31e-4624-9318-3a72ed7892d3 in namespace container-probe-164
  E0726 14:06:43.064982      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:06:44.065197      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:06:44.739893 23 container_probe.go:1758] Get pod busybox-bf692ec3-c31e-4624-9318-3a72ed7892d3 in namespace container-probe-164
  E0726 14:06:45.065300      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:06:46.065501      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:06:46.745326 23 container_probe.go:1758] Get pod busybox-bf692ec3-c31e-4624-9318-3a72ed7892d3 in namespace container-probe-164
  E0726 14:06:47.065724      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:06:48.066660      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:06:48.751955 23 container_probe.go:1758] Get pod busybox-bf692ec3-c31e-4624-9318-3a72ed7892d3 in namespace container-probe-164
  E0726 14:06:49.067474      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:06:50.067772      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:06:50.757871 23 container_probe.go:1758] Get pod busybox-bf692ec3-c31e-4624-9318-3a72ed7892d3 in namespace container-probe-164
  E0726 14:06:51.068352      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:06:52.068449      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:06:52.764321 23 container_probe.go:1758] Get pod busybox-bf692ec3-c31e-4624-9318-3a72ed7892d3 in namespace container-probe-164
  E0726 14:06:53.068614      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:06:54.068826      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:06:54.769587 23 container_probe.go:1758] Get pod busybox-bf692ec3-c31e-4624-9318-3a72ed7892d3 in namespace container-probe-164
  E0726 14:06:55.068889      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:06:56.069834      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:06:56.775695 23 container_probe.go:1758] Get pod busybox-bf692ec3-c31e-4624-9318-3a72ed7892d3 in namespace container-probe-164
  E0726 14:06:57.070831      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:06:58.071730      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:06:58.782678 23 container_probe.go:1758] Get pod busybox-bf692ec3-c31e-4624-9318-3a72ed7892d3 in namespace container-probe-164
  E0726 14:06:59.071920      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:07:00.072837      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:07:00.787933 23 container_probe.go:1758] Get pod busybox-bf692ec3-c31e-4624-9318-3a72ed7892d3 in namespace container-probe-164
  E0726 14:07:01.073360      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:07:02.073540      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:07:02.794549 23 container_probe.go:1758] Get pod busybox-bf692ec3-c31e-4624-9318-3a72ed7892d3 in namespace container-probe-164
  I0726 14:07:02.794593 23 container_probe.go:1762] Restart count of pod container-probe-164/busybox-bf692ec3-c31e-4624-9318-3a72ed7892d3 is now 1 (50.154151451s elapsed)
  STEP: deleting the pod @ 07/26/25 14:07:02.794
  I0726 14:07:02.813705 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-164" for this suite. @ 07/26/25 14:07:02.818
• [52.231 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:338
  STEP: Creating a kubernetes client @ 07/26/25 14:07:02.828
  I0726 14:07:02.828034 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename kubectl @ 07/26/25 14:07:02.828
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 14:07:02.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 14:07:02.843
  STEP: creating a replication controller @ 07/26/25 14:07:02.845
  I0726 14:07:02.845174 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-3316 create -f -'
  I0726 14:07:02.923983 23 builder.go:146] stderr: ""
  I0726 14:07:02.924022 23 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 07/26/25 14:07:02.924
  I0726 14:07:02.924107 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-3316 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0726 14:07:02.968056 23 builder.go:146] stderr: ""
  I0726 14:07:02.968107 23 builder.go:147] stdout: "update-demo-nautilus-ds5db update-demo-nautilus-jgr4g "
  I0726 14:07:02.968308 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-3316 get pods update-demo-nautilus-ds5db -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0726 14:07:03.009214 23 builder.go:146] stderr: ""
  I0726 14:07:03.009263 23 builder.go:147] stdout: ""
  I0726 14:07:03.009273 23 kubectl.go:2505] update-demo-nautilus-ds5db is created but not running
  E0726 14:07:03.074531      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:07:04.074626      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:07:05.074786      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:07:06.074876      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:07:07.075009      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:07:08.010025 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-3316 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0726 14:07:08.051289 23 builder.go:146] stderr: ""
  I0726 14:07:08.051335 23 builder.go:147] stdout: "update-demo-nautilus-ds5db update-demo-nautilus-jgr4g "
  I0726 14:07:08.051388 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-3316 get pods update-demo-nautilus-ds5db -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E0726 14:07:08.075792      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:07:08.091773 23 builder.go:146] stderr: ""
  I0726 14:07:08.091824 23 builder.go:147] stdout: "true"
  I0726 14:07:08.091887 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-3316 get pods update-demo-nautilus-ds5db -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0726 14:07:08.132080 23 builder.go:146] stderr: ""
  I0726 14:07:08.132116 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0726 14:07:08.132130 23 kubectl.go:2396] validating pod update-demo-nautilus-ds5db
  I0726 14:07:08.138695 23 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0726 14:07:08.138748 23 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0726 14:07:08.138762 23 kubectl.go:2523] update-demo-nautilus-ds5db is verified up and running
  I0726 14:07:08.138808 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-3316 get pods update-demo-nautilus-jgr4g -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0726 14:07:08.180267 23 builder.go:146] stderr: ""
  I0726 14:07:08.180305 23 builder.go:147] stdout: "true"
  I0726 14:07:08.180353 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-3316 get pods update-demo-nautilus-jgr4g -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0726 14:07:08.221378 23 builder.go:146] stderr: ""
  I0726 14:07:08.221415 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0726 14:07:08.221425 23 kubectl.go:2396] validating pod update-demo-nautilus-jgr4g
  I0726 14:07:08.226104 23 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0726 14:07:08.226146 23 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0726 14:07:08.226155 23 kubectl.go:2523] update-demo-nautilus-jgr4g is verified up and running
  STEP: using delete to clean up resources @ 07/26/25 14:07:08.226
  I0726 14:07:08.226220 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-3316 delete --grace-period=0 --force -f -'
  I0726 14:07:08.278426 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0726 14:07:08.278469 23 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0726 14:07:08.278516 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-3316 get rc,svc -l name=update-demo --no-headers'
  I0726 14:07:08.342597 23 builder.go:146] stderr: "No resources found in kubectl-3316 namespace.\n"
  I0726 14:07:08.342680 23 builder.go:147] stdout: ""
  I0726 14:07:08.342741 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3365623864 --namespace=kubectl-3316 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0726 14:07:08.408606 23 builder.go:146] stderr: ""
  I0726 14:07:08.408672 23 builder.go:147] stdout: ""
  I0726 14:07:08.408795 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3316" for this suite. @ 07/26/25 14:07:08.414
• [5.599 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 07/26/25 14:07:08.426
  I0726 14:07:08.426898 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-3365623864
  STEP: Building a namespace api object, basename kubelet-test @ 07/26/25 14:07:08.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/26/25 14:07:08.441
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/26/25 14:07:08.452
  E0726 14:07:09.075831      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0726 14:07:10.076068      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0726 14:07:10.496688 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7296" for this suite. @ 07/26/25 14:07:10.501
• [2.085 seconds]
------------------------------
SSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0726 14:07:10.511863 23 suites.go:34] Running AfterSuite actions on node 1
  I0726 14:07:10.511880 23 util.go:563] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:615
[ReportAfterSuite] PASSED [0.026 seconds]
------------------------------

Ran 419 of 6731 Specs in 6292.761 seconds
SUCCESS! -- 419 Passed | 0 Failed | 0 Pending | 6312 Skipped
PASS

Ginkgo ran 1 suite in 1h44m53.585068314s
Test Suite Passed
